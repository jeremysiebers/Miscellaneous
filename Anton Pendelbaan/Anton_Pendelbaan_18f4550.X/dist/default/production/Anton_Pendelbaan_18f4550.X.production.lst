

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Aug 26 21:14:46 2017

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  001C24                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _MaxPwmLeft
    49  001C24  0133               	dw	307
    50                           
    51                           ;initializer for _MaxPwmRight
    52  001C26  02D5               	dw	725
    53                           
    54                           ;initializer for _Train_Move_Pwm_Count
    55  001C28  01FF               	dw	511
    56                           
    57                           ;initializer for _MaxJerkPwm_Brake
    58  001C2A  50                 	db	80
    59                           
    60                           	psect	idataBANK0
    61  001C10                     __pidataBANK0:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _MaxPwmLeft_Old
    65  001C10  0133               	dw	307
    66                           
    67                           ;initializer for _MaxPwmRight_Old
    68  001C12  02D5               	dw	725
    69                           
    70                           ;initializer for Junction@Return_Val
    71  001C14  FF                 	db	255
    72                           
    73                           ;initializer for Train_Move_Left_Brake@Return_Val
    74  001C15  FF                 	db	255
    75                           
    76                           ;initializer for Train_Move_Left_Start@Return_Val
    77  001C16  FF                 	db	255
    78                           
    79                           ;initializer for Train_Move_Right_Brake@Return_Val
    80  001C17  FF                 	db	255
    81                           
    82                           ;initializer for Train_Move_Right_Start@Return_Val
    83  001C18  FF                 	db	255
    84                           
    85                           ;initializer for Train_Path@Return_Val
    86  001C19  FF                 	db	255
    87                           
    88                           ;initializer for _MaxJerkPwm_Brake_Old
    89  001C1A  50                 	db	80
    90                           
    91                           	psect	nvBANK0
    92  0000FE                     __pnvBANK0:
    93                           	opt stack 0
    94  0000FE                     _eusart1TxBufferRemaining:
    95                           	opt stack 0
    96  0000FE                     	ds	1
    97  0000                     _ADCON1	set	4033
    98  0000                     _BAUDCONbits	set	4024
    99  0000                     _CCP1CON	set	4029
   100  0000                     _CCPR1L	set	4030
   101  0000                     _CMCON	set	4020
   102  0000                     _EEADR	set	4009
   103  0000                     _EECON1bits	set	4006
   104  0000                     _EECON2	set	4007
   105  0000                     _EEDATA	set	4008
   106  0000                     _INTCON	set	4082
   107  0000                     _INTCON2	set	4081
   108  0000                     _INTCONbits	set	4082
   109  0000                     _PIE1bits	set	3997
   110  0000                     _PIR1bits	set	3998
   111  0000                     _PIR2bits	set	4001
   112  0000                     _PORTAbits	set	3968
   113  0000                     _PORTBbits	set	3969
   114  0000                     _PORTCbits	set	3970
   115  0000                     _PORTDbits	set	3971
   116  0000                     _PR2	set	4043
   117  0000                     _RCONbits	set	4048
   118  0000                     _RCREG1	set	4014
   119  0000                     _RCSTA1bits	set	4011
   120  0000                     _RCSTAbits	set	4011
   121  0000                     _SPBRG	set	4015
   122  0000                     _SPBRGH	set	4016
   123  0000                     _T0CON	set	4053
   124  0000                     _T2CON	set	4042
   125  0000                     _TMR0H	set	4055
   126  0000                     _TMR0L	set	4054
   127  0000                     _TRISA	set	3986
   128  0000                     _TRISAbits	set	3986
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISBbits	set	3987
   131  0000                     _TRISC	set	3988
   132  0000                     _TRISCbits	set	3988
   133  0000                     _TRISD	set	3989
   134  0000                     _TRISDbits	set	3989
   135  0000                     _TRISE	set	3990
   136  0000                     _TXREG1	set	4013
   137  0000                     _TXSTAbits	set	4012
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  0019C4                     __pcinit:
   143                           	opt stack 0
   144  0019C4                     start_initialization:
   145                           	opt stack 0
   146  0019C4                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK1 (126 bytes)
   150  0019C4  EE01  F000         	lfsr	0,__pbssBANK1
   151  0019C8  0E7E               	movlw	126
   152  0019CA                     clear_0:
   153  0019CA  6AEE               	clrf	postinc0,c
   154  0019CC  06E8               	decf	wreg,f,c
   155  0019CE  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to BANK0 (147 bytes)
   158  0019D0  EE00  F060         	lfsr	0,__pbssBANK0
   159  0019D4  0E93               	movlw	147
   160  0019D6                     clear_1:
   161  0019D6  6AEE               	clrf	postinc0,c
   162  0019D8  06E8               	decf	wreg,f,c
   163  0019DA  E1FD               	bnz	clear_1
   164                           
   165                           ; Clear objects allocated to COMRAM (45 bytes)
   166  0019DC  EE00  F001         	lfsr	0,__pbssCOMRAM
   167  0019E0  0E2D               	movlw	45
   168  0019E2                     clear_2:
   169  0019E2  6AEE               	clrf	postinc0,c
   170  0019E4  06E8               	decf	wreg,f,c
   171  0019E6  E1FD               	bnz	clear_2
   172                           
   173                           ; Initialize objects allocated to BANK0 (11 bytes)
   174                           ; load TBLPTR registers with __pidataBANK0
   175  0019E8  0E10               	movlw	low __pidataBANK0
   176  0019EA  6EF6               	movwf	tblptrl,c
   177  0019EC  0E1C               	movlw	high __pidataBANK0
   178  0019EE  6EF7               	movwf	tblptrh,c
   179  0019F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   180  0019F2  6EF8               	movwf	tblptru,c
   181  0019F4  EE00  F0F3         	lfsr	0,__pdataBANK0
   182  0019F8  EE10 F00B          	lfsr	1,11
   183  0019FC                     copy_data0:
   184  0019FC  0009               	tblrd		*+
   185  0019FE  CFF5 FFEE          	movff	tablat,postinc0
   186  001A02  50E5               	movf	postdec1,w,c
   187  001A04  50E1               	movf	fsr1l,w,c
   188  001A06  E1FA               	bnz	copy_data0
   189                           
   190                           ; Initialize objects allocated to COMRAM (7 bytes)
   191                           ; load TBLPTR registers with __pidataCOMRAM
   192  001A08  0E24               	movlw	low __pidataCOMRAM
   193  001A0A  6EF6               	movwf	tblptrl,c
   194  001A0C  0E1C               	movlw	high __pidataCOMRAM
   195  001A0E  6EF7               	movwf	tblptrh,c
   196  001A10  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   197  001A12  6EF8               	movwf	tblptru,c
   198  001A14  EE00  F047         	lfsr	0,__pdataCOMRAM
   199  001A18  EE10 F007          	lfsr	1,7
   200  001A1C                     copy_data1:
   201  001A1C  0009               	tblrd		*+
   202  001A1E  CFF5 FFEE          	movff	tablat,postinc0
   203  001A22  50E5               	movf	postdec1,w,c
   204  001A24  50E1               	movf	fsr1l,w,c
   205  001A26  E1FA               	bnz	copy_data1
   206  001A28                     end_of_initialization:
   207                           	opt stack 0
   208  001A28                     __end_of__initialization:
   209                           	opt stack 0
   210  001A28  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   211  001A2A  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   212  001A2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   213  001A2E  6EF8               	movwf	tblptru,c
   214  001A30  0100               	movlb	0
   215  001A32  EF1B  F00D         	goto	_main	;jump to C main() function
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           wreg	equ	0xFE8
   222                           postdec1	equ	0xFE5
   223                           fsr1l	equ	0xFE1
   224                           
   225                           	psect	bssCOMRAM
   226  000001                     __pbssCOMRAM:
   227                           	opt stack 0
   228  000001                     _Adjust_Counter:
   229                           	opt stack 0
   230  000001                     	ds	2
   231  000003                     _Green_Led_Counter:
   232                           	opt stack 0
   233  000003                     	ds	2
   234  000005                     _Red_Led_Counter:
   235                           	opt stack 0
   236  000005                     	ds	2
   237  000007                     _Train_Move_Pwm_Fast_Count:
   238                           	opt stack 0
   239  000007                     	ds	2
   240  000009                     _Button_Contact_Counter_Start:
   241                           	opt stack 0
   242  000009                     	ds	1
   243  00000A                     _Button_Contact_Counter_Stop:
   244                           	opt stack 0
   245  00000A                     	ds	1
   246  00000B                     _Button_LB:
   247                           	opt stack 0
   248  00000B                     	ds	1
   249  00000C                     _Button_LF:
   250                           	opt stack 0
   251  00000C                     	ds	1
   252  00000D                     _Button_Middle:
   253                           	opt stack 0
   254  00000D                     	ds	1
   255  00000E                     _Button_RB:
   256                           	opt stack 0
   257  00000E                     	ds	1
   258  00000F                     _Button_RF:
   259                           	opt stack 0
   260  00000F                     	ds	1
   261  000010                     _Button_Start:
   262                           	opt stack 0
   263  000010                     	ds	1
   264  000011                     _Rd_Lb:
   265                           	opt stack 0
   266  000011                     	ds	1
   267  000012                     _Rd_Lf:
   268                           	opt stack 0
   269  000012                     	ds	1
   270  000013                     _Rd_Rb:
   271                           	opt stack 0
   272  000013                     	ds	1
   273  000014                     _Rd_Rf:
   274                           	opt stack 0
   275  000014                     	ds	1
   276  000015                     _Reed_Contact_LB_Counter:
   277                           	opt stack 0
   278  000015                     	ds	1
   279  000016                     _Reed_Contact_LF_Counter:
   280                           	opt stack 0
   281  000016                     	ds	1
   282  000017                     _Reed_Contact_RB_Counter:
   283                           	opt stack 0
   284  000017                     	ds	1
   285  000018                     _Reed_Contact_RF_Counter:
   286                           	opt stack 0
   287  000018                     	ds	1
   288  000019                     _Stop_Program:
   289                           	opt stack 0
   290  000019                     	ds	1
   291  00001A                     _Switch_Activate_Controls:
   292                           	opt stack 0
   293  00001A                     	ds	1
   294  00001B                     _Switch_Adjust_LB:
   295                           	opt stack 0
   296  00001B                     	ds	1
   297  00001C                     _Switch_Adjust_LF:
   298                           	opt stack 0
   299  00001C                     	ds	1
   300  00001D                     _Switch_Adjust_RB:
   301                           	opt stack 0
   302  00001D                     	ds	1
   303  00001E                     _Switch_Adjust_RF:
   304                           	opt stack 0
   305  00001E                     	ds	1
   306  00001F                     _Switch_Junction:
   307                           	opt stack 0
   308  00001F                     	ds	1
   309  000020                     _Switch_Main:
   310                           	opt stack 0
   311  000020                     	ds	1
   312  000021                     _Switch_Main_Old:
   313                           	opt stack 0
   314  000021                     	ds	1
   315  000022                     _Switch_Program:
   316                           	opt stack 0
   317  000022                     	ds	1
   318  000023                     _Switch_Program_Old:
   319                           	opt stack 0
   320  000023                     	ds	1
   321  000024                     _Switch_Train_Move:
   322                           	opt stack 0
   323  000024                     	ds	1
   324  000025                     _Switch_Train_Path:
   325                           	opt stack 0
   326  000025                     	ds	1
   327  000026                     _Train_Pos1:
   328                           	opt stack 0
   329  000026                     	ds	1
   330  000027                     _Train_Pos2:
   331                           	opt stack 0
   332  000027                     	ds	1
   333  000028                     _Update_State_Machine:
   334                           	opt stack 0
   335  000028                     	ds	1
   336  000029                     _eusart1RxCount:
   337                           	opt stack 0
   338  000029                     	ds	1
   339  00002A                     _eusart1RxHead:
   340                           	opt stack 0
   341  00002A                     	ds	1
   342  00002B                     _eusart1RxTail:
   343                           	opt stack 0
   344  00002B                     	ds	1
   345  00002C                     _eusart1TxHead:
   346                           	opt stack 0
   347  00002C                     	ds	1
   348  00002D                     _eusart1TxTail:
   349                           	opt stack 0
   350  00002D                     	ds	1
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           postdec1	equ	0xFE5
   358                           fsr1l	equ	0xFE1
   359                           
   360                           	psect	dataCOMRAM
   361  000047                     __pdataCOMRAM:
   362                           	opt stack 0
   363  000047                     _MaxPwmLeft:
   364                           	opt stack 0
   365  000047                     	ds	2
   366  000049                     _MaxPwmRight:
   367                           	opt stack 0
   368  000049                     	ds	2
   369  00004B                     _Train_Move_Pwm_Count:
   370                           	opt stack 0
   371  00004B                     	ds	2
   372  00004D                     _MaxJerkPwm_Brake:
   373                           	opt stack 0
   374  00004D                     	ds	1
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           postinc0	equ	0xFEE
   380                           wreg	equ	0xFE8
   381                           postdec1	equ	0xFE5
   382                           fsr1l	equ	0xFE1
   383                           
   384                           	psect	bssBANK0
   385  000060                     __pbssBANK0:
   386                           	opt stack 0
   387  000060                     _eusart1TxBuffer:
   388                           	opt stack 0
   389  000060                     	ds	126
   390  0000DE                     Junction@Junction_Switch_Time:
   391                           	opt stack 0
   392  0000DE                     	ds	2
   393  0000E0                     Train_Move_Left_Brake@Train_Move_Wait_Time:
   394                           	opt stack 0
   395  0000E0                     	ds	2
   396  0000E2                     Train_Move_Left_Start@Train_Move_Wait_Time:
   397                           	opt stack 0
   398  0000E2                     	ds	2
   399  0000E4                     Train_Move_Right_Brake@Train_Move_Wait_Time:
   400                           	opt stack 0
   401  0000E4                     	ds	2
   402  0000E6                     Train_Move_Right_Start@Train_Move_Wait_Time:
   403                           	opt stack 0
   404  0000E6                     	ds	2
   405  0000E8                     _Activate_Controls_Counter:
   406                           	opt stack 0
   407  0000E8                     	ds	2
   408  0000EA                     _Led1_Counter:
   409                           	opt stack 0
   410  0000EA                     	ds	2
   411  0000EC                     _Button_Contact_Counter_LB:
   412                           	opt stack 0
   413  0000EC                     	ds	1
   414  0000ED                     _Button_Contact_Counter_LF:
   415                           	opt stack 0
   416  0000ED                     	ds	1
   417  0000EE                     _Button_Contact_Counter_Middle:
   418                           	opt stack 0
   419  0000EE                     	ds	1
   420  0000EF                     _Button_Contact_Counter_RB:
   421                           	opt stack 0
   422  0000EF                     	ds	1
   423  0000F0                     _Button_Contact_Counter_RF:
   424                           	opt stack 0
   425  0000F0                     	ds	1
   426  0000F1                     _Button_Stop:
   427                           	opt stack 0
   428  0000F1                     	ds	1
   429  0000F2                     _Switch_Init:
   430                           	opt stack 0
   431  0000F2                     	ds	1
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           postdec1	equ	0xFE5
   439                           fsr1l	equ	0xFE1
   440                           
   441                           	psect	dataBANK0
   442  0000F3                     __pdataBANK0:
   443                           	opt stack 0
   444  0000F3                     _MaxPwmLeft_Old:
   445                           	opt stack 0
   446  0000F3                     	ds	2
   447  0000F5                     _MaxPwmRight_Old:
   448                           	opt stack 0
   449  0000F5                     	ds	2
   450  0000F7                     Junction@Return_Val:
   451                           	opt stack 0
   452  0000F7                     	ds	1
   453  0000F8                     Train_Move_Left_Brake@Return_Val:
   454                           	opt stack 0
   455  0000F8                     	ds	1
   456  0000F9                     Train_Move_Left_Start@Return_Val:
   457                           	opt stack 0
   458  0000F9                     	ds	1
   459  0000FA                     Train_Move_Right_Brake@Return_Val:
   460                           	opt stack 0
   461  0000FA                     	ds	1
   462  0000FB                     Train_Move_Right_Start@Return_Val:
   463                           	opt stack 0
   464  0000FB                     	ds	1
   465  0000FC                     Train_Path@Return_Val:
   466                           	opt stack 0
   467  0000FC                     	ds	1
   468  0000FD                     _MaxJerkPwm_Brake_Old:
   469                           	opt stack 0
   470  0000FD                     	ds	1
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           postdec1	equ	0xFE5
   478                           fsr1l	equ	0xFE1
   479                           
   480                           	psect	bssBANK1
   481  000100                     __pbssBANK1:
   482                           	opt stack 0
   483  000100                     _eusart1RxBuffer:
   484                           	opt stack 0
   485  000100                     	ds	126
   486                           tblptru	equ	0xFF8
   487                           tblptrh	equ	0xFF7
   488                           tblptrl	equ	0xFF6
   489                           tablat	equ	0xFF5
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           postdec1	equ	0xFE5
   493                           fsr1l	equ	0xFE1
   494                           
   495                           	psect	cstackBANK1
   496  00017E                     __pcstackBANK1:
   497                           	opt stack 0
   498  00017E                     ??_tc_low:
   499                           
   500                           ; 1 bytes @ 0x0
   501  00017E                     	ds	17
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	cstackCOMRAM
   512  00002E                     __pcstackCOMRAM:
   513                           	opt stack 0
   514  00002E                     EUSART1_Write@txData:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x0
   518  00002E                     	ds	1
   519  00002F                     ??_tc_high:
   520                           
   521                           ; 1 bytes @ 0x1
   522  00002F                     	ds	14
   523  00003D                     ??_Debounce_Inputs:
   524  00003D                     Green_Led@Operation:
   525                           	opt stack 0
   526  00003D                     Red_Led@Operation:
   527                           	opt stack 0
   528  00003D                     Junction@Straight_Bend:
   529                           	opt stack 0
   530  00003D                     EUSART1_Initialize@baud_rate:
   531                           	opt stack 0
   532  00003D                     INIT_TERMINAL@i:
   533                           	opt stack 0
   534  00003D                     SetDCPWM1@dutycycle:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0xF
   538  00003D                     	ds	1
   539  00003E                     Junction@Left_Right:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x10
   543  00003E                     	ds	1
   544  00003F                     ??_SetDCPWM1:
   545                           
   546                           ; 1 bytes @ 0x11
   547  00003F                     	ds	2
   548  000041                     SetDCPWM1@DCycle:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x13
   552  000041                     	ds	2
   553  000043                     ??_Train_Move_Right_Brake:
   554  000043                     ??_Train_Move_Left_Brake:
   555                           
   556                           ; 1 bytes @ 0x15
   557  000043                     	ds	2
   558  000045                     Train_Path@To:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x17
   562  000045                     	ds	1
   563  000046                     Train_Path@From:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x18
   567  000046                     	ds	1
   568  000047                     tblptru	equ	0xFF8
   569                           tblptrh	equ	0xFF7
   570                           tblptrl	equ	0xFF6
   571                           tablat	equ	0xFF5
   572                           postinc0	equ	0xFEE
   573                           wreg	equ	0xFE8
   574                           postdec1	equ	0xFE5
   575                           fsr1l	equ	0xFE1
   576                           
   577                           ; 1 bytes @ 0x19
   578 ;;
   579 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   580 ;;
   581 ;; *************** function _main *****************
   582 ;; Defined at:
   583 ;;		line 103 in file "../Main.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, status,2, status,0, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   597 ;;      Params:         0       0       0       0       0       0       0       0       0
   598 ;;      Locals:         0       0       0       0       0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0       0       0
   600 ;;      Totals:         0       0       0       0       0       0       0       0       0
   601 ;;Total ram usage:        0 bytes
   602 ;; Hardware stack levels required when called:    8
   603 ;; This function calls:
   604 ;;		_EUSART1_Initialize
   605 ;;		_INIT_TERMINAL
   606 ;;		_Init_Pwm
   607 ;;		_Init_Timers
   608 ;;		_Update_StateMchn
   609 ;; This function is called by:
   610 ;;		Startup code after reset
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text0
   615  001A36                     __ptext0:
   616                           	opt stack 0
   617  001A36                     _main:
   618                           	opt stack 23
   619                           
   620                           ;Main.c: 105: TRISA = 0xFF;TRISB = 0xFF;TRISC = 0xFF;TRISD = 0xFF;TRISE = 0xFF;
   621                           
   622                           ;incstack = 0
   623  001A36  6892               	setf	3986,c	;volatile
   624  001A38  6893               	setf	3987,c	;volatile
   625  001A3A  6894               	setf	3988,c	;volatile
   626  001A3C  6895               	setf	3989,c	;volatile
   627  001A3E  6896               	setf	3990,c	;volatile
   628                           
   629                           ;Main.c: 106: ADCON1=0x0F;
   630  001A40  0E0F               	movlw	15
   631  001A42  6EC1               	movwf	4033,c	;volatile
   632                           
   633                           ;Main.c: 107: CMCON=0x07;
   634  001A44  0E07               	movlw	7
   635  001A46  6EB4               	movwf	4020,c	;volatile
   636                           
   637                           ;Main.c: 108: TRISAbits.TRISA4=0;TRISDbits.TRISD5=0;TRISDbits.TRISD6=0;;
   638  001A48  9892               	bcf	3986,4,c	;volatile
   639  001A4A  9A95               	bcf	3989,5,c	;volatile
   640  001A4C  9C95               	bcf	3989,6,c	;volatile
   641                           
   642                           ;Main.c: 109: PORTAbits.RA4 = 0;
   643  001A4E  9880               	bcf	3968,4,c	;volatile
   644                           
   645                           ;Main.c: 110: PORTDbits.RD6 = 0;
   646  001A50  9C83               	bcf	3971,6,c	;volatile
   647                           
   648                           ;Main.c: 111: PORTDbits.RD5 = 0;
   649  001A52  9A83               	bcf	3971,5,c	;volatile
   650                           
   651                           ;Main.c: 113: TRISAbits.TRISA0=0;TRISAbits.TRISA1=0;TRISAbits.TRISA2=0;TRISAbits.TRISA3=
      +                          0;;
   652  001A54  9092               	bcf	3986,0,c	;volatile
   653  001A56  9292               	bcf	3986,1,c	;volatile
   654  001A58  9492               	bcf	3986,2,c	;volatile
   655  001A5A  9692               	bcf	3986,3,c	;volatile
   656                           
   657                           ;Main.c: 114: PORTAbits.RA3 = 0;
   658  001A5C  9680               	bcf	3968,3,c	;volatile
   659                           
   660                           ;Main.c: 115: PORTAbits.RA2 = 0;
   661  001A5E  9480               	bcf	3968,2,c	;volatile
   662                           
   663                           ;Main.c: 116: PORTAbits.RA1 = 0;
   664  001A60  9280               	bcf	3968,1,c	;volatile
   665                           
   666                           ;Main.c: 117: PORTAbits.RA0 = 0;
   667  001A62  9080               	bcf	3968,0,c	;volatile
   668                           
   669                           ;Main.c: 119: TRISDbits.TRISD2=1;TRISDbits.TRISD3=1;TRISDbits.TRISD0=1;TRISDbits.TRISD1=
      +                          1;
   670  001A64  8495               	bsf	3989,2,c	;volatile
   671  001A66  8695               	bsf	3989,3,c	;volatile
   672  001A68  8095               	bsf	3989,0,c	;volatile
   673  001A6A  8295               	bsf	3989,1,c	;volatile
   674                           
   675                           ;Main.c: 120: TRISBbits.TRISB0=1;TRISBbits.TRISB1=1;TRISBbits.TRISB2=1;TRISBbits.TRISB3=
      +                          1;TRISBbits.TRISB4=1;TRISBbits.TRISB5=1;TRISDbits.TRISD7=1;;
   676  001A6C  8093               	bsf	3987,0,c	;volatile
   677  001A6E  8293               	bsf	3987,1,c	;volatile
   678  001A70  8493               	bsf	3987,2,c	;volatile
   679  001A72  8693               	bsf	3987,3,c	;volatile
   680  001A74  8893               	bsf	3987,4,c	;volatile
   681  001A76  8A93               	bsf	3987,5,c	;volatile
   682  001A78  8E95               	bsf	3989,7,c	;volatile
   683                           
   684                           ;Main.c: 121: Init_Pwm();
   685  001A7A  ECFD  F00D         	call	_Init_Pwm	;wreg free
   686                           
   687                           ;Main.c: 122: Init_Timers();
   688  001A7E  ECF1  F00D         	call	_Init_Timers	;wreg free
   689                           
   690                           ;Main.c: 123: EUSART1_Initialize();
   691  001A82  EC4D  F00D         	call	_EUSART1_Initialize	;wreg free
   692                           
   693                           ;Main.c: 124: INIT_TERMINAL();
   694  001A86  ECDD  F00D         	call	_INIT_TERMINAL	;wreg free
   695  001A8A                     l77:
   696                           
   697                           ;Main.c: 127: {
   698                           ;Main.c: 128: if (1 == Update_State_Machine)
   699  001A8A  0428               	decf	_Update_State_Machine,w,c
   700  001A8C  A4D8               	btfss	status,2,c
   701  001A8E  D7FD               	goto	l77
   702                           
   703                           ;Main.c: 129: {
   704                           ;Main.c: 130: Update_State_Machine = 0;
   705  001A90  0E00               	movlw	0
   706  001A92  6E28               	movwf	_Update_State_Machine,c
   707                           
   708                           ;Main.c: 131: Update_StateMchn();
   709  001A94  EC55  F000         	call	_Update_StateMchn	;wreg free
   710  001A98  D7F8               	goto	l77
   711  001A9A                     __end_of_main:
   712                           	opt stack 0
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           postdec1	equ	0xFE5
   720                           fsr1l	equ	0xFE1
   721                           status	equ	0xFD8
   722                           
   723 ;; *************** function _Update_StateMchn *****************
   724 ;; Defined at:
   725 ;;		line 121 in file "../State_Mchn.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   739 ;;      Params:         0       0       0       0       0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0       0       0
   742 ;;      Totals:         0       0       0       0       0       0       0       0       0
   743 ;;Total ram usage:        0 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    7
   746 ;; This function calls:
   747 ;;		_Debounce_Inputs
   748 ;;		_Eeprom_Store
   749 ;;		_Green_Led
   750 ;;		_Red_Led
   751 ;;		_Train_Path
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text1
   758  0000AA                     __ptext1:
   759                           	opt stack 0
   760  0000AA                     _Update_StateMchn:
   761                           	opt stack 23
   762                           
   763                           ;State_Mchn.c: 123: Debounce_Inputs();
   764                           
   765                           ;incstack = 0
   766  0000AA  EC38  F007         	call	_Debounce_Inputs	;wreg free
   767                           
   768                           ;State_Mchn.c: 125: switch (Switch_Main)
   769  0000AE  EF2C  F007         	goto	l5161
   770  0000B2                     l247:
   771                           
   772                           ; BSR set to: 0
   773  0000B2  9EA6               	bcf	4006,7,c	;volatile
   774                           
   775                           ; BSR set to: 0
   776                           ;State_Mchn.c: 130: EEADR = 0x04;
   777  0000B4  0E04               	movlw	4
   778  0000B6  6EA9               	movwf	4009,c	;volatile
   779                           
   780                           ; BSR set to: 0
   781                           ;State_Mchn.c: 131: EECON1bits.RD = 1;
   782  0000B8  80A6               	bsf	4006,0,c	;volatile
   783                           
   784                           ; BSR set to: 0
   785                           ;State_Mchn.c: 132: MaxJerkPwm_Brake = EEDATA;
   786  0000BA  CFA8 F04D          	movff	4008,_MaxJerkPwm_Brake	;volatile
   787                           
   788                           ; BSR set to: 0
   789                           ;State_Mchn.c: 134: EECON1bits.EEPGD = 0;
   790  0000BE  9EA6               	bcf	4006,7,c	;volatile
   791                           
   792                           ;State_Mchn.c: 135: EEADR = 0x00;
   793  0000C0  0E00               	movlw	0
   794  0000C2  6EA9               	movwf	4009,c	;volatile
   795                           
   796                           ; BSR set to: 0
   797                           ;State_Mchn.c: 136: EECON1bits.RD = 1;
   798  0000C4  80A6               	bsf	4006,0,c	;volatile
   799                           
   800                           ; BSR set to: 0
   801                           ;State_Mchn.c: 137: MaxPwmRight = EEDATA;
   802  0000C6  CFA8 F049          	movff	4008,_MaxPwmRight	;volatile
   803  0000CA  6A4A               	clrf	_MaxPwmRight+1,c
   804                           
   805                           ;State_Mchn.c: 138: MaxPwmRight = MaxPwmRight<<8;
   806  0000CC  5049               	movf	_MaxPwmRight,w,c
   807  0000CE  6E4A               	movwf	_MaxPwmRight+1,c
   808  0000D0  6A49               	clrf	_MaxPwmRight,c
   809                           
   810                           ; BSR set to: 0
   811                           ;State_Mchn.c: 139: EECON1bits.EEPGD = 0;
   812  0000D2  9EA6               	bcf	4006,7,c	;volatile
   813                           
   814                           ;State_Mchn.c: 140: EEADR = 0x01;
   815  0000D4  0E01               	movlw	1
   816  0000D6  6EA9               	movwf	4009,c	;volatile
   817                           
   818                           ; BSR set to: 0
   819                           ;State_Mchn.c: 141: EECON1bits.RD = 1;
   820  0000D8  80A6               	bsf	4006,0,c	;volatile
   821                           
   822                           ; BSR set to: 0
   823                           ;State_Mchn.c: 142: MaxPwmRight = MaxPwmRight | EEDATA;
   824  0000DA  5049               	movf	_MaxPwmRight,w,c
   825  0000DC  10A8               	iorwf	4008,w,c	;volatile
   826  0000DE  6E49               	movwf	_MaxPwmRight,c
   827  0000E0  504A               	movf	_MaxPwmRight+1,w,c
   828  0000E2  6E4A               	movwf	_MaxPwmRight+1,c
   829                           
   830                           ; BSR set to: 0
   831                           ;State_Mchn.c: 143: if(MaxPwmRight <= 550)
   832  0000E4  0E27               	movlw	39
   833  0000E6  5C49               	subwf	_MaxPwmRight,w,c
   834  0000E8  0E02               	movlw	2
   835  0000EA  584A               	subwfb	_MaxPwmRight+1,w,c
   836  0000EC  B0D8               	btfsc	status,0,c
   837  0000EE  D006               	goto	l4251
   838                           
   839                           ; BSR set to: 0
   840                           ;State_Mchn.c: 144: {
   841                           ;State_Mchn.c: 145: MaxPwmRight = 725;
   842  0000F0  0E02               	movlw	2
   843  0000F2  6E4A               	movwf	_MaxPwmRight+1,c
   844  0000F4  0ED5               	movlw	213
   845  0000F6  6E49               	movwf	_MaxPwmRight,c
   846                           
   847                           ;State_Mchn.c: 146: MaxJerkPwm_Brake = 80;
   848  0000F8  0E50               	movlw	80
   849  0000FA  6E4D               	movwf	_MaxJerkPwm_Brake,c
   850  0000FC                     l4251:
   851                           
   852                           ; BSR set to: 0
   853                           ;State_Mchn.c: 147: }
   854                           ;State_Mchn.c: 153: EECON1bits.EEPGD = 0;
   855  0000FC  9EA6               	bcf	4006,7,c	;volatile
   856                           
   857                           ;State_Mchn.c: 154: EEADR = 0x02;
   858  0000FE  0E02               	movlw	2
   859  000100  6EA9               	movwf	4009,c	;volatile
   860                           
   861                           ; BSR set to: 0
   862                           ;State_Mchn.c: 155: EECON1bits.RD = 1;
   863  000102  80A6               	bsf	4006,0,c	;volatile
   864                           
   865                           ; BSR set to: 0
   866                           ;State_Mchn.c: 156: MaxPwmLeft = EEDATA;
   867  000104  CFA8 F047          	movff	4008,_MaxPwmLeft	;volatile
   868  000108  6A48               	clrf	_MaxPwmLeft+1,c
   869                           
   870                           ;State_Mchn.c: 157: MaxPwmLeft = MaxPwmLeft<<8;
   871  00010A  5047               	movf	_MaxPwmLeft,w,c
   872  00010C  6E48               	movwf	_MaxPwmLeft+1,c
   873  00010E  6A47               	clrf	_MaxPwmLeft,c
   874                           
   875                           ; BSR set to: 0
   876                           ;State_Mchn.c: 158: EECON1bits.EEPGD = 0;
   877  000110  9EA6               	bcf	4006,7,c	;volatile
   878                           
   879                           ;State_Mchn.c: 159: EEADR = 0x03;
   880  000112  0E03               	movlw	3
   881  000114  6EA9               	movwf	4009,c	;volatile
   882                           
   883                           ; BSR set to: 0
   884                           ;State_Mchn.c: 160: EECON1bits.RD = 1;
   885  000116  80A6               	bsf	4006,0,c	;volatile
   886                           
   887                           ; BSR set to: 0
   888                           ;State_Mchn.c: 161: MaxPwmLeft = MaxPwmLeft | EEDATA;
   889  000118  5047               	movf	_MaxPwmLeft,w,c
   890  00011A  10A8               	iorwf	4008,w,c	;volatile
   891  00011C  6E47               	movwf	_MaxPwmLeft,c
   892  00011E  5048               	movf	_MaxPwmLeft+1,w,c
   893  000120  6E48               	movwf	_MaxPwmLeft+1,c
   894                           
   895                           ; BSR set to: 0
   896                           ;State_Mchn.c: 162: if(MaxPwmLeft >= 460)
   897  000122  0ECC               	movlw	204
   898  000124  5C47               	subwf	_MaxPwmLeft,w,c
   899  000126  0E01               	movlw	1
   900  000128  5848               	subwfb	_MaxPwmLeft+1,w,c
   901  00012A  A0D8               	btfss	status,0,c
   902  00012C  D006               	goto	l4267
   903                           
   904                           ; BSR set to: 0
   905                           ;State_Mchn.c: 163: {
   906                           ;State_Mchn.c: 164: MaxPwmLeft = 307;
   907  00012E  0E01               	movlw	1
   908  000130  6E48               	movwf	_MaxPwmLeft+1,c
   909  000132  0E33               	movlw	51
   910  000134  6E47               	movwf	_MaxPwmLeft,c
   911                           
   912                           ;State_Mchn.c: 165: MaxJerkPwm_Brake = 80;
   913  000136  0E50               	movlw	80
   914  000138  6E4D               	movwf	_MaxJerkPwm_Brake,c
   915  00013A                     l4267:
   916                           
   917                           ; BSR set to: 0
   918                           ;State_Mchn.c: 166: }
   919                           ;State_Mchn.c: 168: EECON1bits.EEPGD = 0;
   920  00013A  9EA6               	bcf	4006,7,c	;volatile
   921                           
   922                           ;State_Mchn.c: 169: EEADR = 0x05;
   923  00013C  0E05               	movlw	5
   924  00013E  6EA9               	movwf	4009,c	;volatile
   925                           
   926                           ; BSR set to: 0
   927                           ;State_Mchn.c: 170: EECON1bits.RD = 1;
   928  000140  80A6               	bsf	4006,0,c	;volatile
   929                           
   930                           ; BSR set to: 0
   931                           ;State_Mchn.c: 171: Switch_Main_Old = EEDATA;
   932  000142  CFA8 F021          	movff	4008,_Switch_Main_Old	;volatile
   933                           
   934                           ; BSR set to: 0
   935                           ;State_Mchn.c: 173: EECON1bits.EEPGD = 0;
   936  000146  9EA6               	bcf	4006,7,c	;volatile
   937                           
   938                           ;State_Mchn.c: 174: EEADR = 0x06;
   939  000148  0E06               	movlw	6
   940  00014A  6EA9               	movwf	4009,c	;volatile
   941                           
   942                           ; BSR set to: 0
   943                           ;State_Mchn.c: 175: EECON1bits.RD = 1;
   944  00014C  80A6               	bsf	4006,0,c	;volatile
   945                           
   946                           ; BSR set to: 0
   947                           ;State_Mchn.c: 176: Switch_Program_Old = EEDATA;
   948  00014E  CFA8 F023          	movff	4008,_Switch_Program_Old	;volatile
   949                           
   950                           ; BSR set to: 0
   951                           ;State_Mchn.c: 180: MaxPwmRight_Old = MaxPwmRight;
   952  000152  C049  F0F5         	movff	_MaxPwmRight,_MaxPwmRight_Old
   953  000156  C04A  F0F6         	movff	_MaxPwmRight+1,_MaxPwmRight_Old+1
   954                           
   955                           ; BSR set to: 0
   956                           ;State_Mchn.c: 181: MaxPwmLeft_Old = MaxPwmLeft;
   957  00015A  C047  F0F3         	movff	_MaxPwmLeft,_MaxPwmLeft_Old
   958  00015E  C048  F0F4         	movff	_MaxPwmLeft+1,_MaxPwmLeft_Old+1
   959                           
   960                           ; BSR set to: 0
   961                           ;State_Mchn.c: 182: MaxJerkPwm_Brake_Old = MaxJerkPwm_Brake;
   962  000162  C04D  F0FD         	movff	_MaxJerkPwm_Brake,_MaxJerkPwm_Brake_Old
   963                           
   964                           ; BSR set to: 0
   965                           ;State_Mchn.c: 184: Green_Led(0);
   966  000166  0E00               	movlw	0
   967  000168  ECA2  F00C         	call	_Green_Led
   968                           
   969                           ;State_Mchn.c: 185: Red_Led(0);
   970  00016C  0E00               	movlw	0
   971  00016E  EC62  F00C         	call	_Red_Led
   972                           
   973                           ;State_Mchn.c: 187: if(Stop_Program == 1 && Switch_Main_Old == 1)
   974  000172  0419               	decf	_Stop_Program,w,c
   975  000174  A4D8               	btfss	status,2,c
   976  000176  D007               	goto	l4295
   977  000178  0421               	decf	_Switch_Main_Old,w,c
   978  00017A  A4D8               	btfss	status,2,c
   979  00017C  D004               	goto	l4295
   980                           
   981                           ;State_Mchn.c: 188: {
   982                           ;State_Mchn.c: 189: Switch_Init = 7;
   983  00017E  0E07               	movlw	7
   984  000180  0100               	movlb	0	; () banked
   985  000182  6FF2               	movwf	_Switch_Init& (0+255),b
   986                           
   987                           ;State_Mchn.c: 190: }
   988  000184  0012               	return	
   989  000186                     l4295:
   990                           
   991                           ;State_Mchn.c: 191: else if(Stop_Program == 1 && Switch_Main_Old == 2)
   992  000186  0419               	decf	_Stop_Program,w,c
   993  000188  A4D8               	btfss	status,2,c
   994  00018A  D008               	goto	l4301
   995  00018C  0E02               	movlw	2
   996  00018E  1821               	xorwf	_Switch_Main_Old,w,c
   997  000190  A4D8               	btfss	status,2,c
   998  000192  D004               	goto	l4301
   999                           
  1000                           ;State_Mchn.c: 192: {
  1001                           ;State_Mchn.c: 193: Switch_Init = 10;
  1002  000194  0E0A               	movlw	10
  1003  000196  0100               	movlb	0	; () banked
  1004  000198  6FF2               	movwf	_Switch_Init& (0+255),b
  1005                           
  1006                           ;State_Mchn.c: 194: }
  1007  00019A  0012               	return	
  1008  00019C                     l4301:
  1009                           
  1010                           ;State_Mchn.c: 195: else {Switch_Init = 1;}
  1011  00019C  0E01               	movlw	1
  1012  00019E  0100               	movlb	0	; () banked
  1013  0001A0  6FF2               	movwf	_Switch_Init& (0+255),b
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;State_Mchn.c: 196: break;
  1017                           
  1018                           ; BSR set to: 0
  1019  0001A2  0012               	return	
  1020  0001A4                     l4303:
  1021                           
  1022                           ; BSR set to: 0
  1023  0001A4  500B               	movf	_Button_LB,w,c
  1024  0001A6  B4D8               	btfsc	status,2,c
  1025  0001A8  D006               	goto	l4307
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;State_Mchn.c: 199: {
  1029                           ;State_Mchn.c: 200: Train_Pos1 = 0;
  1030  0001AA  0E00               	movlw	0
  1031  0001AC  6E26               	movwf	_Train_Pos1,c
  1032                           
  1033                           ;State_Mchn.c: 201: Switch_Init = 2;
  1034  0001AE  0E02               	movlw	2
  1035  0001B0  0100               	movlb	0	; () banked
  1036  0001B2  6FF2               	movwf	_Switch_Init& (0+255),b
  1037                           
  1038                           ;State_Mchn.c: 202: break;
  1039  0001B4  0012               	return	
  1040  0001B6                     l4307:
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;State_Mchn.c: 203: }
  1044                           ;State_Mchn.c: 204: if(Button_LF)
  1045  0001B6  500C               	movf	_Button_LF,w,c
  1046  0001B8  B4D8               	btfsc	status,2,c
  1047  0001BA  D006               	goto	l4311
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;State_Mchn.c: 205: {
  1051                           ;State_Mchn.c: 206: Train_Pos1 = 1;
  1052  0001BC  0E01               	movlw	1
  1053  0001BE  6E26               	movwf	_Train_Pos1,c
  1054                           
  1055                           ;State_Mchn.c: 207: Switch_Init = 2;
  1056  0001C0  0E02               	movlw	2
  1057  0001C2  0100               	movlb	0	; () banked
  1058  0001C4  6FF2               	movwf	_Switch_Init& (0+255),b
  1059                           
  1060                           ;State_Mchn.c: 208: break;
  1061  0001C6  0012               	return	
  1062  0001C8                     l4311:
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;State_Mchn.c: 209: }
  1066                           ;State_Mchn.c: 210: if(Button_RB)
  1067  0001C8  500E               	movf	_Button_RB,w,c
  1068  0001CA  B4D8               	btfsc	status,2,c
  1069  0001CC  D006               	goto	l4315
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;State_Mchn.c: 211: {
  1073                           ;State_Mchn.c: 212: Train_Pos1 = 2;
  1074  0001CE  0E02               	movlw	2
  1075  0001D0  6E26               	movwf	_Train_Pos1,c
  1076                           
  1077                           ;State_Mchn.c: 213: Switch_Init = 2;
  1078  0001D2  0E02               	movlw	2
  1079  0001D4  0100               	movlb	0	; () banked
  1080  0001D6  6FF2               	movwf	_Switch_Init& (0+255),b
  1081                           
  1082                           ;State_Mchn.c: 214: break;
  1083  0001D8  0012               	return	
  1084  0001DA                     l4315:
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;State_Mchn.c: 215: }
  1088                           ;State_Mchn.c: 216: if(Button_RF)
  1089  0001DA  500F               	movf	_Button_RF,w,c
  1090  0001DC  B4D8               	btfsc	status,2,c
  1091  0001DE  D006               	goto	l4319
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;State_Mchn.c: 217: {
  1095                           ;State_Mchn.c: 218: Train_Pos1 = 3;
  1096  0001E0  0E03               	movlw	3
  1097  0001E2  6E26               	movwf	_Train_Pos1,c
  1098                           
  1099                           ;State_Mchn.c: 219: Switch_Init = 2;
  1100  0001E4  0E02               	movlw	2
  1101  0001E6  0100               	movlb	0	; () banked
  1102  0001E8  6FF2               	movwf	_Switch_Init& (0+255),b
  1103                           
  1104                           ;State_Mchn.c: 220: break;
  1105  0001EA  0012               	return	
  1106  0001EC                     l4319:
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;State_Mchn.c: 221: }
  1110                           ;State_Mchn.c: 222: if(Button_Middle)
  1111  0001EC  500D               	movf	_Button_Middle,w,c
  1112  0001EE  B4D8               	btfsc	status,2,c
  1113  0001F0  D006               	goto	l4323
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;State_Mchn.c: 223: {
  1117                           ;State_Mchn.c: 224: Train_Pos1 = 4;
  1118  0001F2  0E04               	movlw	4
  1119  0001F4  6E26               	movwf	_Train_Pos1,c
  1120                           
  1121                           ;State_Mchn.c: 225: Switch_Init = 2;
  1122  0001F6  0E02               	movlw	2
  1123  0001F8  0100               	movlb	0	; () banked
  1124  0001FA  6FF2               	movwf	_Switch_Init& (0+255),b
  1125                           
  1126                           ;State_Mchn.c: 226: break;
  1127  0001FC  0012               	return	
  1128  0001FE                     l4323:
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;State_Mchn.c: 227: }
  1132                           ;State_Mchn.c: 228: Switch_Init = 1;
  1133  0001FE  0E01               	movlw	1
  1134  000200  0100               	movlb	0	; () banked
  1135  000202  6FF2               	movwf	_Switch_Init& (0+255),b
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;State_Mchn.c: 229: Green_Led(2);
  1139  000204  0E02               	movlw	2
  1140  000206  ECA2  F00C         	call	_Green_Led
  1141                           
  1142                           ;State_Mchn.c: 230: break;
  1143  00020A  0012               	return	
  1144  00020C                     l4327:
  1145  00020C  500B               	movf	_Button_LB,w,c
  1146  00020E  A4D8               	btfss	status,2,c
  1147  000210  D012               	goto	l4341
  1148  000212  500C               	movf	_Button_LF,w,c
  1149  000214  A4D8               	btfss	status,2,c
  1150  000216  D00F               	goto	l4341
  1151  000218  500E               	movf	_Button_RB,w,c
  1152  00021A  A4D8               	btfss	status,2,c
  1153  00021C  D00C               	goto	l4341
  1154  00021E  500F               	movf	_Button_RF,w,c
  1155  000220  A4D8               	btfss	status,2,c
  1156  000222  D009               	goto	l4341
  1157  000224  500D               	movf	_Button_Middle,w,c
  1158  000226  A4D8               	btfss	status,2,c
  1159  000228  D006               	goto	l4341
  1160  00022A  5010               	movf	_Button_Start,w,c
  1161  00022C  A4D8               	btfss	status,2,c
  1162  00022E  D003               	goto	l4341
  1163                           
  1164                           ;State_Mchn.c: 233: {
  1165                           ;State_Mchn.c: 234: Switch_Init = 3;
  1166  000230  0E03               	movlw	3
  1167  000232  0100               	movlb	0	; () banked
  1168  000234  6FF2               	movwf	_Switch_Init& (0+255),b
  1169  000236                     l4341:
  1170                           
  1171                           ;State_Mchn.c: 235: }
  1172                           ;State_Mchn.c: 236: Red_Led(0);
  1173  000236  0E00               	movlw	0
  1174  000238  EC62  F00C         	call	_Red_Led
  1175                           
  1176                           ;State_Mchn.c: 237: Green_Led(2);
  1177  00023C  0E02               	movlw	2
  1178  00023E  ECA2  F00C         	call	_Green_Led
  1179                           
  1180                           ;State_Mchn.c: 238: break;
  1181  000242  0012               	return	
  1182  000244                     l4345:
  1183  000244  500B               	movf	_Button_LB,w,c
  1184  000246  B4D8               	btfsc	status,2,c
  1185  000248  D006               	goto	l4349
  1186                           
  1187                           ;State_Mchn.c: 241: {
  1188                           ;State_Mchn.c: 242: Train_Pos2 = 0;
  1189  00024A  0E00               	movlw	0
  1190  00024C  6E27               	movwf	_Train_Pos2,c
  1191                           
  1192                           ;State_Mchn.c: 243: Switch_Init = 4;
  1193  00024E  0E04               	movlw	4
  1194  000250  0100               	movlb	0	; () banked
  1195  000252  6FF2               	movwf	_Switch_Init& (0+255),b
  1196                           
  1197                           ;State_Mchn.c: 244: break;
  1198  000254  0012               	return	
  1199  000256                     l4349:
  1200                           
  1201                           ;State_Mchn.c: 245: }
  1202                           ;State_Mchn.c: 246: if(Button_LF)
  1203  000256  500C               	movf	_Button_LF,w,c
  1204  000258  B4D8               	btfsc	status,2,c
  1205  00025A  D006               	goto	l4353
  1206                           
  1207                           ;State_Mchn.c: 247: {
  1208                           ;State_Mchn.c: 248: Train_Pos2 = 1;
  1209  00025C  0E01               	movlw	1
  1210  00025E  6E27               	movwf	_Train_Pos2,c
  1211                           
  1212                           ;State_Mchn.c: 249: Switch_Init = 4;
  1213  000260  0E04               	movlw	4
  1214  000262  0100               	movlb	0	; () banked
  1215  000264  6FF2               	movwf	_Switch_Init& (0+255),b
  1216                           
  1217                           ;State_Mchn.c: 250: break;
  1218  000266  0012               	return	
  1219  000268                     l4353:
  1220                           
  1221                           ;State_Mchn.c: 251: }
  1222                           ;State_Mchn.c: 252: if(Button_RB)
  1223  000268  500E               	movf	_Button_RB,w,c
  1224  00026A  B4D8               	btfsc	status,2,c
  1225  00026C  D006               	goto	l4357
  1226                           
  1227                           ;State_Mchn.c: 253: {
  1228                           ;State_Mchn.c: 254: Train_Pos2 = 2;
  1229  00026E  0E02               	movlw	2
  1230  000270  6E27               	movwf	_Train_Pos2,c
  1231                           
  1232                           ;State_Mchn.c: 255: Switch_Init = 4;
  1233  000272  0E04               	movlw	4
  1234  000274  0100               	movlb	0	; () banked
  1235  000276  6FF2               	movwf	_Switch_Init& (0+255),b
  1236                           
  1237                           ;State_Mchn.c: 256: break;
  1238  000278  0012               	return	
  1239  00027A                     l4357:
  1240                           
  1241                           ;State_Mchn.c: 257: }
  1242                           ;State_Mchn.c: 258: if(Button_RF)
  1243  00027A  500F               	movf	_Button_RF,w,c
  1244  00027C  B4D8               	btfsc	status,2,c
  1245  00027E  D006               	goto	l4361
  1246                           
  1247                           ;State_Mchn.c: 259: {
  1248                           ;State_Mchn.c: 260: Train_Pos2 = 3;
  1249  000280  0E03               	movlw	3
  1250  000282  6E27               	movwf	_Train_Pos2,c
  1251                           
  1252                           ;State_Mchn.c: 261: Switch_Init = 4;
  1253  000284  0E04               	movlw	4
  1254  000286  0100               	movlb	0	; () banked
  1255  000288  6FF2               	movwf	_Switch_Init& (0+255),b
  1256                           
  1257                           ;State_Mchn.c: 262: break;
  1258  00028A  0012               	return	
  1259  00028C                     l4361:
  1260                           
  1261                           ;State_Mchn.c: 263: }
  1262                           ;State_Mchn.c: 264: if(Button_Middle)
  1263  00028C  500D               	movf	_Button_Middle,w,c
  1264  00028E  B4D8               	btfsc	status,2,c
  1265  000290  D006               	goto	l4365
  1266                           
  1267                           ;State_Mchn.c: 265: {
  1268                           ;State_Mchn.c: 266: Train_Pos2 = 4;
  1269  000292  0E04               	movlw	4
  1270  000294  6E27               	movwf	_Train_Pos2,c
  1271                           
  1272                           ;State_Mchn.c: 267: Switch_Init = 4;
  1273  000296  0E04               	movlw	4
  1274  000298  0100               	movlb	0	; () banked
  1275  00029A  6FF2               	movwf	_Switch_Init& (0+255),b
  1276                           
  1277                           ;State_Mchn.c: 268: break;
  1278  00029C  0012               	return	
  1279  00029E                     l4365:
  1280                           
  1281                           ;State_Mchn.c: 269: }
  1282                           ;State_Mchn.c: 270: if(Button_Start)
  1283  00029E  5010               	movf	_Button_Start,w,c
  1284  0002A0  B4D8               	btfsc	status,2,c
  1285  0002A2  D006               	goto	l4369
  1286                           
  1287                           ;State_Mchn.c: 271: {
  1288                           ;State_Mchn.c: 272: Train_Pos2 = 9;
  1289  0002A4  0E09               	movlw	9
  1290  0002A6  6E27               	movwf	_Train_Pos2,c
  1291                           
  1292                           ;State_Mchn.c: 273: Switch_Init = 4;
  1293  0002A8  0E04               	movlw	4
  1294  0002AA  0100               	movlb	0	; () banked
  1295  0002AC  6FF2               	movwf	_Switch_Init& (0+255),b
  1296                           
  1297                           ;State_Mchn.c: 274: break;
  1298  0002AE  0012               	return	
  1299  0002B0                     l4369:
  1300                           
  1301                           ;State_Mchn.c: 275: }
  1302                           ;State_Mchn.c: 276: Green_Led(2);
  1303  0002B0  0E02               	movlw	2
  1304  0002B2  ECA2  F00C         	call	_Green_Led
  1305                           
  1306                           ;State_Mchn.c: 277: Switch_Init = 3;
  1307  0002B6  0E03               	movlw	3
  1308  0002B8  0100               	movlb	0	; () banked
  1309  0002BA  6FF2               	movwf	_Switch_Init& (0+255),b
  1310                           
  1311                           ;State_Mchn.c: 278: break;
  1312  0002BC  0012               	return	
  1313  0002BE                     l4373:
  1314                           
  1315                           ; BSR set to: 0
  1316  0002BE  500B               	movf	_Button_LB,w,c
  1317  0002C0  A4D8               	btfss	status,2,c
  1318  0002C2  D020               	goto	l4395
  1319                           
  1320                           ; BSR set to: 0
  1321  0002C4  500C               	movf	_Button_LF,w,c
  1322  0002C6  A4D8               	btfss	status,2,c
  1323  0002C8  D01D               	goto	l4395
  1324                           
  1325                           ; BSR set to: 0
  1326  0002CA  500E               	movf	_Button_RB,w,c
  1327  0002CC  A4D8               	btfss	status,2,c
  1328  0002CE  D01A               	goto	l4395
  1329                           
  1330                           ; BSR set to: 0
  1331  0002D0  500F               	movf	_Button_RF,w,c
  1332  0002D2  A4D8               	btfss	status,2,c
  1333  0002D4  D017               	goto	l4395
  1334                           
  1335                           ; BSR set to: 0
  1336  0002D6  500D               	movf	_Button_Middle,w,c
  1337  0002D8  A4D8               	btfss	status,2,c
  1338  0002DA  D014               	goto	l4395
  1339                           
  1340                           ; BSR set to: 0
  1341  0002DC  5010               	movf	_Button_Start,w,c
  1342  0002DE  A4D8               	btfss	status,2,c
  1343  0002E0  D011               	goto	l4395
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;State_Mchn.c: 281: {
  1347                           ;State_Mchn.c: 282: if(Train_Pos1 == Train_Pos2)
  1348  0002E2  5027               	movf	_Train_Pos2,w,c
  1349  0002E4  1826               	xorwf	_Train_Pos1,w,c
  1350  0002E6  A4D8               	btfss	status,2,c
  1351  0002E8  D006               	goto	l4391
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;State_Mchn.c: 283: {
  1355                           ;State_Mchn.c: 284: Red_Led(1);
  1356  0002EA  0E01               	movlw	1
  1357  0002EC  EC62  F00C         	call	_Red_Led
  1358                           
  1359                           ;State_Mchn.c: 285: Switch_Init = 1;
  1360  0002F0  0E01               	movlw	1
  1361  0002F2  0100               	movlb	0	; () banked
  1362  0002F4  6FF2               	movwf	_Switch_Init& (0+255),b
  1363  0002F6                     l4391:
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;State_Mchn.c: 286: }
  1367                           ;State_Mchn.c: 287: if(Train_Pos1 != Train_Pos2)
  1368  0002F6  5027               	movf	_Train_Pos2,w,c
  1369  0002F8  1826               	xorwf	_Train_Pos1,w,c
  1370  0002FA  B4D8               	btfsc	status,2,c
  1371  0002FC  D003               	goto	l4395
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;State_Mchn.c: 288: {
  1375                           ;State_Mchn.c: 289: Switch_Init = 5;
  1376  0002FE  0E05               	movlw	5
  1377  000300  0100               	movlb	0	; () banked
  1378  000302  6FF2               	movwf	_Switch_Init& (0+255),b
  1379  000304                     l4395:
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;State_Mchn.c: 290: }
  1383                           ;State_Mchn.c: 291: }
  1384                           ;State_Mchn.c: 292: Green_Led(2);
  1385  000304  0E02               	movlw	2
  1386  000306  ECA2  F00C         	call	_Green_Led
  1387                           
  1388                           ;State_Mchn.c: 293: break;
  1389  00030A  0012               	return	
  1390  00030C                     l4397:
  1391  00030C  0E09               	movlw	9
  1392  00030E  1827               	xorwf	_Train_Pos2,w,c
  1393  000310  B4D8               	btfsc	status,2,c
  1394  000312  D003               	goto	l4401
  1395                           
  1396                           ;State_Mchn.c: 296: {
  1397                           ;State_Mchn.c: 297: Switch_Init = 6;
  1398  000314  0E06               	movlw	6
  1399  000316  0100               	movlb	0	; () banked
  1400  000318  6FF2               	movwf	_Switch_Init& (0+255),b
  1401  00031A                     l4401:
  1402                           
  1403                           ;State_Mchn.c: 298: }
  1404                           ;State_Mchn.c: 299: if(Train_Pos2 == 9)
  1405  00031A  0E09               	movlw	9
  1406  00031C  1827               	xorwf	_Train_Pos2,w,c
  1407  00031E  A4D8               	btfss	status,2,c
  1408  000320  0012               	return	
  1409                           
  1410                           ;State_Mchn.c: 300: {
  1411                           ;State_Mchn.c: 301: Switch_Init = 9;
  1412  000322  0E09               	movlw	9
  1413  000324  0100               	movlb	0	; () banked
  1414  000326  6FF2               	movwf	_Switch_Init& (0+255),b
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;State_Mchn.c: 302: }
  1418                           ;State_Mchn.c: 303: break;
  1419  000328  0012               	return	
  1420  00032A                     l4405:
  1421                           
  1422                           ; BSR set to: 0
  1423  00032A  0426               	decf	_Train_Pos1,w,c
  1424  00032C  A4D8               	btfss	status,2,c
  1425  00032E  D00A               	goto	l4413
  1426                           
  1427                           ; BSR set to: 0
  1428  000330  0E02               	movlw	2
  1429  000332  1827               	xorwf	_Train_Pos2,w,c
  1430  000334  A4D8               	btfss	status,2,c
  1431  000336  D006               	goto	l4413
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;State_Mchn.c: 308: {
  1435                           ;State_Mchn.c: 309: Switch_Program = Switch_Program_Old;
  1436  000338  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;State_Mchn.c: 310: Switch_Init = 7;
  1440  00033C  0E07               	movlw	7
  1441  00033E  0100               	movlb	0	; () banked
  1442  000340  6FF2               	movwf	_Switch_Init& (0+255),b
  1443                           
  1444                           ;State_Mchn.c: 311: }
  1445  000342  0012               	return	
  1446  000344                     l4413:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;State_Mchn.c: 312: else {Switch_Init = 8;}
  1450  000344  0E08               	movlw	8
  1451  000346  0100               	movlb	0	; () banked
  1452  000348  6FF2               	movwf	_Switch_Init& (0+255),b
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;State_Mchn.c: 313: break;
  1456  00034A  0012               	return	
  1457  00034C                     l4415:
  1458                           
  1459                           ; BSR set to: 0
  1460  00034C  0426               	decf	_Train_Pos1,w,c
  1461  00034E  A4D8               	btfss	status,2,c
  1462  000350  D009               	goto	l4423
  1463                           
  1464                           ; BSR set to: 0
  1465  000352  5027               	movf	_Train_Pos2,w,c
  1466  000354  A4D8               	btfss	status,2,c
  1467  000356  D006               	goto	l4423
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;State_Mchn.c: 315: {
  1471                           ;State_Mchn.c: 316: Switch_Program = Switch_Program_Old;
  1472  000358  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;State_Mchn.c: 317: Switch_Init = 7;
  1476  00035C  0E07               	movlw	7
  1477  00035E  0100               	movlb	0	; () banked
  1478  000360  6FF2               	movwf	_Switch_Init& (0+255),b
  1479                           
  1480                           ;State_Mchn.c: 318: }
  1481  000362  0012               	return	
  1482  000364                     l4423:
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;State_Mchn.c: 319: else {Switch_Init = 8;}
  1486  000364  0E08               	movlw	8
  1487  000366  0100               	movlb	0	; () banked
  1488  000368  6FF2               	movwf	_Switch_Init& (0+255),b
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;State_Mchn.c: 320: break;
  1492  00036A  0012               	return	
  1493  00036C                     l4425:
  1494                           
  1495                           ; BSR set to: 0
  1496  00036C  5026               	movf	_Train_Pos1,w,c
  1497  00036E  A4D8               	btfss	status,2,c
  1498  000370  D00A               	goto	l4433
  1499                           
  1500                           ; BSR set to: 0
  1501  000372  0E02               	movlw	2
  1502  000374  1827               	xorwf	_Train_Pos2,w,c
  1503  000376  A4D8               	btfss	status,2,c
  1504  000378  D006               	goto	l4433
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;State_Mchn.c: 322: {
  1508                           ;State_Mchn.c: 323: Switch_Program = Switch_Program_Old;
  1509  00037A  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;State_Mchn.c: 324: Switch_Init = 7;
  1513  00037E  0E07               	movlw	7
  1514  000380  0100               	movlb	0	; () banked
  1515  000382  6FF2               	movwf	_Switch_Init& (0+255),b
  1516                           
  1517                           ;State_Mchn.c: 325: }
  1518  000384  0012               	return	
  1519  000386                     l4433:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;State_Mchn.c: 326: else {Switch_Init = 8;}
  1523  000386  0E08               	movlw	8
  1524  000388  0100               	movlb	0	; () banked
  1525  00038A  6FF2               	movwf	_Switch_Init& (0+255),b
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;State_Mchn.c: 327: break;
  1529  00038C  0012               	return	
  1530  00038E                     l4435:
  1531                           
  1532                           ; BSR set to: 0
  1533  00038E  0E02               	movlw	2
  1534  000390  1826               	xorwf	_Train_Pos1,w,c
  1535  000392  A4D8               	btfss	status,2,c
  1536  000394  D00A               	goto	l4443
  1537                           
  1538                           ; BSR set to: 0
  1539  000396  0E03               	movlw	3
  1540  000398  1827               	xorwf	_Train_Pos2,w,c
  1541  00039A  A4D8               	btfss	status,2,c
  1542  00039C  D006               	goto	l4443
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;State_Mchn.c: 329: {
  1546                           ;State_Mchn.c: 330: Switch_Program = Switch_Program_Old;
  1547  00039E  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;State_Mchn.c: 331: Switch_Init = 7;
  1551  0003A2  0E07               	movlw	7
  1552  0003A4  0100               	movlb	0	; () banked
  1553  0003A6  6FF2               	movwf	_Switch_Init& (0+255),b
  1554                           
  1555                           ;State_Mchn.c: 332: }
  1556  0003A8  0012               	return	
  1557  0003AA                     l4443:
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;State_Mchn.c: 333: else {Switch_Init = 8;}
  1561  0003AA  0E08               	movlw	8
  1562  0003AC  0100               	movlb	0	; () banked
  1563  0003AE  6FF2               	movwf	_Switch_Init& (0+255),b
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;State_Mchn.c: 334: break;
  1567  0003B0  0012               	return	
  1568  0003B2                     l4445:
  1569                           
  1570                           ; BSR set to: 0
  1571  0003B2  5026               	movf	_Train_Pos1,w,c
  1572  0003B4  A4D8               	btfss	status,2,c
  1573  0003B6  D00A               	goto	l4453
  1574                           
  1575                           ; BSR set to: 0
  1576  0003B8  0E03               	movlw	3
  1577  0003BA  1827               	xorwf	_Train_Pos2,w,c
  1578  0003BC  A4D8               	btfss	status,2,c
  1579  0003BE  D006               	goto	l4453
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;State_Mchn.c: 336: {
  1583                           ;State_Mchn.c: 337: Switch_Program = Switch_Program_Old;
  1584  0003C0  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;State_Mchn.c: 338: Switch_Init = 7;
  1588  0003C4  0E07               	movlw	7
  1589  0003C6  0100               	movlb	0	; () banked
  1590  0003C8  6FF2               	movwf	_Switch_Init& (0+255),b
  1591                           
  1592                           ;State_Mchn.c: 339: }
  1593  0003CA  0012               	return	
  1594  0003CC                     l4453:
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;State_Mchn.c: 340: else {Switch_Init = 8;}
  1598  0003CC  0E08               	movlw	8
  1599  0003CE  0100               	movlb	0	; () banked
  1600  0003D0  6FF2               	movwf	_Switch_Init& (0+255),b
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;State_Mchn.c: 341: break;
  1604  0003D2  0012               	return	
  1605  0003D4                     l4455:
  1606                           
  1607                           ; BSR set to: 0
  1608  0003D4  5026               	movf	_Train_Pos1,w,c
  1609  0003D6  A4D8               	btfss	status,2,c
  1610  0003D8  D009               	goto	l4463
  1611                           
  1612                           ; BSR set to: 0
  1613  0003DA  0427               	decf	_Train_Pos2,w,c
  1614  0003DC  A4D8               	btfss	status,2,c
  1615  0003DE  D006               	goto	l4463
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;State_Mchn.c: 343: {
  1619                           ;State_Mchn.c: 344: Switch_Program = Switch_Program_Old;
  1620  0003E0  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;State_Mchn.c: 345: Switch_Init = 7;
  1624  0003E4  0E07               	movlw	7
  1625  0003E6  0100               	movlb	0	; () banked
  1626  0003E8  6FF2               	movwf	_Switch_Init& (0+255),b
  1627                           
  1628                           ;State_Mchn.c: 346: }
  1629  0003EA  0012               	return	
  1630  0003EC                     l4463:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;State_Mchn.c: 347: else {Switch_Init = 8;}
  1634  0003EC  0E08               	movlw	8
  1635  0003EE  0100               	movlb	0	; () banked
  1636  0003F0  6FF2               	movwf	_Switch_Init& (0+255),b
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;State_Mchn.c: 348: break;
  1640  0003F2  0012               	return	
  1641  0003F4                     l4465:
  1642                           
  1643                           ; BSR set to: 0
  1644  0003F4  0426               	decf	_Train_Pos1,w,c
  1645  0003F6  A4D8               	btfss	status,2,c
  1646  0003F8  D00A               	goto	l4473
  1647                           
  1648                           ; BSR set to: 0
  1649  0003FA  0E03               	movlw	3
  1650  0003FC  1827               	xorwf	_Train_Pos2,w,c
  1651  0003FE  A4D8               	btfss	status,2,c
  1652  000400  D006               	goto	l4473
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;State_Mchn.c: 350: {
  1656                           ;State_Mchn.c: 351: Switch_Program = Switch_Program_Old;
  1657  000402  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;State_Mchn.c: 352: Switch_Init = 7;
  1661  000406  0E07               	movlw	7
  1662  000408  0100               	movlb	0	; () banked
  1663  00040A  6FF2               	movwf	_Switch_Init& (0+255),b
  1664                           
  1665                           ;State_Mchn.c: 353: }
  1666  00040C  0012               	return	
  1667  00040E                     l4473:
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;State_Mchn.c: 354: else {Switch_Init = 8;}
  1671  00040E  0E08               	movlw	8
  1672  000410  0100               	movlb	0	; () banked
  1673  000412  6FF2               	movwf	_Switch_Init& (0+255),b
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;State_Mchn.c: 355: break;
  1677  000414  0012               	return	
  1678  000416                     l4475:
  1679                           
  1680                           ; BSR set to: 0
  1681  000416  0E03               	movlw	3
  1682  000418  1826               	xorwf	_Train_Pos1,w,c
  1683  00041A  A4D8               	btfss	status,2,c
  1684  00041C  D00A               	goto	l4483
  1685                           
  1686                           ; BSR set to: 0
  1687  00041E  0E02               	movlw	2
  1688  000420  1827               	xorwf	_Train_Pos2,w,c
  1689  000422  A4D8               	btfss	status,2,c
  1690  000424  D006               	goto	l4483
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;State_Mchn.c: 357: {
  1694                           ;State_Mchn.c: 358: Switch_Program = Switch_Program_Old;
  1695  000426  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;State_Mchn.c: 359: Switch_Init = 7;
  1699  00042A  0E07               	movlw	7
  1700  00042C  0100               	movlb	0	; () banked
  1701  00042E  6FF2               	movwf	_Switch_Init& (0+255),b
  1702                           
  1703                           ;State_Mchn.c: 360: }
  1704  000430  0012               	return	
  1705  000432                     l4483:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;State_Mchn.c: 361: else {Switch_Init = 8;}
  1709  000432  0E08               	movlw	8
  1710  000434  0100               	movlb	0	; () banked
  1711  000436  6FF2               	movwf	_Switch_Init& (0+255),b
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;State_Mchn.c: 362: break;
  1715  000438  0012               	return	
  1716  00043A                     l4485:
  1717                           
  1718                           ; BSR set to: 0
  1719  00043A  0E08               	movlw	8
  1720  00043C  0100               	movlb	0	; () banked
  1721  00043E  6FF2               	movwf	_Switch_Init& (0+255),b
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;State_Mchn.c: 366: }
  1725                           
  1726                           ;State_Mchn.c: 365: break;
  1727  000440  0012               	return	
  1728  000442                     l4489:
  1729                           
  1730                           ; BSR set to: 0
  1731  000442  5023               	movf	_Switch_Program_Old,w,c
  1732                           
  1733                           ; Switch size 1, requested type "space"
  1734                           ; Number of cases is 8, Range of values is 0 to 7
  1735                           ; switch strategies available:
  1736                           ; Name         Instructions Cycles
  1737                           ; simple_byte           25    13 (average)
  1738                           ;	Chosen strategy is simple_byte
  1739  000444  0A00               	xorlw	0	; case 0
  1740  000446  B4D8               	btfsc	status,2,c
  1741  000448  D770               	goto	l4405
  1742  00044A  0A01               	xorlw	1	; case 1
  1743  00044C  B4D8               	btfsc	status,2,c
  1744  00044E  D77E               	goto	l4415
  1745  000450  0A03               	xorlw	3	; case 2
  1746  000452  B4D8               	btfsc	status,2,c
  1747  000454  D78B               	goto	l4425
  1748  000456  0A01               	xorlw	1	; case 3
  1749  000458  B4D8               	btfsc	status,2,c
  1750  00045A  D799               	goto	l4435
  1751  00045C  0A07               	xorlw	7	; case 4
  1752  00045E  B4D8               	btfsc	status,2,c
  1753  000460  D7A8               	goto	l4445
  1754  000462  0A01               	xorlw	1	; case 5
  1755  000464  B4D8               	btfsc	status,2,c
  1756  000466  D7B6               	goto	l4455
  1757  000468  0A03               	xorlw	3	; case 6
  1758  00046A  B4D8               	btfsc	status,2,c
  1759  00046C  D7C3               	goto	l4465
  1760  00046E  0A01               	xorlw	1	; case 7
  1761  000470  B4D8               	btfsc	status,2,c
  1762  000472  D7D1               	goto	l4475
  1763  000474  D7E2               	goto	l4485
  1764  000476                     l4491:
  1765                           
  1766                           ; BSR set to: 0
  1767  000476  5010               	movf	_Button_Start,w,c
  1768  000478  B4D8               	btfsc	status,2,c
  1769  00047A  D007               	goto	l4495
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;State_Mchn.c: 370: {
  1773                           ;State_Mchn.c: 371: Switch_Main = 1;
  1774  00047C  0E01               	movlw	1
  1775  00047E  6E20               	movwf	_Switch_Main,c
  1776                           
  1777                           ;State_Mchn.c: 372: Switch_Init = 0;
  1778  000480  0E00               	movlw	0
  1779  000482  0100               	movlb	0	; () banked
  1780  000484  6FF2               	movwf	_Switch_Init& (0+255),b
  1781                           
  1782                           ;State_Mchn.c: 373: Stop_Program = 0;
  1783  000486  0E00               	movlw	0
  1784  000488  6E19               	movwf	_Stop_Program,c
  1785  00048A                     l4495:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;State_Mchn.c: 374: }
  1789                           ;State_Mchn.c: 375: Green_Led(3);
  1790  00048A  0E03               	movlw	3
  1791  00048C  ECA2  F00C         	call	_Green_Led
  1792                           
  1793                           ;State_Mchn.c: 376: Red_Led(0);
  1794  000490  0E00               	movlw	0
  1795  000492  EC62  F00C         	call	_Red_Led
  1796                           
  1797                           ;State_Mchn.c: 377: break;
  1798  000496  0012               	return	
  1799  000498                     l4499:
  1800  000498  0E04               	movlw	4
  1801  00049A  1826               	xorwf	_Train_Pos1,w,c
  1802  00049C  B4D8               	btfsc	status,2,c
  1803  00049E  D014               	goto	l4517
  1804  0004A0  D021               	goto	l4519
  1805  0004A2                     l4503:
  1806  0004A2  0E01               	movlw	1
  1807  0004A4  D005               	goto	L3
  1808  0004A6                     l4505:
  1809  0004A6  0E05               	movlw	5
  1810  0004A8  D003               	goto	L3
  1811  0004AA                     l4507:
  1812  0004AA  0E02               	movlw	2
  1813  0004AC  D001               	goto	L3
  1814  0004AE                     l4509:
  1815  0004AE  0E03               	movlw	3
  1816  0004B0                     L3:
  1817  0004B0  6E22               	movwf	_Switch_Program,c
  1818                           
  1819                           ;State_Mchn.c: 393: Switch_Init = 7;
  1820  0004B2  0E07               	movlw	7
  1821  0004B4  0100               	movlb	0	; () banked
  1822  0004B6  6FF2               	movwf	_Switch_Init& (0+255),b
  1823                           
  1824                           ;State_Mchn.c: 394: break;
  1825  0004B8  D015               	goto	l4519
  1826  0004BA                     l4511:
  1827  0004BA  0E08               	movlw	8
  1828  0004BC  0100               	movlb	0	; () banked
  1829  0004BE  6FF2               	movwf	_Switch_Init& (0+255),b
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;State_Mchn.c: 396: Red_Led(1);
  1833  0004C0  0E01               	movlw	1
  1834  0004C2  EC62  F00C         	call	_Red_Led
  1835                           
  1836                           ;State_Mchn.c: 398: }
  1837                           
  1838                           ;State_Mchn.c: 397: break;
  1839  0004C6  D00E               	goto	l4519
  1840  0004C8                     l4517:
  1841  0004C8  5027               	movf	_Train_Pos2,w,c
  1842                           
  1843                           ; Switch size 1, requested type "space"
  1844                           ; Number of cases is 4, Range of values is 0 to 3
  1845                           ; switch strategies available:
  1846                           ; Name         Instructions Cycles
  1847                           ; simple_byte           13     7 (average)
  1848                           ;	Chosen strategy is simple_byte
  1849  0004CA  0A00               	xorlw	0	; case 0
  1850  0004CC  B4D8               	btfsc	status,2,c
  1851  0004CE  D7E9               	goto	l4503
  1852  0004D0  0A01               	xorlw	1	; case 1
  1853  0004D2  B4D8               	btfsc	status,2,c
  1854  0004D4  D7E8               	goto	l4505
  1855  0004D6  0A03               	xorlw	3	; case 2
  1856  0004D8  B4D8               	btfsc	status,2,c
  1857  0004DA  D7E7               	goto	l4507
  1858  0004DC  0A01               	xorlw	1	; case 3
  1859  0004DE  B4D8               	btfsc	status,2,c
  1860  0004E0  D7E6               	goto	l4509
  1861  0004E2  D7EB               	goto	l4511
  1862  0004E4                     l4519:
  1863                           
  1864                           ;State_Mchn.c: 399: }
  1865                           ;State_Mchn.c: 400: if(Train_Pos2 == 4)
  1866  0004E4  0E04               	movlw	4
  1867  0004E6  1827               	xorwf	_Train_Pos2,w,c
  1868  0004E8  B4D8               	btfsc	status,2,c
  1869  0004EA  D014               	goto	l4537
  1870  0004EC  D021               	goto	l4539
  1871  0004EE                     l4523:
  1872  0004EE  0E01               	movlw	1
  1873  0004F0  D005               	goto	L6
  1874  0004F2                     l4525:
  1875  0004F2  0E05               	movlw	5
  1876  0004F4  D003               	goto	L6
  1877  0004F6                     l4527:
  1878  0004F6  0E02               	movlw	2
  1879  0004F8  D001               	goto	L6
  1880  0004FA                     l4529:
  1881  0004FA  0E03               	movlw	3
  1882  0004FC                     L6:
  1883  0004FC  6E22               	movwf	_Switch_Program,c
  1884                           
  1885                           ;State_Mchn.c: 414: Switch_Init = 7;
  1886  0004FE  0E07               	movlw	7
  1887  000500  0100               	movlb	0	; () banked
  1888  000502  6FF2               	movwf	_Switch_Init& (0+255),b
  1889                           
  1890                           ;State_Mchn.c: 415: break;
  1891  000504  D015               	goto	l4539
  1892  000506                     l4531:
  1893  000506  0E08               	movlw	8
  1894  000508  0100               	movlb	0	; () banked
  1895  00050A  6FF2               	movwf	_Switch_Init& (0+255),b
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;State_Mchn.c: 417: Red_Led(1);
  1899  00050C  0E01               	movlw	1
  1900  00050E  EC62  F00C         	call	_Red_Led
  1901                           
  1902                           ;State_Mchn.c: 419: }
  1903                           
  1904                           ;State_Mchn.c: 418: break;
  1905  000512  D00E               	goto	l4539
  1906  000514                     l4537:
  1907  000514  5026               	movf	_Train_Pos1,w,c
  1908                           
  1909                           ; Switch size 1, requested type "space"
  1910                           ; Number of cases is 4, Range of values is 0 to 3
  1911                           ; switch strategies available:
  1912                           ; Name         Instructions Cycles
  1913                           ; simple_byte           13     7 (average)
  1914                           ;	Chosen strategy is simple_byte
  1915  000516  0A00               	xorlw	0	; case 0
  1916  000518  B4D8               	btfsc	status,2,c
  1917  00051A  D7E9               	goto	l4523
  1918  00051C  0A01               	xorlw	1	; case 1
  1919  00051E  B4D8               	btfsc	status,2,c
  1920  000520  D7E8               	goto	l4525
  1921  000522  0A03               	xorlw	3	; case 2
  1922  000524  B4D8               	btfsc	status,2,c
  1923  000526  D7E7               	goto	l4527
  1924  000528  0A01               	xorlw	1	; case 3
  1925  00052A  B4D8               	btfsc	status,2,c
  1926  00052C  D7E6               	goto	l4529
  1927  00052E  D7EB               	goto	l4531
  1928  000530                     l4539:
  1929                           
  1930                           ;State_Mchn.c: 420: }
  1931                           ;State_Mchn.c: 421: if((Train_Pos1 != 4) && (Train_Pos2 != 4))
  1932  000530  0E04               	movlw	4
  1933  000532  1826               	xorwf	_Train_Pos1,w,c
  1934  000534  B4D8               	btfsc	status,2,c
  1935  000536  0012               	return	
  1936  000538  0E04               	movlw	4
  1937  00053A  1827               	xorwf	_Train_Pos2,w,c
  1938  00053C  B4D8               	btfsc	status,2,c
  1939  00053E  0012               	return	
  1940  000540  D0B3               	goto	l4615
  1941  000542                     l4545:
  1942  000542  0E00               	movlw	0
  1943  000544  0100               	movlb	0	; () banked
  1944  000546  6FF2               	movwf	_Switch_Init& (0+255),b
  1945                           
  1946                           ;State_Mchn.c: 428: break;
  1947  000548  0012               	return	
  1948  00054A                     l4547:
  1949  00054A  0E01               	movlw	1
  1950  00054C  6E22               	movwf	_Switch_Program,c
  1951                           
  1952                           ;State_Mchn.c: 430: Switch_Init = 7;
  1953  00054E  0E07               	movlw	7
  1954  000550  0100               	movlb	0	; () banked
  1955  000552  6FF2               	movwf	_Switch_Init& (0+255),b
  1956                           
  1957                           ;State_Mchn.c: 431: break;
  1958  000554  0012               	return	
  1959  000556                     l4549:
  1960  000556  0E02               	movlw	2
  1961  000558  6E22               	movwf	_Switch_Program,c
  1962                           
  1963                           ;State_Mchn.c: 433: Switch_Init = 7;
  1964  00055A  0E07               	movlw	7
  1965  00055C  0100               	movlb	0	; () banked
  1966  00055E  6FF2               	movwf	_Switch_Init& (0+255),b
  1967                           
  1968                           ;State_Mchn.c: 434: break;
  1969  000560  0012               	return	
  1970  000562                     l4551:
  1971  000562  0E04               	movlw	4
  1972  000564  6E22               	movwf	_Switch_Program,c
  1973                           
  1974                           ;State_Mchn.c: 436: Switch_Init = 7;
  1975  000566  0E07               	movlw	7
  1976  000568  0100               	movlb	0	; () banked
  1977  00056A  6FF2               	movwf	_Switch_Init& (0+255),b
  1978                           
  1979                           ;State_Mchn.c: 437: break;
  1980  00056C  0012               	return	
  1981  00056E                     l4553:
  1982  00056E  0E08               	movlw	8
  1983  000570  0100               	movlb	0	; () banked
  1984  000572  6FF2               	movwf	_Switch_Init& (0+255),b
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;State_Mchn.c: 439: Red_Led(1);
  1988  000574  0E01               	movlw	1
  1989  000576  EC62  F00C         	call	_Red_Led
  1990                           
  1991                           ;State_Mchn.c: 441: }
  1992                           
  1993                           ;State_Mchn.c: 440: break;
  1994  00057A  0012               	return	
  1995  00057C                     l4559:
  1996  00057C  5027               	movf	_Train_Pos2,w,c
  1997                           
  1998                           ; Switch size 1, requested type "space"
  1999                           ; Number of cases is 4, Range of values is 0 to 3
  2000                           ; switch strategies available:
  2001                           ; Name         Instructions Cycles
  2002                           ; simple_byte           13     7 (average)
  2003                           ;	Chosen strategy is simple_byte
  2004  00057E  0A00               	xorlw	0	; case 0
  2005  000580  B4D8               	btfsc	status,2,c
  2006  000582  D7DF               	goto	l4545
  2007  000584  0A01               	xorlw	1	; case 1
  2008  000586  B4D8               	btfsc	status,2,c
  2009  000588  D7E0               	goto	l4547
  2010  00058A  0A03               	xorlw	3	; case 2
  2011  00058C  B4D8               	btfsc	status,2,c
  2012  00058E  D7E3               	goto	l4549
  2013  000590  0A01               	xorlw	1	; case 3
  2014  000592  B4D8               	btfsc	status,2,c
  2015  000594  D7E6               	goto	l4551
  2016  000596  D7EB               	goto	l4553
  2017  000598                     l4561:
  2018  000598  0E01               	movlw	1
  2019  00059A  6E22               	movwf	_Switch_Program,c
  2020                           
  2021                           ;State_Mchn.c: 446: Switch_Init = 7;
  2022  00059C  0E07               	movlw	7
  2023  00059E  0100               	movlb	0	; () banked
  2024  0005A0  6FF2               	movwf	_Switch_Init& (0+255),b
  2025                           
  2026                           ;State_Mchn.c: 447: break;
  2027  0005A2  0012               	return	
  2028  0005A4                     l4563:
  2029  0005A4  0E00               	movlw	0
  2030  0005A6  0100               	movlb	0	; () banked
  2031  0005A8  6FF2               	movwf	_Switch_Init& (0+255),b
  2032                           
  2033                           ;State_Mchn.c: 449: break;
  2034  0005AA  0012               	return	
  2035  0005AC                     l4565:
  2036  0005AC  0E00               	movlw	0
  2037  0005AE  6E22               	movwf	_Switch_Program,c
  2038                           
  2039                           ;State_Mchn.c: 451: Switch_Init = 7;
  2040  0005B0  0E07               	movlw	7
  2041  0005B2  0100               	movlb	0	; () banked
  2042  0005B4  6FF2               	movwf	_Switch_Init& (0+255),b
  2043                           
  2044                           ;State_Mchn.c: 452: break;
  2045  0005B6  0012               	return	
  2046  0005B8                     l4567:
  2047  0005B8  0E06               	movlw	6
  2048  0005BA  6E22               	movwf	_Switch_Program,c
  2049                           
  2050                           ;State_Mchn.c: 454: Switch_Init = 7;
  2051  0005BC  0E07               	movlw	7
  2052  0005BE  0100               	movlb	0	; () banked
  2053  0005C0  6FF2               	movwf	_Switch_Init& (0+255),b
  2054                           
  2055                           ;State_Mchn.c: 455: break;
  2056  0005C2  0012               	return	
  2057  0005C4                     l4569:
  2058  0005C4  0E08               	movlw	8
  2059  0005C6  0100               	movlb	0	; () banked
  2060  0005C8  6FF2               	movwf	_Switch_Init& (0+255),b
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;State_Mchn.c: 457: Red_Led(1);
  2064  0005CA  0E01               	movlw	1
  2065  0005CC  EC62  F00C         	call	_Red_Led
  2066                           
  2067                           ;State_Mchn.c: 459: }
  2068                           
  2069                           ;State_Mchn.c: 458: break;
  2070  0005D0  0012               	return	
  2071  0005D2                     l4575:
  2072  0005D2  5027               	movf	_Train_Pos2,w,c
  2073                           
  2074                           ; Switch size 1, requested type "space"
  2075                           ; Number of cases is 4, Range of values is 0 to 3
  2076                           ; switch strategies available:
  2077                           ; Name         Instructions Cycles
  2078                           ; simple_byte           13     7 (average)
  2079                           ;	Chosen strategy is simple_byte
  2080  0005D4  0A00               	xorlw	0	; case 0
  2081  0005D6  B4D8               	btfsc	status,2,c
  2082  0005D8  D7DF               	goto	l4561
  2083  0005DA  0A01               	xorlw	1	; case 1
  2084  0005DC  B4D8               	btfsc	status,2,c
  2085  0005DE  D7E2               	goto	l4563
  2086  0005E0  0A03               	xorlw	3	; case 2
  2087  0005E2  B4D8               	btfsc	status,2,c
  2088  0005E4  D7E3               	goto	l4565
  2089  0005E6  0A01               	xorlw	1	; case 3
  2090  0005E8  B4D8               	btfsc	status,2,c
  2091  0005EA  D7E6               	goto	l4567
  2092  0005EC  D7EB               	goto	l4569
  2093  0005EE                     l4577:
  2094  0005EE  0E02               	movlw	2
  2095  0005F0  6E22               	movwf	_Switch_Program,c
  2096                           
  2097                           ;State_Mchn.c: 464: Switch_Init = 7;
  2098  0005F2  0E07               	movlw	7
  2099  0005F4  0100               	movlb	0	; () banked
  2100  0005F6  6FF2               	movwf	_Switch_Init& (0+255),b
  2101                           
  2102                           ;State_Mchn.c: 465: break;
  2103  0005F8  0012               	return	
  2104  0005FA                     l4579:
  2105  0005FA  0E00               	movlw	0
  2106  0005FC  6E22               	movwf	_Switch_Program,c
  2107                           
  2108                           ;State_Mchn.c: 467: Switch_Init = 7;
  2109  0005FE  0E07               	movlw	7
  2110  000600  0100               	movlb	0	; () banked
  2111  000602  6FF2               	movwf	_Switch_Init& (0+255),b
  2112                           
  2113                           ;State_Mchn.c: 468: break;
  2114  000604  0012               	return	
  2115  000606                     l4581:
  2116  000606  0E00               	movlw	0
  2117  000608  0100               	movlb	0	; () banked
  2118  00060A  6FF2               	movwf	_Switch_Init& (0+255),b
  2119                           
  2120                           ;State_Mchn.c: 470: break;
  2121  00060C  0012               	return	
  2122  00060E                     l4583:
  2123  00060E  0E03               	movlw	3
  2124  000610  6E22               	movwf	_Switch_Program,c
  2125                           
  2126                           ;State_Mchn.c: 472: Switch_Init = 7;
  2127  000612  0E07               	movlw	7
  2128  000614  0100               	movlb	0	; () banked
  2129  000616  6FF2               	movwf	_Switch_Init& (0+255),b
  2130                           
  2131                           ;State_Mchn.c: 473: break;
  2132  000618  0012               	return	
  2133  00061A                     l4585:
  2134  00061A  0E08               	movlw	8
  2135  00061C  0100               	movlb	0	; () banked
  2136  00061E  6FF2               	movwf	_Switch_Init& (0+255),b
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;State_Mchn.c: 475: Red_Led(1);
  2140  000620  0E01               	movlw	1
  2141  000622  EC62  F00C         	call	_Red_Led
  2142                           
  2143                           ;State_Mchn.c: 477: }
  2144                           
  2145                           ;State_Mchn.c: 476: break;
  2146  000626  0012               	return	
  2147  000628                     l4591:
  2148  000628  5027               	movf	_Train_Pos2,w,c
  2149                           
  2150                           ; Switch size 1, requested type "space"
  2151                           ; Number of cases is 4, Range of values is 0 to 3
  2152                           ; switch strategies available:
  2153                           ; Name         Instructions Cycles
  2154                           ; simple_byte           13     7 (average)
  2155                           ;	Chosen strategy is simple_byte
  2156  00062A  0A00               	xorlw	0	; case 0
  2157  00062C  B4D8               	btfsc	status,2,c
  2158  00062E  D7DF               	goto	l4577
  2159  000630  0A01               	xorlw	1	; case 1
  2160  000632  B4D8               	btfsc	status,2,c
  2161  000634  D7E2               	goto	l4579
  2162  000636  0A03               	xorlw	3	; case 2
  2163  000638  B4D8               	btfsc	status,2,c
  2164  00063A  D7E5               	goto	l4581
  2165  00063C  0A01               	xorlw	1	; case 3
  2166  00063E  B4D8               	btfsc	status,2,c
  2167  000640  D7E6               	goto	l4583
  2168  000642  D7EB               	goto	l4585
  2169  000644                     l4593:
  2170  000644  0E04               	movlw	4
  2171  000646  6E22               	movwf	_Switch_Program,c
  2172                           
  2173                           ;State_Mchn.c: 482: Switch_Init = 7;
  2174  000648  0E07               	movlw	7
  2175  00064A  0100               	movlb	0	; () banked
  2176  00064C  6FF2               	movwf	_Switch_Init& (0+255),b
  2177                           
  2178                           ;State_Mchn.c: 483: break;
  2179  00064E  0012               	return	
  2180  000650                     l4595:
  2181  000650  0E06               	movlw	6
  2182  000652  6E22               	movwf	_Switch_Program,c
  2183                           
  2184                           ;State_Mchn.c: 485: Switch_Init = 7;
  2185  000654  0E07               	movlw	7
  2186  000656  0100               	movlb	0	; () banked
  2187  000658  6FF2               	movwf	_Switch_Init& (0+255),b
  2188                           
  2189                           ;State_Mchn.c: 486: break;
  2190  00065A  0012               	return	
  2191  00065C                     l4597:
  2192  00065C  0E03               	movlw	3
  2193  00065E  6E22               	movwf	_Switch_Program,c
  2194                           
  2195                           ;State_Mchn.c: 488: Switch_Init = 7;
  2196  000660  0E07               	movlw	7
  2197  000662  0100               	movlb	0	; () banked
  2198  000664  6FF2               	movwf	_Switch_Init& (0+255),b
  2199                           
  2200                           ;State_Mchn.c: 489: break;
  2201  000666  0012               	return	
  2202  000668                     l4599:
  2203  000668  0E00               	movlw	0
  2204  00066A  0100               	movlb	0	; () banked
  2205  00066C  6FF2               	movwf	_Switch_Init& (0+255),b
  2206                           
  2207                           ;State_Mchn.c: 491: break;
  2208  00066E  0012               	return	
  2209  000670                     l4601:
  2210  000670  0E08               	movlw	8
  2211  000672  0100               	movlb	0	; () banked
  2212  000674  6FF2               	movwf	_Switch_Init& (0+255),b
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;State_Mchn.c: 493: Red_Led(1);
  2216  000676  0E01               	movlw	1
  2217  000678  EC62  F00C         	call	_Red_Led
  2218                           
  2219                           ;State_Mchn.c: 495: }
  2220                           
  2221                           ;State_Mchn.c: 494: break;
  2222  00067C  0012               	return	
  2223  00067E                     l4607:
  2224  00067E  5027               	movf	_Train_Pos2,w,c
  2225                           
  2226                           ; Switch size 1, requested type "space"
  2227                           ; Number of cases is 4, Range of values is 0 to 3
  2228                           ; switch strategies available:
  2229                           ; Name         Instructions Cycles
  2230                           ; simple_byte           13     7 (average)
  2231                           ;	Chosen strategy is simple_byte
  2232  000680  0A00               	xorlw	0	; case 0
  2233  000682  B4D8               	btfsc	status,2,c
  2234  000684  D7DF               	goto	l4593
  2235  000686  0A01               	xorlw	1	; case 1
  2236  000688  B4D8               	btfsc	status,2,c
  2237  00068A  D7E2               	goto	l4595
  2238  00068C  0A03               	xorlw	3	; case 2
  2239  00068E  B4D8               	btfsc	status,2,c
  2240  000690  D7E5               	goto	l4597
  2241  000692  0A01               	xorlw	1	; case 3
  2242  000694  B4D8               	btfsc	status,2,c
  2243  000696  D7E8               	goto	l4599
  2244  000698  D7EB               	goto	l4601
  2245  00069A                     l4609:
  2246  00069A  0E08               	movlw	8
  2247  00069C  0100               	movlb	0	; () banked
  2248  00069E  6FF2               	movwf	_Switch_Init& (0+255),b
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;State_Mchn.c: 498: Red_Led(1);
  2252  0006A0  0E01               	movlw	1
  2253  0006A2  EC62  F00C         	call	_Red_Led
  2254                           
  2255                           ;State_Mchn.c: 500: }
  2256                           
  2257                           ;State_Mchn.c: 499: break;
  2258  0006A6  0012               	return	
  2259  0006A8                     l4615:
  2260  0006A8  5026               	movf	_Train_Pos1,w,c
  2261                           
  2262                           ; Switch size 1, requested type "space"
  2263                           ; Number of cases is 4, Range of values is 0 to 3
  2264                           ; switch strategies available:
  2265                           ; Name         Instructions Cycles
  2266                           ; simple_byte           13     7 (average)
  2267                           ;	Chosen strategy is simple_byte
  2268  0006AA  0A00               	xorlw	0	; case 0
  2269  0006AC  B4D8               	btfsc	status,2,c
  2270  0006AE  D766               	goto	l4559
  2271  0006B0  0A01               	xorlw	1	; case 1
  2272  0006B2  B4D8               	btfsc	status,2,c
  2273  0006B4  D78E               	goto	l4575
  2274  0006B6  0A03               	xorlw	3	; case 2
  2275  0006B8  B4D8               	btfsc	status,2,c
  2276  0006BA  D7B6               	goto	l4591
  2277  0006BC  0A01               	xorlw	1	; case 3
  2278  0006BE  B4D8               	btfsc	status,2,c
  2279  0006C0  D7DE               	goto	l4607
  2280  0006C2  D7EB               	goto	l4609
  2281  0006C4                     l4617:
  2282  0006C4  0E02               	movlw	2
  2283  0006C6  1826               	xorwf	_Train_Pos1,w,c
  2284  0006C8  A4D8               	btfss	status,2,c
  2285  0006CA  D006               	goto	l4623
  2286                           
  2287                           ;State_Mchn.c: 507: {
  2288                           ;State_Mchn.c: 508: Switch_Program = Switch_Program_Old;
  2289  0006CC  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  2290                           
  2291                           ;State_Mchn.c: 509: Switch_Init = 10;
  2292  0006D0  0E0A               	movlw	10
  2293  0006D2  0100               	movlb	0	; () banked
  2294  0006D4  6FF2               	movwf	_Switch_Init& (0+255),b
  2295                           
  2296                           ;State_Mchn.c: 510: }
  2297  0006D6  0012               	return	
  2298  0006D8                     l4623:
  2299                           
  2300                           ;State_Mchn.c: 511: else {Switch_Init = 11;}
  2301  0006D8  0E0B               	movlw	11
  2302  0006DA  0100               	movlb	0	; () banked
  2303  0006DC  6FF2               	movwf	_Switch_Init& (0+255),b
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;State_Mchn.c: 512: break;
  2307  0006DE  0012               	return	
  2308  0006E0                     l4625:
  2309  0006E0  5026               	movf	_Train_Pos1,w,c
  2310  0006E2  A4D8               	btfss	status,2,c
  2311  0006E4  D006               	goto	l4631
  2312                           
  2313                           ;State_Mchn.c: 514: {
  2314                           ;State_Mchn.c: 515: Switch_Program = Switch_Program_Old;
  2315  0006E6  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  2316                           
  2317                           ;State_Mchn.c: 516: Switch_Init = 10;
  2318  0006EA  0E0A               	movlw	10
  2319  0006EC  0100               	movlb	0	; () banked
  2320  0006EE  6FF2               	movwf	_Switch_Init& (0+255),b
  2321                           
  2322                           ;State_Mchn.c: 517: }
  2323  0006F0  0012               	return	
  2324  0006F2                     l4631:
  2325                           
  2326                           ;State_Mchn.c: 518: else {Switch_Init = 11;}
  2327  0006F2  0E0B               	movlw	11
  2328  0006F4  0100               	movlb	0	; () banked
  2329  0006F6  6FF2               	movwf	_Switch_Init& (0+255),b
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;State_Mchn.c: 519: break;
  2333  0006F8  0012               	return	
  2334  0006FA                     l4633:
  2335  0006FA  0E03               	movlw	3
  2336  0006FC  1826               	xorwf	_Train_Pos1,w,c
  2337  0006FE  A4D8               	btfss	status,2,c
  2338  000700  D006               	goto	l4639
  2339                           
  2340                           ;State_Mchn.c: 521: {
  2341                           ;State_Mchn.c: 522: Switch_Program = Switch_Program_Old;
  2342  000702  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  2343                           
  2344                           ;State_Mchn.c: 523: Switch_Init = 10;
  2345  000706  0E0A               	movlw	10
  2346  000708  0100               	movlb	0	; () banked
  2347  00070A  6FF2               	movwf	_Switch_Init& (0+255),b
  2348                           
  2349                           ;State_Mchn.c: 524: }
  2350  00070C  0012               	return	
  2351  00070E                     l4639:
  2352                           
  2353                           ;State_Mchn.c: 525: else {Switch_Init = 11;}
  2354  00070E  0E0B               	movlw	11
  2355  000710  0100               	movlb	0	; () banked
  2356  000712  6FF2               	movwf	_Switch_Init& (0+255),b
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;State_Mchn.c: 526: break;
  2360  000714  0012               	return	
  2361  000716                     l4641:
  2362  000716  0426               	decf	_Train_Pos1,w,c
  2363  000718  A4D8               	btfss	status,2,c
  2364  00071A  D006               	goto	l4647
  2365                           
  2366                           ;State_Mchn.c: 528: {
  2367                           ;State_Mchn.c: 529: Switch_Program = Switch_Program_Old;
  2368  00071C  C023  F022         	movff	_Switch_Program_Old,_Switch_Program
  2369                           
  2370                           ;State_Mchn.c: 530: Switch_Init = 10;
  2371  000720  0E0A               	movlw	10
  2372  000722  0100               	movlb	0	; () banked
  2373  000724  6FF2               	movwf	_Switch_Init& (0+255),b
  2374                           
  2375                           ;State_Mchn.c: 531: }
  2376  000726  0012               	return	
  2377  000728                     l4647:
  2378                           
  2379                           ;State_Mchn.c: 532: else {Switch_Init = 11;}
  2380  000728  0E0B               	movlw	11
  2381  00072A  0100               	movlb	0	; () banked
  2382  00072C  6FF2               	movwf	_Switch_Init& (0+255),b
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;State_Mchn.c: 533: break;
  2386  00072E  0012               	return	
  2387  000730                     l4649:
  2388  000730  0E0B               	movlw	11
  2389  000732  0100               	movlb	0	; () banked
  2390  000734  6FF2               	movwf	_Switch_Init& (0+255),b
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;State_Mchn.c: 537: }
  2394                           
  2395                           ;State_Mchn.c: 536: break;
  2396  000736  0012               	return	
  2397  000738                     l4653:
  2398  000738  5023               	movf	_Switch_Program_Old,w,c
  2399                           
  2400                           ; Switch size 1, requested type "space"
  2401                           ; Number of cases is 4, Range of values is 0 to 3
  2402                           ; switch strategies available:
  2403                           ; Name         Instructions Cycles
  2404                           ; simple_byte           13     7 (average)
  2405                           ;	Chosen strategy is simple_byte
  2406  00073A  0A00               	xorlw	0	; case 0
  2407  00073C  B4D8               	btfsc	status,2,c
  2408  00073E  D7C2               	goto	l4617
  2409  000740  0A01               	xorlw	1	; case 1
  2410  000742  B4D8               	btfsc	status,2,c
  2411  000744  D7CD               	goto	l4625
  2412  000746  0A03               	xorlw	3	; case 2
  2413  000748  B4D8               	btfsc	status,2,c
  2414  00074A  D7D7               	goto	l4633
  2415  00074C  0A01               	xorlw	1	; case 3
  2416  00074E  B4D8               	btfsc	status,2,c
  2417  000750  D7E2               	goto	l4641
  2418  000752  D7EE               	goto	l4649
  2419  000754                     l4655:
  2420  000754  5010               	movf	_Button_Start,w,c
  2421  000756  B4D8               	btfsc	status,2,c
  2422  000758  D007               	goto	l4659
  2423                           
  2424                           ;State_Mchn.c: 541: {
  2425                           ;State_Mchn.c: 542: Switch_Main = 2;
  2426  00075A  0E02               	movlw	2
  2427  00075C  6E20               	movwf	_Switch_Main,c
  2428                           
  2429                           ;State_Mchn.c: 543: Switch_Init = 0;
  2430  00075E  0E00               	movlw	0
  2431  000760  0100               	movlb	0	; () banked
  2432  000762  6FF2               	movwf	_Switch_Init& (0+255),b
  2433                           
  2434                           ;State_Mchn.c: 544: Stop_Program = 0;
  2435  000764  0E00               	movlw	0
  2436  000766  6E19               	movwf	_Stop_Program,c
  2437  000768                     l4659:
  2438                           
  2439                           ;State_Mchn.c: 545: }
  2440                           ;State_Mchn.c: 546: Green_Led(3);
  2441  000768  0E03               	movlw	3
  2442  00076A  ECA2  F00C         	call	_Green_Led
  2443                           
  2444                           ;State_Mchn.c: 547: Red_Led(0);
  2445  00076E  0E00               	movlw	0
  2446  000770  EC62  F00C         	call	_Red_Led
  2447                           
  2448                           ;State_Mchn.c: 548: break;
  2449  000774  0012               	return	
  2450  000776                     l4663:
  2451  000776  0E04               	movlw	4
  2452  000778  1826               	xorwf	_Train_Pos1,w,c
  2453  00077A  A4D8               	btfss	status,2,c
  2454  00077C  D025               	goto	l4681
  2455                           
  2456                           ;State_Mchn.c: 551: {
  2457                           ;State_Mchn.c: 552: Switch_Program = 0;
  2458  00077E  0E00               	movlw	0
  2459  000780  6E22               	movwf	_Switch_Program,c
  2460                           
  2461                           ;State_Mchn.c: 553: Switch_Init = 10;
  2462  000782  0E0A               	movlw	10
  2463  000784  0100               	movlb	0	; () banked
  2464  000786  6FF2               	movwf	_Switch_Init& (0+255),b
  2465                           
  2466                           ;State_Mchn.c: 554: }
  2467  000788  0012               	return	
  2468  00078A                     l4667:
  2469  00078A  0E01               	movlw	1
  2470  00078C  6E22               	movwf	_Switch_Program,c
  2471  00078E  0E0A               	movlw	10
  2472  000790  0100               	movlb	0	; () banked
  2473  000792  6FF2               	movwf	_Switch_Init& (0+255),b
  2474  000794  0012               	return	
  2475  000796                     l4669:
  2476  000796  0E03               	movlw	3
  2477  000798  6E22               	movwf	_Switch_Program,c
  2478  00079A  0E0A               	movlw	10
  2479  00079C  0100               	movlb	0	; () banked
  2480  00079E  6FF2               	movwf	_Switch_Init& (0+255),b
  2481  0007A0  0012               	return	
  2482  0007A2                     l4671:
  2483  0007A2  0E00               	movlw	0
  2484  0007A4  6E22               	movwf	_Switch_Program,c
  2485  0007A6  0E0A               	movlw	10
  2486  0007A8  0100               	movlb	0	; () banked
  2487  0007AA  6FF2               	movwf	_Switch_Init& (0+255),b
  2488  0007AC  0012               	return	
  2489  0007AE                     l4673:
  2490  0007AE  0E02               	movlw	2
  2491  0007B0  6E22               	movwf	_Switch_Program,c
  2492  0007B2  0E0A               	movlw	10
  2493  0007B4  0100               	movlb	0	; () banked
  2494  0007B6  6FF2               	movwf	_Switch_Init& (0+255),b
  2495  0007B8  0012               	return	
  2496  0007BA                     l4675:
  2497  0007BA  0E0B               	movlw	11
  2498  0007BC  0100               	movlb	0	; () banked
  2499  0007BE  6FF2               	movwf	_Switch_Init& (0+255),b
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;State_Mchn.c: 562: Red_Led(1);
  2503  0007C0  0E01               	movlw	1
  2504  0007C2  EC62  F00C         	call	_Red_Led
  2505                           
  2506                           ;State_Mchn.c: 564: }
  2507                           
  2508                           ;State_Mchn.c: 563: break;
  2509  0007C6  0012               	return	
  2510  0007C8                     l4681:
  2511  0007C8  5026               	movf	_Train_Pos1,w,c
  2512                           
  2513                           ; Switch size 1, requested type "space"
  2514                           ; Number of cases is 4, Range of values is 0 to 3
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte           13     7 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519  0007CA  0A00               	xorlw	0	; case 0
  2520  0007CC  B4D8               	btfsc	status,2,c
  2521  0007CE  D7DD               	goto	l4667
  2522  0007D0  0A01               	xorlw	1	; case 1
  2523  0007D2  B4D8               	btfsc	status,2,c
  2524  0007D4  D7E0               	goto	l4669
  2525  0007D6  0A03               	xorlw	3	; case 2
  2526  0007D8  B4D8               	btfsc	status,2,c
  2527  0007DA  D7E3               	goto	l4671
  2528  0007DC  0A01               	xorlw	1	; case 3
  2529  0007DE  B4D8               	btfsc	status,2,c
  2530  0007E0  D7E6               	goto	l4673
  2531  0007E2  D7EB               	goto	l4675
  2532  0007E4                     l4683:
  2533  0007E4  0E00               	movlw	0
  2534  0007E6  0100               	movlb	0	; () banked
  2535  0007E8  6FF2               	movwf	_Switch_Init& (0+255),b
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;State_Mchn.c: 568: Red_Led(1);
  2539  0007EA  0E01               	movlw	1
  2540  0007EC  EC62  F00C         	call	_Red_Led
  2541                           
  2542                           ;State_Mchn.c: 570: }
  2543                           
  2544                           ;State_Mchn.c: 569: break;
  2545  0007F0  0012               	return	
  2546  0007F2                     l4689:
  2547  0007F2  0100               	movlb	0	; () banked
  2548  0007F4  51F2               	movf	_Switch_Init& (0+255),w,b
  2549                           
  2550                           ; Switch size 1, requested type "space"
  2551                           ; Number of cases is 12, Range of values is 0 to 11
  2552                           ; switch strategies available:
  2553                           ; Name         Instructions Cycles
  2554                           ; simple_byte           37    19 (average)
  2555                           ;	Chosen strategy is simple_byte
  2556  0007F6  0A00               	xorlw	0	; case 0
  2557  0007F8  B4D8               	btfsc	status,2,c
  2558  0007FA  D45B               	goto	l247
  2559  0007FC  0A01               	xorlw	1	; case 1
  2560  0007FE  B4D8               	btfsc	status,2,c
  2561  000800  D4D1               	goto	l4303
  2562  000802  0A03               	xorlw	3	; case 2
  2563  000804  B4D8               	btfsc	status,2,c
  2564  000806  D502               	goto	l4327
  2565  000808  0A01               	xorlw	1	; case 3
  2566  00080A  B4D8               	btfsc	status,2,c
  2567  00080C  D51B               	goto	l4345
  2568  00080E  0A07               	xorlw	7	; case 4
  2569  000810  B4D8               	btfsc	status,2,c
  2570  000812  D555               	goto	l4373
  2571  000814  0A01               	xorlw	1	; case 5
  2572  000816  B4D8               	btfsc	status,2,c
  2573  000818  D579               	goto	l4397
  2574  00081A  0A03               	xorlw	3	; case 6
  2575  00081C  B4D8               	btfsc	status,2,c
  2576  00081E  D611               	goto	l4489
  2577  000820  0A01               	xorlw	1	; case 7
  2578  000822  B4D8               	btfsc	status,2,c
  2579  000824  D628               	goto	l4491
  2580  000826  0A0F               	xorlw	15	; case 8
  2581  000828  B4D8               	btfsc	status,2,c
  2582  00082A  D636               	goto	l4499
  2583  00082C  0A01               	xorlw	1	; case 9
  2584  00082E  B4D8               	btfsc	status,2,c
  2585  000830  D783               	goto	l4653
  2586  000832  0A03               	xorlw	3	; case 10
  2587  000834  B4D8               	btfsc	status,2,c
  2588  000836  D78E               	goto	l4655
  2589  000838  0A01               	xorlw	1	; case 11
  2590  00083A  B4D8               	btfsc	status,2,c
  2591  00083C  D79C               	goto	l4663
  2592  00083E  D7D2               	goto	l4683
  2593  000840                     l4691:
  2594  000840  0E00               	movlw	0
  2595  000842  6E45               	movwf	Train_Path@To,c
  2596  000844  0E02               	movlw	2
  2597  000846  EC83  F008         	call	_Train_Path
  2598  00084A  0900               	iorlw	0
  2599  00084C  A4D8               	btfss	status,2,c
  2600  00084E  D18B               	goto	l4939
  2601                           
  2602                           ;State_Mchn.c: 576: {
  2603                           ;State_Mchn.c: 577: Switch_Program = 1;
  2604  000850  0E01               	movlw	1
  2605  000852  6E22               	movwf	_Switch_Program,c
  2606                           
  2607                           ;State_Mchn.c: 578: Eeprom_Store();
  2608  000854  EC40  F00B         	call	_Eeprom_Store	;wreg free
  2609  000858                     l4697:
  2610                           
  2611                           ;State_Mchn.c: 579: if(Stop_Program == 1)
  2612  000858  0419               	decf	_Stop_Program,w,c
  2613  00085A  A4D8               	btfss	status,2,c
  2614  00085C  D184               	goto	l4939
  2615                           
  2616                           ;State_Mchn.c: 580: {
  2617                           ;State_Mchn.c: 581: Switch_Main = 0;
  2618  00085E  0E00               	movlw	0
  2619  000860  6E20               	movwf	_Switch_Main,c
  2620                           
  2621                           ;State_Mchn.c: 583: }
  2622                           ;State_Mchn.c: 584: }
  2623                           ;State_Mchn.c: 585: break;
  2624  000862  D181               	goto	l4939
  2625  000864                     l4701:
  2626  000864  0E02               	movlw	2
  2627  000866  6E45               	movwf	Train_Path@To,c
  2628  000868  0E01               	movlw	1
  2629  00086A  EC83  F008         	call	_Train_Path
  2630  00086E  0900               	iorlw	0
  2631  000870  A4D8               	btfss	status,2,c
  2632  000872  D179               	goto	l4939
  2633                           
  2634                           ;State_Mchn.c: 588: {
  2635                           ;State_Mchn.c: 589: Switch_Program = 2;
  2636  000874  0E02               	movlw	2
  2637  000876  6E22               	movwf	_Switch_Program,c
  2638                           
  2639                           ;State_Mchn.c: 590: Eeprom_Store();
  2640  000878  EC40  F00B         	call	_Eeprom_Store	;wreg free
  2641  00087C  D7ED               	goto	l4697
  2642  00087E                     l4711:
  2643  00087E  0E03               	movlw	3
  2644  000880  6E45               	movwf	Train_Path@To,c
  2645  000882  0E00               	movlw	0
  2646  000884  EC83  F008         	call	_Train_Path
  2647  000888  0900               	iorlw	0
  2648  00088A  A4D8               	btfss	status,2,c
  2649  00088C  D16C               	goto	l4939
  2650                           
  2651                           ;State_Mchn.c: 600: {
  2652                           ;State_Mchn.c: 601: Switch_Program = 3;
  2653  00088E  0E03               	movlw	3
  2654  000890  6E22               	movwf	_Switch_Program,c
  2655                           
  2656                           ;State_Mchn.c: 602: Eeprom_Store();
  2657  000892  EC40  F00B         	call	_Eeprom_Store	;wreg free
  2658  000896  D7E0               	goto	l4697
  2659  000898                     l4721:
  2660  000898  0E00               	movlw	0
  2661  00089A  6E45               	movwf	Train_Path@To,c
  2662  00089C  0E02               	movlw	2
  2663  00089E  EC83  F008         	call	_Train_Path
  2664  0008A2  0900               	iorlw	0
  2665  0008A4  A4D8               	btfss	status,2,c
  2666  0008A6  D15F               	goto	l4939
  2667                           
  2668                           ;State_Mchn.c: 612: {
  2669                           ;State_Mchn.c: 613: Switch_Program = 4;
  2670  0008A8  0E04               	movlw	4
  2671  0008AA  6E22               	movwf	_Switch_Program,c
  2672                           
  2673                           ;State_Mchn.c: 614: Eeprom_Store();
  2674  0008AC  EC40  F00B         	call	_Eeprom_Store	;wreg free
  2675  0008B0  D7D3               	goto	l4697
  2676  0008B2                     l4731:
  2677  0008B2  0E01               	movlw	1
  2678  0008B4  6E45               	movwf	Train_Path@To,c
  2679  0008B6  0E03               	movlw	3
  2680  0008B8  EC83  F008         	call	_Train_Path
  2681  0008BC  0900               	iorlw	0
  2682  0008BE  A4D8               	btfss	status,2,c
  2683  0008C0  D152               	goto	l4939
  2684                           
  2685                           ;State_Mchn.c: 624: {
  2686                           ;State_Mchn.c: 625: Switch_Program = 5;
  2687  0008C2  0E05               	movlw	5
  2688  0008C4  6E22               	movwf	_Switch_Program,c
  2689                           
  2690                           ;State_Mchn.c: 626: Eeprom_Store();
  2691  0008C6  EC40  F00B         	call	_Eeprom_Store	;wreg free
  2692  0008CA  D7C6               	goto	l4697
  2693  0008CC                     l4741:
  2694  0008CC  0E03               	movlw	3
  2695  0008CE  6E45               	movwf	Train_Path@To,c
  2696  0008D0  0E00               	movlw	0
  2697  0008D2  EC83  F008         	call	_Train_Path
  2698  0008D6  0900               	iorlw	0
  2699  0008D8  A4D8               	btfss	status,2,c
  2700  0008DA  D145               	goto	l4939
  2701                           
  2702                           ;State_Mchn.c: 636: {
  2703                           ;State_Mchn.c: 637: Switch_Program = 6;
  2704  0008DC  0E06               	movlw	6
  2705  0008DE  6E22               	movwf	_Switch_Program,c
  2706                           
  2707                           ;State_Mchn.c: 638: Eeprom_Store();
  2708  0008E0  EC40  F00B         	call	_Eeprom_Store	;wreg free
  2709  0008E4  D7B9               	goto	l4697
  2710  0008E6                     l4751:
  2711  0008E6  0E02               	movlw	2
  2712  0008E8  6E45               	movwf	Train_Path@To,c
  2713  0008EA  0E01               	movlw	1
  2714  0008EC  EC83  F008         	call	_Train_Path
  2715  0008F0  0900               	iorlw	0
  2716  0008F2  A4D8               	btfss	status,2,c
  2717  0008F4  D138               	goto	l4939
  2718                           
  2719                           ;State_Mchn.c: 648: {
  2720                           ;State_Mchn.c: 649: Switch_Program = 7;
  2721  0008F6  0E07               	movlw	7
  2722  0008F8  6E22               	movwf	_Switch_Program,c
  2723                           
  2724                           ;State_Mchn.c: 650: Eeprom_Store();
  2725  0008FA  EC40  F00B         	call	_Eeprom_Store	;wreg free
  2726  0008FE  D7AC               	goto	l4697
  2727  000900                     l4761:
  2728  000900  0E01               	movlw	1
  2729  000902  6E45               	movwf	Train_Path@To,c
  2730  000904  0E03               	movlw	3
  2731  000906  EC83  F008         	call	_Train_Path
  2732  00090A  0900               	iorlw	0
  2733  00090C  A4D8               	btfss	status,2,c
  2734  00090E  D12B               	goto	l4939
  2735                           
  2736                           ;State_Mchn.c: 660: {
  2737                           ;State_Mchn.c: 661: Switch_Program = 0;
  2738  000910  0E00               	movlw	0
  2739  000912  6E22               	movwf	_Switch_Program,c
  2740                           
  2741                           ;State_Mchn.c: 662: Eeprom_Store();
  2742  000914  EC40  F00B         	call	_Eeprom_Store	;wreg free
  2743  000918  D79F               	goto	l4697
  2744  00091A                     l4773:
  2745  00091A  5022               	movf	_Switch_Program,w,c
  2746                           
  2747                           ; Switch size 1, requested type "space"
  2748                           ; Number of cases is 8, Range of values is 0 to 7
  2749                           ; switch strategies available:
  2750                           ; Name         Instructions Cycles
  2751                           ; simple_byte           25    13 (average)
  2752                           ;	Chosen strategy is simple_byte
  2753  00091C  0A00               	xorlw	0	; case 0
  2754  00091E  B4D8               	btfsc	status,2,c
  2755  000920  D78F               	goto	l4691
  2756  000922  0A01               	xorlw	1	; case 1
  2757  000924  B4D8               	btfsc	status,2,c
  2758  000926  D79E               	goto	l4701
  2759  000928  0A03               	xorlw	3	; case 2
  2760  00092A  B4D8               	btfsc	status,2,c
  2761  00092C  D7A8               	goto	l4711
  2762  00092E  0A01               	xorlw	1	; case 3
  2763  000930  B4D8               	btfsc	status,2,c
  2764  000932  D7B2               	goto	l4721
  2765  000934  0A07               	xorlw	7	; case 4
  2766  000936  B4D8               	btfsc	status,2,c
  2767  000938  D7BC               	goto	l4731
  2768  00093A  0A01               	xorlw	1	; case 5
  2769  00093C  B4D8               	btfsc	status,2,c
  2770  00093E  D7C6               	goto	l4741
  2771  000940  0A03               	xorlw	3	; case 6
  2772  000942  B4D8               	btfsc	status,2,c
  2773  000944  D7D0               	goto	l4751
  2774  000946  0A01               	xorlw	1	; case 7
  2775  000948  B4D8               	btfsc	status,2,c
  2776  00094A  D7DA               	goto	l4761
  2777                           
  2778                           ;State_Mchn.c: 676: switch(Switch_Activate_Controls)
  2779  00094C  D10C               	goto	l4939
  2780  00094E                     l4775:
  2781  00094E  500C               	movf	_Button_LF,w,c
  2782  000950  B4D8               	btfsc	status,2,c
  2783  000952  D009               	goto	l4783
  2784  000954  500F               	movf	_Button_RF,w,c
  2785  000956  B4D8               	btfsc	status,2,c
  2786  000958  D006               	goto	l4783
  2787                           
  2788                           ;State_Mchn.c: 679: {
  2789                           ;State_Mchn.c: 680: Switch_Activate_Controls = 1;
  2790  00095A  0E01               	movlw	1
  2791  00095C  6E1A               	movwf	_Switch_Activate_Controls,c
  2792                           
  2793                           ;State_Mchn.c: 681: Red_Led(3);
  2794  00095E  0E03               	movlw	3
  2795  000960  EC62  F00C         	call	_Red_Led
  2796                           
  2797                           ;State_Mchn.c: 682: }
  2798  000964  D10B               	goto	l4941
  2799  000966                     l4783:
  2800                           
  2801                           ;State_Mchn.c: 683: else
  2802                           ;State_Mchn.c: 684: {
  2803                           ;State_Mchn.c: 685: Switch_Activate_Controls = 0;
  2804  000966  0E00               	movlw	0
  2805  000968  6E1A               	movwf	_Switch_Activate_Controls,c
  2806                           
  2807                           ;State_Mchn.c: 686: Red_Led(0);
  2808  00096A  0E00               	movlw	0
  2809  00096C  EC62  F00C         	call	_Red_Led
  2810                           
  2811                           ;State_Mchn.c: 687: }
  2812                           ;State_Mchn.c: 688: break;
  2813  000970  D105               	goto	l4941
  2814  000972                     l4787:
  2815  000972  500C               	movf	_Button_LF,w,c
  2816  000974  A4D8               	btfss	status,2,c
  2817  000976  D009               	goto	l4795
  2818  000978  500F               	movf	_Button_RF,w,c
  2819  00097A  A4D8               	btfss	status,2,c
  2820  00097C  D006               	goto	l4795
  2821                           
  2822                           ;State_Mchn.c: 691: {
  2823                           ;State_Mchn.c: 692: Switch_Activate_Controls = 2;
  2824  00097E  0E02               	movlw	2
  2825  000980  6E1A               	movwf	_Switch_Activate_Controls,c
  2826                           
  2827                           ;State_Mchn.c: 693: Red_Led(3);
  2828  000982  0E03               	movlw	3
  2829  000984  EC62  F00C         	call	_Red_Led
  2830                           
  2831                           ;State_Mchn.c: 694: }
  2832  000988  D005               	goto	l4799
  2833  00098A                     l4795:
  2834                           
  2835                           ;State_Mchn.c: 695: else
  2836                           ;State_Mchn.c: 696: {
  2837                           ;State_Mchn.c: 697: Switch_Activate_Controls = 1;
  2838  00098A  0E01               	movlw	1
  2839  00098C  6E1A               	movwf	_Switch_Activate_Controls,c
  2840                           
  2841                           ;State_Mchn.c: 698: Red_Led(3);
  2842  00098E  0E03               	movlw	3
  2843  000990  EC62  F00C         	call	_Red_Led
  2844  000994                     l4799:
  2845                           
  2846                           ;State_Mchn.c: 699: }
  2847                           ;State_Mchn.c: 700: Activate_Controls_Counter = 10000;
  2848  000994  0E27               	movlw	39
  2849  000996  0100               	movlb	0	; () banked
  2850  000998  6FE9               	movwf	(_Activate_Controls_Counter+1)& (0+255),b
  2851  00099A  0E10               	movlw	16
  2852  00099C  6FE8               	movwf	_Activate_Controls_Counter& (0+255),b
  2853                           
  2854                           ;State_Mchn.c: 701: break;
  2855  00099E  D0EE               	goto	l4941
  2856  0009A0                     l4801:
  2857  0009A0  500C               	movf	_Button_LF,w,c
  2858  0009A2  A4D8               	btfss	status,2,c
  2859  0009A4  D00E               	goto	l4811
  2860  0009A6  500F               	movf	_Button_RF,w,c
  2861  0009A8  A4D8               	btfss	status,2,c
  2862  0009AA  D00B               	goto	l4811
  2863  0009AC  500E               	movf	_Button_RB,w,c
  2864  0009AE  A4D8               	btfss	status,2,c
  2865  0009B0  D008               	goto	l4811
  2866  0009B2  500B               	movf	_Button_LB,w,c
  2867  0009B4  A4D8               	btfss	status,2,c
  2868  0009B6  D005               	goto	l4811
  2869                           
  2870                           ;State_Mchn.c: 704: {
  2871                           ;State_Mchn.c: 705: Activate_Controls_Counter--;
  2872  0009B8  0100               	movlb	0	; () banked
  2873  0009BA  07E8               	decf	_Activate_Controls_Counter& (0+255),f,b
  2874  0009BC  A0D8               	btfss	status,0,c
  2875  0009BE  07E9               	decf	(_Activate_Controls_Counter+1)& (0+255),f,b
  2876                           
  2877                           ;State_Mchn.c: 706: }
  2878  0009C0  D005               	goto	l4813
  2879  0009C2                     l4811:
  2880                           
  2881                           ;State_Mchn.c: 707: else
  2882                           ;State_Mchn.c: 708: {
  2883                           ;State_Mchn.c: 709: Activate_Controls_Counter = 10000;
  2884  0009C2  0E27               	movlw	39
  2885  0009C4  0100               	movlb	0	; () banked
  2886  0009C6  6FE9               	movwf	(_Activate_Controls_Counter+1)& (0+255),b
  2887  0009C8  0E10               	movlw	16
  2888  0009CA  6FE8               	movwf	_Activate_Controls_Counter& (0+255),b
  2889  0009CC                     l4813:
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;State_Mchn.c: 710: }
  2893                           ;State_Mchn.c: 712: Red_Led(3);
  2894  0009CC  0E03               	movlw	3
  2895  0009CE  EC62  F00C         	call	_Red_Led
  2896                           
  2897                           ;State_Mchn.c: 714: switch(Button_LB)
  2898  0009D2  D02D               	goto	l4843
  2899  0009D4                     l4815:
  2900  0009D4  0E00               	movlw	0
  2901  0009D6  D01E               	goto	L8
  2902  0009D8                     l4817:
  2903  0009D8  0E26               	movlw	38
  2904  0009DA  5C49               	subwf	_MaxPwmRight,w,c
  2905  0009DC  0E02               	movlw	2
  2906  0009DE  584A               	subwfb	_MaxPwmRight+1,w,c
  2907  0009E0  A0D8               	btfss	status,0,c
  2908  0009E2  D003               	goto	l4821
  2909                           
  2910                           ;State_Mchn.c: 722: {
  2911                           ;State_Mchn.c: 723: MaxPwmRight--;
  2912  0009E4  0649               	decf	_MaxPwmRight,f,c
  2913  0009E6  A0D8               	btfss	status,0,c
  2914  0009E8  064A               	decf	_MaxPwmRight+1,f,c
  2915  0009EA                     l4821:
  2916                           
  2917                           ;State_Mchn.c: 724: }
  2918                           ;State_Mchn.c: 725: if(MaxPwmLeft <= 460)
  2919  0009EA  0ECD               	movlw	205
  2920  0009EC  5C47               	subwf	_MaxPwmLeft,w,c
  2921  0009EE  0E01               	movlw	1
  2922  0009F0  5848               	subwfb	_MaxPwmLeft+1,w,c
  2923  0009F2  B0D8               	btfsc	status,0,c
  2924  0009F4  D002               	goto	l4825
  2925                           
  2926                           ;State_Mchn.c: 726: {
  2927                           ;State_Mchn.c: 727: MaxPwmLeft++;
  2928  0009F6  4A47               	infsnz	_MaxPwmLeft,f,c
  2929  0009F8  2A48               	incf	_MaxPwmLeft+1,f,c
  2930  0009FA                     l4825:
  2931                           
  2932                           ;State_Mchn.c: 728: }
  2933                           ;State_Mchn.c: 729: Switch_Adjust_LB = 1;
  2934  0009FA  0E01               	movlw	1
  2935  0009FC  D00B               	goto	L8
  2936  0009FE                     l4827:
  2937  0009FE  5002               	movf	_Adjust_Counter+1,w,c
  2938  000A00  E104               	bnz	u3970
  2939  000A02  0E14               	movlw	20
  2940  000A04  5C01               	subwf	_Adjust_Counter,w,c
  2941  000A06  A0D8               	btfss	status,0,c
  2942  000A08  D007               	goto	l4833
  2943  000A0A                     u3970:
  2944                           
  2945                           ;State_Mchn.c: 733: {
  2946                           ;State_Mchn.c: 734: Adjust_Counter = 0;
  2947  000A0A  0E00               	movlw	0
  2948  000A0C  6E02               	movwf	_Adjust_Counter+1,c
  2949  000A0E  0E00               	movlw	0
  2950  000A10  6E01               	movwf	_Adjust_Counter,c
  2951  000A12  D7E0               	goto	l4815
  2952  000A14                     L8:
  2953  000A14  6E1B               	movwf	_Switch_Adjust_LB,c
  2954                           
  2955                           ;State_Mchn.c: 737: }
  2956                           
  2957                           ;State_Mchn.c: 736: break;
  2958  000A16  D03D               	goto	l4873
  2959  000A18                     l4833:
  2960                           
  2961                           ;State_Mchn.c: 738: else {Adjust_Counter++;}
  2962  000A18  4A01               	infsnz	_Adjust_Counter,f,c
  2963  000A1A  2A02               	incf	_Adjust_Counter+1,f,c
  2964                           
  2965                           ;State_Mchn.c: 739: break;
  2966  000A1C  D03A               	goto	l4873
  2967  000A1E                     l4839:
  2968  000A1E  501B               	movf	_Switch_Adjust_LB,w,c
  2969                           
  2970                           ; Switch size 1, requested type "space"
  2971                           ; Number of cases is 2, Range of values is 0 to 1
  2972                           ; switch strategies available:
  2973                           ; Name         Instructions Cycles
  2974                           ; simple_byte            7     4 (average)
  2975                           ;	Chosen strategy is simple_byte
  2976  000A20  0A00               	xorlw	0	; case 0
  2977  000A22  B4D8               	btfsc	status,2,c
  2978  000A24  D7D9               	goto	l4817
  2979  000A26  0A01               	xorlw	1	; case 1
  2980  000A28  B4D8               	btfsc	status,2,c
  2981  000A2A  D7E9               	goto	l4827
  2982  000A2C  D7D3               	goto	l4815
  2983  000A2E                     l4843:
  2984  000A2E  500B               	movf	_Button_LB,w,c
  2985                           
  2986                           ; Switch size 1, requested type "space"
  2987                           ; Number of cases is 2, Range of values is 0 to 1
  2988                           ; switch strategies available:
  2989                           ; Name         Instructions Cycles
  2990                           ; simple_byte            7     4 (average)
  2991                           ;	Chosen strategy is simple_byte
  2992  000A30  0A00               	xorlw	0	; case 0
  2993  000A32  B4D8               	btfsc	status,2,c
  2994  000A34  D7CF               	goto	l4815
  2995  000A36  0A01               	xorlw	1	; case 1
  2996  000A38  B4D8               	btfsc	status,2,c
  2997  000A3A  D7F1               	goto	l4839
  2998                           
  2999                           ;State_Mchn.c: 750: switch(Button_LF)
  3000  000A3C  D02A               	goto	l4873
  3001  000A3E                     l4845:
  3002  000A3E  0E00               	movlw	0
  3003  000A40  D01B               	goto	L10
  3004  000A42                     l4847:
  3005  000A42  2849               	incf	_MaxPwmRight,w,c
  3006  000A44  0E03               	movlw	3
  3007  000A46  584A               	subwfb	_MaxPwmRight+1,w,c
  3008  000A48  B0D8               	btfsc	status,0,c
  3009  000A4A  D002               	goto	l4851
  3010                           
  3011                           ;State_Mchn.c: 758: {
  3012                           ;State_Mchn.c: 759: MaxPwmRight++;
  3013  000A4C  4A49               	infsnz	_MaxPwmRight,f,c
  3014  000A4E  2A4A               	incf	_MaxPwmRight+1,f,c
  3015  000A50                     l4851:
  3016                           
  3017                           ;State_Mchn.c: 760: }
  3018                           ;State_Mchn.c: 761: if(MaxPwmLeft >= 1)
  3019  000A50  5047               	movf	_MaxPwmLeft,w,c
  3020  000A52  1048               	iorwf	_MaxPwmLeft+1,w,c
  3021  000A54  B4D8               	btfsc	status,2,c
  3022  000A56  D003               	goto	l4855
  3023                           
  3024                           ;State_Mchn.c: 762: {
  3025                           ;State_Mchn.c: 763: MaxPwmLeft--;
  3026  000A58  0647               	decf	_MaxPwmLeft,f,c
  3027  000A5A  A0D8               	btfss	status,0,c
  3028  000A5C  0648               	decf	_MaxPwmLeft+1,f,c
  3029  000A5E                     l4855:
  3030                           
  3031                           ;State_Mchn.c: 764: }
  3032                           ;State_Mchn.c: 765: Switch_Adjust_LF = 1;
  3033  000A5E  0E01               	movlw	1
  3034  000A60  D00B               	goto	L10
  3035  000A62                     l4857:
  3036  000A62  5002               	movf	_Adjust_Counter+1,w,c
  3037  000A64  E104               	bnz	u4000
  3038  000A66  0E14               	movlw	20
  3039  000A68  5C01               	subwf	_Adjust_Counter,w,c
  3040  000A6A  A0D8               	btfss	status,0,c
  3041  000A6C  D007               	goto	l4863
  3042  000A6E                     u4000:
  3043                           
  3044                           ;State_Mchn.c: 769: {
  3045                           ;State_Mchn.c: 770: Adjust_Counter = 0;
  3046  000A6E  0E00               	movlw	0
  3047  000A70  6E02               	movwf	_Adjust_Counter+1,c
  3048  000A72  0E00               	movlw	0
  3049  000A74  6E01               	movwf	_Adjust_Counter,c
  3050  000A76  D7E3               	goto	l4845
  3051  000A78                     L10:
  3052  000A78  6E1C               	movwf	_Switch_Adjust_LF,c
  3053                           
  3054                           ;State_Mchn.c: 773: }
  3055                           
  3056                           ;State_Mchn.c: 772: break;
  3057  000A7A  D033               	goto	l4899
  3058  000A7C                     l4863:
  3059                           
  3060                           ;State_Mchn.c: 774: else {Adjust_Counter++;}
  3061  000A7C  4A01               	infsnz	_Adjust_Counter,f,c
  3062  000A7E  2A02               	incf	_Adjust_Counter+1,f,c
  3063                           
  3064                           ;State_Mchn.c: 775: break;
  3065  000A80  D030               	goto	l4899
  3066  000A82                     l4869:
  3067  000A82  501C               	movf	_Switch_Adjust_LF,w,c
  3068                           
  3069                           ; Switch size 1, requested type "space"
  3070                           ; Number of cases is 2, Range of values is 0 to 1
  3071                           ; switch strategies available:
  3072                           ; Name         Instructions Cycles
  3073                           ; simple_byte            7     4 (average)
  3074                           ;	Chosen strategy is simple_byte
  3075  000A84  0A00               	xorlw	0	; case 0
  3076  000A86  B4D8               	btfsc	status,2,c
  3077  000A88  D7DC               	goto	l4847
  3078  000A8A  0A01               	xorlw	1	; case 1
  3079  000A8C  B4D8               	btfsc	status,2,c
  3080  000A8E  D7E9               	goto	l4857
  3081  000A90  D7D6               	goto	l4845
  3082  000A92                     l4873:
  3083  000A92  500C               	movf	_Button_LF,w,c
  3084                           
  3085                           ; Switch size 1, requested type "space"
  3086                           ; Number of cases is 2, Range of values is 0 to 1
  3087                           ; switch strategies available:
  3088                           ; Name         Instructions Cycles
  3089                           ; simple_byte            7     4 (average)
  3090                           ;	Chosen strategy is simple_byte
  3091  000A94  0A00               	xorlw	0	; case 0
  3092  000A96  B4D8               	btfsc	status,2,c
  3093  000A98  D7D2               	goto	l4845
  3094  000A9A  0A01               	xorlw	1	; case 1
  3095  000A9C  B4D8               	btfsc	status,2,c
  3096  000A9E  D7F1               	goto	l4869
  3097                           
  3098                           ;State_Mchn.c: 785: switch(Button_RB)
  3099  000AA0  D020               	goto	l4899
  3100  000AA2                     l4875:
  3101  000AA2  0E00               	movlw	0
  3102  000AA4  D011               	goto	L12
  3103  000AA6                     l4877:
  3104  000AA6  0EFB               	movlw	251
  3105  000AA8  604D               	cpfslt	_MaxJerkPwm_Brake,c
  3106  000AAA  D001               	goto	l4881
  3107                           
  3108                           ;State_Mchn.c: 793: {
  3109                           ;State_Mchn.c: 794: MaxJerkPwm_Brake++;
  3110  000AAC  2A4D               	incf	_MaxJerkPwm_Brake,f,c
  3111  000AAE                     l4881:
  3112                           
  3113                           ;State_Mchn.c: 795: }
  3114                           ;State_Mchn.c: 796: Switch_Adjust_RB = 1;
  3115  000AAE  0E01               	movlw	1
  3116  000AB0  D00B               	goto	L12
  3117  000AB2                     l4883:
  3118  000AB2  5002               	movf	_Adjust_Counter+1,w,c
  3119  000AB4  E104               	bnz	u4020
  3120  000AB6  0E14               	movlw	20
  3121  000AB8  5C01               	subwf	_Adjust_Counter,w,c
  3122  000ABA  A0D8               	btfss	status,0,c
  3123  000ABC  D007               	goto	l4889
  3124  000ABE                     u4020:
  3125                           
  3126                           ;State_Mchn.c: 800: {
  3127                           ;State_Mchn.c: 801: Adjust_Counter = 0;
  3128  000ABE  0E00               	movlw	0
  3129  000AC0  6E02               	movwf	_Adjust_Counter+1,c
  3130  000AC2  0E00               	movlw	0
  3131  000AC4  6E01               	movwf	_Adjust_Counter,c
  3132  000AC6  D7ED               	goto	l4875
  3133  000AC8                     L12:
  3134  000AC8  6E1D               	movwf	_Switch_Adjust_RB,c
  3135                           
  3136                           ;State_Mchn.c: 804: }
  3137                           
  3138                           ;State_Mchn.c: 803: break;
  3139  000ACA  D032               	goto	l4925
  3140  000ACC                     l4889:
  3141                           
  3142                           ;State_Mchn.c: 805: else {Adjust_Counter++;}
  3143  000ACC  4A01               	infsnz	_Adjust_Counter,f,c
  3144  000ACE  2A02               	incf	_Adjust_Counter+1,f,c
  3145                           
  3146                           ;State_Mchn.c: 806: break;
  3147  000AD0  D02F               	goto	l4925
  3148  000AD2                     l4895:
  3149  000AD2  501D               	movf	_Switch_Adjust_RB,w,c
  3150                           
  3151                           ; Switch size 1, requested type "space"
  3152                           ; Number of cases is 2, Range of values is 0 to 1
  3153                           ; switch strategies available:
  3154                           ; Name         Instructions Cycles
  3155                           ; simple_byte            7     4 (average)
  3156                           ;	Chosen strategy is simple_byte
  3157  000AD4  0A00               	xorlw	0	; case 0
  3158  000AD6  B4D8               	btfsc	status,2,c
  3159  000AD8  D7E6               	goto	l4877
  3160  000ADA  0A01               	xorlw	1	; case 1
  3161  000ADC  B4D8               	btfsc	status,2,c
  3162  000ADE  D7E9               	goto	l4883
  3163  000AE0  D7E0               	goto	l4875
  3164  000AE2                     l4899:
  3165  000AE2  500E               	movf	_Button_RB,w,c
  3166                           
  3167                           ; Switch size 1, requested type "space"
  3168                           ; Number of cases is 2, Range of values is 0 to 1
  3169                           ; switch strategies available:
  3170                           ; Name         Instructions Cycles
  3171                           ; simple_byte            7     4 (average)
  3172                           ;	Chosen strategy is simple_byte
  3173  000AE4  0A00               	xorlw	0	; case 0
  3174  000AE6  B4D8               	btfsc	status,2,c
  3175  000AE8  D7DC               	goto	l4875
  3176  000AEA  0A01               	xorlw	1	; case 1
  3177  000AEC  B4D8               	btfsc	status,2,c
  3178  000AEE  D7F1               	goto	l4895
  3179                           
  3180                           ;State_Mchn.c: 817: switch(Button_RF)
  3181  000AF0  D01F               	goto	l4925
  3182  000AF2                     l4901:
  3183  000AF2  0E00               	movlw	0
  3184  000AF4  D010               	goto	L14
  3185  000AF6                     l4903:
  3186  000AF6  504D               	movf	_MaxJerkPwm_Brake,w,c
  3187  000AF8  A4D8               	btfss	status,2,c
  3188                           
  3189                           ;State_Mchn.c: 825: {
  3190                           ;State_Mchn.c: 826: MaxJerkPwm_Brake--;
  3191  000AFA  064D               	decf	_MaxJerkPwm_Brake,f,c
  3192                           
  3193                           ;State_Mchn.c: 827: }
  3194                           ;State_Mchn.c: 828: Switch_Adjust_RF = 1;
  3195  000AFC  0E01               	movlw	1
  3196  000AFE  D00B               	goto	L14
  3197  000B00                     l4909:
  3198  000B00  5002               	movf	_Adjust_Counter+1,w,c
  3199  000B02  E104               	bnz	u4040
  3200  000B04  0E14               	movlw	20
  3201  000B06  5C01               	subwf	_Adjust_Counter,w,c
  3202  000B08  A0D8               	btfss	status,0,c
  3203  000B0A  D007               	goto	l4915
  3204  000B0C                     u4040:
  3205                           
  3206                           ;State_Mchn.c: 832: {
  3207                           ;State_Mchn.c: 833: Adjust_Counter = 0;
  3208  000B0C  0E00               	movlw	0
  3209  000B0E  6E02               	movwf	_Adjust_Counter+1,c
  3210  000B10  0E00               	movlw	0
  3211  000B12  6E01               	movwf	_Adjust_Counter,c
  3212  000B14  D7EE               	goto	l4901
  3213  000B16                     L14:
  3214  000B16  6E1E               	movwf	_Switch_Adjust_RF,c
  3215                           
  3216                           ;State_Mchn.c: 836: }
  3217                           
  3218                           ;State_Mchn.c: 835: break;
  3219  000B18  D012               	goto	l4927
  3220  000B1A                     l4915:
  3221                           
  3222                           ;State_Mchn.c: 837: else {Adjust_Counter++;}
  3223  000B1A  4A01               	infsnz	_Adjust_Counter,f,c
  3224  000B1C  2A02               	incf	_Adjust_Counter+1,f,c
  3225                           
  3226                           ;State_Mchn.c: 838: break;
  3227  000B1E  D00F               	goto	l4927
  3228  000B20                     l4921:
  3229  000B20  501E               	movf	_Switch_Adjust_RF,w,c
  3230                           
  3231                           ; Switch size 1, requested type "space"
  3232                           ; Number of cases is 2, Range of values is 0 to 1
  3233                           ; switch strategies available:
  3234                           ; Name         Instructions Cycles
  3235                           ; simple_byte            7     4 (average)
  3236                           ;	Chosen strategy is simple_byte
  3237  000B22  0A00               	xorlw	0	; case 0
  3238  000B24  B4D8               	btfsc	status,2,c
  3239  000B26  D7E7               	goto	l4903
  3240  000B28  0A01               	xorlw	1	; case 1
  3241  000B2A  B4D8               	btfsc	status,2,c
  3242  000B2C  D7E9               	goto	l4909
  3243  000B2E  D7E1               	goto	l4901
  3244  000B30                     l4925:
  3245  000B30  500F               	movf	_Button_RF,w,c
  3246                           
  3247                           ; Switch size 1, requested type "space"
  3248                           ; Number of cases is 2, Range of values is 0 to 1
  3249                           ; switch strategies available:
  3250                           ; Name         Instructions Cycles
  3251                           ; simple_byte            7     4 (average)
  3252                           ;	Chosen strategy is simple_byte
  3253  000B32  0A00               	xorlw	0	; case 0
  3254  000B34  B4D8               	btfsc	status,2,c
  3255  000B36  D7DD               	goto	l4901
  3256  000B38  0A01               	xorlw	1	; case 1
  3257  000B3A  B4D8               	btfsc	status,2,c
  3258  000B3C  D7F1               	goto	l4921
  3259  000B3E                     l4927:
  3260                           
  3261                           ;State_Mchn.c: 847: if(Activate_Controls_Counter <= 1)
  3262  000B3E  0100               	movlb	0	; () banked
  3263  000B40  51E9               	movf	(_Activate_Controls_Counter+1)& (0+255),w,b
  3264  000B42  E11C               	bnz	l4941
  3265  000B44  0E02               	movlw	2
  3266  000B46  0100               	movlb	0	; () banked
  3267  000B48  5DE8               	subwf	_Activate_Controls_Counter& (0+255),w,b
  3268  000B4A  B0D8               	btfsc	status,0,c
  3269  000B4C  D017               	goto	l4941
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;State_Mchn.c: 848: {
  3273                           ;State_Mchn.c: 849: Switch_Activate_Controls = 0;
  3274  000B4E  0E00               	movlw	0
  3275  000B50  6E1A               	movwf	_Switch_Activate_Controls,c
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;State_Mchn.c: 850: Red_Led(0);
  3279  000B52  0E00               	movlw	0
  3280  000B54  EC62  F00C         	call	_Red_Led
  3281                           
  3282                           ;State_Mchn.c: 851: }
  3283                           ;State_Mchn.c: 852: break;
  3284  000B58  D011               	goto	l4941
  3285  000B5A                     l4933:
  3286  000B5A  0E00               	movlw	0
  3287  000B5C  6E1A               	movwf	_Switch_Activate_Controls,c
  3288                           
  3289                           ;State_Mchn.c: 855: Red_Led(0);
  3290  000B5E  0E00               	movlw	0
  3291  000B60  EC62  F00C         	call	_Red_Led
  3292                           
  3293                           ;State_Mchn.c: 857: }
  3294                           
  3295                           ;State_Mchn.c: 856: break;
  3296  000B64  D00B               	goto	l4941
  3297  000B66                     l4939:
  3298  000B66  501A               	movf	_Switch_Activate_Controls,w,c
  3299                           
  3300                           ; Switch size 1, requested type "space"
  3301                           ; Number of cases is 3, Range of values is 0 to 2
  3302                           ; switch strategies available:
  3303                           ; Name         Instructions Cycles
  3304                           ; simple_byte           10     6 (average)
  3305                           ;	Chosen strategy is simple_byte
  3306  000B68  0A00               	xorlw	0	; case 0
  3307  000B6A  B4D8               	btfsc	status,2,c
  3308  000B6C  D6F0               	goto	l4775
  3309  000B6E  0A01               	xorlw	1	; case 1
  3310  000B70  B4D8               	btfsc	status,2,c
  3311  000B72  D6FF               	goto	l4787
  3312  000B74  0A03               	xorlw	3	; case 2
  3313  000B76  B4D8               	btfsc	status,2,c
  3314  000B78  D713               	goto	l4801
  3315  000B7A  D7EF               	goto	l4933
  3316  000B7C                     l4941:
  3317                           
  3318                           ;State_Mchn.c: 859: if(Button_Stop)
  3319  000B7C  0100               	movlb	0	; () banked
  3320  000B7E  51F1               	movf	_Button_Stop& (0+255),w,b
  3321  000B80  B4D8               	btfsc	status,2,c
  3322  000B82  D002               	goto	l4945
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;State_Mchn.c: 860: {
  3326                           ;State_Mchn.c: 861: Stop_Program = 1;
  3327  000B84  0E01               	movlw	1
  3328  000B86  6E19               	movwf	_Stop_Program,c
  3329  000B88                     l4945:
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;State_Mchn.c: 862: }
  3333                           ;State_Mchn.c: 864: if(Stop_Program == 1)
  3334  000B88  0419               	decf	_Stop_Program,w,c
  3335  000B8A  A4D8               	btfss	status,2,c
  3336  000B8C  D003               	goto	l486
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;State_Mchn.c: 865: {
  3340                           ;State_Mchn.c: 866: Red_Led(2);
  3341  000B8E  0E02               	movlw	2
  3342  000B90  EC62  F00C         	call	_Red_Led
  3343  000B94                     l486:
  3344                           
  3345                           ;State_Mchn.c: 867: }
  3346                           ;State_Mchn.c: 869: Green_Led(1);
  3347  000B94  0E01               	movlw	1
  3348  000B96  ECA2  F00C         	call	_Green_Led
  3349                           
  3350                           ;State_Mchn.c: 871: break;
  3351  000B9A  0012               	return	
  3352  000B9C                     l4949:
  3353  000B9C  0E00               	movlw	0
  3354  000B9E  6E45               	movwf	Train_Path@To,c
  3355  000BA0  0E02               	movlw	2
  3356  000BA2  EC83  F008         	call	_Train_Path
  3357  000BA6  0900               	iorlw	0
  3358  000BA8  A4D8               	btfss	status,2,c
  3359  000BAA  D14B               	goto	l5157
  3360                           
  3361                           ;State_Mchn.c: 877: {
  3362                           ;State_Mchn.c: 878: Switch_Program = 1;
  3363  000BAC  0E01               	movlw	1
  3364  000BAE  6E22               	movwf	_Switch_Program,c
  3365                           
  3366                           ;State_Mchn.c: 879: Eeprom_Store();
  3367  000BB0  EC40  F00B         	call	_Eeprom_Store	;wreg free
  3368  000BB4                     l4955:
  3369                           
  3370                           ;State_Mchn.c: 880: if(Stop_Program == 1)
  3371  000BB4  0419               	decf	_Stop_Program,w,c
  3372  000BB6  A4D8               	btfss	status,2,c
  3373  000BB8  D144               	goto	l5157
  3374                           
  3375                           ;State_Mchn.c: 881: {
  3376                           ;State_Mchn.c: 882: Switch_Main = 0;
  3377  000BBA  0E00               	movlw	0
  3378  000BBC  6E20               	movwf	_Switch_Main,c
  3379                           
  3380                           ;State_Mchn.c: 884: }
  3381                           ;State_Mchn.c: 885: }
  3382                           ;State_Mchn.c: 886: break;
  3383  000BBE  D141               	goto	l5157
  3384  000BC0                     l4959:
  3385  000BC0  0E03               	movlw	3
  3386  000BC2  6E45               	movwf	Train_Path@To,c
  3387  000BC4  0E00               	movlw	0
  3388  000BC6  EC83  F008         	call	_Train_Path
  3389  000BCA  0900               	iorlw	0
  3390  000BCC  A4D8               	btfss	status,2,c
  3391  000BCE  D139               	goto	l5157
  3392                           
  3393                           ;State_Mchn.c: 889: {
  3394                           ;State_Mchn.c: 890: Switch_Program = 2;
  3395  000BD0  0E02               	movlw	2
  3396  000BD2  6E22               	movwf	_Switch_Program,c
  3397                           
  3398                           ;State_Mchn.c: 891: Eeprom_Store();
  3399  000BD4  EC40  F00B         	call	_Eeprom_Store	;wreg free
  3400  000BD8  D7ED               	goto	l4955
  3401  000BDA                     l4969:
  3402  000BDA  0E01               	movlw	1
  3403  000BDC  6E45               	movwf	Train_Path@To,c
  3404  000BDE  0E03               	movlw	3
  3405  000BE0  EC83  F008         	call	_Train_Path
  3406  000BE4  0900               	iorlw	0
  3407  000BE6  A4D8               	btfss	status,2,c
  3408  000BE8  D12C               	goto	l5157
  3409                           
  3410                           ;State_Mchn.c: 901: {
  3411                           ;State_Mchn.c: 902: Switch_Program = 3;
  3412  000BEA  0E03               	movlw	3
  3413  000BEC  6E22               	movwf	_Switch_Program,c
  3414                           
  3415                           ;State_Mchn.c: 903: Eeprom_Store();
  3416  000BEE  EC40  F00B         	call	_Eeprom_Store	;wreg free
  3417  000BF2  D7E0               	goto	l4955
  3418  000BF4                     l4979:
  3419  000BF4  0E02               	movlw	2
  3420  000BF6  6E45               	movwf	Train_Path@To,c
  3421  000BF8  0E01               	movlw	1
  3422  000BFA  EC83  F008         	call	_Train_Path
  3423  000BFE  0900               	iorlw	0
  3424  000C00  A4D8               	btfss	status,2,c
  3425  000C02  D11F               	goto	l5157
  3426                           
  3427                           ;State_Mchn.c: 913: {
  3428                           ;State_Mchn.c: 914: Switch_Program = 0;
  3429  000C04  0E00               	movlw	0
  3430  000C06  6E22               	movwf	_Switch_Program,c
  3431                           
  3432                           ;State_Mchn.c: 915: Eeprom_Store();
  3433  000C08  EC40  F00B         	call	_Eeprom_Store	;wreg free
  3434  000C0C  D7D3               	goto	l4955
  3435  000C0E                     l4991:
  3436  000C0E  5022               	movf	_Switch_Program,w,c
  3437                           
  3438                           ; Switch size 1, requested type "space"
  3439                           ; Number of cases is 4, Range of values is 0 to 3
  3440                           ; switch strategies available:
  3441                           ; Name         Instructions Cycles
  3442                           ; simple_byte           13     7 (average)
  3443                           ;	Chosen strategy is simple_byte
  3444  000C10  0A00               	xorlw	0	; case 0
  3445  000C12  B4D8               	btfsc	status,2,c
  3446  000C14  D7C3               	goto	l4949
  3447  000C16  0A01               	xorlw	1	; case 1
  3448  000C18  B4D8               	btfsc	status,2,c
  3449  000C1A  D7D2               	goto	l4959
  3450  000C1C  0A03               	xorlw	3	; case 2
  3451  000C1E  B4D8               	btfsc	status,2,c
  3452  000C20  D7DC               	goto	l4969
  3453  000C22  0A01               	xorlw	1	; case 3
  3454  000C24  B4D8               	btfsc	status,2,c
  3455  000C26  D7E6               	goto	l4979
  3456                           
  3457                           ;State_Mchn.c: 927: switch(Switch_Activate_Controls)
  3458  000C28  D10C               	goto	l5157
  3459  000C2A                     l4993:
  3460  000C2A  500C               	movf	_Button_LF,w,c
  3461  000C2C  B4D8               	btfsc	status,2,c
  3462  000C2E  D009               	goto	l5001
  3463  000C30  500F               	movf	_Button_RF,w,c
  3464  000C32  B4D8               	btfsc	status,2,c
  3465  000C34  D006               	goto	l5001
  3466                           
  3467                           ;State_Mchn.c: 930: {
  3468                           ;State_Mchn.c: 931: Switch_Activate_Controls = 1;
  3469  000C36  0E01               	movlw	1
  3470  000C38  6E1A               	movwf	_Switch_Activate_Controls,c
  3471                           
  3472                           ;State_Mchn.c: 932: Red_Led(3);
  3473  000C3A  0E03               	movlw	3
  3474  000C3C  EC62  F00C         	call	_Red_Led
  3475                           
  3476                           ;State_Mchn.c: 933: }
  3477  000C40  0012               	return	
  3478  000C42                     l5001:
  3479                           
  3480                           ;State_Mchn.c: 934: else
  3481                           ;State_Mchn.c: 935: {
  3482                           ;State_Mchn.c: 936: Switch_Activate_Controls = 0;
  3483  000C42  0E00               	movlw	0
  3484  000C44  6E1A               	movwf	_Switch_Activate_Controls,c
  3485                           
  3486                           ;State_Mchn.c: 937: Red_Led(0);
  3487  000C46  0E00               	movlw	0
  3488  000C48  EC62  F00C         	call	_Red_Led
  3489                           
  3490                           ;State_Mchn.c: 938: }
  3491                           ;State_Mchn.c: 939: break;
  3492  000C4C  0012               	return	
  3493  000C4E                     l5005:
  3494  000C4E  500C               	movf	_Button_LF,w,c
  3495  000C50  A4D8               	btfss	status,2,c
  3496  000C52  D009               	goto	l5013
  3497  000C54  500F               	movf	_Button_RF,w,c
  3498  000C56  A4D8               	btfss	status,2,c
  3499  000C58  D006               	goto	l5013
  3500                           
  3501                           ;State_Mchn.c: 942: {
  3502                           ;State_Mchn.c: 943: Switch_Activate_Controls = 2;
  3503  000C5A  0E02               	movlw	2
  3504  000C5C  6E1A               	movwf	_Switch_Activate_Controls,c
  3505                           
  3506                           ;State_Mchn.c: 944: Red_Led(3);
  3507  000C5E  0E03               	movlw	3
  3508  000C60  EC62  F00C         	call	_Red_Led
  3509                           
  3510                           ;State_Mchn.c: 945: }
  3511  000C64  D005               	goto	l5017
  3512  000C66                     l5013:
  3513                           
  3514                           ;State_Mchn.c: 946: else
  3515                           ;State_Mchn.c: 947: {
  3516                           ;State_Mchn.c: 948: Switch_Activate_Controls = 1;
  3517  000C66  0E01               	movlw	1
  3518  000C68  6E1A               	movwf	_Switch_Activate_Controls,c
  3519                           
  3520                           ;State_Mchn.c: 949: Red_Led(3);
  3521  000C6A  0E03               	movlw	3
  3522  000C6C  EC62  F00C         	call	_Red_Led
  3523  000C70                     l5017:
  3524                           
  3525                           ;State_Mchn.c: 950: }
  3526                           ;State_Mchn.c: 951: Activate_Controls_Counter = 10000;
  3527  000C70  0E27               	movlw	39
  3528  000C72  0100               	movlb	0	; () banked
  3529  000C74  6FE9               	movwf	(_Activate_Controls_Counter+1)& (0+255),b
  3530  000C76  0E10               	movlw	16
  3531  000C78  6FE8               	movwf	_Activate_Controls_Counter& (0+255),b
  3532                           
  3533                           ;State_Mchn.c: 952: break;
  3534  000C7A  0012               	return	
  3535  000C7C                     l5019:
  3536  000C7C  500C               	movf	_Button_LF,w,c
  3537  000C7E  A4D8               	btfss	status,2,c
  3538  000C80  D00E               	goto	l5029
  3539  000C82  500F               	movf	_Button_RF,w,c
  3540  000C84  A4D8               	btfss	status,2,c
  3541  000C86  D00B               	goto	l5029
  3542  000C88  500E               	movf	_Button_RB,w,c
  3543  000C8A  A4D8               	btfss	status,2,c
  3544  000C8C  D008               	goto	l5029
  3545  000C8E  500B               	movf	_Button_LB,w,c
  3546  000C90  A4D8               	btfss	status,2,c
  3547  000C92  D005               	goto	l5029
  3548                           
  3549                           ;State_Mchn.c: 955: {
  3550                           ;State_Mchn.c: 956: Activate_Controls_Counter--;
  3551  000C94  0100               	movlb	0	; () banked
  3552  000C96  07E8               	decf	_Activate_Controls_Counter& (0+255),f,b
  3553  000C98  A0D8               	btfss	status,0,c
  3554  000C9A  07E9               	decf	(_Activate_Controls_Counter+1)& (0+255),f,b
  3555                           
  3556                           ;State_Mchn.c: 957: }
  3557  000C9C  D005               	goto	l5031
  3558  000C9E                     l5029:
  3559                           
  3560                           ;State_Mchn.c: 958: else
  3561                           ;State_Mchn.c: 959: {
  3562                           ;State_Mchn.c: 960: Activate_Controls_Counter = 10000;
  3563  000C9E  0E27               	movlw	39
  3564  000CA0  0100               	movlb	0	; () banked
  3565  000CA2  6FE9               	movwf	(_Activate_Controls_Counter+1)& (0+255),b
  3566  000CA4  0E10               	movlw	16
  3567  000CA6  6FE8               	movwf	_Activate_Controls_Counter& (0+255),b
  3568  000CA8                     l5031:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;State_Mchn.c: 961: }
  3572                           ;State_Mchn.c: 963: Red_Led(3);
  3573  000CA8  0E03               	movlw	3
  3574  000CAA  EC62  F00C         	call	_Red_Led
  3575                           
  3576                           ;State_Mchn.c: 965: switch(Button_LB)
  3577  000CAE  D02D               	goto	l5061
  3578  000CB0                     l5033:
  3579  000CB0  0E00               	movlw	0
  3580  000CB2  D01E               	goto	L16
  3581  000CB4                     l5035:
  3582  000CB4  0E26               	movlw	38
  3583  000CB6  5C49               	subwf	_MaxPwmRight,w,c
  3584  000CB8  0E02               	movlw	2
  3585  000CBA  584A               	subwfb	_MaxPwmRight+1,w,c
  3586  000CBC  A0D8               	btfss	status,0,c
  3587  000CBE  D003               	goto	l5039
  3588                           
  3589                           ;State_Mchn.c: 973: {
  3590                           ;State_Mchn.c: 974: MaxPwmRight--;
  3591  000CC0  0649               	decf	_MaxPwmRight,f,c
  3592  000CC2  A0D8               	btfss	status,0,c
  3593  000CC4  064A               	decf	_MaxPwmRight+1,f,c
  3594  000CC6                     l5039:
  3595                           
  3596                           ;State_Mchn.c: 975: }
  3597                           ;State_Mchn.c: 976: if(MaxPwmLeft <= 460)
  3598  000CC6  0ECD               	movlw	205
  3599  000CC8  5C47               	subwf	_MaxPwmLeft,w,c
  3600  000CCA  0E01               	movlw	1
  3601  000CCC  5848               	subwfb	_MaxPwmLeft+1,w,c
  3602  000CCE  B0D8               	btfsc	status,0,c
  3603  000CD0  D002               	goto	l5043
  3604                           
  3605                           ;State_Mchn.c: 977: {
  3606                           ;State_Mchn.c: 978: MaxPwmLeft++;
  3607  000CD2  4A47               	infsnz	_MaxPwmLeft,f,c
  3608  000CD4  2A48               	incf	_MaxPwmLeft+1,f,c
  3609  000CD6                     l5043:
  3610                           
  3611                           ;State_Mchn.c: 979: }
  3612                           ;State_Mchn.c: 980: Switch_Adjust_LB = 1;
  3613  000CD6  0E01               	movlw	1
  3614  000CD8  D00B               	goto	L16
  3615  000CDA                     l5045:
  3616  000CDA  5002               	movf	_Adjust_Counter+1,w,c
  3617  000CDC  E104               	bnz	u4260
  3618  000CDE  0E14               	movlw	20
  3619  000CE0  5C01               	subwf	_Adjust_Counter,w,c
  3620  000CE2  A0D8               	btfss	status,0,c
  3621  000CE4  D007               	goto	l5051
  3622  000CE6                     u4260:
  3623                           
  3624                           ;State_Mchn.c: 984: {
  3625                           ;State_Mchn.c: 985: Adjust_Counter = 0;
  3626  000CE6  0E00               	movlw	0
  3627  000CE8  6E02               	movwf	_Adjust_Counter+1,c
  3628  000CEA  0E00               	movlw	0
  3629  000CEC  6E01               	movwf	_Adjust_Counter,c
  3630  000CEE  D7E0               	goto	l5033
  3631  000CF0                     L16:
  3632  000CF0  6E1B               	movwf	_Switch_Adjust_LB,c
  3633                           
  3634                           ;State_Mchn.c: 988: }
  3635                           
  3636                           ;State_Mchn.c: 987: break;
  3637  000CF2  D03D               	goto	l5091
  3638  000CF4                     l5051:
  3639                           
  3640                           ;State_Mchn.c: 989: else {Adjust_Counter++;}
  3641  000CF4  4A01               	infsnz	_Adjust_Counter,f,c
  3642  000CF6  2A02               	incf	_Adjust_Counter+1,f,c
  3643                           
  3644                           ;State_Mchn.c: 990: break;
  3645  000CF8  D03A               	goto	l5091
  3646  000CFA                     l5057:
  3647  000CFA  501B               	movf	_Switch_Adjust_LB,w,c
  3648                           
  3649                           ; Switch size 1, requested type "space"
  3650                           ; Number of cases is 2, Range of values is 0 to 1
  3651                           ; switch strategies available:
  3652                           ; Name         Instructions Cycles
  3653                           ; simple_byte            7     4 (average)
  3654                           ;	Chosen strategy is simple_byte
  3655  000CFC  0A00               	xorlw	0	; case 0
  3656  000CFE  B4D8               	btfsc	status,2,c
  3657  000D00  D7D9               	goto	l5035
  3658  000D02  0A01               	xorlw	1	; case 1
  3659  000D04  B4D8               	btfsc	status,2,c
  3660  000D06  D7E9               	goto	l5045
  3661  000D08  D7D3               	goto	l5033
  3662  000D0A                     l5061:
  3663  000D0A  500B               	movf	_Button_LB,w,c
  3664                           
  3665                           ; Switch size 1, requested type "space"
  3666                           ; Number of cases is 2, Range of values is 0 to 1
  3667                           ; switch strategies available:
  3668                           ; Name         Instructions Cycles
  3669                           ; simple_byte            7     4 (average)
  3670                           ;	Chosen strategy is simple_byte
  3671  000D0C  0A00               	xorlw	0	; case 0
  3672  000D0E  B4D8               	btfsc	status,2,c
  3673  000D10  D7CF               	goto	l5033
  3674  000D12  0A01               	xorlw	1	; case 1
  3675  000D14  B4D8               	btfsc	status,2,c
  3676  000D16  D7F1               	goto	l5057
  3677                           
  3678                           ;State_Mchn.c: 1001: switch(Button_LF)
  3679  000D18  D02A               	goto	l5091
  3680  000D1A                     l5063:
  3681  000D1A  0E00               	movlw	0
  3682  000D1C  D01B               	goto	L18
  3683  000D1E                     l5065:
  3684  000D1E  2849               	incf	_MaxPwmRight,w,c
  3685  000D20  0E03               	movlw	3
  3686  000D22  584A               	subwfb	_MaxPwmRight+1,w,c
  3687  000D24  B0D8               	btfsc	status,0,c
  3688  000D26  D002               	goto	l5069
  3689                           
  3690                           ;State_Mchn.c: 1009: {
  3691                           ;State_Mchn.c: 1010: MaxPwmRight++;
  3692  000D28  4A49               	infsnz	_MaxPwmRight,f,c
  3693  000D2A  2A4A               	incf	_MaxPwmRight+1,f,c
  3694  000D2C                     l5069:
  3695                           
  3696                           ;State_Mchn.c: 1011: }
  3697                           ;State_Mchn.c: 1012: if(MaxPwmLeft >= 1)
  3698  000D2C  5047               	movf	_MaxPwmLeft,w,c
  3699  000D2E  1048               	iorwf	_MaxPwmLeft+1,w,c
  3700  000D30  B4D8               	btfsc	status,2,c
  3701  000D32  D003               	goto	l5073
  3702                           
  3703                           ;State_Mchn.c: 1013: {
  3704                           ;State_Mchn.c: 1014: MaxPwmLeft--;
  3705  000D34  0647               	decf	_MaxPwmLeft,f,c
  3706  000D36  A0D8               	btfss	status,0,c
  3707  000D38  0648               	decf	_MaxPwmLeft+1,f,c
  3708  000D3A                     l5073:
  3709                           
  3710                           ;State_Mchn.c: 1015: }
  3711                           ;State_Mchn.c: 1016: Switch_Adjust_LF = 1;
  3712  000D3A  0E01               	movlw	1
  3713  000D3C  D00B               	goto	L18
  3714  000D3E                     l5075:
  3715  000D3E  5002               	movf	_Adjust_Counter+1,w,c
  3716  000D40  E104               	bnz	u4290
  3717  000D42  0E14               	movlw	20
  3718  000D44  5C01               	subwf	_Adjust_Counter,w,c
  3719  000D46  A0D8               	btfss	status,0,c
  3720  000D48  D007               	goto	l5081
  3721  000D4A                     u4290:
  3722                           
  3723                           ;State_Mchn.c: 1020: {
  3724                           ;State_Mchn.c: 1021: Adjust_Counter = 0;
  3725  000D4A  0E00               	movlw	0
  3726  000D4C  6E02               	movwf	_Adjust_Counter+1,c
  3727  000D4E  0E00               	movlw	0
  3728  000D50  6E01               	movwf	_Adjust_Counter,c
  3729  000D52  D7E3               	goto	l5063
  3730  000D54                     L18:
  3731  000D54  6E1C               	movwf	_Switch_Adjust_LF,c
  3732                           
  3733                           ;State_Mchn.c: 1024: }
  3734                           
  3735                           ;State_Mchn.c: 1023: break;
  3736  000D56  D033               	goto	l5117
  3737  000D58                     l5081:
  3738                           
  3739                           ;State_Mchn.c: 1025: else {Adjust_Counter++;}
  3740  000D58  4A01               	infsnz	_Adjust_Counter,f,c
  3741  000D5A  2A02               	incf	_Adjust_Counter+1,f,c
  3742                           
  3743                           ;State_Mchn.c: 1026: break;
  3744  000D5C  D030               	goto	l5117
  3745  000D5E                     l5087:
  3746  000D5E  501C               	movf	_Switch_Adjust_LF,w,c
  3747                           
  3748                           ; Switch size 1, requested type "space"
  3749                           ; Number of cases is 2, Range of values is 0 to 1
  3750                           ; switch strategies available:
  3751                           ; Name         Instructions Cycles
  3752                           ; simple_byte            7     4 (average)
  3753                           ;	Chosen strategy is simple_byte
  3754  000D60  0A00               	xorlw	0	; case 0
  3755  000D62  B4D8               	btfsc	status,2,c
  3756  000D64  D7DC               	goto	l5065
  3757  000D66  0A01               	xorlw	1	; case 1
  3758  000D68  B4D8               	btfsc	status,2,c
  3759  000D6A  D7E9               	goto	l5075
  3760  000D6C  D7D6               	goto	l5063
  3761  000D6E                     l5091:
  3762  000D6E  500C               	movf	_Button_LF,w,c
  3763                           
  3764                           ; Switch size 1, requested type "space"
  3765                           ; Number of cases is 2, Range of values is 0 to 1
  3766                           ; switch strategies available:
  3767                           ; Name         Instructions Cycles
  3768                           ; simple_byte            7     4 (average)
  3769                           ;	Chosen strategy is simple_byte
  3770  000D70  0A00               	xorlw	0	; case 0
  3771  000D72  B4D8               	btfsc	status,2,c
  3772  000D74  D7D2               	goto	l5063
  3773  000D76  0A01               	xorlw	1	; case 1
  3774  000D78  B4D8               	btfsc	status,2,c
  3775  000D7A  D7F1               	goto	l5087
  3776                           
  3777                           ;State_Mchn.c: 1036: switch(Button_RB)
  3778  000D7C  D020               	goto	l5117
  3779  000D7E                     l5093:
  3780  000D7E  0E00               	movlw	0
  3781  000D80  D011               	goto	L20
  3782  000D82                     l5095:
  3783  000D82  0EFB               	movlw	251
  3784  000D84  604D               	cpfslt	_MaxJerkPwm_Brake,c
  3785  000D86  D001               	goto	l5099
  3786                           
  3787                           ;State_Mchn.c: 1044: {
  3788                           ;State_Mchn.c: 1045: MaxJerkPwm_Brake++;
  3789  000D88  2A4D               	incf	_MaxJerkPwm_Brake,f,c
  3790  000D8A                     l5099:
  3791                           
  3792                           ;State_Mchn.c: 1046: }
  3793                           ;State_Mchn.c: 1047: Switch_Adjust_RB = 1;
  3794  000D8A  0E01               	movlw	1
  3795  000D8C  D00B               	goto	L20
  3796  000D8E                     l5101:
  3797  000D8E  5002               	movf	_Adjust_Counter+1,w,c
  3798  000D90  E104               	bnz	u4310
  3799  000D92  0E14               	movlw	20
  3800  000D94  5C01               	subwf	_Adjust_Counter,w,c
  3801  000D96  A0D8               	btfss	status,0,c
  3802  000D98  D007               	goto	l5107
  3803  000D9A                     u4310:
  3804                           
  3805                           ;State_Mchn.c: 1051: {
  3806                           ;State_Mchn.c: 1052: Adjust_Counter = 0;
  3807  000D9A  0E00               	movlw	0
  3808  000D9C  6E02               	movwf	_Adjust_Counter+1,c
  3809  000D9E  0E00               	movlw	0
  3810  000DA0  6E01               	movwf	_Adjust_Counter,c
  3811  000DA2  D7ED               	goto	l5093
  3812  000DA4                     L20:
  3813  000DA4  6E1D               	movwf	_Switch_Adjust_RB,c
  3814                           
  3815                           ;State_Mchn.c: 1055: }
  3816                           
  3817                           ;State_Mchn.c: 1054: break;
  3818  000DA6  D032               	goto	l5143
  3819  000DA8                     l5107:
  3820                           
  3821                           ;State_Mchn.c: 1056: else {Adjust_Counter++;}
  3822  000DA8  4A01               	infsnz	_Adjust_Counter,f,c
  3823  000DAA  2A02               	incf	_Adjust_Counter+1,f,c
  3824                           
  3825                           ;State_Mchn.c: 1057: break;
  3826  000DAC  D02F               	goto	l5143
  3827  000DAE                     l5113:
  3828  000DAE  501D               	movf	_Switch_Adjust_RB,w,c
  3829                           
  3830                           ; Switch size 1, requested type "space"
  3831                           ; Number of cases is 2, Range of values is 0 to 1
  3832                           ; switch strategies available:
  3833                           ; Name         Instructions Cycles
  3834                           ; simple_byte            7     4 (average)
  3835                           ;	Chosen strategy is simple_byte
  3836  000DB0  0A00               	xorlw	0	; case 0
  3837  000DB2  B4D8               	btfsc	status,2,c
  3838  000DB4  D7E6               	goto	l5095
  3839  000DB6  0A01               	xorlw	1	; case 1
  3840  000DB8  B4D8               	btfsc	status,2,c
  3841  000DBA  D7E9               	goto	l5101
  3842  000DBC  D7E0               	goto	l5093
  3843  000DBE                     l5117:
  3844  000DBE  500E               	movf	_Button_RB,w,c
  3845                           
  3846                           ; Switch size 1, requested type "space"
  3847                           ; Number of cases is 2, Range of values is 0 to 1
  3848                           ; switch strategies available:
  3849                           ; Name         Instructions Cycles
  3850                           ; simple_byte            7     4 (average)
  3851                           ;	Chosen strategy is simple_byte
  3852  000DC0  0A00               	xorlw	0	; case 0
  3853  000DC2  B4D8               	btfsc	status,2,c
  3854  000DC4  D7DC               	goto	l5093
  3855  000DC6  0A01               	xorlw	1	; case 1
  3856  000DC8  B4D8               	btfsc	status,2,c
  3857  000DCA  D7F1               	goto	l5113
  3858                           
  3859                           ;State_Mchn.c: 1068: switch(Button_RF)
  3860  000DCC  D01F               	goto	l5143
  3861  000DCE                     l5119:
  3862  000DCE  0E00               	movlw	0
  3863  000DD0  D010               	goto	L22
  3864  000DD2                     l5121:
  3865  000DD2  504D               	movf	_MaxJerkPwm_Brake,w,c
  3866  000DD4  A4D8               	btfss	status,2,c
  3867                           
  3868                           ;State_Mchn.c: 1076: {
  3869                           ;State_Mchn.c: 1077: MaxJerkPwm_Brake--;
  3870  000DD6  064D               	decf	_MaxJerkPwm_Brake,f,c
  3871                           
  3872                           ;State_Mchn.c: 1078: }
  3873                           ;State_Mchn.c: 1079: Switch_Adjust_RF = 1;
  3874  000DD8  0E01               	movlw	1
  3875  000DDA  D00B               	goto	L22
  3876  000DDC                     l5127:
  3877  000DDC  5002               	movf	_Adjust_Counter+1,w,c
  3878  000DDE  E104               	bnz	u4330
  3879  000DE0  0E14               	movlw	20
  3880  000DE2  5C01               	subwf	_Adjust_Counter,w,c
  3881  000DE4  A0D8               	btfss	status,0,c
  3882  000DE6  D007               	goto	l5133
  3883  000DE8                     u4330:
  3884                           
  3885                           ;State_Mchn.c: 1083: {
  3886                           ;State_Mchn.c: 1084: Adjust_Counter = 0;
  3887  000DE8  0E00               	movlw	0
  3888  000DEA  6E02               	movwf	_Adjust_Counter+1,c
  3889  000DEC  0E00               	movlw	0
  3890  000DEE  6E01               	movwf	_Adjust_Counter,c
  3891  000DF0  D7EE               	goto	l5119
  3892  000DF2                     L22:
  3893  000DF2  6E1E               	movwf	_Switch_Adjust_RF,c
  3894                           
  3895                           ;State_Mchn.c: 1087: }
  3896                           
  3897                           ;State_Mchn.c: 1086: break;
  3898  000DF4  D012               	goto	l5145
  3899  000DF6                     l5133:
  3900                           
  3901                           ;State_Mchn.c: 1088: else {Adjust_Counter++;}
  3902  000DF6  4A01               	infsnz	_Adjust_Counter,f,c
  3903  000DF8  2A02               	incf	_Adjust_Counter+1,f,c
  3904                           
  3905                           ;State_Mchn.c: 1089: break;
  3906  000DFA  D00F               	goto	l5145
  3907  000DFC                     l5139:
  3908  000DFC  501E               	movf	_Switch_Adjust_RF,w,c
  3909                           
  3910                           ; Switch size 1, requested type "space"
  3911                           ; Number of cases is 2, Range of values is 0 to 1
  3912                           ; switch strategies available:
  3913                           ; Name         Instructions Cycles
  3914                           ; simple_byte            7     4 (average)
  3915                           ;	Chosen strategy is simple_byte
  3916  000DFE  0A00               	xorlw	0	; case 0
  3917  000E00  B4D8               	btfsc	status,2,c
  3918  000E02  D7E7               	goto	l5121
  3919  000E04  0A01               	xorlw	1	; case 1
  3920  000E06  B4D8               	btfsc	status,2,c
  3921  000E08  D7E9               	goto	l5127
  3922  000E0A  D7E1               	goto	l5119
  3923  000E0C                     l5143:
  3924  000E0C  500F               	movf	_Button_RF,w,c
  3925                           
  3926                           ; Switch size 1, requested type "space"
  3927                           ; Number of cases is 2, Range of values is 0 to 1
  3928                           ; switch strategies available:
  3929                           ; Name         Instructions Cycles
  3930                           ; simple_byte            7     4 (average)
  3931                           ;	Chosen strategy is simple_byte
  3932  000E0E  0A00               	xorlw	0	; case 0
  3933  000E10  B4D8               	btfsc	status,2,c
  3934  000E12  D7DD               	goto	l5119
  3935  000E14  0A01               	xorlw	1	; case 1
  3936  000E16  B4D8               	btfsc	status,2,c
  3937  000E18  D7F1               	goto	l5139
  3938  000E1A                     l5145:
  3939                           
  3940                           ;State_Mchn.c: 1098: if(Activate_Controls_Counter <= 1)
  3941  000E1A  0100               	movlb	0	; () banked
  3942  000E1C  51E9               	movf	(_Activate_Controls_Counter+1)& (0+255),w,b
  3943  000E1E  E127               	bnz	l571
  3944  000E20  0E02               	movlw	2
  3945  000E22  0100               	movlb	0	; () banked
  3946  000E24  5DE8               	subwf	_Activate_Controls_Counter& (0+255),w,b
  3947  000E26  B0D8               	btfsc	status,0,c
  3948  000E28  0012               	return	
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;State_Mchn.c: 1099: {
  3952                           ;State_Mchn.c: 1100: Switch_Activate_Controls = 0;
  3953  000E2A  0E00               	movlw	0
  3954  000E2C  6E1A               	movwf	_Switch_Activate_Controls,c
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;State_Mchn.c: 1101: Red_Led(0);
  3958  000E2E  0E00               	movlw	0
  3959  000E30  EC62  F00C         	call	_Red_Led
  3960                           
  3961                           ;State_Mchn.c: 1102: }
  3962                           ;State_Mchn.c: 1103: break;
  3963  000E34  0012               	return	
  3964  000E36                     l5151:
  3965  000E36  0E00               	movlw	0
  3966  000E38  6E1A               	movwf	_Switch_Activate_Controls,c
  3967                           
  3968                           ;State_Mchn.c: 1106: Red_Led(0);
  3969  000E3A  0E00               	movlw	0
  3970  000E3C  EC62  F00C         	call	_Red_Led
  3971                           
  3972                           ;State_Mchn.c: 1108: }
  3973                           
  3974                           ;State_Mchn.c: 1107: break;
  3975  000E40  0012               	return	
  3976  000E42                     l5157:
  3977  000E42  501A               	movf	_Switch_Activate_Controls,w,c
  3978                           
  3979                           ; Switch size 1, requested type "space"
  3980                           ; Number of cases is 3, Range of values is 0 to 2
  3981                           ; switch strategies available:
  3982                           ; Name         Instructions Cycles
  3983                           ; simple_byte           10     6 (average)
  3984                           ;	Chosen strategy is simple_byte
  3985  000E44  0A00               	xorlw	0	; case 0
  3986  000E46  B4D8               	btfsc	status,2,c
  3987  000E48  D6F0               	goto	l4993
  3988  000E4A  0A01               	xorlw	1	; case 1
  3989  000E4C  B4D8               	btfsc	status,2,c
  3990  000E4E  D6FF               	goto	l5005
  3991  000E50  0A03               	xorlw	3	; case 2
  3992  000E52  B4D8               	btfsc	status,2,c
  3993  000E54  D713               	goto	l5019
  3994  000E56  D7EF               	goto	l5151
  3995  000E58                     l5161:
  3996  000E58  5020               	movf	_Switch_Main,w,c
  3997                           
  3998                           ; Switch size 1, requested type "space"
  3999                           ; Number of cases is 3, Range of values is 0 to 2
  4000                           ; switch strategies available:
  4001                           ; Name         Instructions Cycles
  4002                           ; simple_byte           10     6 (average)
  4003                           ;	Chosen strategy is simple_byte
  4004  000E5A  0A00               	xorlw	0	; case 0
  4005  000E5C  B4D8               	btfsc	status,2,c
  4006  000E5E  D4C9               	goto	l4689
  4007  000E60  0A01               	xorlw	1	; case 1
  4008  000E62  B4D8               	btfsc	status,2,c
  4009  000E64  D55A               	goto	l4773
  4010  000E66  0A03               	xorlw	3	; case 2
  4011  000E68  A4D8               	btfss	status,2,c
  4012  000E6A  0012               	return	
  4013  000E6C  D6D0               	goto	l4991
  4014  000E6E                     l571:
  4015  000E6E  0012               	return		;funcret
  4016  000E70                     __end_of_Update_StateMchn:
  4017                           	opt stack 0
  4018                           tblptru	equ	0xFF8
  4019                           tblptrh	equ	0xFF7
  4020                           tblptrl	equ	0xFF6
  4021                           tablat	equ	0xFF5
  4022                           postinc0	equ	0xFEE
  4023                           wreg	equ	0xFE8
  4024                           postdec1	equ	0xFE5
  4025                           fsr1l	equ	0xFE1
  4026                           status	equ	0xFD8
  4027                           
  4028 ;; *************** function _Train_Path *****************
  4029 ;; Defined at:
  4030 ;;		line 1186 in file "../State_Mchn.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  From            1    wreg     unsigned char 
  4033 ;;  To              1   23[COMRAM] unsigned char 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  From            1   24[COMRAM] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      unsigned char 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4045 ;;      Params:         1       0       0       0       0       0       0       0       0
  4046 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4048 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4049 ;;Total ram usage:        2 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    6
  4052 ;; This function calls:
  4053 ;;		_Junction
  4054 ;;		_SetDCPWM1
  4055 ;;		_Train_Move_Left_Brake
  4056 ;;		_Train_Move_Left_Start
  4057 ;;		_Train_Move_Right_Brake
  4058 ;;		_Train_Move_Right_Start
  4059 ;; This function is called by:
  4060 ;;		_Update_StateMchn
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text2
  4065  001106                     __ptext2:
  4066                           	opt stack 0
  4067  001106                     _Train_Path:
  4068                           	opt stack 23
  4069                           
  4070                           ;incstack = 0
  4071                           ;Train_Path@From stored from wreg
  4072  001106  6E46               	movwf	Train_Path@From,c
  4073                           
  4074                           ;State_Mchn.c: 1188: static char Return_Val = (char)-1;
  4075                           ;State_Mchn.c: 1190: switch(Switch_Train_Path)
  4076  001108  D0EE               	goto	l4151
  4077  00110A                     l3967:
  4078  00110A  0E00               	movlw	0
  4079  00110C  6E3D               	movwf	Junction@Straight_Bend,c
  4080  00110E  0E01               	movlw	1
  4081  001110  EC0A  F00C         	call	_Junction
  4082  001114  D00D               	goto	L31
  4083  001116                     L28:
  4084  001116  6E25               	movwf	_Switch_Train_Path,c
  4085  001118  D02A               	goto	l4007
  4086  00111A                     l3975:
  4087  00111A  0E01               	movlw	1
  4088  00111C  6E3D               	movwf	Junction@Straight_Bend,c
  4089  00111E  0E01               	movlw	1
  4090  001120  EC0A  F00C         	call	_Junction
  4091  001124  D005               	goto	L31
  4092  001126                     l3983:
  4093  001126  0E01               	movlw	1
  4094  001128  6E3D               	movwf	Junction@Straight_Bend,c
  4095  00112A  0E00               	movlw	0
  4096  00112C  EC0A  F00C         	call	_Junction
  4097  001130                     L31:
  4098  001130  0900               	iorlw	0
  4099  001132  A4D8               	btfss	status,2,c
  4100  001134  D070               	goto	l4085
  4101                           
  4102                           ;State_Mchn.c: 1209: {
  4103                           ;State_Mchn.c: 1210: Switch_Train_Path = 1;
  4104  001136  0E01               	movlw	1
  4105  001138  D7EE               	goto	L28
  4106  00113A                     l3991:
  4107  00113A  0E00               	movlw	0
  4108  00113C  6E3D               	movwf	Junction@Straight_Bend,c
  4109  00113E  0E00               	movlw	0
  4110  001140  EC0A  F00C         	call	_Junction
  4111  001144  D7F5               	goto	L31
  4112  001146                     l4001:
  4113  001146  5046               	movf	Train_Path@From,w,c
  4114                           
  4115                           ; Switch size 1, requested type "space"
  4116                           ; Number of cases is 4, Range of values is 0 to 3
  4117                           ; switch strategies available:
  4118                           ; Name         Instructions Cycles
  4119                           ; simple_byte           13     7 (average)
  4120                           ;	Chosen strategy is simple_byte
  4121  001148  0A00               	xorlw	0	; case 0
  4122  00114A  B4D8               	btfsc	status,2,c
  4123  00114C  D7EC               	goto	l3983
  4124  00114E  0A01               	xorlw	1	; case 1
  4125  001150  B4D8               	btfsc	status,2,c
  4126  001152  D7F3               	goto	l3991
  4127  001154  0A03               	xorlw	3	; case 2
  4128  001156  B4D8               	btfsc	status,2,c
  4129  001158  D7D8               	goto	l3967
  4130  00115A  0A01               	xorlw	1	; case 3
  4131  00115C  B4D8               	btfsc	status,2,c
  4132  00115E  D7DD               	goto	l3975
  4133                           
  4134                           ;State_Mchn.c: 1224: break;
  4135  001160  D0D3               	goto	l4153
  4136  001162                     l4003:
  4137  001162  0E00               	movlw	0
  4138  001164  6E3D               	movwf	Junction@Straight_Bend,c
  4139  001166  0E01               	movlw	1
  4140  001168  EC0A  F00C         	call	_Junction
  4141  00116C  D00E               	goto	L33
  4142  00116E                     l4007:
  4143                           
  4144                           ;State_Mchn.c: 1231: Return_Val = (char)-1;
  4145  00116E  0100               	movlb	0	; () banked
  4146  001170  69FC               	setf	Train_Path@Return_Val& (0+255),b
  4147  001172  D051               	goto	l4085
  4148  001174                     l4011:
  4149  001174  0E01               	movlw	1
  4150  001176  6E3D               	movwf	Junction@Straight_Bend,c
  4151  001178  0E01               	movlw	1
  4152  00117A  EC0A  F00C         	call	_Junction
  4153  00117E  D005               	goto	L33
  4154  001180                     l4019:
  4155  001180  0E01               	movlw	1
  4156  001182  6E3D               	movwf	Junction@Straight_Bend,c
  4157  001184  0E00               	movlw	0
  4158  001186  EC0A  F00C         	call	_Junction
  4159  00118A                     L33:
  4160  00118A  0900               	iorlw	0
  4161  00118C  A4D8               	btfss	status,2,c
  4162  00118E  D043               	goto	l4085
  4163                           
  4164                           ;State_Mchn.c: 1243: {
  4165                           ;State_Mchn.c: 1244: Switch_Train_Path = 2;
  4166  001190  0E02               	movlw	2
  4167  001192  D7C1               	goto	L28
  4168  001194                     l4027:
  4169  001194  0E00               	movlw	0
  4170  001196  6E3D               	movwf	Junction@Straight_Bend,c
  4171  001198  0E00               	movlw	0
  4172  00119A  EC0A  F00C         	call	_Junction
  4173  00119E  D7F5               	goto	L33
  4174  0011A0                     l4037:
  4175  0011A0  5045               	movf	Train_Path@To,w,c
  4176                           
  4177                           ; Switch size 1, requested type "space"
  4178                           ; Number of cases is 4, Range of values is 0 to 3
  4179                           ; switch strategies available:
  4180                           ; Name         Instructions Cycles
  4181                           ; simple_byte           13     7 (average)
  4182                           ;	Chosen strategy is simple_byte
  4183  0011A2  0A00               	xorlw	0	; case 0
  4184  0011A4  B4D8               	btfsc	status,2,c
  4185  0011A6  D7EC               	goto	l4019
  4186  0011A8  0A01               	xorlw	1	; case 1
  4187  0011AA  B4D8               	btfsc	status,2,c
  4188  0011AC  D7F3               	goto	l4027
  4189  0011AE  0A03               	xorlw	3	; case 2
  4190  0011B0  B4D8               	btfsc	status,2,c
  4191  0011B2  D7D7               	goto	l4003
  4192  0011B4  0A01               	xorlw	1	; case 3
  4193  0011B6  B4D8               	btfsc	status,2,c
  4194  0011B8  D7DD               	goto	l4011
  4195                           
  4196                           ;State_Mchn.c: 1258: break;
  4197  0011BA  D0A6               	goto	l4153
  4198  0011BC                     l4039:
  4199  0011BC  EC6C  F00A         	call	_Train_Move_Right_Start	;wreg free
  4200  0011C0  0900               	iorlw	0
  4201  0011C2  A4D8               	btfss	status,2,c
  4202  0011C4  D028               	goto	l4085
  4203  0011C6  D009               	goto	L50
  4204  0011C8                     l4047:
  4205  0011C8  EC6C  F00A         	call	_Train_Move_Right_Start	;wreg free
  4206  0011CC  D7F9               	goto	L29
  4207  0011CE                     l4055:
  4208  0011CE  ECD6  F00A         	call	_Train_Move_Left_Start	;wreg free
  4209  0011D2  D7F6               	goto	L29
  4210  0011D4                     l4063:
  4211  0011D4  ECD6  F00A         	call	_Train_Move_Left_Start	;wreg free
  4212  0011D8  D7F3               	goto	L29
  4213  0011DA                     L50:
  4214                           
  4215                           ;State_Mchn.c: 1284: {
  4216                           ;State_Mchn.c: 1285: Switch_Train_Path = 3;
  4217  0011DA  0E03               	movlw	3
  4218  0011DC  D79C               	goto	L28
  4219  0011DE                     l4073:
  4220  0011DE  5045               	movf	Train_Path@To,w,c
  4221                           
  4222                           ; Switch size 1, requested type "space"
  4223                           ; Number of cases is 4, Range of values is 0 to 3
  4224                           ; switch strategies available:
  4225                           ; Name         Instructions Cycles
  4226                           ; simple_byte           13     7 (average)
  4227                           ;	Chosen strategy is simple_byte
  4228  0011E0  0A00               	xorlw	0	; case 0
  4229  0011E2  B4D8               	btfsc	status,2,c
  4230  0011E4  D7F4               	goto	l4055
  4231  0011E6  0A01               	xorlw	1	; case 1
  4232  0011E8  B4D8               	btfsc	status,2,c
  4233  0011EA  D7F4               	goto	l4063
  4234  0011EC  0A03               	xorlw	3	; case 2
  4235  0011EE  B4D8               	btfsc	status,2,c
  4236  0011F0  D7E5               	goto	l4039
  4237  0011F2  0A01               	xorlw	1	; case 3
  4238  0011F4  B4D8               	btfsc	status,2,c
  4239  0011F6  D7E8               	goto	l4047
  4240                           
  4241                           ;State_Mchn.c: 1292: break;
  4242  0011F8  D087               	goto	l4153
  4243  0011FA                     l4075:
  4244  0011FA  0413               	decf	_Rd_Rb,w,c
  4245  0011FC  A4D8               	btfss	status,2,c
  4246  0011FE  D004               	goto	l4081
  4247                           
  4248                           ;State_Mchn.c: 1297: {
  4249                           ;State_Mchn.c: 1298: Switch_Train_Path = 4;
  4250  001200  0E04               	movlw	4
  4251  001202  6E25               	movwf	_Switch_Train_Path,c
  4252                           
  4253                           ;State_Mchn.c: 1299: Return_Val = (char)-1;
  4254  001204  0100               	movlb	0	; () banked
  4255  001206  69FC               	setf	Train_Path@Return_Val& (0+255),b
  4256  001208                     l4081:
  4257                           
  4258                           ;State_Mchn.c: 1300: }
  4259                           ;State_Mchn.c: 1301: SetDCPWM1(MaxPwmRight);
  4260  001208  C049  F03D         	movff	_MaxPwmRight,SetDCPWM1@dutycycle
  4261  00120C  C04A  F03E         	movff	_MaxPwmRight+1,SetDCPWM1@dutycycle+1
  4262  001210  EC91  F00D         	call	_SetDCPWM1	;wreg free
  4263  001214  D010               	goto	l4095
  4264  001216                     l4085:
  4265                           
  4266                           ;State_Mchn.c: 1303: Return_Val = (char)-1;
  4267  001216  0100               	movlb	0	; () banked
  4268  001218  69FC               	setf	Train_Path@Return_Val& (0+255),b
  4269                           
  4270                           ;State_Mchn.c: 1304: break;
  4271  00121A  D076               	goto	l4153
  4272  00121C                     l4087:
  4273  00121C  0414               	decf	_Rd_Rf,w,c
  4274  00121E  A4D8               	btfss	status,2,c
  4275  001220  D004               	goto	l4093
  4276                           
  4277                           ;State_Mchn.c: 1306: {
  4278                           ;State_Mchn.c: 1307: Switch_Train_Path = 4;
  4279  001222  0E04               	movlw	4
  4280  001224  6E25               	movwf	_Switch_Train_Path,c
  4281                           
  4282                           ;State_Mchn.c: 1308: Return_Val = (char)-1;
  4283  001226  0100               	movlb	0	; () banked
  4284  001228  69FC               	setf	Train_Path@Return_Val& (0+255),b
  4285  00122A                     l4093:
  4286                           
  4287                           ;State_Mchn.c: 1309: }
  4288                           ;State_Mchn.c: 1310: SetDCPWM1(MaxPwmRight);
  4289  00122A  C049  F03D         	movff	_MaxPwmRight,SetDCPWM1@dutycycle
  4290  00122E  C04A  F03E         	movff	_MaxPwmRight+1,SetDCPWM1@dutycycle+1
  4291  001232  EC91  F00D         	call	_SetDCPWM1	;wreg free
  4292  001236                     l4095:
  4293                           
  4294                           ;State_Mchn.c: 1311: Train_Move_Pwm_Count = MaxPwmRight;
  4295  001236  C049  F04B         	movff	_MaxPwmRight,_Train_Move_Pwm_Count
  4296  00123A  C04A  F04C         	movff	_MaxPwmRight+1,_Train_Move_Pwm_Count+1
  4297  00123E  D7EB               	goto	l4085
  4298  001240                     l4099:
  4299  001240  0411               	decf	_Rd_Lb,w,c
  4300  001242  A4D8               	btfss	status,2,c
  4301  001244  D004               	goto	l4105
  4302                           
  4303                           ;State_Mchn.c: 1315: {
  4304                           ;State_Mchn.c: 1316: Switch_Train_Path = 4;
  4305  001246  0E04               	movlw	4
  4306  001248  6E25               	movwf	_Switch_Train_Path,c
  4307                           
  4308                           ;State_Mchn.c: 1317: Return_Val = (char)-1;
  4309  00124A  0100               	movlb	0	; () banked
  4310  00124C  69FC               	setf	Train_Path@Return_Val& (0+255),b
  4311  00124E                     l4105:
  4312                           
  4313                           ;State_Mchn.c: 1318: }
  4314                           ;State_Mchn.c: 1319: SetDCPWM1(MaxPwmLeft);
  4315  00124E  C047  F03D         	movff	_MaxPwmLeft,SetDCPWM1@dutycycle
  4316  001252  C048  F03E         	movff	_MaxPwmLeft+1,SetDCPWM1@dutycycle+1
  4317  001256  EC91  F00D         	call	_SetDCPWM1	;wreg free
  4318  00125A  D00D               	goto	l4119
  4319  00125C                     l4111:
  4320  00125C  0412               	decf	_Rd_Lf,w,c
  4321  00125E  A4D8               	btfss	status,2,c
  4322  001260  D004               	goto	l4117
  4323                           
  4324                           ;State_Mchn.c: 1324: {
  4325                           ;State_Mchn.c: 1325: Switch_Train_Path = 4;
  4326  001262  0E04               	movlw	4
  4327  001264  6E25               	movwf	_Switch_Train_Path,c
  4328                           
  4329                           ;State_Mchn.c: 1326: Return_Val = (char)-1;
  4330  001266  0100               	movlb	0	; () banked
  4331  001268  69FC               	setf	Train_Path@Return_Val& (0+255),b
  4332  00126A                     l4117:
  4333                           
  4334                           ;State_Mchn.c: 1327: }
  4335                           ;State_Mchn.c: 1328: SetDCPWM1(MaxPwmLeft);
  4336  00126A  C047  F03D         	movff	_MaxPwmLeft,SetDCPWM1@dutycycle
  4337  00126E  C048  F03E         	movff	_MaxPwmLeft+1,SetDCPWM1@dutycycle+1
  4338  001272  EC91  F00D         	call	_SetDCPWM1	;wreg free
  4339  001276                     l4119:
  4340                           
  4341                           ;State_Mchn.c: 1329: Train_Move_Pwm_Count = MaxPwmLeft;
  4342  001276  C047  F04B         	movff	_MaxPwmLeft,_Train_Move_Pwm_Count
  4343  00127A  C048  F04C         	movff	_MaxPwmLeft+1,_Train_Move_Pwm_Count+1
  4344  00127E  D7CB               	goto	l4085
  4345  001280                     l4125:
  4346  001280  5045               	movf	Train_Path@To,w,c
  4347                           
  4348                           ; Switch size 1, requested type "space"
  4349                           ; Number of cases is 4, Range of values is 0 to 3
  4350                           ; switch strategies available:
  4351                           ; Name         Instructions Cycles
  4352                           ; simple_byte           13     7 (average)
  4353                           ;	Chosen strategy is simple_byte
  4354  001282  0A00               	xorlw	0	; case 0
  4355  001284  B4D8               	btfsc	status,2,c
  4356  001286  D7DC               	goto	l4099
  4357  001288  0A01               	xorlw	1	; case 1
  4358  00128A  B4D8               	btfsc	status,2,c
  4359  00128C  D7E7               	goto	l4111
  4360  00128E  0A03               	xorlw	3	; case 2
  4361  001290  B4D8               	btfsc	status,2,c
  4362  001292  D7B3               	goto	l4075
  4363  001294  0A01               	xorlw	1	; case 3
  4364  001296  B4D8               	btfsc	status,2,c
  4365  001298  D7C1               	goto	l4087
  4366                           
  4367                           ;State_Mchn.c: 1334: break;
  4368  00129A  D036               	goto	l4153
  4369  00129C                     l4127:
  4370  00129C  ECFA  F009         	call	_Train_Move_Right_Brake	;wreg free
  4371  0012A0  D008               	goto	L51
  4372  0012A2                     l4131:
  4373  0012A2  ECFA  F009         	call	_Train_Move_Right_Brake	;wreg free
  4374  0012A6  D005               	goto	L51
  4375  0012A8                     l4135:
  4376  0012A8  EC87  F009         	call	_Train_Move_Left_Brake	;wreg free
  4377  0012AC  D002               	goto	L51
  4378  0012AE                     l4139:
  4379  0012AE  EC87  F009         	call	_Train_Move_Left_Brake	;wreg free
  4380  0012B2                     L51:
  4381  0012B2  0900               	iorlw	0
  4382  0012B4  A4D8               	btfss	status,2,c
  4383  0012B6  D7AF               	goto	l4085
  4384                           
  4385                           ;State_Mchn.c: 1363: {
  4386                           ;State_Mchn.c: 1364: Switch_Train_Path = 0;
  4387  0012B8  0E00               	movlw	0
  4388  0012BA  6E25               	movwf	_Switch_Train_Path,c
  4389                           
  4390                           ;State_Mchn.c: 1365: Return_Val = (char)0;
  4391  0012BC  0E00               	movlw	0
  4392  0012BE  0100               	movlb	0	; () banked
  4393  0012C0  6FFC               	movwf	Train_Path@Return_Val& (0+255),b
  4394                           
  4395                           ;State_Mchn.c: 1366: break;
  4396  0012C2  D022               	goto	l4153
  4397  0012C4                     l4145:
  4398  0012C4  5045               	movf	Train_Path@To,w,c
  4399                           
  4400                           ; Switch size 1, requested type "space"
  4401                           ; Number of cases is 4, Range of values is 0 to 3
  4402                           ; switch strategies available:
  4403                           ; Name         Instructions Cycles
  4404                           ; simple_byte           13     7 (average)
  4405                           ;	Chosen strategy is simple_byte
  4406  0012C6  0A00               	xorlw	0	; case 0
  4407  0012C8  B4D8               	btfsc	status,2,c
  4408  0012CA  D7EE               	goto	l4135
  4409  0012CC  0A01               	xorlw	1	; case 1
  4410  0012CE  B4D8               	btfsc	status,2,c
  4411  0012D0  D7EE               	goto	l4139
  4412  0012D2  0A03               	xorlw	3	; case 2
  4413  0012D4  B4D8               	btfsc	status,2,c
  4414  0012D6  D7E2               	goto	l4127
  4415  0012D8  0A01               	xorlw	1	; case 3
  4416  0012DA  B4D8               	btfsc	status,2,c
  4417  0012DC  D7E2               	goto	l4131
  4418                           
  4419                           ;State_Mchn.c: 1372: break;
  4420  0012DE  D014               	goto	l4153
  4421  0012E0                     l4147:
  4422  0012E0  0E00               	movlw	0
  4423  0012E2  6E25               	movwf	_Switch_Train_Path,c
  4424                           
  4425                           ;State_Mchn.c: 1375: }
  4426  0012E4  D011               	goto	l4153
  4427  0012E6                     l4151:
  4428  0012E6  5025               	movf	_Switch_Train_Path,w,c
  4429                           
  4430                           ; Switch size 1, requested type "space"
  4431                           ; Number of cases is 5, Range of values is 0 to 4
  4432                           ; switch strategies available:
  4433                           ; Name         Instructions Cycles
  4434                           ; simple_byte           16     9 (average)
  4435                           ;	Chosen strategy is simple_byte
  4436  0012E8  0A00               	xorlw	0	; case 0
  4437  0012EA  B4D8               	btfsc	status,2,c
  4438  0012EC  D72C               	goto	l4001
  4439  0012EE  0A01               	xorlw	1	; case 1
  4440  0012F0  B4D8               	btfsc	status,2,c
  4441  0012F2  D756               	goto	l4037
  4442  0012F4  0A03               	xorlw	3	; case 2
  4443  0012F6  B4D8               	btfsc	status,2,c
  4444  0012F8  D772               	goto	l4073
  4445  0012FA  0A01               	xorlw	1	; case 3
  4446  0012FC  B4D8               	btfsc	status,2,c
  4447  0012FE  D7C0               	goto	l4125
  4448  001300  0A07               	xorlw	7	; case 4
  4449  001302  B4D8               	btfsc	status,2,c
  4450  001304  D7DF               	goto	l4145
  4451  001306  D7EC               	goto	l4147
  4452  001308                     l4153:
  4453                           
  4454                           ;State_Mchn.c: 1377: return(Return_Val);
  4455  001308  0100               	movlb	0	; () banked
  4456  00130A  51FC               	movf	Train_Path@Return_Val& (0+255),w,b
  4457  00130C  0012               	return	
  4458  00130E                     __end_of_Train_Path:
  4459                           	opt stack 0
  4460                           tblptru	equ	0xFF8
  4461                           tblptrh	equ	0xFF7
  4462                           tblptrl	equ	0xFF6
  4463                           tablat	equ	0xFF5
  4464                           postinc0	equ	0xFEE
  4465                           wreg	equ	0xFE8
  4466                           postdec1	equ	0xFE5
  4467                           fsr1l	equ	0xFE1
  4468                           status	equ	0xFD8
  4469                           
  4470 ;; *************** function _Train_Move_Right_Start *****************
  4471 ;; Defined at:
  4472 ;;		line 1503 in file "../State_Mchn.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      unsigned char 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4486 ;;      Params:         0       0       0       0       0       0       0       0       0
  4487 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4489 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4490 ;;Total ram usage:        0 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    5
  4493 ;; This function calls:
  4494 ;;		_SetDCPWM1
  4495 ;; This function is called by:
  4496 ;;		_Train_Path
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text3
  4501  0014D8                     __ptext3:
  4502                           	opt stack 0
  4503  0014D8                     _Train_Move_Right_Start:
  4504                           	opt stack 23
  4505                           
  4506                           ;State_Mchn.c: 1505: static char Return_Val = (char)-1;
  4507                           ;State_Mchn.c: 1506: static unsigned int Train_Move_Wait_Time = 0;
  4508                           ;State_Mchn.c: 1508: switch(Switch_Train_Move)
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;incstack = 0
  4512  0014D8  D059               	goto	l3547
  4513  0014DA                     l3497:
  4514  0014DA  0E88               	movlw	136
  4515  0014DC  0100               	movlb	0	; () banked
  4516  0014DE  5DE6               	subwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),w,b
  4517  0014E0  0E13               	movlw	19
  4518  0014E2  0100               	movlb	0	; () banked
  4519  0014E4  59E7               	subwfb	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  4520  0014E6  A0D8               	btfss	status,0,c
  4521  0014E8  D008               	goto	l3503
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;State_Mchn.c: 1513: {
  4525                           ;State_Mchn.c: 1514: Switch_Train_Move = 1;
  4526  0014EA  0E01               	movlw	1
  4527  0014EC  6E24               	movwf	_Switch_Train_Move,c
  4528                           
  4529                           ;State_Mchn.c: 1515: Train_Move_Wait_Time = 0;
  4530  0014EE  0E00               	movlw	0
  4531  0014F0  0100               	movlb	0	; () banked
  4532  0014F2  6FE7               	movwf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),b
  4533  0014F4  0E00               	movlw	0
  4534  0014F6  6FE6               	movwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),b
  4535  0014F8  D046               	goto	l3543
  4536  0014FA                     l3503:
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;State_Mchn.c: 1518: }
  4540                           ;State_Mchn.c: 1519: Train_Move_Wait_Time++;
  4541  0014FA  0100               	movlb	0	; () banked
  4542  0014FC  4BE6               	infsnz	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),f,b
  4543  0014FE  2BE7               	incf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;State_Mchn.c: 1520: Switch_Train_Move = 0;
  4547  001500  0E00               	movlw	0
  4548  001502  6E24               	movwf	_Switch_Train_Move,c
  4549  001504  D040               	goto	l3543
  4550  001506                     l3509:
  4551  001506  0E02               	movlw	2
  4552  001508  6E3E               	movwf	SetDCPWM1@dutycycle+1,c
  4553  00150A  0E26               	movlw	38
  4554  00150C  6E3D               	movwf	SetDCPWM1@dutycycle,c
  4555  00150E  EC91  F00D         	call	_SetDCPWM1	;wreg free
  4556                           
  4557                           ;State_Mchn.c: 1525: Train_Move_Pwm_Count = 550;
  4558  001512  0E02               	movlw	2
  4559  001514  6E4C               	movwf	_Train_Move_Pwm_Count+1,c
  4560  001516  0E26               	movlw	38
  4561  001518  6E4B               	movwf	_Train_Move_Pwm_Count,c
  4562                           
  4563                           ;State_Mchn.c: 1526: PORTCbits.RC0 = 0;
  4564  00151A  9082               	bcf	3970,0,c	;volatile
  4565                           
  4566                           ;State_Mchn.c: 1527: Return_Val = (char)-1;
  4567  00151C  0100               	movlb	0	; () banked
  4568  00151E  69FB               	setf	Train_Move_Right_Start@Return_Val& (0+255),b
  4569  001520  D00F               	goto	l3527
  4570  001522                     l3519:
  4571  001522  0E10               	movlw	16
  4572  001524  0100               	movlb	0	; () banked
  4573  001526  5DE6               	subwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),w,b
  4574  001528  0E27               	movlw	39
  4575  00152A  0100               	movlb	0	; () banked
  4576  00152C  59E7               	subwfb	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  4577  00152E  A0D8               	btfss	status,0,c
  4578  001530  D002               	goto	l720
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;State_Mchn.c: 1532: {
  4582                           ;State_Mchn.c: 1533: Switch_Train_Move = 3;
  4583  001532  0E03               	movlw	3
  4584  001534  D7DB               	goto	L34
  4585  001536                     l720:
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;State_Mchn.c: 1537: }
  4589                           ;State_Mchn.c: 1538: Return_Val = (char)-1;
  4590  001536  0100               	movlb	0	; () banked
  4591  001538  69FB               	setf	Train_Move_Right_Start@Return_Val& (0+255),b
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;State_Mchn.c: 1539: Train_Move_Wait_Time++;
  4595  00153A  0100               	movlb	0	; () banked
  4596  00153C  4BE6               	infsnz	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),f,b
  4597  00153E  2BE7               	incf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  4598  001540                     l3527:
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;State_Mchn.c: 1540: Switch_Train_Move = 2;
  4602  001540  0E02               	movlw	2
  4603  001542  6E24               	movwf	_Switch_Train_Move,c
  4604                           
  4605                           ;State_Mchn.c: 1541: break;
  4606  001544  D030               	goto	l3549
  4607  001546                     l3529:
  4608  001546  C04B  F03D         	movff	_Train_Move_Pwm_Count,SetDCPWM1@dutycycle
  4609  00154A  C04C  F03E         	movff	_Train_Move_Pwm_Count+1,SetDCPWM1@dutycycle+1
  4610  00154E  EC91  F00D         	call	_SetDCPWM1	;wreg free
  4611                           
  4612                           ;State_Mchn.c: 1544: if (Train_Move_Pwm_Count >= MaxPwmRight)
  4613  001552  5049               	movf	_MaxPwmRight,w,c
  4614  001554  5C4B               	subwf	_Train_Move_Pwm_Count,w,c
  4615  001556  504A               	movf	_MaxPwmRight+1,w,c
  4616  001558  584C               	subwfb	_Train_Move_Pwm_Count+1,w,c
  4617  00155A  A0D8               	btfss	status,0,c
  4618  00155C  D006               	goto	l3535
  4619                           
  4620                           ;State_Mchn.c: 1545: {
  4621                           ;State_Mchn.c: 1546: Switch_Train_Move = 0;
  4622  00155E  0E00               	movlw	0
  4623  001560  6E24               	movwf	_Switch_Train_Move,c
  4624                           
  4625                           ;State_Mchn.c: 1547: Return_Val = (char)0;
  4626  001562  0E00               	movlw	0
  4627  001564  0100               	movlb	0	; () banked
  4628  001566  6FFB               	movwf	Train_Move_Right_Start@Return_Val& (0+255),b
  4629                           
  4630                           ;State_Mchn.c: 1548: break;
  4631  001568  D01E               	goto	l3549
  4632  00156A                     l3535:
  4633                           
  4634                           ;State_Mchn.c: 1549: }
  4635                           ;State_Mchn.c: 1550: if (Train_Move_Pwm_Fast_Count >= 45)
  4636  00156A  5008               	movf	_Train_Move_Pwm_Fast_Count+1,w,c
  4637  00156C  E104               	bnz	u2310
  4638  00156E  0E2D               	movlw	45
  4639  001570  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  4640  001572  A0D8               	btfss	status,0,c
  4641  001574  D006               	goto	l3541
  4642  001576                     u2310:
  4643                           
  4644                           ;State_Mchn.c: 1551: {
  4645                           ;State_Mchn.c: 1552: Train_Move_Pwm_Count++;
  4646  001576  4A4B               	infsnz	_Train_Move_Pwm_Count,f,c
  4647  001578  2A4C               	incf	_Train_Move_Pwm_Count+1,f,c
  4648                           
  4649                           ;State_Mchn.c: 1553: Train_Move_Pwm_Fast_Count = 0;
  4650  00157A  0E00               	movlw	0
  4651  00157C  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  4652  00157E  0E00               	movlw	0
  4653  001580  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  4654  001582                     l3541:
  4655                           
  4656                           ;State_Mchn.c: 1554: }
  4657                           ;State_Mchn.c: 1555: Train_Move_Pwm_Fast_Count++;
  4658  001582  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  4659  001584  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  4660  001586                     l3543:
  4661                           
  4662                           ;State_Mchn.c: 1556: Return_Val = (char)-1;
  4663  001586  0100               	movlb	0	; () banked
  4664  001588  69FB               	setf	Train_Move_Right_Start@Return_Val& (0+255),b
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;State_Mchn.c: 1560: }
  4668                           
  4669                           ; BSR set to: 0
  4670                           
  4671                           ;State_Mchn.c: 1559: default : break;
  4672                           
  4673                           ;State_Mchn.c: 1557: break;
  4674  00158A  D00D               	goto	l3549
  4675  00158C                     l3547:
  4676  00158C  5024               	movf	_Switch_Train_Move,w,c
  4677                           
  4678                           ; Switch size 1, requested type "space"
  4679                           ; Number of cases is 4, Range of values is 0 to 3
  4680                           ; switch strategies available:
  4681                           ; Name         Instructions Cycles
  4682                           ; simple_byte           13     7 (average)
  4683                           ;	Chosen strategy is simple_byte
  4684  00158E  0A00               	xorlw	0	; case 0
  4685  001590  B4D8               	btfsc	status,2,c
  4686  001592  D7A3               	goto	l3497
  4687  001594  0A01               	xorlw	1	; case 1
  4688  001596  B4D8               	btfsc	status,2,c
  4689  001598  D7B6               	goto	l3509
  4690  00159A  0A03               	xorlw	3	; case 2
  4691  00159C  B4D8               	btfsc	status,2,c
  4692  00159E  D7C1               	goto	l3519
  4693  0015A0  0A01               	xorlw	1	; case 3
  4694  0015A2  B4D8               	btfsc	status,2,c
  4695  0015A4  D7D0               	goto	l3529
  4696  0015A6                     l3549:
  4697                           
  4698                           ;State_Mchn.c: 1562: return(Return_Val);
  4699  0015A6  0100               	movlb	0	; () banked
  4700  0015A8  51FB               	movf	Train_Move_Right_Start@Return_Val& (0+255),w,b
  4701  0015AA  0012               	return	
  4702  0015AC                     __end_of_Train_Move_Right_Start:
  4703                           	opt stack 0
  4704                           tblptru	equ	0xFF8
  4705                           tblptrh	equ	0xFF7
  4706                           tblptrl	equ	0xFF6
  4707                           tablat	equ	0xFF5
  4708                           postinc0	equ	0xFEE
  4709                           wreg	equ	0xFE8
  4710                           postdec1	equ	0xFE5
  4711                           fsr1l	equ	0xFE1
  4712                           status	equ	0xFD8
  4713                           
  4714 ;; *************** function _Train_Move_Right_Brake *****************
  4715 ;; Defined at:
  4716 ;;		line 1566 in file "../State_Mchn.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      unsigned char 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4732 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4733 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4734 ;;Total ram usage:        2 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    5
  4737 ;; This function calls:
  4738 ;;		_SetDCPWM1
  4739 ;; This function is called by:
  4740 ;;		_Train_Path
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text4
  4745  0013F4                     __ptext4:
  4746                           	opt stack 0
  4747  0013F4                     _Train_Move_Right_Brake:
  4748                           	opt stack 23
  4749                           
  4750                           ;State_Mchn.c: 1568: static char Return_Val = (char)-1;
  4751                           ;State_Mchn.c: 1569: static unsigned int Train_Move_Wait_Time = 0;
  4752                           ;State_Mchn.c: 1571: switch(Switch_Train_Move)
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;incstack = 0
  4756  0013F4  D061               	goto	l3665
  4757  0013F6                     l3615:
  4758  0013F6  C04B  F03D         	movff	_Train_Move_Pwm_Count,SetDCPWM1@dutycycle
  4759  0013FA  C04C  F03E         	movff	_Train_Move_Pwm_Count+1,SetDCPWM1@dutycycle+1
  4760  0013FE  EC91  F00D         	call	_SetDCPWM1	;wreg free
  4761                           
  4762                           ;State_Mchn.c: 1574: if (Train_Move_Pwm_Count <= 550)
  4763  001402  0E27               	movlw	39
  4764  001404  5C4B               	subwf	_Train_Move_Pwm_Count,w,c
  4765  001406  0E02               	movlw	2
  4766  001408  584C               	subwfb	_Train_Move_Pwm_Count+1,w,c
  4767  00140A  B0D8               	btfsc	status,0,c
  4768  00140C  D003               	goto	l3623
  4769                           
  4770                           ;State_Mchn.c: 1575: {
  4771                           ;State_Mchn.c: 1576: Switch_Train_Move = 1;
  4772  00140E  0E01               	movlw	1
  4773  001410  6E24               	movwf	_Switch_Train_Move,c
  4774  001412  D037               	goto	l3651
  4775  001414                     l3623:
  4776                           
  4777                           ;State_Mchn.c: 1579: }
  4778                           ;State_Mchn.c: 1580: if (Train_Move_Pwm_Fast_Count >= MaxJerkPwm_Brake)
  4779  001414  504D               	movf	_MaxJerkPwm_Brake,w,c
  4780  001416  6E43               	movwf	??_Train_Move_Right_Brake& (0+255),c
  4781  001418  6A44               	clrf	(??_Train_Move_Right_Brake+1)& (0+255),c
  4782  00141A  5043               	movf	??_Train_Move_Right_Brake,w,c
  4783  00141C  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  4784  00141E  5044               	movf	??_Train_Move_Right_Brake+1,w,c
  4785  001420  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  4786  001422  A0D8               	btfss	status,0,c
  4787  001424  D007               	goto	l3629
  4788                           
  4789                           ;State_Mchn.c: 1581: {
  4790                           ;State_Mchn.c: 1582: Train_Move_Pwm_Count--;
  4791  001426  064B               	decf	_Train_Move_Pwm_Count,f,c
  4792  001428  A0D8               	btfss	status,0,c
  4793  00142A  064C               	decf	_Train_Move_Pwm_Count+1,f,c
  4794                           
  4795                           ;State_Mchn.c: 1583: Train_Move_Pwm_Fast_Count = 0;
  4796  00142C  0E00               	movlw	0
  4797  00142E  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  4798  001430  0E00               	movlw	0
  4799  001432  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  4800  001434                     l3629:
  4801                           
  4802                           ;State_Mchn.c: 1584: }
  4803                           ;State_Mchn.c: 1585: Train_Move_Pwm_Fast_Count++;
  4804  001434  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  4805  001436  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  4806  001438  D024               	goto	l3651
  4807  00143A                     l3633:
  4808  00143A  0E10               	movlw	16
  4809  00143C  0100               	movlb	0	; () banked
  4810  00143E  5DE4               	subwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),w,b
  4811  001440  0E27               	movlw	39
  4812  001442  0100               	movlb	0	; () banked
  4813  001444  59E5               	subwfb	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  4814  001446  A0D8               	btfss	status,0,c
  4815  001448  D008               	goto	l738
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;State_Mchn.c: 1590: {
  4819                           ;State_Mchn.c: 1591: Switch_Train_Move = 2;
  4820  00144A  0E02               	movlw	2
  4821  00144C  6E24               	movwf	_Switch_Train_Move,c
  4822                           
  4823                           ;State_Mchn.c: 1592: Train_Move_Wait_Time = 0;
  4824  00144E  0E00               	movlw	0
  4825  001450  0100               	movlb	0	; () banked
  4826  001452  6FE5               	movwf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),b
  4827  001454  0E00               	movlw	0
  4828  001456  6FE4               	movwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),b
  4829  001458  D014               	goto	l3651
  4830  00145A                     l738:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;State_Mchn.c: 1595: }
  4834                           ;State_Mchn.c: 1596: Return_Val = (char)-1;
  4835  00145A  0100               	movlb	0	; () banked
  4836  00145C  69FA               	setf	Train_Move_Right_Brake@Return_Val& (0+255),b
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;State_Mchn.c: 1597: Train_Move_Wait_Time++;
  4840  00145E  0100               	movlb	0	; () banked
  4841  001460  4BE4               	infsnz	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),f,b
  4842  001462  2BE5               	incf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;State_Mchn.c: 1598: Switch_Train_Move = 1;
  4846  001464  0E01               	movlw	1
  4847  001466  6E24               	movwf	_Switch_Train_Move,c
  4848                           
  4849                           ;State_Mchn.c: 1599: break;
  4850  001468  D034               	goto	l3667
  4851  00146A                     l3643:
  4852  00146A  0E02               	movlw	2
  4853  00146C  6E3E               	movwf	SetDCPWM1@dutycycle+1,c
  4854  00146E  0E26               	movlw	38
  4855  001470  6E3D               	movwf	SetDCPWM1@dutycycle,c
  4856  001472  EC91  F00D         	call	_SetDCPWM1	;wreg free
  4857                           
  4858                           ;State_Mchn.c: 1602: PORTCbits.RC0 = 1;
  4859  001476  8082               	bsf	3970,0,c	;volatile
  4860                           
  4861                           ;State_Mchn.c: 1603: Train_Move_Pwm_Count = 550;
  4862  001478  0E02               	movlw	2
  4863  00147A  6E4C               	movwf	_Train_Move_Pwm_Count+1,c
  4864  00147C  0E26               	movlw	38
  4865  00147E  6E4B               	movwf	_Train_Move_Pwm_Count,c
  4866  001480  D019               	goto	l3659
  4867  001482                     l3651:
  4868                           
  4869                           ;State_Mchn.c: 1605: Return_Val = (char)-1;
  4870  001482  0100               	movlb	0	; () banked
  4871  001484  69FA               	setf	Train_Move_Right_Brake@Return_Val& (0+255),b
  4872                           
  4873                           ;State_Mchn.c: 1606: break;
  4874  001486  D025               	goto	l3667
  4875  001488                     l3653:
  4876  001488  0E88               	movlw	136
  4877  00148A  0100               	movlb	0	; () banked
  4878  00148C  5DE4               	subwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),w,b
  4879  00148E  0E13               	movlw	19
  4880  001490  0100               	movlb	0	; () banked
  4881  001492  59E5               	subwfb	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  4882  001494  A0D8               	btfss	status,0,c
  4883  001496  D00B               	goto	l3657
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;State_Mchn.c: 1609: {
  4887                           ;State_Mchn.c: 1610: Switch_Train_Move = 0;
  4888  001498  0E00               	movlw	0
  4889  00149A  6E24               	movwf	_Switch_Train_Move,c
  4890                           
  4891                           ;State_Mchn.c: 1611: Train_Move_Wait_Time = 0;
  4892  00149C  0E00               	movlw	0
  4893  00149E  0100               	movlb	0	; () banked
  4894  0014A0  6FE5               	movwf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),b
  4895  0014A2  0E00               	movlw	0
  4896  0014A4  6FE4               	movwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),b
  4897                           
  4898                           ;State_Mchn.c: 1612: Return_Val = (char)0;
  4899  0014A6  0E00               	movlw	0
  4900  0014A8  0100               	movlb	0	; () banked
  4901  0014AA  6FFA               	movwf	Train_Move_Right_Brake@Return_Val& (0+255),b
  4902                           
  4903                           ;State_Mchn.c: 1613: break;
  4904  0014AC  D012               	goto	l3667
  4905  0014AE                     l3657:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;State_Mchn.c: 1614: }
  4909                           ;State_Mchn.c: 1615: Train_Move_Wait_Time++;
  4910  0014AE  0100               	movlb	0	; () banked
  4911  0014B0  4BE4               	infsnz	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),f,b
  4912  0014B2  2BE5               	incf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  4913  0014B4                     l3659:
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;State_Mchn.c: 1616: Switch_Train_Move = 3;
  4917  0014B4  0E03               	movlw	3
  4918  0014B6  D7AC               	goto	L35
  4919  0014B8                     l3665:
  4920  0014B8  5024               	movf	_Switch_Train_Move,w,c
  4921                           
  4922                           ; Switch size 1, requested type "space"
  4923                           ; Number of cases is 4, Range of values is 0 to 3
  4924                           ; switch strategies available:
  4925                           ; Name         Instructions Cycles
  4926                           ; simple_byte           13     7 (average)
  4927                           ;	Chosen strategy is simple_byte
  4928  0014BA  0A00               	xorlw	0	; case 0
  4929  0014BC  B4D8               	btfsc	status,2,c
  4930  0014BE  D79B               	goto	l3615
  4931  0014C0  0A01               	xorlw	1	; case 1
  4932  0014C2  B4D8               	btfsc	status,2,c
  4933  0014C4  D7BA               	goto	l3633
  4934  0014C6  0A03               	xorlw	3	; case 2
  4935  0014C8  B4D8               	btfsc	status,2,c
  4936  0014CA  D7CF               	goto	l3643
  4937  0014CC  0A01               	xorlw	1	; case 3
  4938  0014CE  B4D8               	btfsc	status,2,c
  4939  0014D0  D7DB               	goto	l3653
  4940  0014D2                     l3667:
  4941                           
  4942                           ;State_Mchn.c: 1623: return(Return_Val);
  4943  0014D2  0100               	movlb	0	; () banked
  4944  0014D4  51FA               	movf	Train_Move_Right_Brake@Return_Val& (0+255),w,b
  4945  0014D6  0012               	return	
  4946  0014D8                     __end_of_Train_Move_Right_Brake:
  4947                           	opt stack 0
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           postinc0	equ	0xFEE
  4953                           wreg	equ	0xFE8
  4954                           postdec1	equ	0xFE5
  4955                           fsr1l	equ	0xFE1
  4956                           status	equ	0xFD8
  4957                           
  4958 ;; *************** function _Train_Move_Left_Start *****************
  4959 ;; Defined at:
  4960 ;;		line 1380 in file "../State_Mchn.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      unsigned char 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4974 ;;      Params:         0       0       0       0       0       0       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4977 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4978 ;;Total ram usage:        0 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    5
  4981 ;; This function calls:
  4982 ;;		_SetDCPWM1
  4983 ;; This function is called by:
  4984 ;;		_Train_Path
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text5
  4989  0015AC                     __ptext5:
  4990                           	opt stack 0
  4991  0015AC                     _Train_Move_Left_Start:
  4992                           	opt stack 23
  4993                           
  4994                           ;State_Mchn.c: 1382: static char Return_Val = (char)-1;
  4995                           ;State_Mchn.c: 1383: static unsigned int Train_Move_Wait_Time = 0;
  4996                           ;State_Mchn.c: 1385: switch(Switch_Train_Move)
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;incstack = 0
  5000  0015AC  D059               	goto	l3607
  5001  0015AE                     l3555:
  5002  0015AE  0E88               	movlw	136
  5003  0015B0  0100               	movlb	0	; () banked
  5004  0015B2  5DE2               	subwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),w,b
  5005  0015B4  0E13               	movlw	19
  5006  0015B6  0100               	movlb	0	; () banked
  5007  0015B8  59E3               	subwfb	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  5008  0015BA  A0D8               	btfss	status,0,c
  5009  0015BC  D002               	goto	l3561
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;State_Mchn.c: 1390: {
  5013                           ;State_Mchn.c: 1391: Switch_Train_Move = 1;
  5014  0015BE  0E01               	movlw	1
  5015  0015C0  D01F               	goto	L37
  5016  0015C2                     l3561:
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;State_Mchn.c: 1395: }
  5020                           ;State_Mchn.c: 1396: Train_Move_Wait_Time++;
  5021  0015C2  0100               	movlb	0	; () banked
  5022  0015C4  4BE2               	infsnz	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),f,b
  5023  0015C6  2BE3               	incf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;State_Mchn.c: 1397: Switch_Train_Move = 0;
  5027  0015C8  0E00               	movlw	0
  5028  0015CA  D00F               	goto	L36
  5029  0015CC                     l3565:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;State_Mchn.c: 1398: Return_Val = (char)-1;
  5033  0015CC  0100               	movlb	0	; () banked
  5034  0015CE  69F9               	setf	Train_Move_Left_Start@Return_Val& (0+255),b
  5035                           
  5036                           ;State_Mchn.c: 1399: break;
  5037  0015D0  D054               	goto	l3609
  5038  0015D2                     l3567:
  5039  0015D2  0E01               	movlw	1
  5040  0015D4  6E3E               	movwf	SetDCPWM1@dutycycle+1,c
  5041  0015D6  0ECC               	movlw	204
  5042  0015D8  6E3D               	movwf	SetDCPWM1@dutycycle,c
  5043  0015DA  EC91  F00D         	call	_SetDCPWM1	;wreg free
  5044                           
  5045                           ;State_Mchn.c: 1402: Train_Move_Pwm_Count = 460;
  5046  0015DE  0E01               	movlw	1
  5047  0015E0  6E4C               	movwf	_Train_Move_Pwm_Count+1,c
  5048  0015E2  0ECC               	movlw	204
  5049  0015E4  6E4B               	movwf	_Train_Move_Pwm_Count,c
  5050                           
  5051                           ;State_Mchn.c: 1403: PORTCbits.RC0 = 0;
  5052  0015E6  9082               	bcf	3970,0,c	;volatile
  5053  0015E8  D015               	goto	l3585
  5054  0015EA                     L36:
  5055  0015EA  6E24               	movwf	_Switch_Train_Move,c
  5056  0015EC  D7EF               	goto	l3565
  5057  0015EE                     l3577:
  5058  0015EE  0E10               	movlw	16
  5059  0015F0  0100               	movlb	0	; () banked
  5060  0015F2  5DE2               	subwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),w,b
  5061  0015F4  0E27               	movlw	39
  5062  0015F6  0100               	movlb	0	; () banked
  5063  0015F8  59E3               	subwfb	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  5064  0015FA  A0D8               	btfss	status,0,c
  5065  0015FC  D008               	goto	l3583
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;State_Mchn.c: 1409: {
  5069                           ;State_Mchn.c: 1410: Switch_Train_Move = 3;
  5070  0015FE  0E03               	movlw	3
  5071  001600                     L37:
  5072  001600  6E24               	movwf	_Switch_Train_Move,c
  5073                           
  5074                           ;State_Mchn.c: 1411: Train_Move_Wait_Time = 0;
  5075  001602  0E00               	movlw	0
  5076  001604  0100               	movlb	0	; () banked
  5077  001606  6FE3               	movwf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),b
  5078  001608  0E00               	movlw	0
  5079  00160A  6FE2               	movwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),b
  5080  00160C  D7DF               	goto	l3565
  5081  00160E                     l3583:
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;State_Mchn.c: 1414: }
  5085                           ;State_Mchn.c: 1415: Train_Move_Wait_Time++;
  5086  00160E  0100               	movlb	0	; () banked
  5087  001610  4BE2               	infsnz	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),f,b
  5088  001612  2BE3               	incf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  5089  001614                     l3585:
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;State_Mchn.c: 1416: Switch_Train_Move = 2;
  5093  001614  0E02               	movlw	2
  5094  001616  D7E9               	goto	L36
  5095  001618                     l3589:
  5096  001618  C04B  F03D         	movff	_Train_Move_Pwm_Count,SetDCPWM1@dutycycle
  5097  00161C  C04C  F03E         	movff	_Train_Move_Pwm_Count+1,SetDCPWM1@dutycycle+1
  5098  001620  EC91  F00D         	call	_SetDCPWM1	;wreg free
  5099                           
  5100                           ;State_Mchn.c: 1421: Return_Val = (char)-1;
  5101  001624  0100               	movlb	0	; () banked
  5102  001626  69F9               	setf	Train_Move_Left_Start@Return_Val& (0+255),b
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;State_Mchn.c: 1422: if (Train_Move_Pwm_Count <= MaxPwmLeft)
  5106  001628  504B               	movf	_Train_Move_Pwm_Count,w,c
  5107  00162A  5C47               	subwf	_MaxPwmLeft,w,c
  5108  00162C  504C               	movf	_Train_Move_Pwm_Count+1,w,c
  5109  00162E  5848               	subwfb	_MaxPwmLeft+1,w,c
  5110  001630  A0D8               	btfss	status,0,c
  5111  001632  D006               	goto	l3597
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;State_Mchn.c: 1423: {
  5115                           ;State_Mchn.c: 1424: Switch_Train_Move = 0;
  5116  001634  0E00               	movlw	0
  5117  001636  6E24               	movwf	_Switch_Train_Move,c
  5118                           
  5119                           ;State_Mchn.c: 1425: Return_Val = (char)0;
  5120  001638  0E00               	movlw	0
  5121  00163A  0100               	movlb	0	; () banked
  5122  00163C  6FF9               	movwf	Train_Move_Left_Start@Return_Val& (0+255),b
  5123                           
  5124                           ;State_Mchn.c: 1426: break;
  5125  00163E  D01D               	goto	l3609
  5126  001640                     l3597:
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;State_Mchn.c: 1427: }
  5130                           ;State_Mchn.c: 1428: if (Train_Move_Pwm_Fast_Count >= 45)
  5131  001640  5008               	movf	_Train_Move_Pwm_Fast_Count+1,w,c
  5132  001642  E104               	bnz	u2350
  5133  001644  0E2D               	movlw	45
  5134  001646  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  5135  001648  A0D8               	btfss	status,0,c
  5136  00164A  D007               	goto	l3603
  5137  00164C                     u2350:
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;State_Mchn.c: 1429: {
  5141                           ;State_Mchn.c: 1430: Train_Move_Pwm_Count--;
  5142  00164C  064B               	decf	_Train_Move_Pwm_Count,f,c
  5143  00164E  A0D8               	btfss	status,0,c
  5144  001650  064C               	decf	_Train_Move_Pwm_Count+1,f,c
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;State_Mchn.c: 1431: Train_Move_Pwm_Fast_Count = 0;
  5148  001652  0E00               	movlw	0
  5149  001654  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  5150  001656  0E00               	movlw	0
  5151  001658  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  5152  00165A                     l3603:
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;State_Mchn.c: 1432: }
  5156                           ;State_Mchn.c: 1433: Train_Move_Pwm_Fast_Count++;
  5157  00165A  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  5158  00165C  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;State_Mchn.c: 1436: }
  5162                           
  5163                           ; BSR set to: 0
  5164                           
  5165                           ;State_Mchn.c: 1435: default : break;
  5166                           
  5167                           ;State_Mchn.c: 1434: break;
  5168  00165E  D00D               	goto	l3609
  5169  001660                     l3607:
  5170  001660  5024               	movf	_Switch_Train_Move,w,c
  5171                           
  5172                           ; Switch size 1, requested type "space"
  5173                           ; Number of cases is 4, Range of values is 0 to 3
  5174                           ; switch strategies available:
  5175                           ; Name         Instructions Cycles
  5176                           ; simple_byte           13     7 (average)
  5177                           ;	Chosen strategy is simple_byte
  5178  001662  0A00               	xorlw	0	; case 0
  5179  001664  B4D8               	btfsc	status,2,c
  5180  001666  D7A3               	goto	l3555
  5181  001668  0A01               	xorlw	1	; case 1
  5182  00166A  B4D8               	btfsc	status,2,c
  5183  00166C  D7B2               	goto	l3567
  5184  00166E  0A03               	xorlw	3	; case 2
  5185  001670  B4D8               	btfsc	status,2,c
  5186  001672  D7BD               	goto	l3577
  5187  001674  0A01               	xorlw	1	; case 3
  5188  001676  B4D8               	btfsc	status,2,c
  5189  001678  D7CF               	goto	l3589
  5190  00167A                     l3609:
  5191                           
  5192                           ;State_Mchn.c: 1438: return(Return_Val);
  5193  00167A  0100               	movlb	0	; () banked
  5194  00167C  51F9               	movf	Train_Move_Left_Start@Return_Val& (0+255),w,b
  5195  00167E  0012               	return	
  5196  001680                     __end_of_Train_Move_Left_Start:
  5197                           	opt stack 0
  5198                           tblptru	equ	0xFF8
  5199                           tblptrh	equ	0xFF7
  5200                           tblptrl	equ	0xFF6
  5201                           tablat	equ	0xFF5
  5202                           postinc0	equ	0xFEE
  5203                           wreg	equ	0xFE8
  5204                           postdec1	equ	0xFE5
  5205                           fsr1l	equ	0xFE1
  5206                           status	equ	0xFD8
  5207                           
  5208 ;; *************** function _Train_Move_Left_Brake *****************
  5209 ;; Defined at:
  5210 ;;		line 1442 in file "../State_Mchn.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;		None
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;		None
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      unsigned char 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5224 ;;      Params:         0       0       0       0       0       0       0       0       0
  5225 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5226 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5227 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5228 ;;Total ram usage:        2 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    5
  5231 ;; This function calls:
  5232 ;;		_SetDCPWM1
  5233 ;; This function is called by:
  5234 ;;		_Train_Path
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           	psect	text6
  5239  00130E                     __ptext6:
  5240                           	opt stack 0
  5241  00130E                     _Train_Move_Left_Brake:
  5242                           	opt stack 23
  5243                           
  5244                           ;State_Mchn.c: 1444: static char Return_Val = (char)-1;
  5245                           ;State_Mchn.c: 1445: static unsigned int Train_Move_Wait_Time = 0;
  5246                           ;State_Mchn.c: 1447: switch(Switch_Train_Move)
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;incstack = 0
  5250  00130E  D062               	goto	l3723
  5251  001310                     l3673:
  5252  001310  C04B  F03D         	movff	_Train_Move_Pwm_Count,SetDCPWM1@dutycycle
  5253  001314  C04C  F03E         	movff	_Train_Move_Pwm_Count+1,SetDCPWM1@dutycycle+1
  5254  001318  EC91  F00D         	call	_SetDCPWM1	;wreg free
  5255                           
  5256                           ;State_Mchn.c: 1450: Return_Val = (char)-1;
  5257  00131C  0100               	movlb	0	; () banked
  5258  00131E  69F8               	setf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;State_Mchn.c: 1451: if (Train_Move_Pwm_Count >= 460)
  5262  001320  0ECC               	movlw	204
  5263  001322  5C4B               	subwf	_Train_Move_Pwm_Count,w,c
  5264  001324  0E01               	movlw	1
  5265  001326  584C               	subwfb	_Train_Move_Pwm_Count+1,w,c
  5266  001328  A0D8               	btfss	status,0,c
  5267  00132A  D003               	goto	l3683
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;State_Mchn.c: 1452: {
  5271                           ;State_Mchn.c: 1453: Switch_Train_Move = 1;
  5272  00132C  0E01               	movlw	1
  5273  00132E  6E24               	movwf	_Switch_Train_Move,c
  5274  001330  D036               	goto	l3709
  5275  001332                     l3683:
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;State_Mchn.c: 1456: }
  5279                           ;State_Mchn.c: 1457: if (Train_Move_Pwm_Fast_Count >= MaxJerkPwm_Brake)
  5280  001332  504D               	movf	_MaxJerkPwm_Brake,w,c
  5281  001334  6E43               	movwf	??_Train_Move_Left_Brake& (0+255),c
  5282  001336  6A44               	clrf	(??_Train_Move_Left_Brake+1)& (0+255),c
  5283  001338  5043               	movf	??_Train_Move_Left_Brake,w,c
  5284  00133A  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  5285  00133C  5044               	movf	??_Train_Move_Left_Brake+1,w,c
  5286  00133E  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  5287  001340  A0D8               	btfss	status,0,c
  5288  001342  D006               	goto	l3689
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;State_Mchn.c: 1458: {
  5292                           ;State_Mchn.c: 1459: Train_Move_Pwm_Count++;
  5293  001344  4A4B               	infsnz	_Train_Move_Pwm_Count,f,c
  5294  001346  2A4C               	incf	_Train_Move_Pwm_Count+1,f,c
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;State_Mchn.c: 1460: Train_Move_Pwm_Fast_Count = 0;
  5298  001348  0E00               	movlw	0
  5299  00134A  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  5300  00134C  0E00               	movlw	0
  5301  00134E  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  5302  001350                     l3689:
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;State_Mchn.c: 1461: }
  5306                           ;State_Mchn.c: 1462: Train_Move_Pwm_Fast_Count++;
  5307  001350  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  5308  001352  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  5309                           
  5310                           ;State_Mchn.c: 1463: break;
  5311  001354  D04C               	goto	l3725
  5312  001356                     l3691:
  5313  001356  0E10               	movlw	16
  5314  001358  0100               	movlb	0	; () banked
  5315  00135A  5DE0               	subwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),w,b
  5316  00135C  0E27               	movlw	39
  5317  00135E  0100               	movlb	0	; () banked
  5318  001360  59E1               	subwfb	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  5319  001362  A0D8               	btfss	status,0,c
  5320  001364  D008               	goto	l702
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;State_Mchn.c: 1466: {
  5324                           ;State_Mchn.c: 1467: Switch_Train_Move = 2;
  5325  001366  0E02               	movlw	2
  5326  001368  6E24               	movwf	_Switch_Train_Move,c
  5327                           
  5328                           ;State_Mchn.c: 1468: Train_Move_Wait_Time = 0;
  5329  00136A  0E00               	movlw	0
  5330  00136C  0100               	movlb	0	; () banked
  5331  00136E  6FE1               	movwf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),b
  5332  001370  0E00               	movlw	0
  5333  001372  6FE0               	movwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),b
  5334  001374  D014               	goto	l3709
  5335  001376                     l702:
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;State_Mchn.c: 1471: }
  5339                           ;State_Mchn.c: 1472: Return_Val = (char)-1;
  5340  001376  0100               	movlb	0	; () banked
  5341  001378  69F8               	setf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;State_Mchn.c: 1473: Train_Move_Wait_Time++;
  5345  00137A  0100               	movlb	0	; () banked
  5346  00137C  4BE0               	infsnz	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),f,b
  5347  00137E  2BE1               	incf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;State_Mchn.c: 1474: Switch_Train_Move = 1;
  5351  001380  0E01               	movlw	1
  5352  001382  6E24               	movwf	_Switch_Train_Move,c
  5353                           
  5354                           ;State_Mchn.c: 1475: break;
  5355  001384  D034               	goto	l3725
  5356  001386                     l3701:
  5357  001386  0E01               	movlw	1
  5358  001388  6E3E               	movwf	SetDCPWM1@dutycycle+1,c
  5359  00138A  0ECC               	movlw	204
  5360  00138C  6E3D               	movwf	SetDCPWM1@dutycycle,c
  5361  00138E  EC91  F00D         	call	_SetDCPWM1	;wreg free
  5362                           
  5363                           ;State_Mchn.c: 1478: PORTCbits.RC0 = 1;
  5364  001392  8082               	bsf	3970,0,c	;volatile
  5365                           
  5366                           ;State_Mchn.c: 1479: Train_Move_Pwm_Count = 460;
  5367  001394  0E01               	movlw	1
  5368  001396  6E4C               	movwf	_Train_Move_Pwm_Count+1,c
  5369  001398  0ECC               	movlw	204
  5370  00139A  6E4B               	movwf	_Train_Move_Pwm_Count,c
  5371  00139C  D019               	goto	l3717
  5372  00139E                     l3709:
  5373                           
  5374                           ;State_Mchn.c: 1481: Return_Val = (char)-1;
  5375  00139E  0100               	movlb	0	; () banked
  5376  0013A0  69F8               	setf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5377                           
  5378                           ;State_Mchn.c: 1482: break;
  5379  0013A2  D025               	goto	l3725
  5380  0013A4                     l3711:
  5381  0013A4  0E88               	movlw	136
  5382  0013A6  0100               	movlb	0	; () banked
  5383  0013A8  5DE0               	subwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),w,b
  5384  0013AA  0E13               	movlw	19
  5385  0013AC  0100               	movlb	0	; () banked
  5386  0013AE  59E1               	subwfb	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  5387  0013B0  A0D8               	btfss	status,0,c
  5388  0013B2  D00B               	goto	l3715
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;State_Mchn.c: 1485: {
  5392                           ;State_Mchn.c: 1486: Switch_Train_Move = 0;
  5393  0013B4  0E00               	movlw	0
  5394  0013B6  6E24               	movwf	_Switch_Train_Move,c
  5395                           
  5396                           ;State_Mchn.c: 1487: Train_Move_Wait_Time = 0;
  5397  0013B8  0E00               	movlw	0
  5398  0013BA  0100               	movlb	0	; () banked
  5399  0013BC  6FE1               	movwf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),b
  5400  0013BE  0E00               	movlw	0
  5401  0013C0  6FE0               	movwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),b
  5402                           
  5403                           ;State_Mchn.c: 1488: Return_Val = (char)0;
  5404  0013C2  0E00               	movlw	0
  5405  0013C4  0100               	movlb	0	; () banked
  5406  0013C6  6FF8               	movwf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5407                           
  5408                           ;State_Mchn.c: 1489: break;
  5409  0013C8  D012               	goto	l3725
  5410  0013CA                     l3715:
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;State_Mchn.c: 1490: }
  5414                           ;State_Mchn.c: 1491: Train_Move_Wait_Time++;
  5415  0013CA  0100               	movlb	0	; () banked
  5416  0013CC  4BE0               	infsnz	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),f,b
  5417  0013CE  2BE1               	incf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  5418  0013D0                     l3717:
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;State_Mchn.c: 1492: Switch_Train_Move = 3;
  5422  0013D0  0E03               	movlw	3
  5423  0013D2  D7AD               	goto	L38
  5424  0013D4                     l3723:
  5425  0013D4  5024               	movf	_Switch_Train_Move,w,c
  5426                           
  5427                           ; Switch size 1, requested type "space"
  5428                           ; Number of cases is 4, Range of values is 0 to 3
  5429                           ; switch strategies available:
  5430                           ; Name         Instructions Cycles
  5431                           ; simple_byte           13     7 (average)
  5432                           ;	Chosen strategy is simple_byte
  5433  0013D6  0A00               	xorlw	0	; case 0
  5434  0013D8  B4D8               	btfsc	status,2,c
  5435  0013DA  D79A               	goto	l3673
  5436  0013DC  0A01               	xorlw	1	; case 1
  5437  0013DE  B4D8               	btfsc	status,2,c
  5438  0013E0  D7BA               	goto	l3691
  5439  0013E2  0A03               	xorlw	3	; case 2
  5440  0013E4  B4D8               	btfsc	status,2,c
  5441  0013E6  D7CF               	goto	l3701
  5442  0013E8  0A01               	xorlw	1	; case 3
  5443  0013EA  B4D8               	btfsc	status,2,c
  5444  0013EC  D7DB               	goto	l3711
  5445  0013EE                     l3725:
  5446                           
  5447                           ;State_Mchn.c: 1499: return(Return_Val);
  5448  0013EE  0100               	movlb	0	; () banked
  5449  0013F0  51F8               	movf	Train_Move_Left_Brake@Return_Val& (0+255),w,b
  5450  0013F2  0012               	return	
  5451  0013F4                     __end_of_Train_Move_Left_Brake:
  5452                           	opt stack 0
  5453                           tblptru	equ	0xFF8
  5454                           tblptrh	equ	0xFF7
  5455                           tblptrl	equ	0xFF6
  5456                           tablat	equ	0xFF5
  5457                           postinc0	equ	0xFEE
  5458                           wreg	equ	0xFE8
  5459                           postdec1	equ	0xFE5
  5460                           fsr1l	equ	0xFE1
  5461                           status	equ	0xFD8
  5462                           
  5463 ;; *************** function _SetDCPWM1 *****************
  5464 ;; Defined at:
  5465 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic18\plib\PWM\pw1setdc.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  dutycycle       2   15[COMRAM] unsigned int 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  DCycle          2   19[COMRAM] struct PWMDC
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5479 ;;      Params:         2       0       0       0       0       0       0       0       0
  5480 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5481 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5482 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5483 ;;Total ram usage:        6 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    4
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_Train_Path
  5490 ;;		_Train_Move_Left_Start
  5491 ;;		_Train_Move_Left_Brake
  5492 ;;		_Train_Move_Right_Start
  5493 ;;		_Train_Move_Right_Brake
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text7
  5498  001B22                     __ptext7:
  5499                           	opt stack 0
  5500  001B22                     _SetDCPWM1:
  5501                           	opt stack 23
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;incstack = 0
  5505  001B22  C03D  F03F         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  5506  001B26  C03E  F040         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  5507  001B2A  0E06               	movlw	6
  5508  001B2C                     u2265:
  5509  001B2C  90D8               	bcf	status,0,c
  5510  001B2E  363F               	rlcf	??_SetDCPWM1,f,c
  5511  001B30  3640               	rlcf	??_SetDCPWM1+1,f,c
  5512  001B32  2EE8               	decfsz	wreg,f,c
  5513  001B34  D7FB               	goto	u2265
  5514  001B36  C03F  F041         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  5515  001B3A  C040  F042         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  5516  001B3E  C042  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  5517  001B42  C041  F03F         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  5518  001B46  90D8               	bcf	status,0,c
  5519  001B48  323F               	rrcf	??_SetDCPWM1,f,c
  5520  001B4A  90D8               	bcf	status,0,c
  5521  001B4C  323F               	rrcf	??_SetDCPWM1,f,c
  5522  001B4E  0E30               	movlw	48
  5523  001B50  163F               	andwf	??_SetDCPWM1,f,c
  5524  001B52  50BD               	movf	4029,w,c	;volatile
  5525  001B54  0BCF               	andlw	207
  5526  001B56  103F               	iorwf	??_SetDCPWM1,w,c
  5527  001B58  6EBD               	movwf	4029,c	;volatile
  5528  001B5A  0012               	return		;funcret
  5529  001B5C                     __end_of_SetDCPWM1:
  5530                           	opt stack 0
  5531                           tblptru	equ	0xFF8
  5532                           tblptrh	equ	0xFF7
  5533                           tblptrl	equ	0xFF6
  5534                           tablat	equ	0xFF5
  5535                           postinc0	equ	0xFEE
  5536                           wreg	equ	0xFE8
  5537                           postdec1	equ	0xFE5
  5538                           fsr1l	equ	0xFE1
  5539                           status	equ	0xFD8
  5540                           
  5541 ;; *************** function _Junction *****************
  5542 ;; Defined at:
  5543 ;;		line 1627 in file "../State_Mchn.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  Left_Right      1    wreg     unsigned char 
  5546 ;;  Straight_Ben    1   15[COMRAM] unsigned char 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  Left_Right      1   16[COMRAM] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      unsigned char 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5558 ;;      Params:         1       0       0       0       0       0       0       0       0
  5559 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5561 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5562 ;;Total ram usage:        2 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    4
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_Train_Path
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text8
  5573  001814                     __ptext8:
  5574                           	opt stack 0
  5575  001814                     _Junction:
  5576                           	opt stack 24
  5577                           
  5578                           ;incstack = 0
  5579                           ;Junction@Left_Right stored from wreg
  5580  001814  6E3E               	movwf	Junction@Left_Right,c
  5581                           
  5582                           ;State_Mchn.c: 1629: static char Return_Val = (char)-1;
  5583                           ;State_Mchn.c: 1630: static unsigned int Junction_Switch_Time = 0;
  5584                           ;State_Mchn.c: 1632: switch (Switch_Junction)
  5585  001816  D049               	goto	l3489
  5586  001818                     l751:
  5587  001818  0100               	movlb	0	; () banked
  5588  00181A  69F7               	setf	Junction@Return_Val& (0+255),b
  5589                           
  5590                           ;State_Mchn.c: 1635: switch (Left_Right)
  5591  00181C  D018               	goto	l3471
  5592  00181E                     l755:
  5593  00181E  8680               	bsf	3968,3,c	;volatile
  5594  001820  D01D               	goto	l3473
  5595  001822                     l757:
  5596  001822  8480               	bsf	3968,2,c	;volatile
  5597                           
  5598                           ;State_Mchn.c: 1642: }
  5599                           
  5600                           ;State_Mchn.c: 1641: default : break;
  5601  001824  D01B               	goto	l3473
  5602  001826                     l3463:
  5603  001826  503D               	movf	Junction@Straight_Bend,w,c
  5604                           
  5605                           ; Switch size 1, requested type "space"
  5606                           ; Number of cases is 2, Range of values is 0 to 1
  5607                           ; switch strategies available:
  5608                           ; Name         Instructions Cycles
  5609                           ; simple_byte            7     4 (average)
  5610                           ;	Chosen strategy is simple_byte
  5611  001828  0A00               	xorlw	0	; case 0
  5612  00182A  B4D8               	btfsc	status,2,c
  5613  00182C  D7F8               	goto	l755
  5614  00182E  0A01               	xorlw	1	; case 1
  5615  001830  B4D8               	btfsc	status,2,c
  5616  001832  D7F7               	goto	l757
  5617                           
  5618                           ;State_Mchn.c: 1643: break;
  5619  001834  D013               	goto	l3473
  5620  001836                     l762:
  5621  001836  8280               	bsf	3968,1,c	;volatile
  5622  001838  D011               	goto	l3473
  5623  00183A                     l764:
  5624  00183A  8080               	bsf	3968,0,c	;volatile
  5625                           
  5626                           ;State_Mchn.c: 1650: }
  5627                           
  5628                           ;State_Mchn.c: 1649: default : break;
  5629  00183C  D00F               	goto	l3473
  5630  00183E                     l3467:
  5631  00183E  503D               	movf	Junction@Straight_Bend,w,c
  5632                           
  5633                           ; Switch size 1, requested type "space"
  5634                           ; Number of cases is 2, Range of values is 0 to 1
  5635                           ; switch strategies available:
  5636                           ; Name         Instructions Cycles
  5637                           ; simple_byte            7     4 (average)
  5638                           ;	Chosen strategy is simple_byte
  5639  001840  0A00               	xorlw	0	; case 0
  5640  001842  B4D8               	btfsc	status,2,c
  5641  001844  D7F8               	goto	l762
  5642  001846  0A01               	xorlw	1	; case 1
  5643  001848  B4D8               	btfsc	status,2,c
  5644  00184A  D7F7               	goto	l764
  5645                           
  5646                           ;State_Mchn.c: 1654: }
  5647                           
  5648                           ;State_Mchn.c: 1653: default : break;
  5649                           
  5650                           ;State_Mchn.c: 1651: break;
  5651  00184C  D007               	goto	l3473
  5652  00184E                     l3471:
  5653  00184E  503E               	movf	Junction@Left_Right,w,c
  5654                           
  5655                           ; Switch size 1, requested type "space"
  5656                           ; Number of cases is 2, Range of values is 0 to 1
  5657                           ; switch strategies available:
  5658                           ; Name         Instructions Cycles
  5659                           ; simple_byte            7     4 (average)
  5660                           ;	Chosen strategy is simple_byte
  5661  001850  0A00               	xorlw	0	; case 0
  5662  001852  B4D8               	btfsc	status,2,c
  5663  001854  D7E8               	goto	l3463
  5664  001856  0A01               	xorlw	1	; case 1
  5665  001858  B4D8               	btfsc	status,2,c
  5666  00185A  D7F1               	goto	l3467
  5667  00185C                     l3473:
  5668                           
  5669                           ;State_Mchn.c: 1655: Switch_Junction = 1;
  5670  00185C  0E01               	movlw	1
  5671  00185E  6E1F               	movwf	_Switch_Junction,c
  5672                           
  5673                           ;State_Mchn.c: 1656: break;
  5674  001860  D02E               	goto	l3491
  5675  001862                     l3475:
  5676  001862  0E20               	movlw	32
  5677  001864  0100               	movlb	0	; () banked
  5678  001866  5DDE               	subwf	Junction@Junction_Switch_Time& (0+255),w,b
  5679  001868  0E03               	movlw	3
  5680  00186A  0100               	movlb	0	; () banked
  5681  00186C  59DF               	subwfb	(Junction@Junction_Switch_Time+1)& (0+255),w,b
  5682  00186E  A0D8               	btfss	status,0,c
  5683  001870  D00A               	goto	l769
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;State_Mchn.c: 1659: {
  5687                           ;State_Mchn.c: 1660: Switch_Junction = 2;
  5688  001872  0E02               	movlw	2
  5689  001874  6E1F               	movwf	_Switch_Junction,c
  5690                           
  5691                           ;State_Mchn.c: 1661: Junction_Switch_Time = 0;
  5692  001876  0E00               	movlw	0
  5693  001878  0100               	movlb	0	; () banked
  5694  00187A  6FDF               	movwf	(Junction@Junction_Switch_Time+1)& (0+255),b
  5695  00187C  0E00               	movlw	0
  5696  00187E  6FDE               	movwf	Junction@Junction_Switch_Time& (0+255),b
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;State_Mchn.c: 1662: Return_Val = (char)-1;
  5700  001880  0100               	movlb	0	; () banked
  5701  001882  69F7               	setf	Junction@Return_Val& (0+255),b
  5702                           
  5703                           ;State_Mchn.c: 1663: break;
  5704  001884  D01C               	goto	l3491
  5705  001886                     l769:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;State_Mchn.c: 1664: }
  5709                           ;State_Mchn.c: 1665: Return_Val = (char)-1;
  5710  001886  0100               	movlb	0	; () banked
  5711  001888  69F7               	setf	Junction@Return_Val& (0+255),b
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;State_Mchn.c: 1666: Switch_Junction = 1;
  5715  00188A  0E01               	movlw	1
  5716  00188C  6E1F               	movwf	_Switch_Junction,c
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;State_Mchn.c: 1667: Junction_Switch_Time++;
  5720  00188E  0100               	movlb	0	; () banked
  5721  001890  4BDE               	infsnz	Junction@Junction_Switch_Time& (0+255),f,b
  5722  001892  2BDF               	incf	(Junction@Junction_Switch_Time+1)& (0+255),f,b
  5723                           
  5724                           ;State_Mchn.c: 1668: break;
  5725  001894  D014               	goto	l3491
  5726  001896                     l770:
  5727  001896  9680               	bcf	3968,3,c	;volatile
  5728                           
  5729                           ;State_Mchn.c: 1671: PORTAbits.RA2 = 0;
  5730  001898  9480               	bcf	3968,2,c	;volatile
  5731                           
  5732                           ;State_Mchn.c: 1672: PORTAbits.RA1 = 0;
  5733  00189A  9280               	bcf	3968,1,c	;volatile
  5734                           
  5735                           ;State_Mchn.c: 1673: PORTAbits.RA0 = 0;
  5736  00189C  9080               	bcf	3968,0,c	;volatile
  5737                           
  5738                           ;State_Mchn.c: 1674: Switch_Junction = 0;
  5739  00189E  0E00               	movlw	0
  5740  0018A0  6E1F               	movwf	_Switch_Junction,c
  5741                           
  5742                           ;State_Mchn.c: 1675: Return_Val = (char)0;
  5743  0018A2  0E00               	movlw	0
  5744  0018A4  0100               	movlb	0	; () banked
  5745  0018A6  6FF7               	movwf	Junction@Return_Val& (0+255),b
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;State_Mchn.c: 1679: }
  5749                           
  5750                           ; BSR set to: 0
  5751                           
  5752                           ;State_Mchn.c: 1678: default : break;
  5753                           
  5754                           ;State_Mchn.c: 1676: break;
  5755  0018A8  D00A               	goto	l3491
  5756  0018AA                     l3489:
  5757  0018AA  501F               	movf	_Switch_Junction,w,c
  5758                           
  5759                           ; Switch size 1, requested type "space"
  5760                           ; Number of cases is 3, Range of values is 0 to 2
  5761                           ; switch strategies available:
  5762                           ; Name         Instructions Cycles
  5763                           ; simple_byte           10     6 (average)
  5764                           ;	Chosen strategy is simple_byte
  5765  0018AC  0A00               	xorlw	0	; case 0
  5766  0018AE  B4D8               	btfsc	status,2,c
  5767  0018B0  D7B3               	goto	l751
  5768  0018B2  0A01               	xorlw	1	; case 1
  5769  0018B4  B4D8               	btfsc	status,2,c
  5770  0018B6  D7D5               	goto	l3475
  5771  0018B8  0A03               	xorlw	3	; case 2
  5772  0018BA  B4D8               	btfsc	status,2,c
  5773  0018BC  D7EC               	goto	l770
  5774  0018BE                     l3491:
  5775                           
  5776                           ;State_Mchn.c: 1681: return (Return_Val);
  5777  0018BE  0100               	movlb	0	; () banked
  5778  0018C0  51F7               	movf	Junction@Return_Val& (0+255),w,b
  5779  0018C2  0012               	return	
  5780  0018C4                     __end_of_Junction:
  5781                           	opt stack 0
  5782                           tblptru	equ	0xFF8
  5783                           tblptrh	equ	0xFF7
  5784                           tblptrl	equ	0xFF6
  5785                           tablat	equ	0xFF5
  5786                           postinc0	equ	0xFEE
  5787                           wreg	equ	0xFE8
  5788                           postdec1	equ	0xFE5
  5789                           fsr1l	equ	0xFE1
  5790                           status	equ	0xFD8
  5791                           
  5792 ;; *************** function _Red_Led *****************
  5793 ;; Defined at:
  5794 ;;		line 1150 in file "../State_Mchn.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  Operation       1    wreg     unsigned char 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  Operation       1   15[COMRAM] unsigned char 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5808 ;;      Params:         0       0       0       0       0       0       0       0       0
  5809 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5811 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5812 ;;Total ram usage:        1 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    4
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_Update_StateMchn
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text9
  5823  0018C4                     __ptext9:
  5824                           	opt stack 0
  5825  0018C4                     _Red_Led:
  5826                           	opt stack 25
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;incstack = 0
  5830                           ;Red_Led@Operation stored from wreg
  5831  0018C4  6E3D               	movwf	Red_Led@Operation,c
  5832                           
  5833                           ;State_Mchn.c: 1152: switch(Operation)
  5834  0018C6  D030               	goto	l3963
  5835  0018C8                     l591:
  5836  0018C8  9A83               	bcf	3971,5,c	;volatile
  5837  0018CA  0012               	return	
  5838  0018CC                     l593:
  5839  0018CC  8A83               	bsf	3971,5,c	;volatile
  5840  0018CE  0012               	return	
  5841  0018D0                     l3941:
  5842  0018D0  4A05               	infsnz	_Red_Led_Counter,f,c
  5843  0018D2  2A06               	incf	_Red_Led_Counter+1,f,c
  5844                           
  5845                           ;State_Mchn.c: 1159: if(Red_Led_Counter >= 3000)
  5846  0018D4  0EB8               	movlw	184
  5847  0018D6  5C05               	subwf	_Red_Led_Counter,w,c
  5848  0018D8  0E0B               	movlw	11
  5849  0018DA  5806               	subwfb	_Red_Led_Counter+1,w,c
  5850  0018DC  A0D8               	btfss	status,0,c
  5851  0018DE  D004               	goto	l3947
  5852                           
  5853                           ;State_Mchn.c: 1160: {
  5854                           ;State_Mchn.c: 1161: Red_Led_Counter = 0;
  5855  0018E0  0E00               	movlw	0
  5856  0018E2  6E06               	movwf	_Red_Led_Counter+1,c
  5857  0018E4  0E00               	movlw	0
  5858  0018E6  6E05               	movwf	_Red_Led_Counter,c
  5859  0018E8                     l3947:
  5860                           
  5861                           ;State_Mchn.c: 1162: }
  5862                           ;State_Mchn.c: 1163: if(Red_Led_Counter >= 3000/2)
  5863  0018E8  0EDC               	movlw	220
  5864  0018EA  5C05               	subwf	_Red_Led_Counter,w,c
  5865  0018EC  0E05               	movlw	5
  5866  0018EE  5806               	subwfb	_Red_Led_Counter+1,w,c
  5867  0018F0  A0D8               	btfss	status,0,c
  5868  0018F2  D002               	goto	l596
  5869                           
  5870                           ;State_Mchn.c: 1164: {
  5871                           ;State_Mchn.c: 1165: PORTDbits.RD5 = 1;
  5872  0018F4  8A83               	bsf	3971,5,c	;volatile
  5873                           
  5874                           ;State_Mchn.c: 1166: }
  5875  0018F6  0012               	return	
  5876  0018F8                     l596:
  5877                           
  5878                           ;State_Mchn.c: 1167: else {PORTDbits.RD5 = 0;}
  5879  0018F8  9A83               	bcf	3971,5,c	;volatile
  5880                           
  5881                           ;State_Mchn.c: 1168: break;
  5882  0018FA  0012               	return	
  5883  0018FC                     l3951:
  5884  0018FC  4A05               	infsnz	_Red_Led_Counter,f,c
  5885  0018FE  2A06               	incf	_Red_Led_Counter+1,f,c
  5886                           
  5887                           ;State_Mchn.c: 1171: if(Red_Led_Counter >= 1000)
  5888  001900  0EE8               	movlw	232
  5889  001902  5C05               	subwf	_Red_Led_Counter,w,c
  5890  001904  0E03               	movlw	3
  5891  001906  5806               	subwfb	_Red_Led_Counter+1,w,c
  5892  001908  A0D8               	btfss	status,0,c
  5893  00190A  D004               	goto	l3957
  5894                           
  5895                           ;State_Mchn.c: 1172: {
  5896                           ;State_Mchn.c: 1173: Red_Led_Counter = 0;
  5897  00190C  0E00               	movlw	0
  5898  00190E  6E06               	movwf	_Red_Led_Counter+1,c
  5899  001910  0E00               	movlw	0
  5900  001912  6E05               	movwf	_Red_Led_Counter,c
  5901  001914                     l3957:
  5902                           
  5903                           ;State_Mchn.c: 1174: }
  5904                           ;State_Mchn.c: 1175: if(Red_Led_Counter >= 1000/2)
  5905  001914  0EF4               	movlw	244
  5906  001916  5C05               	subwf	_Red_Led_Counter,w,c
  5907  001918  0E01               	movlw	1
  5908  00191A  5806               	subwfb	_Red_Led_Counter+1,w,c
  5909  00191C  A0D8               	btfss	status,0,c
  5910  00191E  D002               	goto	l600
  5911                           
  5912                           ;State_Mchn.c: 1176: {
  5913                           ;State_Mchn.c: 1177: PORTDbits.RD5 = 1;
  5914  001920  8A83               	bsf	3971,5,c	;volatile
  5915                           
  5916                           ;State_Mchn.c: 1178: }
  5917  001922  0012               	return	
  5918  001924                     l600:
  5919                           
  5920                           ;State_Mchn.c: 1179: else {PORTDbits.RD5 = 0;}
  5921  001924  9A83               	bcf	3971,5,c	;volatile
  5922                           
  5923                           ;State_Mchn.c: 1183: }
  5924                           
  5925                           ;State_Mchn.c: 1182: default : break;
  5926                           
  5927                           ;State_Mchn.c: 1180: break;
  5928  001926  0012               	return	
  5929  001928                     l3963:
  5930  001928  503D               	movf	Red_Led@Operation,w,c
  5931                           
  5932                           ; Switch size 1, requested type "space"
  5933                           ; Number of cases is 4, Range of values is 0 to 3
  5934                           ; switch strategies available:
  5935                           ; Name         Instructions Cycles
  5936                           ; simple_byte           13     7 (average)
  5937                           ;	Chosen strategy is simple_byte
  5938  00192A  0A00               	xorlw	0	; case 0
  5939  00192C  B4D8               	btfsc	status,2,c
  5940  00192E  D7CC               	goto	l591
  5941  001930  0A01               	xorlw	1	; case 1
  5942  001932  B4D8               	btfsc	status,2,c
  5943  001934  D7CB               	goto	l593
  5944  001936  0A03               	xorlw	3	; case 2
  5945  001938  B4D8               	btfsc	status,2,c
  5946  00193A  D7CA               	goto	l3941
  5947  00193C  0A01               	xorlw	1	; case 3
  5948  00193E  A4D8               	btfss	status,2,c
  5949  001940  0012               	return	
  5950  001942  D7DC               	goto	l3951
  5951  001944                     __end_of_Red_Led:
  5952                           	opt stack 0
  5953                           tblptru	equ	0xFF8
  5954                           tblptrh	equ	0xFF7
  5955                           tblptrl	equ	0xFF6
  5956                           tablat	equ	0xFF5
  5957                           postinc0	equ	0xFEE
  5958                           wreg	equ	0xFE8
  5959                           postdec1	equ	0xFE5
  5960                           fsr1l	equ	0xFE1
  5961                           status	equ	0xFD8
  5962                           
  5963 ;; *************** function _Green_Led *****************
  5964 ;; Defined at:
  5965 ;;		line 1114 in file "../State_Mchn.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  Operation       1    wreg     unsigned char 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  Operation       1   15[COMRAM] unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5979 ;;      Params:         0       0       0       0       0       0       0       0       0
  5980 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5982 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5983 ;;Total ram usage:        1 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:    4
  5986 ;; This function calls:
  5987 ;;		Nothing
  5988 ;; This function is called by:
  5989 ;;		_Update_StateMchn
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           	psect	text10
  5994  001944                     __ptext10:
  5995                           	opt stack 0
  5996  001944                     _Green_Led:
  5997                           	opt stack 25
  5998                           
  5999                           ;incstack = 0
  6000                           ;Green_Led@Operation stored from wreg
  6001  001944  6E3D               	movwf	Green_Led@Operation,c
  6002                           
  6003                           ;State_Mchn.c: 1116: switch(Operation)
  6004  001946  D030               	goto	l3937
  6005  001948                     l575:
  6006  001948  9C83               	bcf	3971,6,c	;volatile
  6007  00194A  0012               	return	
  6008  00194C                     l577:
  6009  00194C  8C83               	bsf	3971,6,c	;volatile
  6010  00194E  0012               	return	
  6011  001950                     l3915:
  6012  001950  4A03               	infsnz	_Green_Led_Counter,f,c
  6013  001952  2A04               	incf	_Green_Led_Counter+1,f,c
  6014                           
  6015                           ;State_Mchn.c: 1123: if(Green_Led_Counter >= 3000)
  6016  001954  0EB8               	movlw	184
  6017  001956  5C03               	subwf	_Green_Led_Counter,w,c
  6018  001958  0E0B               	movlw	11
  6019  00195A  5804               	subwfb	_Green_Led_Counter+1,w,c
  6020  00195C  A0D8               	btfss	status,0,c
  6021  00195E  D004               	goto	l3921
  6022                           
  6023                           ;State_Mchn.c: 1124: {
  6024                           ;State_Mchn.c: 1125: Green_Led_Counter = 0;
  6025  001960  0E00               	movlw	0
  6026  001962  6E04               	movwf	_Green_Led_Counter+1,c
  6027  001964  0E00               	movlw	0
  6028  001966  6E03               	movwf	_Green_Led_Counter,c
  6029  001968                     l3921:
  6030                           
  6031                           ;State_Mchn.c: 1126: }
  6032                           ;State_Mchn.c: 1127: if(Green_Led_Counter >= 3000/2)
  6033  001968  0EDC               	movlw	220
  6034  00196A  5C03               	subwf	_Green_Led_Counter,w,c
  6035  00196C  0E05               	movlw	5
  6036  00196E  5804               	subwfb	_Green_Led_Counter+1,w,c
  6037  001970  A0D8               	btfss	status,0,c
  6038  001972  D002               	goto	l580
  6039                           
  6040                           ;State_Mchn.c: 1128: {
  6041                           ;State_Mchn.c: 1129: PORTDbits.RD6 = 1;
  6042  001974  8C83               	bsf	3971,6,c	;volatile
  6043                           
  6044                           ;State_Mchn.c: 1130: }
  6045  001976  0012               	return	
  6046  001978                     l580:
  6047                           
  6048                           ;State_Mchn.c: 1131: else {PORTDbits.RD6 = 0;}
  6049  001978  9C83               	bcf	3971,6,c	;volatile
  6050                           
  6051                           ;State_Mchn.c: 1132: break;
  6052  00197A  0012               	return	
  6053  00197C                     l3925:
  6054  00197C  4A03               	infsnz	_Green_Led_Counter,f,c
  6055  00197E  2A04               	incf	_Green_Led_Counter+1,f,c
  6056                           
  6057                           ;State_Mchn.c: 1135: if(Green_Led_Counter >= 1000)
  6058  001980  0EE8               	movlw	232
  6059  001982  5C03               	subwf	_Green_Led_Counter,w,c
  6060  001984  0E03               	movlw	3
  6061  001986  5804               	subwfb	_Green_Led_Counter+1,w,c
  6062  001988  A0D8               	btfss	status,0,c
  6063  00198A  D004               	goto	l3931
  6064                           
  6065                           ;State_Mchn.c: 1136: {
  6066                           ;State_Mchn.c: 1137: Green_Led_Counter = 0;
  6067  00198C  0E00               	movlw	0
  6068  00198E  6E04               	movwf	_Green_Led_Counter+1,c
  6069  001990  0E00               	movlw	0
  6070  001992  6E03               	movwf	_Green_Led_Counter,c
  6071  001994                     l3931:
  6072                           
  6073                           ;State_Mchn.c: 1138: }
  6074                           ;State_Mchn.c: 1139: if(Green_Led_Counter >= 1000/2)
  6075  001994  0EF4               	movlw	244
  6076  001996  5C03               	subwf	_Green_Led_Counter,w,c
  6077  001998  0E01               	movlw	1
  6078  00199A  5804               	subwfb	_Green_Led_Counter+1,w,c
  6079  00199C  A0D8               	btfss	status,0,c
  6080  00199E  D002               	goto	l584
  6081                           
  6082                           ;State_Mchn.c: 1140: {
  6083                           ;State_Mchn.c: 1141: PORTDbits.RD6 = 1;
  6084  0019A0  8C83               	bsf	3971,6,c	;volatile
  6085                           
  6086                           ;State_Mchn.c: 1142: }
  6087  0019A2  0012               	return	
  6088  0019A4                     l584:
  6089                           
  6090                           ;State_Mchn.c: 1143: else {PORTDbits.RD6 = 0;}
  6091  0019A4  9C83               	bcf	3971,6,c	;volatile
  6092                           
  6093                           ;State_Mchn.c: 1147: }
  6094                           
  6095                           ;State_Mchn.c: 1146: default : break;
  6096                           
  6097                           ;State_Mchn.c: 1144: break;
  6098  0019A6  0012               	return	
  6099  0019A8                     l3937:
  6100  0019A8  503D               	movf	Green_Led@Operation,w,c
  6101                           
  6102                           ; Switch size 1, requested type "space"
  6103                           ; Number of cases is 4, Range of values is 0 to 3
  6104                           ; switch strategies available:
  6105                           ; Name         Instructions Cycles
  6106                           ; simple_byte           13     7 (average)
  6107                           ;	Chosen strategy is simple_byte
  6108  0019AA  0A00               	xorlw	0	; case 0
  6109  0019AC  B4D8               	btfsc	status,2,c
  6110  0019AE  D7CC               	goto	l575
  6111  0019B0  0A01               	xorlw	1	; case 1
  6112  0019B2  B4D8               	btfsc	status,2,c
  6113  0019B4  D7CB               	goto	l577
  6114  0019B6  0A03               	xorlw	3	; case 2
  6115  0019B8  B4D8               	btfsc	status,2,c
  6116  0019BA  D7CA               	goto	l3915
  6117  0019BC  0A01               	xorlw	1	; case 3
  6118  0019BE  A4D8               	btfss	status,2,c
  6119  0019C0  0012               	return	
  6120  0019C2  D7DC               	goto	l3925
  6121  0019C4                     __end_of_Green_Led:
  6122                           	opt stack 0
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           postinc0	equ	0xFEE
  6128                           wreg	equ	0xFE8
  6129                           postdec1	equ	0xFE5
  6130                           fsr1l	equ	0xFE1
  6131                           status	equ	0xFD8
  6132                           
  6133 ;; *************** function _Eeprom_Store *****************
  6134 ;; Defined at:
  6135 ;;		line 1886 in file "../State_Mchn.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;		None
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;		None
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		wreg, status,2
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6149 ;;      Params:         0       0       0       0       0       0       0       0       0
  6150 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6152 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6153 ;;Total ram usage:        0 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    4
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_Update_StateMchn
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text11
  6164  001680                     __ptext11:
  6165                           	opt stack 0
  6166  001680                     _Eeprom_Store:
  6167                           	opt stack 25
  6168                           
  6169                           ;State_Mchn.c: 1888: INTCON = 0x00;
  6170                           
  6171                           ;incstack = 0
  6172  001680  0E00               	movlw	0
  6173  001682  6EF2               	movwf	intcon,c	;volatile
  6174                           
  6175                           ;State_Mchn.c: 1892: EECON1bits.EEPGD = 0;
  6176  001684  9EA6               	bcf	4006,7,c	;volatile
  6177                           
  6178                           ;State_Mchn.c: 1893: EECON1bits.WREN = 1;
  6179  001686  84A6               	bsf	4006,2,c	;volatile
  6180                           
  6181                           ;State_Mchn.c: 1894: EEADR = 0x01;
  6182  001688  0E01               	movlw	1
  6183  00168A  6EA9               	movwf	4009,c	;volatile
  6184                           
  6185                           ;State_Mchn.c: 1895: EEDATA = MaxPwmRight;
  6186  00168C  C049  FFA8         	movff	_MaxPwmRight,4008	;volatile
  6187                           
  6188                           ;State_Mchn.c: 1896: EECON2 = 0x55;
  6189  001690  0E55               	movlw	85
  6190  001692  6EA7               	movwf	4007,c	;volatile
  6191                           
  6192                           ;State_Mchn.c: 1897: EECON2 = 0xaa;
  6193  001694  0EAA               	movlw	170
  6194  001696  6EA7               	movwf	4007,c	;volatile
  6195                           
  6196                           ;State_Mchn.c: 1898: EECON1bits.WR = 1;
  6197  001698  82A6               	bsf	4006,1,c	;volatile
  6198  00169A                     l855:
  6199  00169A  A8A1               	btfss	4001,4,c	;volatile
  6200  00169C  D7FE               	goto	l855
  6201                           
  6202                           ;State_Mchn.c: 1900: PIR2bits.EEIF = 0;
  6203  00169E  98A1               	bcf	4001,4,c	;volatile
  6204                           
  6205                           ;State_Mchn.c: 1902: EECON1bits.EEPGD = 0;
  6206  0016A0  9EA6               	bcf	4006,7,c	;volatile
  6207                           
  6208                           ;State_Mchn.c: 1903: EECON1bits.WREN = 1;
  6209  0016A2  84A6               	bsf	4006,2,c	;volatile
  6210                           
  6211                           ;State_Mchn.c: 1904: EEADR = 0x00;
  6212  0016A4  0E00               	movlw	0
  6213  0016A6  6EA9               	movwf	4009,c	;volatile
  6214                           
  6215                           ;State_Mchn.c: 1905: EEDATA = MaxPwmRight>>8;
  6216  0016A8  504A               	movf	_MaxPwmRight+1,w,c
  6217  0016AA  6EA8               	movwf	4008,c	;volatile
  6218                           
  6219                           ;State_Mchn.c: 1906: EECON2 = 0x55;
  6220  0016AC  0E55               	movlw	85
  6221  0016AE  6EA7               	movwf	4007,c	;volatile
  6222                           
  6223                           ;State_Mchn.c: 1907: EECON2 = 0xaa;
  6224  0016B0  0EAA               	movlw	170
  6225  0016B2  6EA7               	movwf	4007,c	;volatile
  6226                           
  6227                           ;State_Mchn.c: 1908: EECON1bits.WR = 1;
  6228  0016B4  82A6               	bsf	4006,1,c	;volatile
  6229  0016B6                     l858:
  6230  0016B6  A8A1               	btfss	4001,4,c	;volatile
  6231  0016B8  D7FE               	goto	l858
  6232                           
  6233                           ;State_Mchn.c: 1910: PIR2bits.EEIF = 0;
  6234  0016BA  98A1               	bcf	4001,4,c	;volatile
  6235                           
  6236                           ;State_Mchn.c: 1915: EECON1bits.EEPGD = 0;
  6237  0016BC  9EA6               	bcf	4006,7,c	;volatile
  6238                           
  6239                           ;State_Mchn.c: 1916: EECON1bits.WREN = 1;
  6240  0016BE  84A6               	bsf	4006,2,c	;volatile
  6241                           
  6242                           ;State_Mchn.c: 1917: EEADR = 0x03;
  6243  0016C0  0E03               	movlw	3
  6244  0016C2  6EA9               	movwf	4009,c	;volatile
  6245                           
  6246                           ;State_Mchn.c: 1918: EEDATA = MaxPwmLeft;
  6247  0016C4  C047  FFA8         	movff	_MaxPwmLeft,4008	;volatile
  6248                           
  6249                           ;State_Mchn.c: 1919: EECON2 = 0x55;
  6250  0016C8  0E55               	movlw	85
  6251  0016CA  6EA7               	movwf	4007,c	;volatile
  6252                           
  6253                           ;State_Mchn.c: 1920: EECON2 = 0xaa;
  6254  0016CC  0EAA               	movlw	170
  6255  0016CE  6EA7               	movwf	4007,c	;volatile
  6256                           
  6257                           ;State_Mchn.c: 1921: EECON1bits.WR = 1;
  6258  0016D0  82A6               	bsf	4006,1,c	;volatile
  6259  0016D2                     l861:
  6260  0016D2  A8A1               	btfss	4001,4,c	;volatile
  6261  0016D4  D7FE               	goto	l861
  6262                           
  6263                           ;State_Mchn.c: 1923: PIR2bits.EEIF = 0;
  6264  0016D6  98A1               	bcf	4001,4,c	;volatile
  6265                           
  6266                           ;State_Mchn.c: 1925: EECON1bits.EEPGD = 0;
  6267  0016D8  9EA6               	bcf	4006,7,c	;volatile
  6268                           
  6269                           ;State_Mchn.c: 1926: EECON1bits.WREN = 1;
  6270  0016DA  84A6               	bsf	4006,2,c	;volatile
  6271                           
  6272                           ;State_Mchn.c: 1927: EEADR = 0x02;
  6273  0016DC  0E02               	movlw	2
  6274  0016DE  6EA9               	movwf	4009,c	;volatile
  6275                           
  6276                           ;State_Mchn.c: 1928: EEDATA = MaxPwmLeft>>8;
  6277  0016E0  5048               	movf	_MaxPwmLeft+1,w,c
  6278  0016E2  6EA8               	movwf	4008,c	;volatile
  6279                           
  6280                           ;State_Mchn.c: 1929: EECON2 = 0x55;
  6281  0016E4  0E55               	movlw	85
  6282  0016E6  6EA7               	movwf	4007,c	;volatile
  6283                           
  6284                           ;State_Mchn.c: 1930: EECON2 = 0xaa;
  6285  0016E8  0EAA               	movlw	170
  6286  0016EA  6EA7               	movwf	4007,c	;volatile
  6287                           
  6288                           ;State_Mchn.c: 1931: EECON1bits.WR = 1;
  6289  0016EC  82A6               	bsf	4006,1,c	;volatile
  6290  0016EE                     l864:
  6291  0016EE  A8A1               	btfss	4001,4,c	;volatile
  6292  0016F0  D7FE               	goto	l864
  6293                           
  6294                           ;State_Mchn.c: 1933: PIR2bits.EEIF = 0;
  6295  0016F2  98A1               	bcf	4001,4,c	;volatile
  6296                           
  6297                           ;State_Mchn.c: 1938: EECON1bits.EEPGD = 0;
  6298  0016F4  9EA6               	bcf	4006,7,c	;volatile
  6299                           
  6300                           ;State_Mchn.c: 1939: EECON1bits.WREN = 1;
  6301  0016F6  84A6               	bsf	4006,2,c	;volatile
  6302                           
  6303                           ;State_Mchn.c: 1940: EEADR = 0x04;
  6304  0016F8  0E04               	movlw	4
  6305  0016FA  6EA9               	movwf	4009,c	;volatile
  6306                           
  6307                           ;State_Mchn.c: 1941: EEDATA = MaxJerkPwm_Brake;
  6308  0016FC  C04D  FFA8         	movff	_MaxJerkPwm_Brake,4008	;volatile
  6309                           
  6310                           ;State_Mchn.c: 1942: EECON2 = 0x55;
  6311  001700  0E55               	movlw	85
  6312  001702  6EA7               	movwf	4007,c	;volatile
  6313                           
  6314                           ;State_Mchn.c: 1943: EECON2 = 0xaa;
  6315  001704  0EAA               	movlw	170
  6316  001706  6EA7               	movwf	4007,c	;volatile
  6317                           
  6318                           ;State_Mchn.c: 1944: EECON1bits.WR = 1;
  6319  001708  82A6               	bsf	4006,1,c	;volatile
  6320  00170A                     l867:
  6321  00170A  A8A1               	btfss	4001,4,c	;volatile
  6322  00170C  D7FE               	goto	l867
  6323                           
  6324                           ;State_Mchn.c: 1946: PIR2bits.EEIF = 0;
  6325  00170E  98A1               	bcf	4001,4,c	;volatile
  6326                           
  6327                           ;State_Mchn.c: 1951: EECON1bits.EEPGD = 0;
  6328  001710  9EA6               	bcf	4006,7,c	;volatile
  6329                           
  6330                           ;State_Mchn.c: 1952: EECON1bits.WREN = 1;
  6331  001712  84A6               	bsf	4006,2,c	;volatile
  6332                           
  6333                           ;State_Mchn.c: 1953: EEADR = 0x05;
  6334  001714  0E05               	movlw	5
  6335  001716  6EA9               	movwf	4009,c	;volatile
  6336                           
  6337                           ;State_Mchn.c: 1954: EEDATA = Switch_Main;
  6338  001718  C020  FFA8         	movff	_Switch_Main,4008	;volatile
  6339                           
  6340                           ;State_Mchn.c: 1955: EECON2 = 0x55;
  6341  00171C  0E55               	movlw	85
  6342  00171E  6EA7               	movwf	4007,c	;volatile
  6343                           
  6344                           ;State_Mchn.c: 1956: EECON2 = 0xaa;
  6345  001720  0EAA               	movlw	170
  6346  001722  6EA7               	movwf	4007,c	;volatile
  6347                           
  6348                           ;State_Mchn.c: 1957: EECON1bits.WR = 1;
  6349  001724  82A6               	bsf	4006,1,c	;volatile
  6350  001726                     l870:
  6351  001726  A8A1               	btfss	4001,4,c	;volatile
  6352  001728  D7FE               	goto	l870
  6353                           
  6354                           ;State_Mchn.c: 1959: PIR2bits.EEIF = 0;
  6355  00172A  98A1               	bcf	4001,4,c	;volatile
  6356                           
  6357                           ;State_Mchn.c: 1964: EECON1bits.EEPGD = 0;
  6358  00172C  9EA6               	bcf	4006,7,c	;volatile
  6359                           
  6360                           ;State_Mchn.c: 1965: EECON1bits.WREN = 1;
  6361  00172E  84A6               	bsf	4006,2,c	;volatile
  6362                           
  6363                           ;State_Mchn.c: 1966: EEADR = 0x06;
  6364  001730  0E06               	movlw	6
  6365  001732  6EA9               	movwf	4009,c	;volatile
  6366                           
  6367                           ;State_Mchn.c: 1967: EEDATA = Switch_Program;
  6368  001734  C022  FFA8         	movff	_Switch_Program,4008	;volatile
  6369                           
  6370                           ;State_Mchn.c: 1968: EECON2 = 0x55;
  6371  001738  0E55               	movlw	85
  6372  00173A  6EA7               	movwf	4007,c	;volatile
  6373                           
  6374                           ;State_Mchn.c: 1969: EECON2 = 0xaa;
  6375  00173C  0EAA               	movlw	170
  6376  00173E  6EA7               	movwf	4007,c	;volatile
  6377                           
  6378                           ;State_Mchn.c: 1970: EECON1bits.WR = 1;
  6379  001740  82A6               	bsf	4006,1,c	;volatile
  6380  001742                     l873:
  6381  001742  A8A1               	btfss	4001,4,c	;volatile
  6382  001744  D7FE               	goto	l873
  6383                           
  6384                           ;State_Mchn.c: 1972: PIR2bits.EEIF = 0;
  6385  001746  98A1               	bcf	4001,4,c	;volatile
  6386                           
  6387                           ;State_Mchn.c: 1975: INTCON = 0xA0;
  6388  001748  0EA0               	movlw	160
  6389  00174A  6EF2               	movwf	intcon,c	;volatile
  6390  00174C  0012               	return		;funcret
  6391  00174E                     __end_of_Eeprom_Store:
  6392                           	opt stack 0
  6393                           tblptru	equ	0xFF8
  6394                           tblptrh	equ	0xFF7
  6395                           tblptrl	equ	0xFF6
  6396                           tablat	equ	0xFF5
  6397                           intcon	equ	0xFF2
  6398                           postinc0	equ	0xFEE
  6399                           wreg	equ	0xFE8
  6400                           postdec1	equ	0xFE5
  6401                           fsr1l	equ	0xFE1
  6402                           status	equ	0xFD8
  6403                           
  6404 ;; *************** function _Debounce_Inputs *****************
  6405 ;; Defined at:
  6406 ;;		line 1684 in file "../State_Mchn.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      void 
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6420 ;;      Params:         0       0       0       0       0       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6422 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6423 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6424 ;;Total ram usage:        2 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    4
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_Update_StateMchn
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text12
  6435  000E70                     __ptext12:
  6436                           	opt stack 0
  6437  000E70                     _Debounce_Inputs:
  6438                           	opt stack 25
  6439                           
  6440                           ;State_Mchn.c: 1686: switch(PORTDbits.RD2)
  6441                           
  6442                           ;incstack = 0
  6443  000E70  D00C               	goto	l3743
  6444  000E72                     l3731:
  6445  000E72  0E00               	movlw	0
  6446  000E74  6E16               	movwf	_Reed_Contact_LF_Counter,c
  6447                           
  6448                           ;State_Mchn.c: 1689: Rd_Lf = 0;
  6449  000E76  0E00               	movlw	0
  6450  000E78  D006               	goto	L39
  6451  000E7A                     l3733:
  6452  000E7A  0E15               	movlw	21
  6453  000E7C  6016               	cpfslt	_Reed_Contact_LF_Counter,c
  6454  000E7E  D002               	goto	l3739
  6455                           
  6456                           ;State_Mchn.c: 1693: {
  6457                           ;State_Mchn.c: 1694: Reed_Contact_LF_Counter++;
  6458  000E80  2A16               	incf	_Reed_Contact_LF_Counter,f,c
  6459                           
  6460                           ;State_Mchn.c: 1696: }
  6461                           
  6462                           ;State_Mchn.c: 1695: break;
  6463  000E82  D01B               	goto	l3757
  6464  000E84                     l3739:
  6465                           
  6466                           ;State_Mchn.c: 1697: else {Rd_Lf = 1;}
  6467  000E84  0E01               	movlw	1
  6468  000E86                     L39:
  6469  000E86  6E12               	movwf	_Rd_Lf,c
  6470                           
  6471                           ;State_Mchn.c: 1701: }
  6472                           
  6473                           ;State_Mchn.c: 1700: default : break;
  6474                           
  6475                           ;State_Mchn.c: 1698: break;
  6476  000E88  D018               	goto	l3757
  6477  000E8A                     l3743:
  6478  000E8A  A483               	btfss	3971,2,c	;volatile
  6479  000E8C  D002               	goto	u2450
  6480  000E8E  0E01               	movlw	1
  6481  000E90  D001               	goto	u2456
  6482  000E92                     u2450:
  6483  000E92  0E00               	movlw	0
  6484  000E94                     u2456:
  6485                           
  6486                           ; Switch size 1, requested type "space"
  6487                           ; Number of cases is 2, Range of values is 0 to 1
  6488                           ; switch strategies available:
  6489                           ; Name         Instructions Cycles
  6490                           ; simple_byte            7     4 (average)
  6491                           ;	Chosen strategy is simple_byte
  6492  000E94  0A00               	xorlw	0	; case 0
  6493  000E96  B4D8               	btfsc	status,2,c
  6494  000E98  D7F0               	goto	l3733
  6495  000E9A  0A01               	xorlw	1	; case 1
  6496  000E9C  B4D8               	btfsc	status,2,c
  6497  000E9E  D7E9               	goto	l3731
  6498                           
  6499                           ;State_Mchn.c: 1704: switch(PORTDbits.RD3)
  6500  000EA0  D00C               	goto	l3757
  6501  000EA2                     l3745:
  6502  000EA2  0E00               	movlw	0
  6503  000EA4  6E15               	movwf	_Reed_Contact_LB_Counter,c
  6504                           
  6505                           ;State_Mchn.c: 1707: Rd_Lb = 0;
  6506  000EA6  0E00               	movlw	0
  6507  000EA8  D006               	goto	L40
  6508  000EAA                     l3747:
  6509  000EAA  0E15               	movlw	21
  6510  000EAC  6015               	cpfslt	_Reed_Contact_LB_Counter,c
  6511  000EAE  D002               	goto	l3753
  6512                           
  6513                           ;State_Mchn.c: 1711: {
  6514                           ;State_Mchn.c: 1712: Reed_Contact_LB_Counter++;
  6515  000EB0  2A15               	incf	_Reed_Contact_LB_Counter,f,c
  6516                           
  6517                           ;State_Mchn.c: 1714: }
  6518                           
  6519                           ;State_Mchn.c: 1713: break;
  6520  000EB2  D01B               	goto	l3771
  6521  000EB4                     l3753:
  6522                           
  6523                           ;State_Mchn.c: 1715: else {Rd_Lb = 1;}
  6524  000EB4  0E01               	movlw	1
  6525  000EB6                     L40:
  6526  000EB6  6E11               	movwf	_Rd_Lb,c
  6527                           
  6528                           ;State_Mchn.c: 1719: }
  6529                           
  6530                           ;State_Mchn.c: 1718: default : break;
  6531                           
  6532                           ;State_Mchn.c: 1716: break;
  6533  000EB8  D018               	goto	l3771
  6534  000EBA                     l3757:
  6535  000EBA  A683               	btfss	3971,3,c	;volatile
  6536  000EBC  D002               	goto	u2470
  6537  000EBE  0E01               	movlw	1
  6538  000EC0  D001               	goto	u2476
  6539  000EC2                     u2470:
  6540  000EC2  0E00               	movlw	0
  6541  000EC4                     u2476:
  6542                           
  6543                           ; Switch size 1, requested type "space"
  6544                           ; Number of cases is 2, Range of values is 0 to 1
  6545                           ; switch strategies available:
  6546                           ; Name         Instructions Cycles
  6547                           ; simple_byte            7     4 (average)
  6548                           ;	Chosen strategy is simple_byte
  6549  000EC4  0A00               	xorlw	0	; case 0
  6550  000EC6  B4D8               	btfsc	status,2,c
  6551  000EC8  D7F0               	goto	l3747
  6552  000ECA  0A01               	xorlw	1	; case 1
  6553  000ECC  B4D8               	btfsc	status,2,c
  6554  000ECE  D7E9               	goto	l3745
  6555                           
  6556                           ;State_Mchn.c: 1722: switch(PORTDbits.RD0)
  6557  000ED0  D00C               	goto	l3771
  6558  000ED2                     l3759:
  6559  000ED2  0E00               	movlw	0
  6560  000ED4  6E18               	movwf	_Reed_Contact_RF_Counter,c
  6561                           
  6562                           ;State_Mchn.c: 1725: Rd_Rf = 0;
  6563  000ED6  0E00               	movlw	0
  6564  000ED8  D006               	goto	L41
  6565  000EDA                     l3761:
  6566  000EDA  0E15               	movlw	21
  6567  000EDC  6018               	cpfslt	_Reed_Contact_RF_Counter,c
  6568  000EDE  D002               	goto	l3767
  6569                           
  6570                           ;State_Mchn.c: 1729: {
  6571                           ;State_Mchn.c: 1730: Reed_Contact_RF_Counter++;
  6572  000EE0  2A18               	incf	_Reed_Contact_RF_Counter,f,c
  6573                           
  6574                           ;State_Mchn.c: 1732: }
  6575                           
  6576                           ;State_Mchn.c: 1731: break;
  6577  000EE2  D01B               	goto	l3785
  6578  000EE4                     l3767:
  6579                           
  6580                           ;State_Mchn.c: 1733: else {Rd_Rf = 1;}
  6581  000EE4  0E01               	movlw	1
  6582  000EE6                     L41:
  6583  000EE6  6E14               	movwf	_Rd_Rf,c
  6584                           
  6585                           ;State_Mchn.c: 1737: }
  6586                           
  6587                           ;State_Mchn.c: 1736: default : break;
  6588                           
  6589                           ;State_Mchn.c: 1734: break;
  6590  000EE8  D018               	goto	l3785
  6591  000EEA                     l3771:
  6592  000EEA  A083               	btfss	3971,0,c	;volatile
  6593  000EEC  D002               	goto	u2490
  6594  000EEE  0E01               	movlw	1
  6595  000EF0  D001               	goto	u2496
  6596  000EF2                     u2490:
  6597  000EF2  0E00               	movlw	0
  6598  000EF4                     u2496:
  6599                           
  6600                           ; Switch size 1, requested type "space"
  6601                           ; Number of cases is 2, Range of values is 0 to 1
  6602                           ; switch strategies available:
  6603                           ; Name         Instructions Cycles
  6604                           ; simple_byte            7     4 (average)
  6605                           ;	Chosen strategy is simple_byte
  6606  000EF4  0A00               	xorlw	0	; case 0
  6607  000EF6  B4D8               	btfsc	status,2,c
  6608  000EF8  D7F0               	goto	l3761
  6609  000EFA  0A01               	xorlw	1	; case 1
  6610  000EFC  B4D8               	btfsc	status,2,c
  6611  000EFE  D7E9               	goto	l3759
  6612                           
  6613                           ;State_Mchn.c: 1740: switch(PORTDbits.RD1)
  6614  000F00  D00C               	goto	l3785
  6615  000F02                     l3773:
  6616  000F02  0E00               	movlw	0
  6617  000F04  6E17               	movwf	_Reed_Contact_RB_Counter,c
  6618                           
  6619                           ;State_Mchn.c: 1743: Rd_Rb = 0;
  6620  000F06  0E00               	movlw	0
  6621  000F08  D006               	goto	L42
  6622  000F0A                     l3775:
  6623  000F0A  0E15               	movlw	21
  6624  000F0C  6017               	cpfslt	_Reed_Contact_RB_Counter,c
  6625  000F0E  D002               	goto	l3781
  6626                           
  6627                           ;State_Mchn.c: 1747: {
  6628                           ;State_Mchn.c: 1748: Reed_Contact_RB_Counter++;
  6629  000F10  2A17               	incf	_Reed_Contact_RB_Counter,f,c
  6630                           
  6631                           ;State_Mchn.c: 1750: }
  6632                           
  6633                           ;State_Mchn.c: 1749: break;
  6634  000F12  D01B               	goto	l3799
  6635  000F14                     l3781:
  6636                           
  6637                           ;State_Mchn.c: 1751: else {Rd_Rb = 1;}
  6638  000F14  0E01               	movlw	1
  6639  000F16                     L42:
  6640  000F16  6E13               	movwf	_Rd_Rb,c
  6641                           
  6642                           ;State_Mchn.c: 1755: }
  6643                           
  6644                           ;State_Mchn.c: 1754: default : break;
  6645                           
  6646                           ;State_Mchn.c: 1752: break;
  6647  000F18  D018               	goto	l3799
  6648  000F1A                     l3785:
  6649  000F1A  A283               	btfss	3971,1,c	;volatile
  6650  000F1C  D002               	goto	u2510
  6651  000F1E  0E01               	movlw	1
  6652  000F20  D001               	goto	u2516
  6653  000F22                     u2510:
  6654  000F22  0E00               	movlw	0
  6655  000F24                     u2516:
  6656                           
  6657                           ; Switch size 1, requested type "space"
  6658                           ; Number of cases is 2, Range of values is 0 to 1
  6659                           ; switch strategies available:
  6660                           ; Name         Instructions Cycles
  6661                           ; simple_byte            7     4 (average)
  6662                           ;	Chosen strategy is simple_byte
  6663  000F24  0A00               	xorlw	0	; case 0
  6664  000F26  B4D8               	btfsc	status,2,c
  6665  000F28  D7F0               	goto	l3775
  6666  000F2A  0A01               	xorlw	1	; case 1
  6667  000F2C  B4D8               	btfsc	status,2,c
  6668  000F2E  D7E9               	goto	l3773
  6669                           
  6670                           ;State_Mchn.c: 1758: switch(!PORTBbits.RB0)
  6671  000F30  D00C               	goto	l3799
  6672  000F32                     l3787:
  6673  000F32  0E15               	movlw	21
  6674  000F34  6009               	cpfslt	_Button_Contact_Counter_Start,c
  6675  000F36  D002               	goto	l3793
  6676                           
  6677                           ;State_Mchn.c: 1761: {
  6678                           ;State_Mchn.c: 1762: Button_Contact_Counter_Start++;
  6679  000F38  2A09               	incf	_Button_Contact_Counter_Start,f,c
  6680                           
  6681                           ;State_Mchn.c: 1764: }
  6682                           
  6683                           ;State_Mchn.c: 1763: break;
  6684  000F3A  D027               	goto	l3813
  6685  000F3C                     l3793:
  6686                           
  6687                           ;State_Mchn.c: 1765: else {Button_Start = 1; }
  6688  000F3C  0E01               	movlw	1
  6689  000F3E  D003               	goto	L43
  6690  000F40                     l3795:
  6691  000F40  0E00               	movlw	0
  6692  000F42  6E09               	movwf	_Button_Contact_Counter_Start,c
  6693                           
  6694                           ;State_Mchn.c: 1769: Button_Start = 0;
  6695  000F44  0E00               	movlw	0
  6696  000F46                     L43:
  6697  000F46  6E10               	movwf	_Button_Start,c
  6698                           
  6699                           ;State_Mchn.c: 1773: }
  6700                           
  6701                           ;State_Mchn.c: 1772: default : break;
  6702                           
  6703                           ;State_Mchn.c: 1770: break;
  6704  000F48  D020               	goto	l3813
  6705  000F4A                     l3799:
  6706  000F4A  B081               	btfsc	3969,0,c	;volatile
  6707  000F4C  D002               	goto	u2530
  6708  000F4E  0E01               	movlw	1
  6709  000F50  D001               	goto	u2540
  6710  000F52                     u2530:
  6711  000F52  0E00               	movlw	0
  6712  000F54                     u2540:
  6713  000F54  6E3D               	movwf	??_Debounce_Inputs& (0+255),c
  6714  000F56  6A3E               	clrf	(??_Debounce_Inputs+1)& (0+255),c
  6715                           
  6716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6717                           ; Switch size 1, requested type "space"
  6718                           ; Number of cases is 1, Range of values is 0 to 0
  6719                           ; switch strategies available:
  6720                           ; Name         Instructions Cycles
  6721                           ; simple_byte            4     3 (average)
  6722                           ;	Chosen strategy is simple_byte
  6723  000F58  503E               	movf	??_Debounce_Inputs+1,w,c
  6724  000F5A  0A00               	xorlw	0	; case 0
  6725  000F5C  A4D8               	btfss	status,2,c
  6726  000F5E  D015               	goto	l3813
  6727                           
  6728                           ; Switch size 1, requested type "space"
  6729                           ; Number of cases is 2, Range of values is 0 to 1
  6730                           ; switch strategies available:
  6731                           ; Name         Instructions Cycles
  6732                           ; simple_byte            7     4 (average)
  6733                           ;	Chosen strategy is simple_byte
  6734  000F60  503D               	movf	??_Debounce_Inputs,w,c
  6735  000F62  0A00               	xorlw	0	; case 0
  6736  000F64  B4D8               	btfsc	status,2,c
  6737  000F66  D7EC               	goto	l3795
  6738  000F68  0A01               	xorlw	1	; case 1
  6739  000F6A  B4D8               	btfsc	status,2,c
  6740  000F6C  D7E2               	goto	l3787
  6741                           
  6742                           ;State_Mchn.c: 1776: switch(!PORTDbits.RD7)
  6743  000F6E  D00D               	goto	l3813
  6744  000F70                     l3801:
  6745  000F70  0E15               	movlw	21
  6746  000F72  600A               	cpfslt	_Button_Contact_Counter_Stop,c
  6747  000F74  D002               	goto	l3807
  6748                           
  6749                           ;State_Mchn.c: 1779: {
  6750                           ;State_Mchn.c: 1780: Button_Contact_Counter_Stop++;
  6751  000F76  2A0A               	incf	_Button_Contact_Counter_Stop,f,c
  6752                           
  6753                           ;State_Mchn.c: 1782: }
  6754                           
  6755                           ;State_Mchn.c: 1781: break;
  6756  000F78  D02A               	goto	l3827
  6757  000F7A                     l3807:
  6758                           
  6759                           ;State_Mchn.c: 1783: else {Button_Stop = 1; }
  6760  000F7A  0E01               	movlw	1
  6761  000F7C  D003               	goto	L44
  6762  000F7E                     l3809:
  6763  000F7E  0E00               	movlw	0
  6764  000F80  6E0A               	movwf	_Button_Contact_Counter_Stop,c
  6765                           
  6766                           ;State_Mchn.c: 1787: Button_Stop = 0;
  6767  000F82  0E00               	movlw	0
  6768  000F84                     L44:
  6769  000F84  0100               	movlb	0	; () banked
  6770  000F86  6FF1               	movwf	_Button_Stop& (0+255),b
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;State_Mchn.c: 1791: }
  6774                           
  6775                           ; BSR set to: 0
  6776                           
  6777                           ;State_Mchn.c: 1790: default : break;
  6778                           
  6779                           ;State_Mchn.c: 1788: break;
  6780  000F88  D022               	goto	l3827
  6781  000F8A                     l3813:
  6782  000F8A  BE83               	btfsc	3971,7,c	;volatile
  6783  000F8C  D002               	goto	u2560
  6784  000F8E  0E01               	movlw	1
  6785  000F90  D001               	goto	u2570
  6786  000F92                     u2560:
  6787  000F92  0E00               	movlw	0
  6788  000F94                     u2570:
  6789  000F94  6E3D               	movwf	??_Debounce_Inputs& (0+255),c
  6790  000F96  6A3E               	clrf	(??_Debounce_Inputs+1)& (0+255),c
  6791                           
  6792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6793                           ; Switch size 1, requested type "space"
  6794                           ; Number of cases is 1, Range of values is 0 to 0
  6795                           ; switch strategies available:
  6796                           ; Name         Instructions Cycles
  6797                           ; simple_byte            4     3 (average)
  6798                           ;	Chosen strategy is simple_byte
  6799  000F98  503E               	movf	??_Debounce_Inputs+1,w,c
  6800  000F9A  0A00               	xorlw	0	; case 0
  6801  000F9C  A4D8               	btfss	status,2,c
  6802  000F9E  D017               	goto	l3827
  6803                           
  6804                           ; Switch size 1, requested type "space"
  6805                           ; Number of cases is 2, Range of values is 0 to 1
  6806                           ; switch strategies available:
  6807                           ; Name         Instructions Cycles
  6808                           ; simple_byte            7     4 (average)
  6809                           ;	Chosen strategy is simple_byte
  6810  000FA0  503D               	movf	??_Debounce_Inputs,w,c
  6811  000FA2  0A00               	xorlw	0	; case 0
  6812  000FA4  B4D8               	btfsc	status,2,c
  6813  000FA6  D7EB               	goto	l3809
  6814  000FA8  0A01               	xorlw	1	; case 1
  6815  000FAA  B4D8               	btfsc	status,2,c
  6816  000FAC  D7E1               	goto	l3801
  6817                           
  6818                           ;State_Mchn.c: 1794: switch(!PORTBbits.RB1)
  6819  000FAE  D00F               	goto	l3827
  6820  000FB0                     l3815:
  6821  000FB0  0E15               	movlw	21
  6822  000FB2  0100               	movlb	0	; () banked
  6823  000FB4  61EE               	cpfslt	_Button_Contact_Counter_Middle& (0+255),b
  6824  000FB6  D003               	goto	l3821
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;State_Mchn.c: 1797: {
  6828                           ;State_Mchn.c: 1798: Button_Contact_Counter_Middle++;
  6829  000FB8  0100               	movlb	0	; () banked
  6830  000FBA  2BEE               	incf	_Button_Contact_Counter_Middle& (0+255),f,b
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;State_Mchn.c: 1800: }
  6834                           
  6835                           ;State_Mchn.c: 1799: break;
  6836  000FBC  D02A               	goto	l3841
  6837  000FBE                     l3821:
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;State_Mchn.c: 1801: else {Button_Middle = 1; }
  6841  000FBE  0E01               	movlw	1
  6842  000FC0  D004               	goto	L45
  6843  000FC2                     l3823:
  6844  000FC2  0E00               	movlw	0
  6845  000FC4  0100               	movlb	0	; () banked
  6846  000FC6  6FEE               	movwf	_Button_Contact_Counter_Middle& (0+255),b
  6847                           
  6848                           ;State_Mchn.c: 1805: Button_Middle = 0;
  6849  000FC8  0E00               	movlw	0
  6850  000FCA                     L45:
  6851  000FCA  6E0D               	movwf	_Button_Middle,c
  6852                           
  6853                           ; BSR set to: 0
  6854                           ;State_Mchn.c: 1809: }
  6855                           
  6856                           ; BSR set to: 0
  6857                           
  6858                           ;State_Mchn.c: 1808: default : break;
  6859                           
  6860                           ;State_Mchn.c: 1806: break;
  6861  000FCC  D022               	goto	l3841
  6862  000FCE                     l3827:
  6863  000FCE  B281               	btfsc	3969,1,c	;volatile
  6864  000FD0  D002               	goto	u2590
  6865  000FD2  0E01               	movlw	1
  6866  000FD4  D001               	goto	u2600
  6867  000FD6                     u2590:
  6868  000FD6  0E00               	movlw	0
  6869  000FD8                     u2600:
  6870  000FD8  6E3D               	movwf	??_Debounce_Inputs& (0+255),c
  6871  000FDA  6A3E               	clrf	(??_Debounce_Inputs+1)& (0+255),c
  6872                           
  6873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6874                           ; Switch size 1, requested type "space"
  6875                           ; Number of cases is 1, Range of values is 0 to 0
  6876                           ; switch strategies available:
  6877                           ; Name         Instructions Cycles
  6878                           ; simple_byte            4     3 (average)
  6879                           ;	Chosen strategy is simple_byte
  6880  000FDC  503E               	movf	??_Debounce_Inputs+1,w,c
  6881  000FDE  0A00               	xorlw	0	; case 0
  6882  000FE0  A4D8               	btfss	status,2,c
  6883  000FE2  D017               	goto	l3841
  6884                           
  6885                           ; Switch size 1, requested type "space"
  6886                           ; Number of cases is 2, Range of values is 0 to 1
  6887                           ; switch strategies available:
  6888                           ; Name         Instructions Cycles
  6889                           ; simple_byte            7     4 (average)
  6890                           ;	Chosen strategy is simple_byte
  6891  000FE4  503D               	movf	??_Debounce_Inputs,w,c
  6892  000FE6  0A00               	xorlw	0	; case 0
  6893  000FE8  B4D8               	btfsc	status,2,c
  6894  000FEA  D7EB               	goto	l3823
  6895  000FEC  0A01               	xorlw	1	; case 1
  6896  000FEE  B4D8               	btfsc	status,2,c
  6897  000FF0  D7DF               	goto	l3815
  6898                           
  6899                           ;State_Mchn.c: 1812: switch(!PORTBbits.RB5)
  6900  000FF2  D00F               	goto	l3841
  6901  000FF4                     l3829:
  6902  000FF4  0E15               	movlw	21
  6903  000FF6  0100               	movlb	0	; () banked
  6904  000FF8  61EC               	cpfslt	_Button_Contact_Counter_LB& (0+255),b
  6905  000FFA  D003               	goto	l3835
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;State_Mchn.c: 1815: {
  6909                           ;State_Mchn.c: 1816: Button_Contact_Counter_LB++;
  6910  000FFC  0100               	movlb	0	; () banked
  6911  000FFE  2BEC               	incf	_Button_Contact_Counter_LB& (0+255),f,b
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;State_Mchn.c: 1818: }
  6915                           
  6916                           ;State_Mchn.c: 1817: break;
  6917  001000  D02A               	goto	l3855
  6918  001002                     l3835:
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;State_Mchn.c: 1819: else {Button_LB = 1; }
  6922  001002  0E01               	movlw	1
  6923  001004  D004               	goto	L46
  6924  001006                     l3837:
  6925  001006  0E00               	movlw	0
  6926  001008  0100               	movlb	0	; () banked
  6927  00100A  6FEC               	movwf	_Button_Contact_Counter_LB& (0+255),b
  6928                           
  6929                           ;State_Mchn.c: 1823: Button_LB = 0;
  6930  00100C  0E00               	movlw	0
  6931  00100E                     L46:
  6932  00100E  6E0B               	movwf	_Button_LB,c
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;State_Mchn.c: 1827: }
  6936                           
  6937                           ; BSR set to: 0
  6938                           
  6939                           ;State_Mchn.c: 1826: default : break;
  6940                           
  6941                           ;State_Mchn.c: 1824: break;
  6942  001010  D022               	goto	l3855
  6943  001012                     l3841:
  6944  001012  BA81               	btfsc	3969,5,c	;volatile
  6945  001014  D002               	goto	u2620
  6946  001016  0E01               	movlw	1
  6947  001018  D001               	goto	u2630
  6948  00101A                     u2620:
  6949  00101A  0E00               	movlw	0
  6950  00101C                     u2630:
  6951  00101C  6E3D               	movwf	??_Debounce_Inputs& (0+255),c
  6952  00101E  6A3E               	clrf	(??_Debounce_Inputs+1)& (0+255),c
  6953                           
  6954                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6955                           ; Switch size 1, requested type "space"
  6956                           ; Number of cases is 1, Range of values is 0 to 0
  6957                           ; switch strategies available:
  6958                           ; Name         Instructions Cycles
  6959                           ; simple_byte            4     3 (average)
  6960                           ;	Chosen strategy is simple_byte
  6961  001020  503E               	movf	??_Debounce_Inputs+1,w,c
  6962  001022  0A00               	xorlw	0	; case 0
  6963  001024  A4D8               	btfss	status,2,c
  6964  001026  D017               	goto	l3855
  6965                           
  6966                           ; Switch size 1, requested type "space"
  6967                           ; Number of cases is 2, Range of values is 0 to 1
  6968                           ; switch strategies available:
  6969                           ; Name         Instructions Cycles
  6970                           ; simple_byte            7     4 (average)
  6971                           ;	Chosen strategy is simple_byte
  6972  001028  503D               	movf	??_Debounce_Inputs,w,c
  6973  00102A  0A00               	xorlw	0	; case 0
  6974  00102C  B4D8               	btfsc	status,2,c
  6975  00102E  D7EB               	goto	l3837
  6976  001030  0A01               	xorlw	1	; case 1
  6977  001032  B4D8               	btfsc	status,2,c
  6978  001034  D7DF               	goto	l3829
  6979                           
  6980                           ;State_Mchn.c: 1830: switch(!PORTBbits.RB4)
  6981  001036  D00F               	goto	l3855
  6982  001038                     l3843:
  6983  001038  0E15               	movlw	21
  6984  00103A  0100               	movlb	0	; () banked
  6985  00103C  61ED               	cpfslt	_Button_Contact_Counter_LF& (0+255),b
  6986  00103E  D003               	goto	l3849
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;State_Mchn.c: 1833: {
  6990                           ;State_Mchn.c: 1834: Button_Contact_Counter_LF++;
  6991  001040  0100               	movlb	0	; () banked
  6992  001042  2BED               	incf	_Button_Contact_Counter_LF& (0+255),f,b
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;State_Mchn.c: 1836: }
  6996                           
  6997                           ;State_Mchn.c: 1835: break;
  6998  001044  D02A               	goto	l3869
  6999  001046                     l3849:
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;State_Mchn.c: 1837: else {Button_LF = 1; }
  7003  001046  0E01               	movlw	1
  7004  001048  D004               	goto	L47
  7005  00104A                     l3851:
  7006  00104A  0E00               	movlw	0
  7007  00104C  0100               	movlb	0	; () banked
  7008  00104E  6FED               	movwf	_Button_Contact_Counter_LF& (0+255),b
  7009                           
  7010                           ;State_Mchn.c: 1841: Button_LF = 0;
  7011  001050  0E00               	movlw	0
  7012  001052                     L47:
  7013  001052  6E0C               	movwf	_Button_LF,c
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;State_Mchn.c: 1845: }
  7017                           
  7018                           ; BSR set to: 0
  7019                           
  7020                           ;State_Mchn.c: 1844: default : break;
  7021                           
  7022                           ;State_Mchn.c: 1842: break;
  7023  001054  D022               	goto	l3869
  7024  001056                     l3855:
  7025  001056  B881               	btfsc	3969,4,c	;volatile
  7026  001058  D002               	goto	u2650
  7027  00105A  0E01               	movlw	1
  7028  00105C  D001               	goto	u2660
  7029  00105E                     u2650:
  7030  00105E  0E00               	movlw	0
  7031  001060                     u2660:
  7032  001060  6E3D               	movwf	??_Debounce_Inputs& (0+255),c
  7033  001062  6A3E               	clrf	(??_Debounce_Inputs+1)& (0+255),c
  7034                           
  7035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7036                           ; Switch size 1, requested type "space"
  7037                           ; Number of cases is 1, Range of values is 0 to 0
  7038                           ; switch strategies available:
  7039                           ; Name         Instructions Cycles
  7040                           ; simple_byte            4     3 (average)
  7041                           ;	Chosen strategy is simple_byte
  7042  001064  503E               	movf	??_Debounce_Inputs+1,w,c
  7043  001066  0A00               	xorlw	0	; case 0
  7044  001068  A4D8               	btfss	status,2,c
  7045  00106A  D017               	goto	l3869
  7046                           
  7047                           ; Switch size 1, requested type "space"
  7048                           ; Number of cases is 2, Range of values is 0 to 1
  7049                           ; switch strategies available:
  7050                           ; Name         Instructions Cycles
  7051                           ; simple_byte            7     4 (average)
  7052                           ;	Chosen strategy is simple_byte
  7053  00106C  503D               	movf	??_Debounce_Inputs,w,c
  7054  00106E  0A00               	xorlw	0	; case 0
  7055  001070  B4D8               	btfsc	status,2,c
  7056  001072  D7EB               	goto	l3851
  7057  001074  0A01               	xorlw	1	; case 1
  7058  001076  B4D8               	btfsc	status,2,c
  7059  001078  D7DF               	goto	l3843
  7060                           
  7061                           ;State_Mchn.c: 1848: switch(!PORTBbits.RB3)
  7062  00107A  D00F               	goto	l3869
  7063  00107C                     l3857:
  7064  00107C  0E15               	movlw	21
  7065  00107E  0100               	movlb	0	; () banked
  7066  001080  61EF               	cpfslt	_Button_Contact_Counter_RB& (0+255),b
  7067  001082  D003               	goto	l3863
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;State_Mchn.c: 1851: {
  7071                           ;State_Mchn.c: 1852: Button_Contact_Counter_RB++;
  7072  001084  0100               	movlb	0	; () banked
  7073  001086  2BEF               	incf	_Button_Contact_Counter_RB& (0+255),f,b
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;State_Mchn.c: 1854: }
  7077                           
  7078                           ;State_Mchn.c: 1853: break;
  7079  001088  D02B               	goto	l3883
  7080  00108A                     l3863:
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;State_Mchn.c: 1855: else {Button_RB = 1; }
  7084  00108A  0E01               	movlw	1
  7085  00108C  D004               	goto	L48
  7086  00108E                     l3865:
  7087  00108E  0E00               	movlw	0
  7088  001090  0100               	movlb	0	; () banked
  7089  001092  6FEF               	movwf	_Button_Contact_Counter_RB& (0+255),b
  7090                           
  7091                           ;State_Mchn.c: 1859: Button_RB = 0;
  7092  001094  0E00               	movlw	0
  7093  001096                     L48:
  7094  001096  6E0E               	movwf	_Button_RB,c
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;State_Mchn.c: 1863: }
  7098                           
  7099                           ; BSR set to: 0
  7100                           
  7101                           ;State_Mchn.c: 1862: default : break;
  7102                           
  7103                           ;State_Mchn.c: 1860: break;
  7104  001098  D023               	goto	l3883
  7105  00109A                     l3869:
  7106  00109A  B681               	btfsc	3969,3,c	;volatile
  7107  00109C  D002               	goto	u2680
  7108  00109E  0E01               	movlw	1
  7109  0010A0  D001               	goto	u2690
  7110  0010A2                     u2680:
  7111  0010A2  0E00               	movlw	0
  7112  0010A4                     u2690:
  7113  0010A4  6E3D               	movwf	??_Debounce_Inputs& (0+255),c
  7114  0010A6  6A3E               	clrf	(??_Debounce_Inputs+1)& (0+255),c
  7115                           
  7116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7117                           ; Switch size 1, requested type "space"
  7118                           ; Number of cases is 1, Range of values is 0 to 0
  7119                           ; switch strategies available:
  7120                           ; Name         Instructions Cycles
  7121                           ; simple_byte            4     3 (average)
  7122                           ;	Chosen strategy is simple_byte
  7123  0010A8  503E               	movf	??_Debounce_Inputs+1,w,c
  7124  0010AA  0A00               	xorlw	0	; case 0
  7125  0010AC  A4D8               	btfss	status,2,c
  7126  0010AE  D018               	goto	l3883
  7127                           
  7128                           ; Switch size 1, requested type "space"
  7129                           ; Number of cases is 2, Range of values is 0 to 1
  7130                           ; switch strategies available:
  7131                           ; Name         Instructions Cycles
  7132                           ; simple_byte            7     4 (average)
  7133                           ;	Chosen strategy is simple_byte
  7134  0010B0  503D               	movf	??_Debounce_Inputs,w,c
  7135  0010B2  0A00               	xorlw	0	; case 0
  7136  0010B4  B4D8               	btfsc	status,2,c
  7137  0010B6  D7EB               	goto	l3865
  7138  0010B8  0A01               	xorlw	1	; case 1
  7139  0010BA  B4D8               	btfsc	status,2,c
  7140  0010BC  D7DF               	goto	l3857
  7141                           
  7142                           ;State_Mchn.c: 1866: switch(!PORTBbits.RB2)
  7143  0010BE  D010               	goto	l3883
  7144  0010C0                     l3871:
  7145  0010C0  0E15               	movlw	21
  7146  0010C2  0100               	movlb	0	; () banked
  7147  0010C4  61F0               	cpfslt	_Button_Contact_Counter_RF& (0+255),b
  7148  0010C6  D003               	goto	l3877
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;State_Mchn.c: 1869: {
  7152                           ;State_Mchn.c: 1870: Button_Contact_Counter_RF++;
  7153  0010C8  0100               	movlb	0	; () banked
  7154  0010CA  2BF0               	incf	_Button_Contact_Counter_RF& (0+255),f,b
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;State_Mchn.c: 1872: }
  7158                           
  7159                           ;State_Mchn.c: 1871: break;
  7160  0010CC  0012               	return	
  7161  0010CE                     l3877:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;State_Mchn.c: 1873: else {Button_RF = 1; }
  7165  0010CE  0E01               	movlw	1
  7166  0010D0  6E0F               	movwf	_Button_RF,c
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;State_Mchn.c: 1874: break;
  7170  0010D2  0012               	return	
  7171  0010D4                     l3879:
  7172  0010D4  0E00               	movlw	0
  7173  0010D6  0100               	movlb	0	; () banked
  7174  0010D8  6FF0               	movwf	_Button_Contact_Counter_RF& (0+255),b
  7175                           
  7176                           ;State_Mchn.c: 1877: Button_RF = 0;
  7177  0010DA  0E00               	movlw	0
  7178  0010DC  6E0F               	movwf	_Button_RF,c
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;State_Mchn.c: 1881: }
  7182                           
  7183                           ; BSR set to: 0
  7184                           
  7185                           ;State_Mchn.c: 1880: default : break;
  7186                           
  7187                           ;State_Mchn.c: 1878: break;
  7188  0010DE  0012               	return	
  7189  0010E0                     l3883:
  7190  0010E0  B481               	btfsc	3969,2,c	;volatile
  7191  0010E2  D002               	goto	u2710
  7192  0010E4  0E01               	movlw	1
  7193  0010E6  D001               	goto	u2720
  7194  0010E8                     u2710:
  7195  0010E8  0E00               	movlw	0
  7196  0010EA                     u2720:
  7197  0010EA  6E3D               	movwf	??_Debounce_Inputs& (0+255),c
  7198  0010EC  6A3E               	clrf	(??_Debounce_Inputs+1)& (0+255),c
  7199                           
  7200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7201                           ; Switch size 1, requested type "space"
  7202                           ; Number of cases is 1, Range of values is 0 to 0
  7203                           ; switch strategies available:
  7204                           ; Name         Instructions Cycles
  7205                           ; simple_byte            4     3 (average)
  7206                           ;	Chosen strategy is simple_byte
  7207  0010EE  503E               	movf	??_Debounce_Inputs+1,w,c
  7208  0010F0  0A00               	xorlw	0	; case 0
  7209  0010F2  A4D8               	btfss	status,2,c
  7210  0010F4  0012               	return	
  7211                           
  7212                           ; Switch size 1, requested type "space"
  7213                           ; Number of cases is 2, Range of values is 0 to 1
  7214                           ; switch strategies available:
  7215                           ; Name         Instructions Cycles
  7216                           ; simple_byte            7     4 (average)
  7217                           ;	Chosen strategy is simple_byte
  7218  0010F6  503D               	movf	??_Debounce_Inputs,w,c
  7219  0010F8  0A00               	xorlw	0	; case 0
  7220  0010FA  B4D8               	btfsc	status,2,c
  7221  0010FC  D7EB               	goto	l3879
  7222  0010FE  0A01               	xorlw	1	; case 1
  7223  001100  A4D8               	btfss	status,2,c
  7224  001102  0012               	return	
  7225  001104  D7DD               	goto	l3871
  7226  001106                     __end_of_Debounce_Inputs:
  7227                           	opt stack 0
  7228                           tblptru	equ	0xFF8
  7229                           tblptrh	equ	0xFF7
  7230                           tblptrl	equ	0xFF6
  7231                           tablat	equ	0xFF5
  7232                           intcon	equ	0xFF2
  7233                           postinc0	equ	0xFEE
  7234                           wreg	equ	0xFE8
  7235                           postdec1	equ	0xFE5
  7236                           fsr1l	equ	0xFE1
  7237                           status	equ	0xFD8
  7238                           
  7239 ;; *************** function _Init_Timers *****************
  7240 ;; Defined at:
  7241 ;;		line 178 in file "../Main.c"
  7242 ;; Parameters:    Size  Location     Type
  7243 ;;		None
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;		None
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, status,2
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7255 ;;      Params:         0       0       0       0       0       0       0       0       0
  7256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7258 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7259 ;;Total ram usage:        0 bytes
  7260 ;; Hardware stack levels used:    1
  7261 ;; Hardware stack levels required when called:    4
  7262 ;; This function calls:
  7263 ;;		Nothing
  7264 ;; This function is called by:
  7265 ;;		_main
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           	psect	text13
  7270  001BE2                     __ptext13:
  7271                           	opt stack 0
  7272  001BE2                     _Init_Timers:
  7273                           	opt stack 26
  7274                           
  7275                           ;Main.c: 180: RCONbits.IPEN = 1;
  7276                           
  7277                           ;incstack = 0
  7278  001BE2  8ED0               	bsf	4048,7,c	;volatile
  7279                           
  7280                           ;Main.c: 181: INTCON = 0xA0;
  7281  001BE4  0EA0               	movlw	160
  7282  001BE6  6EF2               	movwf	intcon,c	;volatile
  7283                           
  7284                           ;Main.c: 182: INTCON2 = 0x84;
  7285  001BE8  0E84               	movlw	132
  7286  001BEA  6EF1               	movwf	intcon2,c	;volatile
  7287                           
  7288                           ;Main.c: 183: TMR0H = 0x0;
  7289  001BEC  0E00               	movlw	0
  7290  001BEE  6ED7               	movwf	4055,c	;volatile
  7291                           
  7292                           ;Main.c: 184: TMR0L = 0x0;
  7293  001BF0  0E00               	movlw	0
  7294  001BF2  6ED6               	movwf	4054,c	;volatile
  7295                           
  7296                           ;Main.c: 185: T0CON = 0xC3;
  7297  001BF4  0EC3               	movlw	195
  7298  001BF6  6ED5               	movwf	4053,c	;volatile
  7299  001BF8  0012               	return		;funcret
  7300  001BFA                     __end_of_Init_Timers:
  7301                           	opt stack 0
  7302                           tblptru	equ	0xFF8
  7303                           tblptrh	equ	0xFF7
  7304                           tblptrl	equ	0xFF6
  7305                           tablat	equ	0xFF5
  7306                           intcon	equ	0xFF2
  7307                           intcon2	equ	0xFF1
  7308                           postinc0	equ	0xFEE
  7309                           wreg	equ	0xFE8
  7310                           postdec1	equ	0xFE5
  7311                           fsr1l	equ	0xFE1
  7312                           status	equ	0xFD8
  7313                           
  7314 ;; *************** function _Init_Pwm *****************
  7315 ;; Defined at:
  7316 ;;		line 191 in file "../Main.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;		None
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;		None
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  1    wreg      void 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7330 ;;      Params:         0       0       0       0       0       0       0       0       0
  7331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7333 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7334 ;;Total ram usage:        0 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; Hardware stack levels required when called:    4
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_main
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text14
  7345  001BFA                     __ptext14:
  7346                           	opt stack 0
  7347  001BFA                     _Init_Pwm:
  7348                           	opt stack 26
  7349                           
  7350                           ;Main.c: 194: PORTCbits.RC0 = 1;
  7351                           
  7352                           ;incstack = 0
  7353  001BFA  8082               	bsf	3970,0,c	;volatile
  7354                           
  7355                           ;Main.c: 195: PR2=0xFF;
  7356  001BFC  68CB               	setf	4043,c	;volatile
  7357                           
  7358                           ;Main.c: 196: CCPR1L = 0x7F;
  7359  001BFE  0E7F               	movlw	127
  7360  001C00  6EBE               	movwf	4030,c	;volatile
  7361                           
  7362                           ;Main.c: 197: CCP1CON = 0x0F;
  7363  001C02  0E0F               	movlw	15
  7364  001C04  6EBD               	movwf	4029,c	;volatile
  7365                           
  7366                           ;Main.c: 198: T2CON = 0x04;
  7367  001C06  0E04               	movlw	4
  7368  001C08  6ECA               	movwf	4042,c	;volatile
  7369                           
  7370                           ;Main.c: 199: TRISCbits.TRISC2=0;TRISCbits.TRISC0=0;;
  7371  001C0A  9494               	bcf	3988,2,c	;volatile
  7372  001C0C  9094               	bcf	3988,0,c	;volatile
  7373  001C0E  0012               	return		;funcret
  7374  001C10                     __end_of_Init_Pwm:
  7375                           	opt stack 0
  7376                           tblptru	equ	0xFF8
  7377                           tblptrh	equ	0xFF7
  7378                           tblptrl	equ	0xFF6
  7379                           tablat	equ	0xFF5
  7380                           intcon	equ	0xFF2
  7381                           intcon2	equ	0xFF1
  7382                           postinc0	equ	0xFEE
  7383                           wreg	equ	0xFE8
  7384                           postdec1	equ	0xFE5
  7385                           fsr1l	equ	0xFE1
  7386                           status	equ	0xFD8
  7387                           
  7388 ;; *************** function _INIT_TERMINAL *****************
  7389 ;; Defined at:
  7390 ;;		line 12 in file "../terminal.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;		None
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  i               2   15[COMRAM] int 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg, status,2, status,0
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7404 ;;      Params:         0       0       0       0       0       0       0       0       0
  7405 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7407 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7408 ;;Total ram usage:        2 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:    4
  7411 ;; This function calls:
  7412 ;;		Nothing
  7413 ;; This function is called by:
  7414 ;;		_main
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text15
  7419  001BBA                     __ptext15:
  7420                           	opt stack 0
  7421  001BBA                     _INIT_TERMINAL:
  7422                           	opt stack 26
  7423                           
  7424                           ;terminal.c: 13: int i = 0;
  7425                           
  7426                           ;incstack = 0
  7427  001BBA  0E00               	movlw	0
  7428  001BBC  6E3E               	movwf	INIT_TERMINAL@i+1,c
  7429  001BBE  0E00               	movlw	0
  7430  001BC0  6E3D               	movwf	INIT_TERMINAL@i,c
  7431                           
  7432                           ;terminal.c: 14: for (i=0; i<22; i++){
  7433  001BC2  0E00               	movlw	0
  7434  001BC4  6E3E               	movwf	INIT_TERMINAL@i+1,c
  7435  001BC6  0E00               	movlw	0
  7436  001BC8  6E3D               	movwf	INIT_TERMINAL@i,c
  7437  001BCA                     l2341:
  7438  001BCA  BE3E               	btfsc	INIT_TERMINAL@i+1,7,c
  7439  001BCC  D006               	goto	l2345
  7440  001BCE  503E               	movf	INIT_TERMINAL@i+1,w,c
  7441  001BD0  E107               	bnz	l947
  7442  001BD2  0E16               	movlw	22
  7443  001BD4  5C3D               	subwf	INIT_TERMINAL@i,w,c
  7444  001BD6  B0D8               	btfsc	status,0,c
  7445  001BD8  0012               	return	
  7446  001BDA                     l2345:
  7447  001BDA  4A3D               	infsnz	INIT_TERMINAL@i,f,c
  7448  001BDC  2A3E               	incf	INIT_TERMINAL@i+1,f,c
  7449  001BDE  D7F5               	goto	l2341
  7450  001BE0                     l947:
  7451  001BE0  0012               	return		;funcret
  7452  001BE2                     __end_of_INIT_TERMINAL:
  7453                           	opt stack 0
  7454                           tblptru	equ	0xFF8
  7455                           tblptrh	equ	0xFF7
  7456                           tblptrl	equ	0xFF6
  7457                           tablat	equ	0xFF5
  7458                           intcon	equ	0xFF2
  7459                           intcon2	equ	0xFF1
  7460                           postinc0	equ	0xFEE
  7461                           wreg	equ	0xFE8
  7462                           postdec1	equ	0xFE5
  7463                           fsr1l	equ	0xFE1
  7464                           status	equ	0xFD8
  7465                           
  7466 ;; *************** function _EUSART1_Initialize *****************
  7467 ;; Defined at:
  7468 ;;		line 77 in file "../eusart1.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;		None
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  baud_rate       2   15[COMRAM] unsigned int 
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  1    wreg      void 
  7475 ;; Registers used:
  7476 ;;		wreg, status,2
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7482 ;;      Params:         0       0       0       0       0       0       0       0       0
  7483 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7485 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7486 ;;Total ram usage:        2 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:    4
  7489 ;; This function calls:
  7490 ;;		Nothing
  7491 ;; This function is called by:
  7492 ;;		_main
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           	psect	text16
  7497  001A9A                     __ptext16:
  7498                           	opt stack 0
  7499  001A9A                     _EUSART1_Initialize:
  7500                           	opt stack 26
  7501                           
  7502                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  7503                           
  7504                           ;incstack = 0
  7505  001A9A  9A9D               	bcf	3997,5,c	;volatile
  7506                           
  7507                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  7508  001A9C  989D               	bcf	3997,4,c	;volatile
  7509                           
  7510                           ;eusart1.c: 84: BAUDCONbits.BRG16 = 1;
  7511  001A9E  86B8               	bsf	4024,3,c	;volatile
  7512                           
  7513                           ;eusart1.c: 86: RCSTAbits.SPEN = 1;
  7514  001AA0  8EAB               	bsf	4011,7,c	;volatile
  7515                           
  7516                           ;eusart1.c: 87: RCSTAbits.RX9 = 0;
  7517  001AA2  9CAB               	bcf	4011,6,c	;volatile
  7518                           
  7519                           ;eusart1.c: 88: RCSTAbits.CREN = 1;
  7520  001AA4  88AB               	bsf	4011,4,c	;volatile
  7521                           
  7522                           ;eusart1.c: 89: RCSTAbits.ADDEN = 0;
  7523  001AA6  96AB               	bcf	4011,3,c	;volatile
  7524                           
  7525                           ;eusart1.c: 91: TXSTAbits.TX9 = 0;
  7526  001AA8  9CAC               	bcf	4012,6,c	;volatile
  7527                           
  7528                           ;eusart1.c: 92: TXSTAbits.TXEN = 1;
  7529  001AAA  8AAC               	bsf	4012,5,c	;volatile
  7530                           
  7531                           ;eusart1.c: 93: TXSTAbits.SYNC = 0;
  7532  001AAC  98AC               	bcf	4012,4,c	;volatile
  7533                           
  7534                           ;eusart1.c: 94: TXSTAbits.SENDB = 0;
  7535  001AAE  96AC               	bcf	4012,3,c	;volatile
  7536                           
  7537                           ;eusart1.c: 95: TXSTAbits.BRGH = 1;
  7538  001AB0  84AC               	bsf	4012,2,c	;volatile
  7539                           
  7540                           ;eusart1.c: 96: TXSTAbits.TRMT = 1;
  7541  001AB2  82AC               	bsf	4012,1,c	;volatile
  7542                           
  7543                           ;eusart1.c: 97: TXSTAbits.TX9D = 0;
  7544  001AB4  90AC               	bcf	4012,0,c	;volatile
  7545                           
  7546                           ;eusart1.c: 99: unsigned int baud_rate;
  7547                           ;eusart1.c: 101: baud_rate = 417;
  7548  001AB6  0E01               	movlw	1
  7549  001AB8  6E3E               	movwf	EUSART1_Initialize@baud_rate+1,c
  7550  001ABA  0EA1               	movlw	161
  7551  001ABC  6E3D               	movwf	EUSART1_Initialize@baud_rate,c
  7552                           
  7553                           ;eusart1.c: 103: SPBRGH = baud_rate >> 8;
  7554  001ABE  503E               	movf	EUSART1_Initialize@baud_rate+1,w,c
  7555  001AC0  6EB0               	movwf	4016,c	;volatile
  7556                           
  7557                           ;eusart1.c: 104: SPBRG = baud_rate;
  7558  001AC2  C03D  FFAF         	movff	EUSART1_Initialize@baud_rate,4015	;volatile
  7559                           
  7560                           ;eusart1.c: 108: eusart1TxHead = 0;
  7561  001AC6  0E00               	movlw	0
  7562  001AC8  6E2C               	movwf	_eusart1TxHead,c
  7563                           
  7564                           ;eusart1.c: 109: eusart1TxTail = 0;
  7565  001ACA  0E00               	movlw	0
  7566  001ACC  6E2D               	movwf	_eusart1TxTail,c
  7567                           
  7568                           ;eusart1.c: 110: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
  7569  001ACE  0E7E               	movlw	126
  7570  001AD0  0100               	movlb	0	; () banked
  7571  001AD2  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  7572                           
  7573                           ;eusart1.c: 112: eusart1RxHead = 0;
  7574  001AD4  0E00               	movlw	0
  7575  001AD6  6E2A               	movwf	_eusart1RxHead,c
  7576                           
  7577                           ;eusart1.c: 113: eusart1RxTail = 0;
  7578  001AD8  0E00               	movlw	0
  7579  001ADA  6E2B               	movwf	_eusart1RxTail,c
  7580                           
  7581                           ;eusart1.c: 114: eusart1RxCount = 0;
  7582  001ADC  0E00               	movlw	0
  7583  001ADE  6E29               	movwf	_eusart1RxCount,c	;volatile
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;eusart1.c: 117: PIE1bits.RC1IE = 1;
  7587  001AE0  8A9D               	bsf	3997,5,c	;volatile
  7588                           
  7589                           ; BSR set to: 0
  7590  001AE2  0012               	return		;funcret
  7591  001AE4                     __end_of_EUSART1_Initialize:
  7592                           	opt stack 0
  7593                           tblptru	equ	0xFF8
  7594                           tblptrh	equ	0xFF7
  7595                           tblptrl	equ	0xFF6
  7596                           tablat	equ	0xFF5
  7597                           intcon	equ	0xFF2
  7598                           intcon2	equ	0xFF1
  7599                           postinc0	equ	0xFEE
  7600                           wreg	equ	0xFE8
  7601                           postdec1	equ	0xFE5
  7602                           fsr1l	equ	0xFE1
  7603                           status	equ	0xFD8
  7604                           
  7605 ;; *************** function _tc_low *****************
  7606 ;; Defined at:
  7607 ;;		line 142 in file "../Main.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;		None
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;		None
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1    wreg      void 
  7614 ;; Registers used:
  7615 ;;		None
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0
  7622 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7623 ;;      Temps:          0       0      17       0       0       0       0       0       0
  7624 ;;      Totals:         0       0      17       0       0       0       0       0       0
  7625 ;;Total ram usage:       17 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:    3
  7628 ;; This function calls:
  7629 ;;		Nothing
  7630 ;; This function is called by:
  7631 ;;		Interrupt level 1
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	intcodelo
  7636  000018                     __pintcodelo:
  7637                           	opt stack 0
  7638  000018                     _tc_low:
  7639                           	opt stack 23
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;incstack = 0
  7643  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7644  00001A  CFD8 F17E          	movff	status,??_tc_low
  7645  00001E  CFE8 F17F          	movff	wreg,??_tc_low+1
  7646  000022  CFE0 F180          	movff	bsr,??_tc_low+2
  7647  000026  CFFA F181          	movff	pclath,??_tc_low+3
  7648  00002A  CFFB F182          	movff	pclatu,??_tc_low+4
  7649  00002E  CFE9 F183          	movff	fsr0l,??_tc_low+5
  7650  000032  CFEA F184          	movff	fsr0h,??_tc_low+6
  7651  000036  CFE1 F185          	movff	fsr1l,??_tc_low+7
  7652  00003A  CFE2 F186          	movff	fsr1h,??_tc_low+8
  7653  00003E  CFD9 F187          	movff	fsr2l,??_tc_low+9
  7654  000042  CFDA F188          	movff	fsr2h,??_tc_low+10
  7655  000046  CFF3 F189          	movff	prodl,??_tc_low+11
  7656  00004A  CFF4 F18A          	movff	prodh,??_tc_low+12
  7657  00004E  CFF6 F18B          	movff	tblptrl,??_tc_low+13
  7658  000052  CFF7 F18C          	movff	tblptrh,??_tc_low+14
  7659  000056  CFF8 F18D          	movff	tblptru,??_tc_low+15
  7660  00005A  CFF5 F18E          	movff	tablat,??_tc_low+16
  7661  00005E  C18E  FFF5         	movff	??_tc_low+16,tablat
  7662  000062  C18D  FFF8         	movff	??_tc_low+15,tblptru
  7663  000066  C18C  FFF7         	movff	??_tc_low+14,tblptrh
  7664  00006A  C18B  FFF6         	movff	??_tc_low+13,tblptrl
  7665  00006E  C18A  FFF4         	movff	??_tc_low+12,prodh
  7666  000072  C189  FFF3         	movff	??_tc_low+11,prodl
  7667  000076  C188  FFDA         	movff	??_tc_low+10,fsr2h
  7668  00007A  C187  FFD9         	movff	??_tc_low+9,fsr2l
  7669  00007E  C186  FFE2         	movff	??_tc_low+8,fsr1h
  7670  000082  C185  FFE1         	movff	??_tc_low+7,fsr1l
  7671  000086  C184  FFEA         	movff	??_tc_low+6,fsr0h
  7672  00008A  C183  FFE9         	movff	??_tc_low+5,fsr0l
  7673  00008E  C182  FFFB         	movff	??_tc_low+4,pclatu
  7674  000092  C181  FFFA         	movff	??_tc_low+3,pclath
  7675  000096  C180  FFE0         	movff	??_tc_low+2,bsr
  7676  00009A  C17F  FFE8         	movff	??_tc_low+1,wreg
  7677  00009E  C17E  FFD8         	movff	??_tc_low,status
  7678  0000A2  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7679  0000A4  0010               	retfie	
  7680  0000A6                     __end_of_tc_low:
  7681                           	opt stack 0
  7682                           pclatu	equ	0xFFB
  7683                           pclath	equ	0xFFA
  7684                           tblptru	equ	0xFF8
  7685                           tblptrh	equ	0xFF7
  7686                           tblptrl	equ	0xFF6
  7687                           tablat	equ	0xFF5
  7688                           prodh	equ	0xFF4
  7689                           prodl	equ	0xFF3
  7690                           intcon	equ	0xFF2
  7691                           intcon2	equ	0xFF1
  7692                           postinc0	equ	0xFEE
  7693                           fsr0h	equ	0xFEA
  7694                           fsr0l	equ	0xFE9
  7695                           wreg	equ	0xFE8
  7696                           postdec1	equ	0xFE5
  7697                           fsr1h	equ	0xFE2
  7698                           fsr1l	equ	0xFE1
  7699                           bsr	equ	0xFE0
  7700                           fsr2h	equ	0xFDA
  7701                           fsr2l	equ	0xFD9
  7702                           status	equ	0xFD8
  7703                           
  7704 ;; *************** function _tc_high *****************
  7705 ;; Defined at:
  7706 ;;		line 146 in file "../Main.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;		None
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7720 ;;      Params:         0       0       0       0       0       0       0       0       0
  7721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7722 ;;      Temps:         14       0       0       0       0       0       0       0       0
  7723 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7724 ;;Total ram usage:       14 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    2
  7727 ;; This function calls:
  7728 ;;		_EUSART1_Receive_ISR
  7729 ;;		_EUSART1_Transmit_ISR
  7730 ;;		_UPDATExTERMINAL
  7731 ;; This function is called by:
  7732 ;;		Interrupt level 2
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           	psect	intcode
  7737  000008                     __pintcode:
  7738                           	opt stack 0
  7739  000008                     _tc_high:
  7740                           	opt stack 23
  7741                           
  7742                           ;incstack = 0
  7743  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7744  00000A  CFFA F02F          	movff	pclath,??_tc_high
  7745  00000E  CFFB F030          	movff	pclatu,??_tc_high+1
  7746  000012  EDA7  F00B         	call	int_func,f	;refresh shadow registers
  7747                           pclatu	equ	0xFFB
  7748                           pclath	equ	0xFFA
  7749                           tblptru	equ	0xFF8
  7750                           tblptrh	equ	0xFF7
  7751                           tblptrl	equ	0xFF6
  7752                           tablat	equ	0xFF5
  7753                           prodh	equ	0xFF4
  7754                           prodl	equ	0xFF3
  7755                           intcon	equ	0xFF2
  7756                           intcon2	equ	0xFF1
  7757                           postinc0	equ	0xFEE
  7758                           fsr0h	equ	0xFEA
  7759                           fsr0l	equ	0xFE9
  7760                           wreg	equ	0xFE8
  7761                           postdec1	equ	0xFE5
  7762                           fsr1h	equ	0xFE2
  7763                           fsr1l	equ	0xFE1
  7764                           bsr	equ	0xFE0
  7765                           fsr2h	equ	0xFDA
  7766                           fsr2l	equ	0xFD9
  7767                           status	equ	0xFD8
  7768                           
  7769                           	psect	intcode_body
  7770  00174E                     __pintcode_body:
  7771                           	opt stack 23
  7772  00174E                     int_func:
  7773                           	opt stack 23
  7774  00174E  0006               	pop		; remove dummy address from shadow register refresh
  7775  001750  CFE9 F031          	movff	fsr0l,??_tc_high+2
  7776  001754  CFEA F032          	movff	fsr0h,??_tc_high+3
  7777  001758  CFE1 F033          	movff	fsr1l,??_tc_high+4
  7778  00175C  CFE2 F034          	movff	fsr1h,??_tc_high+5
  7779  001760  CFD9 F035          	movff	fsr2l,??_tc_high+6
  7780  001764  CFDA F036          	movff	fsr2h,??_tc_high+7
  7781  001768  CFF3 F037          	movff	prodl,??_tc_high+8
  7782  00176C  CFF4 F038          	movff	prodh,??_tc_high+9
  7783  001770  CFF6 F039          	movff	tblptrl,??_tc_high+10
  7784  001774  CFF7 F03A          	movff	tblptrh,??_tc_high+11
  7785  001778  CFF8 F03B          	movff	tblptru,??_tc_high+12
  7786  00177C  CFF5 F03C          	movff	tablat,??_tc_high+13
  7787                           
  7788                           ;Main.c: 148: if (INTCONbits.TMR0IF)
  7789  001780  A4F2               	btfss	intcon,2,c	;volatile
  7790  001782  D020               	goto	i2l5275
  7791                           
  7792                           ;Main.c: 149: {
  7793                           ;Main.c: 150: if(Led1_Counter <= 100)
  7794  001784  0100               	movlb	0	; () banked
  7795  001786  51EB               	movf	(_Led1_Counter+1)& (0+255),w,b
  7796  001788  E107               	bnz	i2l88
  7797  00178A  0E65               	movlw	101
  7798  00178C  0100               	movlb	0	; () banked
  7799  00178E  5DEA               	subwf	_Led1_Counter& (0+255),w,b
  7800  001790  B0D8               	btfsc	status,0,c
  7801  001792  D002               	goto	i2l88
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;Main.c: 151: {
  7805                           ;Main.c: 152: PORTAbits.RA4 = 1;
  7806  001794  8880               	bsf	3968,4,c	;volatile
  7807                           
  7808                           ;Main.c: 153: }
  7809  001796  D001               	goto	i2l5263
  7810  001798                     i2l88:
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;Main.c: 154: else
  7814                           ;Main.c: 155: {
  7815                           ;Main.c: 156: PORTAbits.RA4 = 0;
  7816  001798  9880               	bcf	3968,4,c	;volatile
  7817  00179A                     i2l5263:
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;Main.c: 157: }
  7821                           ;Main.c: 158: if(Led1_Counter >= 700)
  7822  00179A  0EBC               	movlw	188
  7823  00179C  0100               	movlb	0	; () banked
  7824  00179E  5DEA               	subwf	_Led1_Counter& (0+255),w,b
  7825  0017A0  0E02               	movlw	2
  7826  0017A2  0100               	movlb	0	; () banked
  7827  0017A4  59EB               	subwfb	(_Led1_Counter+1)& (0+255),w,b
  7828  0017A6  A0D8               	btfss	status,0,c
  7829  0017A8  D007               	goto	i2l5269
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;Main.c: 159: {
  7833                           ;Main.c: 160: Led1_Counter = 0;
  7834  0017AA  0E00               	movlw	0
  7835  0017AC  0100               	movlb	0	; () banked
  7836  0017AE  6FEB               	movwf	(_Led1_Counter+1)& (0+255),b
  7837  0017B0  0E00               	movlw	0
  7838  0017B2  6FEA               	movwf	_Led1_Counter& (0+255),b
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;Main.c: 161: UPDATExTERMINAL();
  7842  0017B4  EC0E  F00E         	call	_UPDATExTERMINAL	;wreg free
  7843  0017B8                     i2l5269:
  7844                           
  7845                           ;Main.c: 162: }
  7846                           ;Main.c: 163: Led1_Counter++;
  7847  0017B8  0100               	movlb	0	; () banked
  7848  0017BA  4BEA               	infsnz	_Led1_Counter& (0+255),f,b
  7849  0017BC  2BEB               	incf	(_Led1_Counter+1)& (0+255),f,b
  7850                           
  7851                           ; BSR set to: 0
  7852                           ;Main.c: 164: Update_State_Machine = 1;
  7853  0017BE  0E01               	movlw	1
  7854  0017C0  6E28               	movwf	_Update_State_Machine,c
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;Main.c: 165: INTCONbits.TMR0IF = 0;
  7858  0017C2  94F2               	bcf	intcon,2,c	;volatile
  7859  0017C4                     i2l5275:
  7860                           
  7861                           ;Main.c: 166: }
  7862                           ;Main.c: 168: if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  7863  0017C4  BA9D               	btfsc	3997,5,c	;volatile
  7864  0017C6  AA9E               	btfss	3998,5,c	;volatile
  7865  0017C8  D002               	goto	i2l5281
  7866                           
  7867                           ;Main.c: 169: EUSART1_Receive_ISR();
  7868  0017CA  ECC7  F00D         	call	_EUSART1_Receive_ISR	;wreg free
  7869  0017CE                     i2l5281:
  7870                           
  7871                           ;Main.c: 170: }
  7872                           ;Main.c: 171: if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  7873  0017CE  B89D               	btfsc	3997,4,c	;volatile
  7874  0017D0  A89E               	btfss	3998,4,c	;volatile
  7875  0017D2  D002               	goto	i2l93
  7876                           
  7877                           ;Main.c: 172: EUSART1_Transmit_ISR();
  7878  0017D4  ECAE  F00D         	call	_EUSART1_Transmit_ISR	;wreg free
  7879  0017D8                     i2l93:
  7880  0017D8  C03C  FFF5         	movff	??_tc_high+13,tablat
  7881  0017DC  C03B  FFF8         	movff	??_tc_high+12,tblptru
  7882  0017E0  C03A  FFF7         	movff	??_tc_high+11,tblptrh
  7883  0017E4  C039  FFF6         	movff	??_tc_high+10,tblptrl
  7884  0017E8  C038  FFF4         	movff	??_tc_high+9,prodh
  7885  0017EC  C037  FFF3         	movff	??_tc_high+8,prodl
  7886  0017F0  C036  FFDA         	movff	??_tc_high+7,fsr2h
  7887  0017F4  C035  FFD9         	movff	??_tc_high+6,fsr2l
  7888  0017F8  C034  FFE2         	movff	??_tc_high+5,fsr1h
  7889  0017FC  C033  FFE1         	movff	??_tc_high+4,fsr1l
  7890  001800  C032  FFEA         	movff	??_tc_high+3,fsr0h
  7891  001804  C031  FFE9         	movff	??_tc_high+2,fsr0l
  7892  001808  C030  FFFB         	movff	??_tc_high+1,pclatu
  7893  00180C  C02F  FFFA         	movff	??_tc_high,pclath
  7894  001810  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7895  001812  0011               	retfie		f
  7896  001814                     __end_of_tc_high:
  7897                           	opt stack 0
  7898                           pclatu	equ	0xFFB
  7899                           pclath	equ	0xFFA
  7900                           tblptru	equ	0xFF8
  7901                           tblptrh	equ	0xFF7
  7902                           tblptrl	equ	0xFF6
  7903                           tablat	equ	0xFF5
  7904                           prodh	equ	0xFF4
  7905                           prodl	equ	0xFF3
  7906                           intcon	equ	0xFF2
  7907                           intcon2	equ	0xFF1
  7908                           postinc0	equ	0xFEE
  7909                           fsr0h	equ	0xFEA
  7910                           fsr0l	equ	0xFE9
  7911                           wreg	equ	0xFE8
  7912                           postdec1	equ	0xFE5
  7913                           fsr1h	equ	0xFE2
  7914                           fsr1l	equ	0xFE1
  7915                           bsr	equ	0xFE0
  7916                           fsr2h	equ	0xFDA
  7917                           fsr2l	equ	0xFD9
  7918                           status	equ	0xFD8
  7919                           
  7920 ;; *************** function _UPDATExTERMINAL *****************
  7921 ;; Defined at:
  7922 ;;		line 21 in file "../terminal.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;		None
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      void 
  7929 ;; Registers used:
  7930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7936 ;;      Params:         0       0       0       0       0       0       0       0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7939 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7940 ;;Total ram usage:        0 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    1
  7943 ;; This function calls:
  7944 ;;		_EUSART1_Write
  7945 ;; This function is called by:
  7946 ;;		_tc_high
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text19
  7951  001C1C                     __ptext19:
  7952                           	opt stack 0
  7953  001C1C                     _UPDATExTERMINAL:
  7954                           	opt stack 23
  7955                           
  7956                           ;terminal.c: 22: EUSART1_Write('A');
  7957                           
  7958                           ;incstack = 0
  7959  001C1C  0E41               	movlw	65
  7960  001C1E  EC72  F00D         	call	_EUSART1_Write
  7961  001C22  0012               	return		;funcret
  7962  001C24                     __end_of_UPDATExTERMINAL:
  7963                           	opt stack 0
  7964                           pclatu	equ	0xFFB
  7965                           pclath	equ	0xFFA
  7966                           tblptru	equ	0xFF8
  7967                           tblptrh	equ	0xFF7
  7968                           tblptrl	equ	0xFF6
  7969                           tablat	equ	0xFF5
  7970                           prodh	equ	0xFF4
  7971                           prodl	equ	0xFF3
  7972                           intcon	equ	0xFF2
  7973                           intcon2	equ	0xFF1
  7974                           postinc0	equ	0xFEE
  7975                           fsr0h	equ	0xFEA
  7976                           fsr0l	equ	0xFE9
  7977                           wreg	equ	0xFE8
  7978                           postdec1	equ	0xFE5
  7979                           fsr1h	equ	0xFE2
  7980                           fsr1l	equ	0xFE1
  7981                           bsr	equ	0xFE0
  7982                           fsr2h	equ	0xFDA
  7983                           fsr2l	equ	0xFD9
  7984                           status	equ	0xFD8
  7985                           
  7986 ;; *************** function _EUSART1_Write *****************
  7987 ;; Defined at:
  7988 ;;		line 160 in file "../eusart1.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;  txData          1    wreg     unsigned char 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;  txData          1    0[COMRAM] unsigned char 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8002 ;;      Params:         0       0       0       0       0       0       0       0       0
  8003 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8005 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8006 ;;Total ram usage:        1 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_UPDATExTERMINAL
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           	psect	text20
  8016  001AE4                     __ptext20:
  8017                           	opt stack 0
  8018  001AE4                     _EUSART1_Write:
  8019                           	opt stack 23
  8020                           
  8021                           ;incstack = 0
  8022                           ;EUSART1_Write@txData stored from wreg
  8023  001AE4  6E2E               	movwf	EUSART1_Write@txData,c
  8024  001AE6                     i2l4203:
  8025  001AE6  0100               	movlb	0	; () banked
  8026  001AE8  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  8027  001AEA  B4D8               	btfsc	status,2,c
  8028  001AEC  D7FC               	goto	i2l4203
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;eusart1.c: 162: }
  8032                           ;eusart1.c: 164: if (0 == PIE1bits.TX1IE) {
  8033  001AEE  B89D               	btfsc	3997,4,c	;volatile
  8034  001AF0  D003               	goto	i2l926
  8035                           
  8036                           ; BSR set to: 0
  8037                           ;eusart1.c: 165: TXREG1 = txData;
  8038  001AF2  C02E  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  8039                           
  8040                           ;eusart1.c: 166: } else {
  8041  001AF6  D013               	goto	i2l4217
  8042  001AF8                     i2l926:
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;eusart1.c: 167: PIE1bits.TX1IE = 0;
  8046  001AF8  989D               	bcf	3997,4,c	;volatile
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;eusart1.c: 168: eusart1TxBuffer[eusart1TxHead++] = txData;
  8050  001AFA  502C               	movf	_eusart1TxHead,w,c
  8051  001AFC  0D01               	mullw	1
  8052  001AFE  0E60               	movlw	low _eusart1TxBuffer
  8053  001B00  24F3               	addwf	prodl,w,c
  8054  001B02  6ED9               	movwf	fsr2l,c
  8055  001B04  0E00               	movlw	high _eusart1TxBuffer
  8056  001B06  20F4               	addwfc	prodh,w,c
  8057  001B08  6EDA               	movwf	fsr2h,c
  8058  001B0A  C02E  FFDF         	movff	EUSART1_Write@txData,indf2
  8059                           
  8060                           ; BSR set to: 0
  8061  001B0E  2A2C               	incf	_eusart1TxHead,f,c
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;eusart1.c: 169: if (sizeof (eusart1TxBuffer) <= eusart1TxHead) {
  8065  001B10  0E7D               	movlw	125
  8066  001B12  642C               	cpfsgt	_eusart1TxHead,c
  8067  001B14  D002               	goto	i2l4215
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;eusart1.c: 170: eusart1TxHead = 0;
  8071  001B16  0E00               	movlw	0
  8072  001B18  6E2C               	movwf	_eusart1TxHead,c
  8073  001B1A                     i2l4215:
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;eusart1.c: 171: }
  8077                           ;eusart1.c: 172: eusart1TxBufferRemaining--;
  8078  001B1A  0100               	movlb	0	; () banked
  8079  001B1C  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  8080  001B1E                     i2l4217:
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;eusart1.c: 173: }
  8084                           ;eusart1.c: 174: PIE1bits.TX1IE = 1;
  8085  001B1E  889D               	bsf	3997,4,c	;volatile
  8086                           
  8087                           ; BSR set to: 0
  8088  001B20  0012               	return		;funcret
  8089  001B22                     __end_of_EUSART1_Write:
  8090                           	opt stack 0
  8091                           pclatu	equ	0xFFB
  8092                           pclath	equ	0xFFA
  8093                           tblptru	equ	0xFF8
  8094                           tblptrh	equ	0xFF7
  8095                           tblptrl	equ	0xFF6
  8096                           tablat	equ	0xFF5
  8097                           prodh	equ	0xFF4
  8098                           prodl	equ	0xFF3
  8099                           intcon	equ	0xFF2
  8100                           intcon2	equ	0xFF1
  8101                           postinc0	equ	0xFEE
  8102                           fsr0h	equ	0xFEA
  8103                           fsr0l	equ	0xFE9
  8104                           wreg	equ	0xFE8
  8105                           postdec1	equ	0xFE5
  8106                           fsr1h	equ	0xFE2
  8107                           fsr1l	equ	0xFE1
  8108                           bsr	equ	0xFE0
  8109                           indf2	equ	0xFDF
  8110                           fsr2h	equ	0xFDA
  8111                           fsr2l	equ	0xFD9
  8112                           status	equ	0xFD8
  8113                           
  8114 ;; *************** function _EUSART1_Transmit_ISR *****************
  8115 ;; Defined at:
  8116 ;;		line 177 in file "../eusart1.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;		None
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;		None
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      void 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8130 ;;      Params:         0       0       0       0       0       0       0       0       0
  8131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8133 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8134 ;;Total ram usage:        0 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; This function calls:
  8137 ;;		Nothing
  8138 ;; This function is called by:
  8139 ;;		_tc_high
  8140 ;; This function uses a non-reentrant model
  8141 ;;
  8142                           
  8143                           	psect	text21
  8144  001B5C                     __ptext21:
  8145                           	opt stack 0
  8146  001B5C                     _EUSART1_Transmit_ISR:
  8147                           	opt stack 24
  8148                           
  8149                           ;eusart1.c: 180: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;incstack = 0
  8153  001B5C  0E7E               	movlw	126
  8154  001B5E  0100               	movlb	0	; () banked
  8155  001B60  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  8156  001B62  D013               	goto	i2l932
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;eusart1.c: 181: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  8160  001B64  502D               	movf	_eusart1TxTail,w,c
  8161  001B66  0D01               	mullw	1
  8162  001B68  0E60               	movlw	low _eusart1TxBuffer
  8163  001B6A  24F3               	addwf	prodl,w,c
  8164  001B6C  6ED9               	movwf	fsr2l,c
  8165  001B6E  0E00               	movlw	high _eusart1TxBuffer
  8166  001B70  20F4               	addwfc	prodh,w,c
  8167  001B72  6EDA               	movwf	fsr2h,c
  8168  001B74  50DF               	movf	indf2,w,c
  8169  001B76  6EAD               	movwf	4013,c	;volatile
  8170                           
  8171                           ; BSR set to: 0
  8172  001B78  2A2D               	incf	_eusart1TxTail,f,c
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;eusart1.c: 182: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
  8176  001B7A  0E7D               	movlw	125
  8177  001B7C  642D               	cpfsgt	_eusart1TxTail,c
  8178  001B7E  D002               	goto	i2l5189
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;eusart1.c: 183: eusart1TxTail = 0;
  8182  001B80  0E00               	movlw	0
  8183  001B82  6E2D               	movwf	_eusart1TxTail,c
  8184  001B84                     i2l5189:
  8185                           
  8186                           ; BSR set to: 0
  8187                           ;eusart1.c: 184: }
  8188                           ;eusart1.c: 185: eusart1TxBufferRemaining++;
  8189  001B84  0100               	movlb	0	; () banked
  8190  001B86  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  8191                           
  8192                           ;eusart1.c: 186: } else {
  8193  001B88  0012               	return	
  8194  001B8A                     i2l932:
  8195                           
  8196                           ; BSR set to: 0
  8197                           ;eusart1.c: 187: PIE1bits.TX1IE = 0;
  8198  001B8A  989D               	bcf	3997,4,c	;volatile
  8199  001B8C  0012               	return	
  8200  001B8E                     __end_of_EUSART1_Transmit_ISR:
  8201                           	opt stack 0
  8202                           pclatu	equ	0xFFB
  8203                           pclath	equ	0xFFA
  8204                           tblptru	equ	0xFF8
  8205                           tblptrh	equ	0xFF7
  8206                           tblptrl	equ	0xFF6
  8207                           tablat	equ	0xFF5
  8208                           prodh	equ	0xFF4
  8209                           prodl	equ	0xFF3
  8210                           intcon	equ	0xFF2
  8211                           intcon2	equ	0xFF1
  8212                           postinc0	equ	0xFEE
  8213                           fsr0h	equ	0xFEA
  8214                           fsr0l	equ	0xFE9
  8215                           wreg	equ	0xFE8
  8216                           postdec1	equ	0xFE5
  8217                           fsr1h	equ	0xFE2
  8218                           fsr1l	equ	0xFE1
  8219                           bsr	equ	0xFE0
  8220                           indf2	equ	0xFDF
  8221                           fsr2h	equ	0xFDA
  8222                           fsr2l	equ	0xFD9
  8223                           status	equ	0xFD8
  8224                           
  8225 ;; *************** function _EUSART1_Receive_ISR *****************
  8226 ;; Defined at:
  8227 ;;		line 191 in file "../eusart1.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;		None
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;		None
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1    wreg      void 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8241 ;;      Params:         0       0       0       0       0       0       0       0       0
  8242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8244 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8245 ;;Total ram usage:        0 bytes
  8246 ;; Hardware stack levels used:    1
  8247 ;; This function calls:
  8248 ;;		Nothing
  8249 ;; This function is called by:
  8250 ;;		_tc_high
  8251 ;; This function uses a non-reentrant model
  8252 ;;
  8253                           
  8254                           	psect	text22
  8255  001B8E                     __ptext22:
  8256                           	opt stack 0
  8257  001B8E                     _EUSART1_Receive_ISR:
  8258                           	opt stack 24
  8259                           
  8260                           ;eusart1.c: 192: if (1 == RCSTA1bits.OERR) {
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;incstack = 0
  8264  001B8E  A2AB               	btfss	4011,1,c	;volatile
  8265  001B90  D002               	goto	i2l5169
  8266                           
  8267                           ;eusart1.c: 195: RCSTA1bits.CREN = 0;
  8268  001B92  98AB               	bcf	4011,4,c	;volatile
  8269                           
  8270                           ;eusart1.c: 196: RCSTA1bits.CREN = 1;
  8271  001B94  88AB               	bsf	4011,4,c	;volatile
  8272  001B96                     i2l5169:
  8273                           
  8274                           ;eusart1.c: 197: }
  8275                           ;eusart1.c: 200: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  8276  001B96  502A               	movf	_eusart1RxHead,w,c
  8277  001B98  0D01               	mullw	1
  8278  001B9A  0E00               	movlw	low _eusart1RxBuffer
  8279  001B9C  24F3               	addwf	prodl,w,c
  8280  001B9E  6ED9               	movwf	fsr2l,c
  8281  001BA0  0E01               	movlw	high _eusart1RxBuffer
  8282  001BA2  20F4               	addwfc	prodh,w,c
  8283  001BA4  6EDA               	movwf	fsr2h,c
  8284  001BA6  CFAE FFDF          	movff	4014,indf2	;volatile
  8285  001BAA  2A2A               	incf	_eusart1RxHead,f,c
  8286                           
  8287                           ;eusart1.c: 201: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
  8288  001BAC  0E7D               	movlw	125
  8289  001BAE  642A               	cpfsgt	_eusart1RxHead,c
  8290  001BB0  D002               	goto	i2l5177
  8291                           
  8292                           ;eusart1.c: 202: eusart1RxHead = 0;
  8293  001BB2  0E00               	movlw	0
  8294  001BB4  6E2A               	movwf	_eusart1RxHead,c
  8295  001BB6                     i2l5177:
  8296                           
  8297                           ;eusart1.c: 203: }
  8298                           ;eusart1.c: 204: eusart1RxCount++;
  8299  001BB6  2A29               	incf	_eusart1RxCount,f,c	;volatile
  8300  001BB8  0012               	return		;funcret
  8301  001BBA                     __end_of_EUSART1_Receive_ISR:
  8302                           	opt stack 0
  8303  0000                     pclatu	equ	0xFFB
  8304                           pclath	equ	0xFFA
  8305                           tblptru	equ	0xFF8
  8306                           tblptrh	equ	0xFF7
  8307                           tblptrl	equ	0xFF6
  8308                           tablat	equ	0xFF5
  8309                           prodh	equ	0xFF4
  8310                           prodl	equ	0xFF3
  8311                           intcon	equ	0xFF2
  8312                           intcon2	equ	0xFF1
  8313                           postinc0	equ	0xFEE
  8314                           fsr0h	equ	0xFEA
  8315                           fsr0l	equ	0xFE9
  8316                           wreg	equ	0xFE8
  8317                           postdec1	equ	0xFE5
  8318                           fsr1h	equ	0xFE2
  8319                           fsr1l	equ	0xFE1
  8320                           bsr	equ	0xFE0
  8321                           indf2	equ	0xFDF
  8322                           fsr2h	equ	0xFDA
  8323                           fsr2l	equ	0xFD9
  8324                           status	equ	0xFD8
  8325                           pclatu	equ	0xFFB
  8326                           pclath	equ	0xFFA
  8327                           tblptru	equ	0xFF8
  8328                           tblptrh	equ	0xFF7
  8329                           tblptrl	equ	0xFF6
  8330                           tablat	equ	0xFF5
  8331                           prodh	equ	0xFF4
  8332                           prodl	equ	0xFF3
  8333                           intcon	equ	0xFF2
  8334                           intcon2	equ	0xFF1
  8335                           postinc0	equ	0xFEE
  8336                           fsr0h	equ	0xFEA
  8337                           fsr0l	equ	0xFE9
  8338                           wreg	equ	0xFE8
  8339                           postdec1	equ	0xFE5
  8340                           fsr1h	equ	0xFE2
  8341                           fsr1l	equ	0xFE1
  8342                           bsr	equ	0xFE0
  8343                           indf2	equ	0xFDF
  8344                           fsr2h	equ	0xFDA
  8345                           fsr2l	equ	0xFD9
  8346                           status	equ	0xFD8
  8347                           
  8348                           	psect	rparam
  8349  0000                     pclatu	equ	0xFFB
  8350                           pclath	equ	0xFFA
  8351                           tblptru	equ	0xFF8
  8352                           tblptrh	equ	0xFF7
  8353                           tblptrl	equ	0xFF6
  8354                           tablat	equ	0xFF5
  8355                           prodh	equ	0xFF4
  8356                           prodl	equ	0xFF3
  8357                           intcon	equ	0xFF2
  8358                           intcon2	equ	0xFF1
  8359                           postinc0	equ	0xFEE
  8360                           fsr0h	equ	0xFEA
  8361                           fsr0l	equ	0xFE9
  8362                           wreg	equ	0xFE8
  8363                           postdec1	equ	0xFE5
  8364                           fsr1h	equ	0xFE2
  8365                           fsr1l	equ	0xFE1
  8366                           bsr	equ	0xFE0
  8367                           indf2	equ	0xFDF
  8368                           fsr2h	equ	0xFDA
  8369                           fsr2l	equ	0xFD9
  8370                           status	equ	0xFD8
  8371                           
  8372                           	psect	temp
  8373  00004E                     btemp:
  8374                           	opt stack 0
  8375  00004E                     	ds	1
  8376  0000                     int$flags	set	btemp
  8377                           pclatu	equ	0xFFB
  8378                           pclath	equ	0xFFA
  8379                           tblptru	equ	0xFF8
  8380                           tblptrh	equ	0xFF7
  8381                           tblptrl	equ	0xFF6
  8382                           tablat	equ	0xFF5
  8383                           prodh	equ	0xFF4
  8384                           prodl	equ	0xFF3
  8385                           intcon	equ	0xFF2
  8386                           intcon2	equ	0xFF1
  8387                           postinc0	equ	0xFEE
  8388                           fsr0h	equ	0xFEA
  8389                           fsr0l	equ	0xFE9
  8390                           wreg	equ	0xFE8
  8391                           postdec1	equ	0xFE5
  8392                           fsr1h	equ	0xFE2
  8393                           fsr1l	equ	0xFE1
  8394                           bsr	equ	0xFE0
  8395                           indf2	equ	0xFDF
  8396                           fsr2h	equ	0xFDA
  8397                           fsr2l	equ	0xFD9
  8398                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         318
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      77
    BANK0           160      0     159
    BANK1           256     17     143
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _Update_StateMchn->_Train_Path
    _Train_Path->_Train_Move_Left_Brake
    _Train_Path->_Train_Move_Right_Brake
    _Train_Move_Right_Start->_SetDCPWM1
    _Train_Move_Right_Brake->_SetDCPWM1
    _Train_Move_Left_Start->_SetDCPWM1
    _Train_Move_Left_Brake->_SetDCPWM1

Critical Paths under _tc_low in COMRAM

    None.

Critical Paths under _tc_high in COMRAM

    _UPDATExTERMINAL->_EUSART1_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _tc_low in BANK0

    None.

Critical Paths under _tc_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_low in BANK1

    None.

Critical Paths under _tc_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_low in BANK2

    None.

Critical Paths under _tc_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_low in BANK3

    None.

Critical Paths under _tc_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_low in BANK4

    None.

Critical Paths under _tc_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_low in BANK5

    None.

Critical Paths under _tc_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tc_low in BANK6

    None.

Critical Paths under _tc_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tc_low in BANK7

    None.

Critical Paths under _tc_high in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4075
                 _EUSART1_Initialize
                      _INIT_TERMINAL
                           _Init_Pwm
                        _Init_Timers
                   _Update_StateMchn
 ---------------------------------------------------------------------------------
 (1) _Update_StateMchn                                     0     0      0    4000
                    _Debounce_Inputs
                       _Eeprom_Store
                          _Green_Led
                            _Red_Led
                         _Train_Path
 ---------------------------------------------------------------------------------
 (2) _Train_Path                                           2     1      1    3956
                                             23 COMRAM     2     1      1
                           _Junction
                          _SetDCPWM1
              _Train_Move_Left_Brake
              _Train_Move_Left_Start
             _Train_Move_Right_Brake
             _Train_Move_Right_Start
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Right_Start                               0     0      0     584
                          _SetDCPWM1
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Right_Brake                               2     2      0     584
                                             21 COMRAM     2     2      0
                          _SetDCPWM1
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Left_Start                                0     0      0     584
                          _SetDCPWM1
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Left_Brake                                2     2      0     584
                                             21 COMRAM     2     2      0
                          _SetDCPWM1
 ---------------------------------------------------------------------------------
 (4) _SetDCPWM1                                            6     4      2     584
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _Junction                                             2     1      1     410
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Red_Led                                              1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Green_Led                                            1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Eeprom_Store                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Debounce_Inputs                                      2     2      0       0
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INIT_TERMINAL                                        2     2      0      30
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Initialize                                   2     2      0      45
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tc_low                                              17    17      0       0
                                              0 BANK1     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tc_high                                             14    14      0      44
                                              1 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                    _UPDATExTERMINAL
 ---------------------------------------------------------------------------------
 (7) _UPDATExTERMINAL                                      0     0      0      44
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Write                                        1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
   _INIT_TERMINAL
   _Init_Pwm
   _Init_Timers
   _Update_StateMchn
     _Debounce_Inputs
     _Eeprom_Store
     _Green_Led
     _Red_Led
     _Train_Path
       _Junction
       _SetDCPWM1
       _Train_Move_Left_Brake
         _SetDCPWM1
       _Train_Move_Left_Start
         _SetDCPWM1
       _Train_Move_Right_Brake
         _SetDCPWM1
       _Train_Move_Right_Start
         _SetDCPWM1

 _tc_low (ROOT)

 _tc_high (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _UPDATExTERMINAL
     _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     11      8F       7       55.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      4D       1       81.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17B      20        0.0%
DATA                 0      0     17B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Aug 26 21:14:46 2017

                  _eusart1TxBufferRemaining 00FE                             _MaxPwmRight_Old 00F5  
                                        l77 1A8A                                          bsr 000FE0  
                               __CFG_BORV$3 000000                                __CFG_CP0$OFF 000000  
                              __CFG_CP1$OFF 000000                                __CFG_CP2$OFF 000000  
                              __CFG_CP3$OFF 000000                                         l247 00B2  
                                       l600 1924                                         l702 1376  
                                       l720 1536                                         l571 0E6E  
                                       l580 1978                                         l486 0B94  
                                       l575 1948                                         l591 18C8  
                                       l751 1818                                         l584 19A4  
                                       l577 194C                                         l593 18CC  
                                       l770 1896                                         l762 1836  
                                       l738 145A                                         l755 181E  
                                       l596 18F8                                         l764 183A  
                                       l861 16D2                                         l757 1822  
                                       l870 1726                                         l855 169A  
                                       l864 16EE                                         l873 1742  
                                       l769 1886                                         l858 16B6  
                                       l947 1BE0                                         l867 170A  
                              __CFG_CPB$OFF 000000                                _Stop_Program 0019  
                                       _PR2 000FCB                                __CFG_CPD$OFF 000000  
                              __CFG_BOR$OFF 000000                                         prod 000FF3  
                                       wreg 000FE8                      __size_of_INIT_TERMINAL 0028  
          Train_Move_Right_Start@Return_Val 00FB                                __CFG_LVP$OFF 000000  
                              __CFG_WDT$OFF 000000                                        l4001 1146  
                                      l4011 1174                                        l4003 1162  
                                      l2341 1BCA                                        l4111 125C  
                                      l4007 116E                                        l2345 1BDA  
                                      l4105 124E                                        l5001 0C42  
                                      l4131 12A2                                        l4027 1194  
                                      l4019 1180                                        l4117 126A  
                                      l4125 1280                                        l4037 11A0  
                                      l5101 0D8E                                        l5013 0C66  
                                      l5005 0C4E                                        l4301 019C  
                                      l3503 14FA                                        l4135 12A8  
                                      l4127 129C                                        l4119 1276  
                                      l4063 11D4                                        l4055 11CE  
                                      l4047 11C8                                        l4039 11BC  
                                      l4151 12E6                                        l5031 0CA8  
                                      l4311 01C8                                        l4303 01A4  
                                      l4145 12C4                                        l4081 1208  
                                      l4073 11DE                                        l4153 1308  
                                      l5121 0DD2                                        l5113 0DAE  
                                      l5033 0CB0                                        l5017 0C70  
                                      l4401 031A                                        l3603 165A  
                                      l4147 12E0                                        l4139 12AE  
                                      l4075 11FA                                        l5107 0DA8  
                                      l5051 0CF4                                        l5043 0CD6  
                                      l5035 0CB4                                        l5019 0C7C  
                                      l4323 01FE                                        l4315 01DA  
                                      l4307 01B6                                        l4251 00FC  
                                      l3701 1386                                        l3541 1582  
                                      l3509 1506                                        l4093 122A  
                                      l4085 1216                                        l5133 0DF6  
                                      l5117 0DBE                                        l5045 0CDA  
                                      l5061 0D0A                                        l5029 0C9E  
                                      l4413 0344                                        l4405 032A  
                                      l4341 0236                                        l3463 1826  
                                      l3471 184E                                        l3711 13A4  
                                      l3607 1660                                        l3623 1414  
                                      l3615 13F6                                        l3543 1586  
                                      l3535 156A                                        l3527 1540  
                                      l3519 1522                                        l4095 1236  
                                      l4087 121C                                        l5151 0E36  
                                      l5127 0DDC                                        l5119 0DCE  
                                      l5143 0E0C                                        l5063 0D1A  
                                      l5039 0CC6                                        l4511 04BA  
                                      l4503 04A2                                        l4423 0364  
                                      l4415 034C                                        l4327 020C  
                                      l4319 01EC                                        l3801 0F70  
                                      l3473 185C                                        l3609 167A  
                                      l3561 15C2                                        l3633 143A  
                                      l3529 1546                                        l5145 0E1A  
                                      l5081 0D58                                        l5073 0D3A  
                                      l5065 0D1E                                        l5057 0CFA  
                                      l4601 0670                                        l4505 04A6  
                                      l4433 0386                                        l4425 036C  
                                      l4361 028C                                        l4353 0268  
                                      l4345 0244                                        l5161 0E58  
                                      l3731 0E72                                        l3475 1862  
                                      l3491 18BE                                        l3467 183E  
                                      l3715 13CA                                        l3723 13D4  
                                      l3555 15AE                                        l3651 1482  
                                      l3643 146A                                        l3547 158C  
                                      l4099 1240                                        l5139 0DFC  
                                      l5075 0D3E                                        l5091 0D6E  
                                      l4531 0506                                        l4523 04EE  
                                      l4507 04AA                                        l4443 03AA  
                                      l4435 038E                                        l4267 013A  
                                      l3821 0FBE                                        l3813 0F8A  
                                      l3733 0E7A                                        l3717 13D0  
                                      l3709 139E                                        l3725 13EE  
                                      l3565 15CC                                        l3653 1488  
                                      l3629 1434                                        l3549 15A6  
                                      l5093 0D7E                                        l5069 0D2C  
                                      l5157 0E42                                        l4701 0864  
                                      l4525 04F2                                        l4509 04AE  
                                      l4517 04C8                                        l4453 03CC  
                                      l4445 03B2                                        l4373 02BE  
                                      l4365 029E                                        l4357 027A  
                                      l4349 0256                                        l3823 0FC2  
                                      l3815 0FB0                                        l3807 0F7A  
                                      l3743 0E8A                                        l3583 160E  
                                      l3567 15D2                                        l5095 0D82  
                                      l5087 0D5E                                        l4711 087E  
                                      l4631 06F2                                        l4623 06D8  
                                      l4607 067E                                        l4551 0562  
                                      l4615 06A8                                        l4527 04F6  
                                      l4519 04E4                                        l4463 03EC  
                                      l4455 03D4                                        l4391 02F6  
                                      l4295 0186                                        l3841 1012  
                                      l3809 0F7E                                        l3761 0EDA  
                                      l3753 0EB4                                        l3745 0EA2  
                                      l3921 1968                                        l3489 18AA  
                                      l3673 1310                                        l3585 1614  
                                      l3577 15EE                                        l3657 14AE  
                                      l3665 14B8                                        l3497 14DA  
                                      l4801 09A0                                        l4721 0898  
                                      l4641 0716                                        l4633 06FA  
                                      l4625 06E0                                        l4617 06C4  
                                      l4609 069A                                        l4561 0598  
                                      l4553 056E                                        l4545 0542  
                                      l4529 04FA                                        l4537 0514  
                                      l4473 040E                                        l4465 03F4  
                                      l4369 02B0                                        l3851 104A  
                                      l3843 1038                                        l3835 1002  
                                      l3827 0FCE                                        l3747 0EAA  
                                      l3771 0EEA                                        l3739 0E84  
                                      l3931 1994                                        l3915 1950  
                                      l3691 1356                                        l3683 1332  
                                      l3659 14B4                                        l3667 14D2  
                                      l5099 0D8A                                        l4811 09C2  
                                      l4731 08B2                                        l4563 05A4  
                                      l4547 054A                                        l4539 0530  
                                      l4491 0476                                        l4483 0432  
                                      l4475 0416                                        l4395 0304  
                                      l3837 1006                                        l3829 0FF4  
                                      l3781 0F14                                        l3773 0F02  
                                      l3757 0EBA                                        l3925 197C  
                                      l3941 18D0                                        l3597 1640  
                                      l3589 1618                                        l4901 0AF2  
                                      l4821 09EA                                        l4813 09CC  
                                      l4741 08CC                                        l4653 0738  
                                      l4581 0606                                        l4565 05AC  
                                      l4549 0556                                        l4485 043A  
                                      l4397 030C                                        l3871 10C0  
                                      l3863 108A                                        l3855 1056  
                                      l3775 0F0A                                        l3767 0EE4  
                                      l3759 0ED2                                        l3951 18FC  
                                      l4903 0AF6                                        l4815 09D4  
                                      l4751 08E6                                        l4671 07A2  
                                      l4663 0776                                        l4655 0754  
                                      l4647 0728                                        l4639 070E  
                                      l4583 060E                                        l4591 0628  
                                      l4567 05B8                                        l4575 05D2  
                                      l4559 057C                                        l4495 048A  
                                      l3865 108E                                        l3857 107C  
                                      l3849 1046                                        l3793 0F3C  
                                      l3785 0F1A                                        l3937 19A8  
                                      l3689 1350                                        l4921 0B20  
                                      l4833 0A18                                        l4825 09FA  
                                      l4817 09D8                                        l4761 0900  
                                      l4673 07AE                                        l4681 07C8  
                                      l4649 0730                                        l4593 0644  
                                      l4585 061A                                        l4577 05EE  
                                      l4569 05C4                                        l4489 0442  
                                      l3883 10E0                                        l3795 0F40  
                                      l3787 0F32                                        l3947 18E8  
                                      l3963 1928                                        l4915 0B1A  
                                      l4851 0A50                                        l4827 09FE  
                                      l4843 0A2E                                        l4691 0840  
                                      l4683 07E4                                        l4675 07BA  
                                      l4667 078A                                        l4659 0768  
                                      l4595 0650                                        l4579 05FA  
                                      l4499 0498                                        l3877 10CE  
                                      l3869 109A                                        l3957 1914  
                                      l4933 0B5A                                        l4909 0B00  
                                      l4925 0B30                                        l4845 0A3E  
                                      l4941 0B7C                                        l4773 091A  
                                      l4669 0796                                        l4597 065C  
                                      l3879 10D4                                        l3799 0F4A  
                                      l3991 113A                                        l3983 1126  
                                      l3975 111A                                        l3967 110A  
                                      l4927 0B3E                                        l4863 0A7C  
                                      l4855 0A5E                                        l4847 0A42  
                                      l4839 0A1E                                        l4783 0966  
                                      l4775 094E                                        l4599 0668  
                                      l4945 0B88                                        l4881 0AAE  
                                      l4857 0A62                                        l4873 0A92  
                                      l4697 0858                                        l4689 07F2  
                                      l4955 0BB4                                        l4883 0AB2  
                                      l4875 0AA2                                        l4795 098A  
                                      l4787 0972                                        l4939 0B66  
                                      l4949 0B9C                                        l4877 0AA6  
                                      l4869 0A82                                        l4959 0BC0  
                                      l4991 0C0E                                        l4895 0AD2  
                                      l4799 0994                                        l4993 0C2A  
                                      l4969 0BDA                                        l4889 0ACC  
                                      l4979 0BF4                                        l4899 0AE2  
                                      u2310 1576                                        u4000 0A6E  
                                      u4020 0ABE                                        u2510 0F22  
                                      u2350 164C                                        u2600 0FD8  
                                      u4040 0B0C                                        u2265 1B2C  
                                      u2530 0F52                                        u2450 0E92  
                                      u2620 101A                                        u2540 0F54  
                                      u2516 0F24                                        u2710 10E8  
                                      u2630 101C                                        u2470 0EC2  
                                      u4310 0D9A                                        u2720 10EA  
                                      u2560 0F92                                        u2456 0E94  
                                      u2650 105E                                        u2570 0F94  
                                      u2490 0EF2                                        u4330 0DE8  
                                      u2660 1060                                        u2476 0EC4  
                                      u4260 0CE6                                        u2590 0FD6  
                                      u2680 10A2                                        u2496 0EF4  
                                      u2690 10A4                                        u4290 0D4A  
                                      u3970 0A0A                                        i2l93 17D8  
                                      i2l88 1798                                __CFG_WDTPS$1 000000  
                              __CFG_PWRT$ON 000000              __size_of_Train_Move_Left_Brake 00E6  
                             _EUSART1_Write 1AE4               __end_of_Train_Move_Left_Brake 13F4  
                                      _main 1A36              __size_of_Train_Move_Left_Start 00D4  
                                      fsr0h 000FEA                                        fsr1h 000FE2  
                                      fsr0l 000FE9                                        fsr2h 000FDA  
                                      fsr1l 000FE1                                        indf2 000FDF  
                                      fsr2l 000FD9                                        btemp 004E  
             __end_of_Train_Move_Left_Start 1680                                        pclat 000FFA  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 00A6                               __CFG_IESO$OFF 000000  
               EUSART1_Initialize@baud_rate 003D                          Green_Led@Operation 003D  
                            INIT_TERMINAL@i 003D                               __CFG_MCLRE$ON 000000  
                              ___param_bank 000010                               ??_Init_Timers 003D  
                           __end_of_Red_Led 1944                               __CFG_PLLDIV$5 000000  
                            __CFG_CCP2MX$ON 000000                     __end_of_UPDATExTERMINAL 1C24  
                                     ?_main 002E                                       _EEADR 000FA9  
                                     _CMCON 000FB4                            Red_Led@Operation 003D  
                                     _T0CON 000FD5                                       _T2CON 000FCA  
                                     i2l932 1B8A                                       i2l926 1AF8  
                                     _TMR0H 000FD7                                       _TMR0L 000FD6  
                                     _SPBRG 000FAF                               __CFG_USBDIV$2 000000  
                                     _TRISA 000F92                                       _TRISB 000F93  
                                     _TRISC 000F94                                       _TRISD 000F95  
                                     _TRISE 000F96                               __CFG_WRT0$OFF 000000  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                                     _Rd_Lb 0011                                       _Rd_Lf 0012  
                                     _Rd_Rb 0013                               __CFG_WRT3$OFF 000000  
                                     _Rd_Rf 0014                        _EUSART1_Transmit_ISR 1B5C  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                            __CFG_EBTR3$OFF 000000                               __CFG_WRTB$OFF 000000  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                            __CFG_EBTRB$OFF 000000                             __end_of_tc_high 1814  
                            ?_EUSART1_Write 002E                                       tablat 000FF5  
                                     status 000FD8   Train_Move_Left_Brake@Train_Move_Wait_Time 00E0  
                            __CFG_ICPRT$OFF 000000                                  _MaxPwmLeft 0047  
                      __end_of_Eeprom_Store 174E                               _INIT_TERMINAL 1BBA  
                           __initialization 19C4                  __end_of_EUSART1_Initialize 1AE4  
                              __end_of_main 1A9A                               _Button_Middle 000D  
                          __end_of_Init_Pwm 1C10                                      ??_main 0047  
                       __end_of_Init_Timers 1BFA                               __activetblptr 000002  
                          __end_of_Junction 18C4                                _Led1_Counter 00EA  
                         _Green_Led_Counter 0003                       ?_EUSART1_Transmit_ISR 002E  
                         ?_Update_StateMchn 002E                          ??_Update_StateMchn 0047  
                                    _ADCON1 000FC1                                      _EEDATA 000FA8  
                                    _CCPR1L 000FBE                                      _EECON2 000FA7  
                        __size_of_Green_Led 0080                                      i2l4203 1AE6  
                                    i2l4215 1B1A                                      i2l4217 1B1E  
                                    i2l5263 179A                                      i2l5177 1BB6  
                                    i2l5169 1B96                                      i2l5281 17CE  
                                    i2l5275 17C4                                      i2l5189 1B84  
                                    i2l5269 17B8                                      _INTCON 000FF2  
                   ?_Train_Move_Right_Brake 002E                                      _RCREG1 000FAE  
                                    _SPBRGH 000FB0                          __size_of_SetDCPWM1 003A  
                   ?_Train_Move_Right_Start 002E                                      _TXREG1 000FAD  
                                 ??_Red_Led 003D                              ?_INIT_TERMINAL 002E  
                            __CFG_XINST$OFF 000000             Train_Move_Left_Brake@Return_Val 00F8  
                            __CFG_STVREN$ON 000000                                      clear_0 19CA  
                                    clear_1 19D6                                      clear_2 19E2  
                                    _tc_low 0018                            _MaxJerkPwm_Brake 004D  
                          ?_UPDATExTERMINAL 002E                                  _Train_Pos1 0026  
                                _Train_Pos2 0027                                  _Train_Path 1106  
                              __pdataCOMRAM 0047                              _Switch_Program 0022  
                                 ??_tc_high 002F                   _Activate_Controls_Counter 00E8  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                             ??_EUSART1_Write 002E  
                 _Button_Contact_Counter_LB 00EC                   _Button_Contact_Counter_LF 00ED  
                 _Button_Contact_Counter_RB 00EF                   _Button_Contact_Counter_RF 00F0  
            __end_of_Train_Move_Right_Brake 14D8                             _eusart1RxBuffer 0100  
                           _eusart1TxBuffer 0060              __end_of_Train_Move_Right_Start 15AC  
                      _Train_Move_Pwm_Count 004B                                 _MaxPwmRight 0049  
                                __accesstop 0060                     __end_of__initialization 1A28  
                           __CFG_PBADEN$OFF 000000                               ___rparam_used 000001  
                            __pcstackCOMRAM 002E                                __pidataBANK0 1C10  
                               _Init_Timers 1BE2                           __end_of_Green_Led 19C4  
                               _Button_Stop 00F1                           __end_of_SetDCPWM1 1B5C  
                           _Red_Led_Counter 0005                      ??_EUSART1_Transmit_ISR 002E  
Train_Move_Right_Start@Train_Move_Wait_Time 00E6                    __size_of_Debounce_Inputs 0296  
               __end_of_EUSART1_Receive_ISR 1BBA            Train_Move_Right_Brake@Return_Val 00FA  
                             _eusart1RxHead 002A                               _eusart1TxHead 002C  
                     __size_of_Eeprom_Store 00CE                               _eusart1RxTail 002B  
                                __pbssBANK0 0060                                  __pbssBANK1 0100  
                             _eusart1TxTail 002D                                   ?_Init_Pwm 002E  
                           ??_INIT_TERMINAL 003D                                   ?_Junction 003D  
                                   _CCP1CON 000FBD                                     ?_tc_low 002E  
                               ?_Train_Path 0045                                _Eeprom_Store 1680  
                                   _INTCON2 000FF1   Train_Move_Left_Start@Train_Move_Wait_Time 00E2  
                           __CFG_VREGEN$OFF 000000                                  ??_Init_Pwm 003D  
                                   _Red_Led 18C4                       _Train_Move_Left_Brake 130E  
                                ??_Junction 003E                                     __Hparam 0000  
                     _Train_Move_Left_Start 15AC                                     __Lparam 0000  
                                   __pcinit 19C4                                     __ramtop 0800  
                           __size_of_tc_low 008E                                     __ptext0 1A36  
                                   __ptext1 00AA                                     __ptext2 1106  
                                   __ptext3 14D8                                     __ptext4 13F4  
                                   __ptext5 15AC                                     __ptext6 130E  
                                   __ptext7 1B22                                     __ptext8 1814  
                                   __ptext9 18C4                        Train_Path@Return_Val 00FC  
                           _Switch_Main_Old 0021                                     _tc_high 0008  
                        _EUSART1_Initialize 1A9A                   _Train_Move_Pwm_Fast_Count 0007  
                            __pintcode_body 174E                        end_of_initialization 1A28  
                           _Switch_Junction 001F                           ??_Debounce_Inputs 003D  
                       ?_EUSART1_Initialize 002E                          Junction@Left_Right 003E  
                             __Lmediumconst 0000                                     int_func 174E  
                 __size_of_Update_StateMchn 0DC6                         __size_of_Train_Path 0208  
                                 _RCSTAbits 000FAB                                     postdec1 000FE5  
                                   postinc0 000FEE                        ??_EUSART1_Initialize 003D  
                                 _PORTAbits 000F80                                   _PORTBbits 000F81  
                                 _PORTCbits 000F82                                   _PORTDbits 000F83  
                      _MaxJerkPwm_Brake_Old 00FD                                   _TRISAbits 000F92  
                                 _TRISBbits 000F93                                   _TRISCbits 000F94  
                                 _TRISDbits 000F95                Junction@Junction_Switch_Time 00DE  
                       EUSART1_Write@txData 002E                      ?_Train_Move_Left_Brake 002E  
                                 _TXSTAbits 000FAC                      ?_Train_Move_Left_Start 002E  
                               _Switch_Main 0020                                 _Switch_Init 00F2  
                              ?_Init_Timers 002E                          Junction@Return_Val 00F7  
                               _BAUDCONbits 000FB8                               __pidataCOMRAM 1C24  
                      _Update_State_Machine 0028                              __end_of_tc_low 00A6  
               _Button_Contact_Counter_Stop 000A                                   _Green_Led 1944  
                       start_initialization 19C4                                   _SetDCPWM1 1B22  
                           SetDCPWM1@DCycle 0041                                   _Button_LB 000B  
                                 _Button_LF 000C                                   _Button_RB 000E  
                                 _Button_RF 000F                                _Button_Start 0010  
                  __size_of_UPDATExTERMINAL 0008                       __end_of_EUSART1_Write 1B22  
                         __size_of_Init_Pwm 0016                           __size_of_Junction 00B0  
                               __pdataBANK0 00F3                            __CFG_LPT1OSC$OFF 000000  
                                  ??_tc_low 017E                              _eusart1RxCount 0029  
                              ??_Train_Path 0046                                  ?_Green_Led 002E  
                        _Switch_Program_Old 0023                                 __pbssCOMRAM 0001  
             __size_of_EUSART1_Transmit_ISR 0032                               __pcstackBANK1 017E  
                                ?_SetDCPWM1 003D  Train_Move_Right_Brake@Train_Move_Wait_Time 00E4  
              __size_of_EUSART1_Receive_ISR 002C                                   __pnvBANK0 00FE  
                                  ?_Red_Led 002E                            _Update_StateMchn 00AA  
                     __end_of_INIT_TERMINAL 1BE2                          __end_of_Train_Path 130E  
                                 __pintcode 0008                                 __pintcodelo 0018  
                           _Debounce_Inputs 0E70                    ??_Train_Move_Right_Brake 0043  
                                  ?_tc_high 002E                    ??_Train_Move_Right_Start 0043  
                     Junction@Straight_Bend 003D                _Button_Contact_Counter_Start 0009  
                         ??_UPDATExTERMINAL 002F                                    _PIE1bits 000F9D  
                            _Adjust_Counter 0001                                    _PIR1bits 000F9E  
                                  _PIR2bits 000FA1                                    _RCONbits 000FD0  
                            Train_Path@From 0046                        __size_of_Init_Timers 0018  
                               ??_Green_Led 003D                                 ??_SetDCPWM1 003F  
                                 copy_data0 19FC                                   copy_data1 1A1C  
                   ??_Train_Move_Left_Brake 0043                     ??_Train_Move_Left_Start 0043  
                        SetDCPWM1@dutycycle 003D                                    _Init_Pwm 1BFA  
                                _EECON1bits 000FA6                                    __Hrparam 0000  
                                  _Junction 1814                            __size_of_Red_Led 0080  
                                  __Lrparam 0000                     __end_of_Debounce_Inputs 1106  
               __size_of_EUSART1_Initialize 004A                           _Switch_Train_Path 0025  
                         _Switch_Train_Move 0024                            _Switch_Adjust_LB 001B  
                          _Switch_Adjust_LF 001C                            _Switch_Adjust_RB 001D  
                          _Switch_Adjust_RF 001E             __size_of_Train_Move_Right_Brake 00E4  
                          __size_of_tc_high 180C             __size_of_Train_Move_Right_Start 00D4  
                                  __ptext10 1944                                    __ptext11 1680  
                                  __ptext20 1AE4                                    __ptext12 0E70  
                                  __ptext21 1B5C                                    __ptext13 1BE2  
                                  __ptext22 1B8E                                    __ptext14 1BFA  
                                  __ptext15 1BBA                                    __ptext16 1A9A  
                                  __ptext19 1C1C                               __size_of_main 0064  
                   _Reed_Contact_LB_Counter 0015                                    int$flags 004E  
                   _Reed_Contact_LF_Counter 0016                         _EUSART1_Receive_ISR 1B8E  
                     __CFG_CPUDIV$OSC2_PLL3 000000                               ?_Eeprom_Store 002E  
                  __end_of_Update_StateMchn 0E70                                  _INTCONbits 000FF2  
                   _Reed_Contact_RB_Counter 0017                                    intlevel1 0000  
                                  intlevel2 0000                        ?_EUSART1_Receive_ISR 002E  
                                _RCSTA1bits 000FAB                     _Reed_Contact_RF_Counter 0018  
                    _Train_Move_Right_Brake 13F4                __end_of_EUSART1_Transmit_ISR 1B8E  
                    _Train_Move_Right_Start 14D8             Train_Move_Left_Start@Return_Val 00F9  
                              Train_Path@To 0045                            ?_Debounce_Inputs 002E  
                  _Switch_Activate_Controls 001A                      __size_of_EUSART1_Write 003E  
                            ??_Eeprom_Store 003D                             _UPDATExTERMINAL 1C1C  
                        __CFG_FOSC$HSPLL_HS 000000                       ??_EUSART1_Receive_ISR 002E  
                            _MaxPwmLeft_Old 00F3               _Button_Contact_Counter_Middle 00EE  
