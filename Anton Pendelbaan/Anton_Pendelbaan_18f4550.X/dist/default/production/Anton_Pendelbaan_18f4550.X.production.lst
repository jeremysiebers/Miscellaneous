

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Nov 06 19:39:20 2017

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           	psect	idataBANK0
    61  003D2E                     __pidataBANK0:
    62                           	opt stack 0
    63                           
    64                           ;initializer for Junction@Return_Val
    65  003D2E  01                 	db	1
    66                           
    67                           ;initializer for Left_Mountain_From_The_Left@Return_Val
    68  003D2F  01                 	db	1
    69                           
    70                           ;initializer for Left_Mountain_From_The_Right@Return_Val
    71  003D30  01                 	db	1
    72                           
    73                           ;initializer for Right_Mountain_From_The_Left@Return_Val
    74  003D31  01                 	db	1
    75                           
    76                           ;initializer for Right_Mountain_From_The_Right@Return_Val
    77  003D32  01                 	db	1
    78                           
    79                           ;initializer for Train_Move_Left_Brake@Return_Val
    80  003D33  01                 	db	1
    81                           
    82                           ;initializer for Train_Move_Left_Start@Return_Val
    83  003D34  01                 	db	1
    84                           
    85                           ;initializer for Train_Move_Right_Brake@Return_Val
    86  003D35  01                 	db	1
    87                           
    88                           ;initializer for Train_Move_Right_Start@Return_Val
    89  003D36  01                 	db	1
    90                           
    91                           ;initializer for Train_Path@Return_Val
    92  003D37  01                 	db	1
    93                           
    94                           	psect	smallconst
    95  000800                     __psmallconst:
    96                           	opt stack 0
    97  000800  00                 	db	0
    98  000801                     _dpowers:
    99                           	opt stack 0
   100  000801  0001               	dw	1
   101  000803  000A               	dw	10
   102  000805  0064               	dw	100
   103  000807  03E8               	dw	1000
   104  000809  2710               	dw	10000
   105  00080B                     __end_of_dpowers:
   106                           	opt stack 0
   107  00080B                     _DataLen:
   108                           	opt stack 0
   109  00080B  0A                 	db	10
   110  00080C                     __end_of_DataLen:
   111                           	opt stack 0
   112  0000                     _ADCON1	set	4033
   113  0000                     _BAUDCONbits	set	4024
   114  0000                     _CCP1CON	set	4029
   115  0000                     _CCPR1L	set	4030
   116  0000                     _CMCON	set	4020
   117  0000                     _EEADR	set	4009
   118  0000                     _EECON1bits	set	4006
   119  0000                     _EECON2	set	4007
   120  0000                     _EEDATA	set	4008
   121  0000                     _INTCON	set	4082
   122  0000                     _INTCON2	set	4081
   123  0000                     _INTCONbits	set	4082
   124  0000                     _PIE1bits	set	3997
   125  0000                     _PIR1bits	set	3998
   126  0000                     _PIR2bits	set	4001
   127  0000                     _PORTAbits	set	3968
   128  0000                     _PORTBbits	set	3969
   129  0000                     _PORTCbits	set	3970
   130  0000                     _PORTDbits	set	3971
   131  0000                     _PORTEbits	set	3972
   132  0000                     _PR2	set	4043
   133  0000                     _RCONbits	set	4048
   134  0000                     _RCREG1	set	4014
   135  0000                     _RCSTA1bits	set	4011
   136  0000                     _RCSTAbits	set	4011
   137  0000                     _SPBRG	set	4015
   138  0000                     _SPBRGH	set	4016
   139  0000                     _T0CON	set	4053
   140  0000                     _T2CON	set	4042
   141  0000                     _TMR0H	set	4055
   142  0000                     _TMR0L	set	4054
   143  0000                     _TRISA	set	3986
   144  0000                     _TRISAbits	set	3986
   145  0000                     _TRISB	set	3987
   146  0000                     _TRISBbits	set	3987
   147  0000                     _TRISC	set	3988
   148  0000                     _TRISCbits	set	3988
   149  0000                     _TRISD	set	3989
   150  0000                     _TRISDbits	set	3989
   151  0000                     _TRISE	set	3990
   152  0000                     _TRISEbits	set	3990
   153  0000                     _TXREG1	set	4013
   154  0000                     _TXSTAbits	set	4012
   155  0000                     _TXIF	set	31988
   156  00080C                     STR_9:
   157  00080C  0D                 	db	13
   158  00080D  0A                 	db	10
   159  00080E  4D                 	db	77	;'M'
   160  00080F  23                 	db	35
   161  000810  25                 	db	37
   162  000811  64                 	db	100	;'d'
   163  000812  20                 	db	32
   164  000813  25                 	db	37
   165  000814  64                 	db	100	;'d'
   166  000815  0D                 	db	13
   167  000816  0A                 	db	10
   168  000817  00                 	db	0
   169  000818                     STR_2:
   170  000818  0D                 	db	13
   171  000819  0A                 	db	10
   172  00081A  45                 	db	69	;'E'
   173  00081B  23                 	db	35
   174  00081C  31                 	db	49	;'1'
   175  00081D  30                 	db	48	;'0'
   176  00081E  0D                 	db	13
   177  00081F  0A                 	db	10
   178  000820  00                 	db	0
   179  000821                     STR_3:
   180  000821  0D                 	db	13
   181  000822  0A                 	db	10
   182  000823  45                 	db	69	;'E'
   183  000824  23                 	db	35
   184  000825  31                 	db	49	;'1'
   185  000826  31                 	db	49	;'1'
   186  000827  0D                 	db	13
   187  000828  0A                 	db	10
   188  000829  00                 	db	0
   189  00082A                     STR_4:
   190  00082A  0D                 	db	13
   191  00082B  0A                 	db	10
   192  00082C  45                 	db	69	;'E'
   193  00082D  23                 	db	35
   194  00082E  31                 	db	49	;'1'
   195  00082F  32                 	db	50	;'2'
   196  000830  0D                 	db	13
   197  000831  0A                 	db	10
   198  000832  00                 	db	0
   199  000833                     STR_5:
   200  000833  0D                 	db	13
   201  000834  0A                 	db	10
   202  000835  45                 	db	69	;'E'
   203  000836  23                 	db	35
   204  000837  31                 	db	49	;'1'
   205  000838  33                 	db	51	;'3'
   206  000839  0D                 	db	13
   207  00083A  0A                 	db	10
   208  00083B  00                 	db	0
   209  00083C                     STR_6:
   210  00083C  0D                 	db	13
   211  00083D  0A                 	db	10
   212  00083E  45                 	db	69	;'E'
   213  00083F  23                 	db	35
   214  000840  31                 	db	49	;'1'
   215  000841  34                 	db	52	;'4'
   216  000842  0D                 	db	13
   217  000843  0A                 	db	10
   218  000844  00                 	db	0
   219  000845                     STR_1:
   220  000845  0D                 	db	13
   221  000846  0A                 	db	10
   222  000847  58                 	db	88	;'X'
   223  000848  30                 	db	48	;'0'
   224  000849  0D                 	db	13
   225  00084A  0A                 	db	10
   226  00084B  00                 	db	0
   227  0000                     
   228                           ; #config settings
   229  00084C  00                 	db	0	; dummy byte at the end
   230  0000                     
   231                           	psect	cinit
   232  0039F6                     __pcinit:
   233                           	opt stack 0
   234  0039F6                     start_initialization:
   235                           	opt stack 0
   236  0039F6                     __initialization:
   237                           	opt stack 0
   238                           
   239                           ; Clear objects allocated to BIGRAM (576 bytes)
   240  0039F6  EE01  F0FC         	lfsr	0,__pbssBIGRAM
   241  0039FA  EE12 F040          	lfsr	1,576
   242  0039FE                     clear_0:
   243  0039FE  6AEE               	clrf	postinc0,c
   244  003A00  50E5               	movf	postdec1,w,c
   245  003A02  50E1               	movf	fsr1l,w,c
   246  003A04  E1FC               	bnz	clear_0
   247  003A06  50E2               	movf	fsr1h,w,c
   248  003A08  E1FA               	bnz	clear_0
   249                           
   250                           ; Clear objects allocated to BANK1 (252 bytes)
   251  003A0A  EE01  F000         	lfsr	0,__pbssBANK1
   252  003A0E  0EFC               	movlw	252
   253  003A10                     clear_1:
   254  003A10  6AEE               	clrf	postinc0,c
   255  003A12  06E8               	decf	wreg,f,c
   256  003A14  E1FD               	bnz	clear_1
   257                           
   258                           ; Clear objects allocated to BANK0 (48 bytes)
   259  003A16  EE00  F060         	lfsr	0,__pbssBANK0
   260  003A1A  0E30               	movlw	48
   261  003A1C                     clear_2:
   262  003A1C  6AEE               	clrf	postinc0,c
   263  003A1E  06E8               	decf	wreg,f,c
   264  003A20  E1FD               	bnz	clear_2
   265                           
   266                           ; Clear objects allocated to COMRAM (31 bytes)
   267  003A22  EE00  F021         	lfsr	0,__pbssCOMRAM
   268  003A26  0E1F               	movlw	31
   269  003A28                     clear_3:
   270  003A28  6AEE               	clrf	postinc0,c
   271  003A2A  06E8               	decf	wreg,f,c
   272  003A2C  E1FD               	bnz	clear_3
   273                           
   274                           ; Initialize objects allocated to BANK0 (10 bytes)
   275                           ; load TBLPTR registers with __pidataBANK0
   276  003A2E  0E2E               	movlw	low __pidataBANK0
   277  003A30  6EF6               	movwf	tblptrl,c
   278  003A32  0E3D               	movlw	high __pidataBANK0
   279  003A34  6EF7               	movwf	tblptrh,c
   280  003A36  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   281  003A38  6EF8               	movwf	tblptru,c
   282  003A3A  EE00  F0BD         	lfsr	0,__pdataBANK0
   283  003A3E  EE10 F00A          	lfsr	1,10
   284  003A42                     copy_data0:
   285  003A42  0009               	tblrd		*+
   286  003A44  CFF5 FFEE          	movff	tablat,postinc0
   287  003A48  50E5               	movf	postdec1,w,c
   288  003A4A  50E1               	movf	fsr1l,w,c
   289  003A4C  E1FA               	bnz	copy_data0
   290  003A4E                     end_of_initialization:
   291                           	opt stack 0
   292  003A4E                     __end_of__initialization:
   293                           	opt stack 0
   294  003A4E  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   295  003A50  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   296  003A52  0E00               	movlw	low (__Lmediumconst shr (0+16))
   297  003A54  6EF8               	movwf	tblptru,c
   298  003A56  0100               	movlb	0
   299  003A58  EFC1  F01C         	goto	_main	;jump to C main() function
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           wreg	equ	0xFE8
   306                           postdec1	equ	0xFE5
   307                           fsr1h	equ	0xFE2
   308                           fsr1l	equ	0xFE1
   309                           
   310                           	psect	bssCOMRAM
   311  000021                     __pbssCOMRAM:
   312                           	opt stack 0
   313  000021                     _Green_Led_Counter:
   314                           	opt stack 0
   315  000021                     	ds	2
   316  000023                     _Red_Led_Counter:
   317                           	opt stack 0
   318  000023                     	ds	2
   319  000025                     _Button_Contact_Counter_LB:
   320                           	opt stack 0
   321  000025                     	ds	1
   322  000026                     _Button_Contact_Counter_LF:
   323                           	opt stack 0
   324  000026                     	ds	1
   325  000027                     _Button_Contact_Counter_Middle:
   326                           	opt stack 0
   327  000027                     	ds	1
   328  000028                     _Button_Contact_Counter_RB:
   329                           	opt stack 0
   330  000028                     	ds	1
   331  000029                     _Button_Contact_Counter_RF:
   332                           	opt stack 0
   333  000029                     	ds	1
   334  00002A                     _Button_Contact_Counter_Start:
   335                           	opt stack 0
   336  00002A                     	ds	1
   337  00002B                     _Button_Contact_Counter_Stop:
   338                           	opt stack 0
   339  00002B                     	ds	1
   340  00002C                     _Reed_Contact_LB_Counter:
   341                           	opt stack 0
   342  00002C                     	ds	1
   343  00002D                     _Reed_Contact_LF_Counter:
   344                           	opt stack 0
   345  00002D                     	ds	1
   346  00002E                     _Reed_Contact_LMD_Counter:
   347                           	opt stack 0
   348  00002E                     	ds	1
   349  00002F                     _Reed_Contact_LMU_Counter:
   350                           	opt stack 0
   351  00002F                     	ds	1
   352  000030                     _Reed_Contact_RB_Counter:
   353                           	opt stack 0
   354  000030                     	ds	1
   355  000031                     _Reed_Contact_RF_Counter:
   356                           	opt stack 0
   357  000031                     	ds	1
   358  000032                     _Reed_Contact_RMD_Counter:
   359                           	opt stack 0
   360  000032                     	ds	1
   361  000033                     _Reed_Contact_RMU_Counter:
   362                           	opt stack 0
   363  000033                     	ds	1
   364  000034                     _Switch_Activate_Controls:
   365                           	opt stack 0
   366  000034                     	ds	1
   367  000035                     _Switch_Adjust_LB:
   368                           	opt stack 0
   369  000035                     	ds	1
   370  000036                     _Switch_Adjust_LF:
   371                           	opt stack 0
   372  000036                     	ds	1
   373  000037                     _Switch_Adjust_RB:
   374                           	opt stack 0
   375  000037                     	ds	1
   376  000038                     _Switch_Adjust_RF:
   377                           	opt stack 0
   378  000038                     	ds	1
   379  000039                     _TrSwitch:
   380                           	opt stack 0
   381  000039                     	ds	1
   382  00003A                     _eusart1RxCount:
   383                           	opt stack 0
   384  00003A                     	ds	1
   385  00003B                     _eusart1RxHead:
   386                           	opt stack 0
   387  00003B                     	ds	1
   388  00003C                     _eusart1RxTail:
   389                           	opt stack 0
   390  00003C                     	ds	1
   391  00003D                     _eusart1TxBufferRemaining:
   392                           	opt stack 0
   393  00003D                     	ds	1
   394  00003E                     _eusart1TxHead:
   395                           	opt stack 0
   396  00003E                     	ds	1
   397  00003F                     _eusart1TxTail:
   398                           	opt stack 0
   399  00003F                     	ds	1
   400                           tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           postinc0	equ	0xFEE
   405                           wreg	equ	0xFE8
   406                           postdec1	equ	0xFE5
   407                           fsr1h	equ	0xFE2
   408                           fsr1l	equ	0xFE1
   409                           
   410                           	psect	bssBANK0
   411  000060                     __pbssBANK0:
   412                           	opt stack 0
   413  000060                     Junction@Junction_Switch_Time:
   414                           	opt stack 0
   415  000060                     	ds	2
   416  000062                     Train_Move_Left_Brake@Train_Move_Wait_Time:
   417                           	opt stack 0
   418  000062                     	ds	2
   419  000064                     Train_Move_Left_Start@Train_Move_Wait_Time:
   420                           	opt stack 0
   421  000064                     	ds	2
   422  000066                     Train_Move_Right_Brake@Train_Move_Wait_Time:
   423                           	opt stack 0
   424  000066                     	ds	2
   425  000068                     Train_Move_Right_Start@Train_Move_Wait_Time:
   426                           	opt stack 0
   427  000068                     	ds	2
   428  00006A                     _Activate_Controls_Counter:
   429                           	opt stack 0
   430  00006A                     	ds	2
   431  00006C                     _Adjust_Counter:
   432                           	opt stack 0
   433  00006C                     	ds	2
   434  00006E                     _Led1_Counter:
   435                           	opt stack 0
   436  00006E                     	ds	2
   437  000070                     _Mountain_Delay_Counter:
   438                           	opt stack 0
   439  000070                     	ds	2
   440  000072                     _Train_Move_Pwm_Count:
   441                           	opt stack 0
   442  000072                     	ds	2
   443  000074                     _Train_Move_Pwm_Fast_Count:
   444                           	opt stack 0
   445  000074                     	ds	2
   446  000076                     _pData:
   447                           	opt stack 0
   448  000076                     	ds	2
   449  000078                     _pLen:
   450                           	opt stack 0
   451  000078                     	ds	2
   452  00007A                     _Message_To_Translate:
   453                           	opt stack 0
   454  00007A                     	ds	1
   455  00007B                     _Received_Data:
   456                           	opt stack 0
   457  00007B                     	ds	1
   458  00007C                     _RxSwitch:
   459                           	opt stack 0
   460  00007C                     	ds	1
   461  00007D                     _Stop_Program:
   462                           	opt stack 0
   463  00007D                     	ds	1
   464  00007E                     _Switch_Init:
   465                           	opt stack 0
   466  00007E                     	ds	1
   467  00007F                     _Switch_Junction:
   468                           	opt stack 0
   469  00007F                     	ds	1
   470  000080                     _Switch_Main:
   471                           	opt stack 0
   472  000080                     	ds	1
   473  000081                     _Switch_Moutain:
   474                           	opt stack 0
   475  000081                     	ds	1
   476  000082                     _Switch_Program:
   477                           	opt stack 0
   478  000082                     	ds	1
   479  000083                     _Switch_Train_Move:
   480                           	opt stack 0
   481  000083                     	ds	1
   482  000084                     _Switch_Train_Path:
   483                           	opt stack 0
   484  000084                     	ds	1
   485  000085                     _Update_State_Machine:
   486                           	opt stack 0
   487  000085                     	ds	1
   488  000086                     _Data:
   489                           	opt stack 0
   490  000086                     	ds	10
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           postdec1	equ	0xFE5
   498                           fsr1h	equ	0xFE2
   499                           fsr1l	equ	0xFE1
   500                           
   501                           	psect	dataBANK0
   502  0000BD                     __pdataBANK0:
   503                           	opt stack 0
   504  0000BD                     Junction@Return_Val:
   505                           	opt stack 0
   506  0000BD                     	ds	1
   507  0000BE                     Left_Mountain_From_The_Left@Return_Val:
   508                           	opt stack 0
   509  0000BE                     	ds	1
   510  0000BF                     Left_Mountain_From_The_Right@Return_Val:
   511                           	opt stack 0
   512  0000BF                     	ds	1
   513  0000C0                     Right_Mountain_From_The_Left@Return_Val:
   514                           	opt stack 0
   515  0000C0                     	ds	1
   516  0000C1                     Right_Mountain_From_The_Right@Return_Val:
   517                           	opt stack 0
   518  0000C1                     	ds	1
   519  0000C2                     Train_Move_Left_Brake@Return_Val:
   520                           	opt stack 0
   521  0000C2                     	ds	1
   522  0000C3                     Train_Move_Left_Start@Return_Val:
   523                           	opt stack 0
   524  0000C3                     	ds	1
   525  0000C4                     Train_Move_Right_Brake@Return_Val:
   526                           	opt stack 0
   527  0000C4                     	ds	1
   528  0000C5                     Train_Move_Right_Start@Return_Val:
   529                           	opt stack 0
   530  0000C5                     	ds	1
   531  0000C6                     Train_Path@Return_Val:
   532                           	opt stack 0
   533  0000C6                     	ds	1
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           postdec1	equ	0xFE5
   541                           fsr1h	equ	0xFE2
   542                           fsr1l	equ	0xFE1
   543                           
   544                           	psect	bssBANK1
   545  000100                     __pbssBANK1:
   546                           	opt stack 0
   547  000100                     _eusart1RxBuffer:
   548                           	opt stack 0
   549  000100                     	ds	126
   550  00017E                     _eusart1TxBuffer:
   551                           	opt stack 0
   552  00017E                     	ds	126
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1h	equ	0xFE2
   561                           fsr1l	equ	0xFE1
   562                           
   563                           	psect	bssBIGRAM
   564  0001FC                     __pbssBIGRAM:
   565                           	opt stack 0
   566  0001FC                     _API:
   567                           	opt stack 0
   568  0001FC                     	ds	288
   569  00031C                     _API_RW:
   570                           	opt stack 0
   571  00031C                     	ds	288
   572                           tblptru	equ	0xFF8
   573                           tblptrh	equ	0xFF7
   574                           tblptrl	equ	0xFF6
   575                           tablat	equ	0xFF5
   576                           postinc0	equ	0xFEE
   577                           wreg	equ	0xFE8
   578                           postdec1	equ	0xFE5
   579                           fsr1h	equ	0xFE2
   580                           fsr1l	equ	0xFE1
   581                           
   582                           	psect	cstackBANK0
   583  000090                     __pcstackBANK0:
   584                           	opt stack 0
   585  000090                     ?_GETxAPIxVAL:
   586                           	opt stack 0
   587  000090                     ?_GETxAPIxRW:
   588                           	opt stack 0
   589  000090                     ?___wmul:
   590                           	opt stack 0
   591  000090                     ?___lwdiv:
   592                           	opt stack 0
   593  000090                     _isdigit$1860:
   594                           	opt stack 0
   595  000090                     EUSART1_Initialize@baud_rate:
   596                           	opt stack 0
   597  000090                     APIxInitialize@i:
   598                           	opt stack 0
   599  000090                     ___wmul@multiplier:
   600                           	opt stack 0
   601  000090                     ___lwdiv@dividend:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x0
   605  000090                     	ds	1
   606  000091                     isdigit@c:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x1
   610  000091                     	ds	1
   611  000092                     SetDCPWM1@dutycycle:
   612                           	opt stack 0
   613  000092                     ___wmul@multiplicand:
   614                           	opt stack 0
   615  000092                     ___lwdiv@divisor:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x2
   619  000092                     	ds	2
   620  000094                     ??_SetDCPWM1:
   621  000094                     ___lwdiv@counter:
   622                           	opt stack 0
   623  000094                     ___wmul@product:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x4
   627  000094                     	ds	1
   628  000095                     ___lwdiv@quotient:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x5
   632  000095                     	ds	1
   633  000096                     ?_atoi:
   634                           	opt stack 0
   635  000096                     SetDCPWM1@DCycle:
   636                           	opt stack 0
   637  000096                     atoi@s:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x6
   641  000096                     	ds	1
   642  000097                     ?___lwmod:
   643                           	opt stack 0
   644  000097                     ___lwmod@dividend:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x7
   648  000097                     	ds	1
   649  000098                     ??_atoi:
   650                           
   651                           ; 1 bytes @ 0x8
   652  000098                     	ds	1
   653  000099                     ___lwmod@divisor:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x9
   657  000099                     	ds	1
   658  00009A                     atoi@sign:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0xA
   662  00009A                     	ds	1
   663  00009B                     ?_printf:
   664                           	opt stack 0
   665  00009B                     printf@f:
   666                           	opt stack 0
   667  00009B                     atoi@a:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0xB
   671  00009B                     	ds	6
   672  0000A1                     ??_printf:
   673                           
   674                           ; 1 bytes @ 0x11
   675  0000A1                     	ds	1
   676  0000A2                     printf@ap:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x12
   680  0000A2                     	ds	2
   681  0000A4                     printf@flag:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x14
   685  0000A4                     	ds	1
   686  0000A5                     printf@prec:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x15
   690  0000A5                     	ds	1
   691  0000A6                     printf@val:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x16
   695  0000A6                     	ds	2
   696  0000A8                     printf@c:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x18
   700  0000A8                     	ds	1
   701  0000A9                     SENDxMESSAGE@value:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x19
   705  0000A9                     	ds	2
   706  0000AB                     SENDxMESSAGE@index:
   707                           	opt stack 0
   708                           
   709                           ; 1 bytes @ 0x1B
   710  0000AB                     	ds	1
   711  0000AC                     SETxAPIxVAL@value:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x1C
   715  0000AC                     	ds	2
   716  0000AE                     
   717                           ; 1 bytes @ 0x1E
   718  0000AE                     	ds	2
   719  0000B0                     SETxAPIxVAL@index:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x20
   723  0000B0                     	ds	1
   724  0000B1                     ??_Debounce_Inputs:
   725  0000B1                     Junction@Straight_Bend:
   726                           	opt stack 0
   727  0000B1                     TranslateMessage@Value:
   728                           	opt stack 0
   729  0000B1                     SETxPWM@speed:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x21
   733  0000B1                     	ds	1
   734  0000B2                     Junction@Junction_Left_Right:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x22
   738  0000B2                     	ds	1
   739  0000B3                     SETxPWM@direction:
   740                           	opt stack 0
   741  0000B3                     TranslateMessage@Index:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x23
   745  0000B3                     	ds	1
   746  0000B4                     ??_SETxPWM:
   747                           
   748                           ; 1 bytes @ 0x24
   749  0000B4                     	ds	1
   750  0000B5                     ??_READxRECEIVEDxMESSAGE:
   751                           
   752                           ; 1 bytes @ 0x25
   753  0000B5                     	ds	1
   754  0000B6                     SETxPWM@pwm_speed:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x26
   758  0000B6                     	ds	2
   759  0000B8                     Right_Mountain_From_The_Right@rc:
   760                           	opt stack 0
   761  0000B8                     Left_Mountain_From_The_Right@rc:
   762                           	opt stack 0
   763  0000B8                     Left_Mountain_From_The_Left@rc:
   764                           	opt stack 0
   765  0000B8                     Right_Mountain_From_The_Left@rc:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x28
   769  0000B8                     	ds	1
   770  0000B9                     Train_Path@To:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x29
   774  0000B9                     	ds	1
   775  0000BA                     Train_Path@From:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x2A
   779  0000BA                     	ds	1
   780  0000BB                     ??_Update_StateMchn:
   781                           
   782                           ; 1 bytes @ 0x2B
   783  0000BB                     	ds	2
   784                           tblptru	equ	0xFF8
   785                           tblptrh	equ	0xFF7
   786                           tblptrl	equ	0xFF6
   787                           tablat	equ	0xFF5
   788                           postinc0	equ	0xFEE
   789                           wreg	equ	0xFE8
   790                           postdec1	equ	0xFE5
   791                           fsr1h	equ	0xFE2
   792                           fsr1l	equ	0xFE1
   793                           
   794                           	psect	cstackCOMRAM
   795  000001                     __pcstackCOMRAM:
   796                           	opt stack 0
   797  000001                     ??_tc_high:
   798  000001                     
   799                           ; 1 bytes @ 0x0
   800  000001                     	ds	14
   801  00000F                     ??_tc_low:
   802                           
   803                           ; 1 bytes @ 0xE
   804  00000F                     	ds	17
   805  000020                     ??_isdigit:
   806  000020                     EUSART1_Read@readValue:
   807                           	opt stack 0
   808  000020                     putch@data:
   809                           	opt stack 0
   810  000020                     GETxAPIxRW@index:
   811                           	opt stack 0
   812  000020                     GETxAPIxVAL@index:
   813                           	opt stack 0
   814  000020                     Green_Led@Operation:
   815                           	opt stack 0
   816  000020                     Red_Led@Operation:
   817                           	opt stack 0
   818  000020                     ___lwmod@counter:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0x1F
   822  000020                     	ds	1
   823  000021                     tblptru	equ	0xFF8
   824                           tblptrh	equ	0xFF7
   825                           tblptrl	equ	0xFF6
   826                           tablat	equ	0xFF5
   827                           postinc0	equ	0xFEE
   828                           wreg	equ	0xFE8
   829                           postdec1	equ	0xFE5
   830                           fsr1h	equ	0xFE2
   831                           fsr1l	equ	0xFE1
   832                           
   833                           ; 1 bytes @ 0x20
   834 ;;
   835 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   836 ;;
   837 ;; *************** function _main *****************
   838 ;; Defined at:
   839 ;;		line 105 in file "../Main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   853 ;;      Params:         0       0       0       0       0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0       0       0
   856 ;;      Totals:         0       0       0       0       0       0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels required when called:   11
   859 ;; This function calls:
   860 ;;		_APIxInitialize
   861 ;;		_EUSART1_Initialize
   862 ;;		_Init_Pwm
   863 ;;		_Init_Timers
   864 ;;		_READxRECEIVEDxMESSAGE
   865 ;;		_Update_StateMchn
   866 ;; This function is called by:
   867 ;;		Startup code after reset
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text0
   872  003982                     __ptext0:
   873                           	opt stack 0
   874  003982                     _main:
   875                           	opt stack 20
   876                           
   877                           ;Main.c: 107: TRISA = 0xFF;TRISB = 0xFF;TRISC = 0xFF;TRISD = 0xFF;TRISE = 0xFF;
   878                           
   879                           ;incstack = 0
   880  003982  6892               	setf	3986,c	;volatile
   881  003984  6893               	setf	3987,c	;volatile
   882  003986  6894               	setf	3988,c	;volatile
   883  003988  6895               	setf	3989,c	;volatile
   884  00398A  6896               	setf	3990,c	;volatile
   885                           
   886                           ;Main.c: 108: ADCON1=0x0F;
   887  00398C  0E0F               	movlw	15
   888  00398E  6EC1               	movwf	4033,c	;volatile
   889                           
   890                           ;Main.c: 109: CMCON=0x07;
   891  003990  0E07               	movlw	7
   892  003992  6EB4               	movwf	4020,c	;volatile
   893                           
   894                           ;Main.c: 110: TRISAbits.TRISA4=0;TRISDbits.TRISD5=0;TRISDbits.TRISD6=0;;
   895  003994  9892               	bcf	3986,4,c	;volatile
   896  003996  9A95               	bcf	3989,5,c	;volatile
   897  003998  9C95               	bcf	3989,6,c	;volatile
   898                           
   899                           ;Main.c: 111: PORTAbits.RA4 = 0;
   900  00399A  9880               	bcf	3968,4,c	;volatile
   901                           
   902                           ;Main.c: 112: PORTDbits.RD6 = 0;
   903  00399C  9C83               	bcf	3971,6,c	;volatile
   904                           
   905                           ;Main.c: 113: PORTDbits.RD5 = 0;
   906  00399E  9A83               	bcf	3971,5,c	;volatile
   907                           
   908                           ;Main.c: 115: TRISAbits.TRISA0=0;TRISAbits.TRISA1=0;TRISAbits.TRISA2=0;TRISAbits.TRISA3=
      +                          0;;
   909  0039A0  9092               	bcf	3986,0,c	;volatile
   910  0039A2  9292               	bcf	3986,1,c	;volatile
   911  0039A4  9492               	bcf	3986,2,c	;volatile
   912  0039A6  9692               	bcf	3986,3,c	;volatile
   913                           
   914                           ;Main.c: 116: PORTAbits.RA3 = 0;
   915  0039A8  9680               	bcf	3968,3,c	;volatile
   916                           
   917                           ;Main.c: 117: PORTAbits.RA2 = 0;
   918  0039AA  9480               	bcf	3968,2,c	;volatile
   919                           
   920                           ;Main.c: 118: PORTAbits.RA1 = 0;
   921  0039AC  9280               	bcf	3968,1,c	;volatile
   922                           
   923                           ;Main.c: 119: PORTAbits.RA0 = 0;
   924  0039AE  9080               	bcf	3968,0,c	;volatile
   925                           
   926                           ;Main.c: 121: TRISDbits.TRISD2=1;TRISDbits.TRISD3=1;TRISDbits.TRISD0=1;TRISDbits.TRISD1=
      +                          1;TRISCbits.TRISC1=1;TRISDbits.TRISD4=1;TRISEbits.TRISE0=1;TRISEbits.TRISE1=1;;
   927  0039B0  8495               	bsf	3989,2,c	;volatile
   928  0039B2  8695               	bsf	3989,3,c	;volatile
   929  0039B4  8095               	bsf	3989,0,c	;volatile
   930  0039B6  8295               	bsf	3989,1,c	;volatile
   931  0039B8  8294               	bsf	3988,1,c	;volatile
   932  0039BA  8895               	bsf	3989,4,c	;volatile
   933  0039BC  8096               	bsf	3990,0,c	;volatile
   934  0039BE  8296               	bsf	3990,1,c	;volatile
   935                           
   936                           ;Main.c: 122: TRISBbits.TRISB0=1;TRISBbits.TRISB1=1;TRISBbits.TRISB2=1;TRISBbits.TRISB3=
      +                          1;TRISBbits.TRISB4=1;TRISBbits.TRISB5=1;TRISDbits.TRISD7=1;;
   937  0039C0  8093               	bsf	3987,0,c	;volatile
   938  0039C2  8293               	bsf	3987,1,c	;volatile
   939  0039C4  8493               	bsf	3987,2,c	;volatile
   940  0039C6  8693               	bsf	3987,3,c	;volatile
   941  0039C8  8893               	bsf	3987,4,c	;volatile
   942  0039CA  8A93               	bsf	3987,5,c	;volatile
   943  0039CC  8E95               	bsf	3989,7,c	;volatile
   944                           
   945                           ;Main.c: 123: APIxInitialize();
   946  0039CE  ECCB  F00D         	call	_APIxInitialize	;wreg free
   947                           
   948                           ;Main.c: 124: Init_Pwm();
   949  0039D2  EC57  F01E         	call	_Init_Pwm	;wreg free
   950                           
   951                           ;Main.c: 125: Init_Timers();
   952  0039D6  EC85  F01E         	call	_Init_Timers	;wreg free
   953                           
   954                           ;Main.c: 126: EUSART1_Initialize();
   955  0039DA  EC86  F01D         	call	_EUSART1_Initialize	;wreg free
   956  0039DE                     l8645:
   957                           
   958                           ;Main.c: 129: {
   959                           ;Main.c: 130: if (1 == Update_State_Machine)
   960  0039DE  0100               	movlb	0	; () banked
   961  0039E0  0585               	decf	_Update_State_Machine& (0+255),w,b
   962  0039E2  A4D8               	btfss	status,2,c
   963  0039E4  D005               	goto	l8651
   964                           
   965                           ; BSR set to: 0
   966                           ;Main.c: 131: {
   967                           ;Main.c: 132: Update_State_Machine = 0;
   968  0039E6  0E00               	movlw	0
   969  0039E8  0100               	movlb	0	; () banked
   970  0039EA  6F85               	movwf	_Update_State_Machine& (0+255),b
   971                           
   972                           ; BSR set to: 0
   973                           ;Main.c: 133: Update_StateMchn();
   974  0039EC  EC27  F004         	call	_Update_StateMchn	;wreg free
   975  0039F0                     l8651:
   976                           
   977                           ;Main.c: 134: }
   978                           ;Main.c: 136: READxRECEIVEDxMESSAGE();
   979  0039F0  EC98  F013         	call	_READxRECEIVEDxMESSAGE	;wreg free
   980  0039F4  D7F4               	goto	l8645
   981  0039F6                     __end_of_main:
   982                           	opt stack 0
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           postinc0	equ	0xFEE
   988                           wreg	equ	0xFE8
   989                           postdec1	equ	0xFE5
   990                           fsr1h	equ	0xFE2
   991                           fsr1l	equ	0xFE1
   992                           status	equ	0xFD8
   993                           
   994 ;; *************** function _Update_StateMchn *****************
   995 ;; Defined at:
   996 ;;		line 40 in file "../State_Mchn.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1010 ;;      Params:         0       0       0       0       0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1012 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1013 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1014 ;;Total ram usage:        2 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:   10
  1017 ;; This function calls:
  1018 ;;		_Debounce_Inputs
  1019 ;;		_Eeprom_Store
  1020 ;;		_GETxAPIxVAL
  1021 ;;		_Green_Led
  1022 ;;		_Junction
  1023 ;;		_Red_Led
  1024 ;;		_SETxAPIxVAL
  1025 ;;		_Train_Path
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text1
  1032  00084E                     __ptext1:
  1033                           	opt stack 0
  1034  00084E                     _Update_StateMchn:
  1035                           	opt stack 20
  1036                           
  1037                           ;State_Mchn.c: 42: if (GETxAPIxVAL(72)){
  1038                           
  1039                           ;incstack = 0
  1040  00084E  0E48               	movlw	72
  1041  000850  EC69  F01E         	call	_GETxAPIxVAL
  1042  000854  0100               	movlb	0	; () banked
  1043  000856  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1044  000858  0100               	movlb	0	; () banked
  1045  00085A  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1046  00085C  B4D8               	btfsc	status,2,c
  1047  00085E  D009               	goto	l164
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;State_Mchn.c: 43: SETxAPIxVAL(72, 0);
  1051  000860  0E00               	movlw	0
  1052  000862  0100               	movlb	0	; () banked
  1053  000864  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1054  000866  0E00               	movlw	0
  1055  000868  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1056  00086A  0E48               	movlw	72
  1057  00086C  EC5C  F01D         	call	_SETxAPIxVAL
  1058  000870  00FF               	reset		;# 
  1059  000872                     l164:
  1060                           
  1061                           ;State_Mchn.c: 45: }
  1062                           ;State_Mchn.c: 47: Debounce_Inputs();
  1063  000872  EC13  F00A         	call	_Debounce_Inputs	;wreg free
  1064                           
  1065                           ;State_Mchn.c: 49: switch (Switch_Main)
  1066  000876  EFF8  F009         	goto	l8469
  1067  00087A                     l7965:
  1068                           
  1069                           ;State_Mchn.c: 52: if (GETxAPIxVAL(74)){
  1070  00087A  0E4A               	movlw	74
  1071  00087C  EC69  F01E         	call	_GETxAPIxVAL
  1072  000880  0100               	movlb	0	; () banked
  1073  000882  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1074  000884  0100               	movlb	0	; () banked
  1075  000886  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1076  000888  B4D8               	btfsc	status,2,c
  1077  00088A  D014               	goto	l7971
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;State_Mchn.c: 53: if(Junction(0, 1) == 0){
  1081  00088C  0E01               	movlw	1
  1082  00088E  0100               	movlb	0	; () banked
  1083  000890  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  1084  000892  0E00               	movlw	0
  1085  000894  EC3D  F016         	call	_Junction
  1086  000898  0900               	iorlw	0
  1087  00089A  A4D8               	btfss	status,2,c
  1088  00089C  EF04  F00A         	goto	l8471
  1089                           
  1090                           ;State_Mchn.c: 54: SETxAPIxVAL(74, 0);
  1091  0008A0  0E00               	movlw	0
  1092  0008A2  0100               	movlb	0	; () banked
  1093  0008A4  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1094  0008A6  0E00               	movlw	0
  1095  0008A8  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1096  0008AA  0E4A               	movlw	74
  1097  0008AC  EC5C  F01D         	call	_SETxAPIxVAL
  1098                           
  1099                           ;State_Mchn.c: 55: }
  1100                           ;State_Mchn.c: 56: }
  1101  0008B0  EF04  F00A         	goto	l8471
  1102  0008B4                     l7971:
  1103                           
  1104                           ;State_Mchn.c: 57: else if (GETxAPIxVAL(73)){
  1105  0008B4  0E49               	movlw	73
  1106  0008B6  EC69  F01E         	call	_GETxAPIxVAL
  1107  0008BA  0100               	movlb	0	; () banked
  1108  0008BC  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1109  0008BE  0100               	movlb	0	; () banked
  1110  0008C0  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1111  0008C2  B4D8               	btfsc	status,2,c
  1112  0008C4  D014               	goto	l7977
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;State_Mchn.c: 58: if(Junction(0, 0) == 0){
  1116  0008C6  0E00               	movlw	0
  1117  0008C8  0100               	movlb	0	; () banked
  1118  0008CA  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  1119  0008CC  0E00               	movlw	0
  1120  0008CE  EC3D  F016         	call	_Junction
  1121  0008D2  0900               	iorlw	0
  1122  0008D4  A4D8               	btfss	status,2,c
  1123  0008D6  EF04  F00A         	goto	l8471
  1124                           
  1125                           ;State_Mchn.c: 59: SETxAPIxVAL(73, 0);
  1126  0008DA  0E00               	movlw	0
  1127  0008DC  0100               	movlb	0	; () banked
  1128  0008DE  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1129  0008E0  0E00               	movlw	0
  1130  0008E2  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1131  0008E4  0E49               	movlw	73
  1132  0008E6  EC5C  F01D         	call	_SETxAPIxVAL
  1133                           
  1134                           ;State_Mchn.c: 60: }
  1135                           ;State_Mchn.c: 61: }
  1136  0008EA  EF04  F00A         	goto	l8471
  1137  0008EE                     l7977:
  1138                           
  1139                           ;State_Mchn.c: 62: else if (GETxAPIxVAL(76)){
  1140  0008EE  0E4C               	movlw	76
  1141  0008F0  EC69  F01E         	call	_GETxAPIxVAL
  1142  0008F4  0100               	movlb	0	; () banked
  1143  0008F6  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1144  0008F8  0100               	movlb	0	; () banked
  1145  0008FA  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1146  0008FC  B4D8               	btfsc	status,2,c
  1147  0008FE  D014               	goto	l7983
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;State_Mchn.c: 63: if(Junction(1, 1) == 0){
  1151  000900  0E01               	movlw	1
  1152  000902  0100               	movlb	0	; () banked
  1153  000904  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  1154  000906  0E01               	movlw	1
  1155  000908  EC3D  F016         	call	_Junction
  1156  00090C  0900               	iorlw	0
  1157  00090E  A4D8               	btfss	status,2,c
  1158  000910  EF04  F00A         	goto	l8471
  1159                           
  1160                           ;State_Mchn.c: 64: SETxAPIxVAL(76, 0);
  1161  000914  0E00               	movlw	0
  1162  000916  0100               	movlb	0	; () banked
  1163  000918  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1164  00091A  0E00               	movlw	0
  1165  00091C  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1166  00091E  0E4C               	movlw	76
  1167  000920  EC5C  F01D         	call	_SETxAPIxVAL
  1168                           
  1169                           ;State_Mchn.c: 65: }
  1170                           ;State_Mchn.c: 66: }
  1171  000924  EF04  F00A         	goto	l8471
  1172  000928                     l7983:
  1173                           
  1174                           ;State_Mchn.c: 67: else if (GETxAPIxVAL(75)){
  1175  000928  0E4B               	movlw	75
  1176  00092A  EC69  F01E         	call	_GETxAPIxVAL
  1177  00092E  0100               	movlb	0	; () banked
  1178  000930  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1179  000932  0100               	movlb	0	; () banked
  1180  000934  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1181  000936  B4D8               	btfsc	status,2,c
  1182  000938  D014               	goto	l7989
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;State_Mchn.c: 68: if(Junction(1, 0) == 0){
  1186  00093A  0E00               	movlw	0
  1187  00093C  0100               	movlb	0	; () banked
  1188  00093E  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  1189  000940  0E01               	movlw	1
  1190  000942  EC3D  F016         	call	_Junction
  1191  000946  0900               	iorlw	0
  1192  000948  A4D8               	btfss	status,2,c
  1193  00094A  EF04  F00A         	goto	l8471
  1194                           
  1195                           ;State_Mchn.c: 69: SETxAPIxVAL(75, 0);
  1196  00094E  0E00               	movlw	0
  1197  000950  0100               	movlb	0	; () banked
  1198  000952  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1199  000954  0E00               	movlw	0
  1200  000956  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1201  000958  0E4B               	movlw	75
  1202  00095A  EC5C  F01D         	call	_SETxAPIxVAL
  1203                           
  1204                           ;State_Mchn.c: 70: }
  1205                           ;State_Mchn.c: 71: }
  1206  00095E  EF04  F00A         	goto	l8471
  1207  000962                     l7989:
  1208                           
  1209                           ;State_Mchn.c: 72: else if (GETxAPIxVAL(77)){
  1210  000962  0E4D               	movlw	77
  1211  000964  EC69  F01E         	call	_GETxAPIxVAL
  1212  000968  0100               	movlb	0	; () banked
  1213  00096A  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1214  00096C  0100               	movlb	0	; () banked
  1215  00096E  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1216  000970  B4D8               	btfsc	status,2,c
  1217  000972  D012               	goto	l7993
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;State_Mchn.c: 73: SETxAPIxVAL(69, 1);
  1221  000974  0E00               	movlw	0
  1222  000976  0100               	movlb	0	; () banked
  1223  000978  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1224  00097A  0E01               	movlw	1
  1225  00097C  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1226  00097E  0E45               	movlw	69
  1227  000980  EC5C  F01D         	call	_SETxAPIxVAL
  1228                           
  1229                           ;State_Mchn.c: 74: SETxAPIxVAL(77, 0);
  1230  000984  0E00               	movlw	0
  1231  000986  0100               	movlb	0	; () banked
  1232  000988  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1233  00098A  0E00               	movlw	0
  1234  00098C  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1235  00098E  0E4D               	movlw	77
  1236  000990  EC5C  F01D         	call	_SETxAPIxVAL
  1237                           
  1238                           ;State_Mchn.c: 75: }
  1239  000994  EF04  F00A         	goto	l8471
  1240  000998                     l7993:
  1241                           
  1242                           ;State_Mchn.c: 76: else if (GETxAPIxVAL(78)){
  1243  000998  0E4E               	movlw	78
  1244  00099A  EC69  F01E         	call	_GETxAPIxVAL
  1245  00099E  0100               	movlb	0	; () banked
  1246  0009A0  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1247  0009A2  0100               	movlb	0	; () banked
  1248  0009A4  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1249  0009A6  B4D8               	btfsc	status,2,c
  1250  0009A8  D012               	goto	l7997
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;State_Mchn.c: 77: SETxAPIxVAL(69, 0);
  1254  0009AA  0E00               	movlw	0
  1255  0009AC  0100               	movlb	0	; () banked
  1256  0009AE  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1257  0009B0  0E00               	movlw	0
  1258  0009B2  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1259  0009B4  0E45               	movlw	69
  1260  0009B6  EC5C  F01D         	call	_SETxAPIxVAL
  1261                           
  1262                           ;State_Mchn.c: 78: SETxAPIxVAL(78, 0);
  1263  0009BA  0E00               	movlw	0
  1264  0009BC  0100               	movlb	0	; () banked
  1265  0009BE  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1266  0009C0  0E00               	movlw	0
  1267  0009C2  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1268  0009C4  0E4E               	movlw	78
  1269  0009C6  EC5C  F01D         	call	_SETxAPIxVAL
  1270                           
  1271                           ;State_Mchn.c: 79: }
  1272  0009CA  EF04  F00A         	goto	l8471
  1273  0009CE                     l7997:
  1274                           
  1275                           ;State_Mchn.c: 80: else if (GETxAPIxVAL(68) != GETxAPIxVAL(79)){
  1276  0009CE  0E44               	movlw	68
  1277  0009D0  EC69  F01E         	call	_GETxAPIxVAL
  1278  0009D4  C090  F0BB         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  1279  0009D8  C091  F0BC         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  1280  0009DC  0E4F               	movlw	79
  1281  0009DE  EC69  F01E         	call	_GETxAPIxVAL
  1282  0009E2  0100               	movlb	0	; () banked
  1283  0009E4  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1284  0009E6  0100               	movlb	0	; () banked
  1285  0009E8  19BB               	xorwf	??_Update_StateMchn& (0+255),w,b
  1286  0009EA  E106               	bnz	u8030
  1287  0009EC  0100               	movlb	0	; () banked
  1288  0009EE  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1289  0009F0  0100               	movlb	0	; () banked
  1290  0009F2  19BC               	xorwf	(??_Update_StateMchn+1)& (0+255),w,b
  1291  0009F4  B4D8               	btfsc	status,2,c
  1292  0009F6  D39B               	goto	l8313
  1293  0009F8                     u8030:
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;State_Mchn.c: 81: SETxAPIxVAL(68, GETxAPIxVAL(79));
  1297  0009F8  0E4F               	movlw	79
  1298  0009FA  EC69  F01E         	call	_GETxAPIxVAL
  1299  0009FE  C090  F0AC         	movff	?_GETxAPIxVAL,SETxAPIxVAL@value
  1300  000A02  C091  F0AD         	movff	?_GETxAPIxVAL+1,SETxAPIxVAL@value+1
  1301  000A06  0E44               	movlw	68
  1302  000A08  EC5C  F01D         	call	_SETxAPIxVAL
  1303                           
  1304                           ;State_Mchn.c: 82: }
  1305  000A0C  EF04  F00A         	goto	l8471
  1306  000A10                     l8001:
  1307  000A10  0E00               	movlw	0
  1308  000A12  EC45  F01C         	call	_Green_Led
  1309                           
  1310                           ;State_Mchn.c: 88: Red_Led(0);
  1311  000A16  0E00               	movlw	0
  1312  000A18  EC05  F01C         	call	_Red_Led
  1313                           
  1314                           ;State_Mchn.c: 89: Switch_Init = 1;
  1315  000A1C  0E01               	movlw	1
  1316  000A1E  D012               	goto	L1
  1317  000A20                     l8005:
  1318                           
  1319                           ; BSR set to: 0
  1320  000A20  0E23               	movlw	35
  1321  000A22  EC69  F01E         	call	_GETxAPIxVAL
  1322  000A26  0100               	movlb	0	; () banked
  1323  000A28  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1324  000A2A  0100               	movlb	0	; () banked
  1325  000A2C  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1326  000A2E  B4D8               	btfsc	status,2,c
  1327  000A30  D00D               	goto	l8011
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;State_Mchn.c: 93: {
  1331                           ;State_Mchn.c: 94: SETxAPIxVAL(39, 1);
  1332  000A32  0E00               	movlw	0
  1333  000A34  0100               	movlb	0	; () banked
  1334  000A36  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1335  000A38  0E01               	movlw	1
  1336  000A3A  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1337  000A3C  0E27               	movlw	39
  1338  000A3E  EC5C  F01D         	call	_SETxAPIxVAL
  1339  000A42  D04B               	goto	l8033
  1340  000A44                     L1:
  1341  000A44  0100               	movlb	0	; () banked
  1342  000A46  6F7E               	movwf	_Switch_Init& (0+255),b
  1343                           
  1344                           ;State_Mchn.c: 96: break;
  1345  000A48  EF04  F00A         	goto	l8471
  1346  000A4C                     l8011:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;State_Mchn.c: 97: }
  1350                           ;State_Mchn.c: 98: if(GETxAPIxVAL(36))
  1351  000A4C  0E24               	movlw	36
  1352  000A4E  EC69  F01E         	call	_GETxAPIxVAL
  1353  000A52  0100               	movlb	0	; () banked
  1354  000A54  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1355  000A56  0100               	movlb	0	; () banked
  1356  000A58  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1357  000A5A  B4D8               	btfsc	status,2,c
  1358  000A5C  D009               	goto	l8017
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;State_Mchn.c: 99: {
  1362                           ;State_Mchn.c: 100: SETxAPIxVAL(39, 2);
  1363  000A5E  0E00               	movlw	0
  1364  000A60  0100               	movlb	0	; () banked
  1365  000A62  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1366  000A64  0E02               	movlw	2
  1367  000A66  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1368  000A68  0E27               	movlw	39
  1369  000A6A  EC5C  F01D         	call	_SETxAPIxVAL
  1370  000A6E  D035               	goto	l8033
  1371  000A70                     l8017:
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;State_Mchn.c: 103: }
  1375                           ;State_Mchn.c: 104: if(GETxAPIxVAL(37))
  1376  000A70  0E25               	movlw	37
  1377  000A72  EC69  F01E         	call	_GETxAPIxVAL
  1378  000A76  0100               	movlb	0	; () banked
  1379  000A78  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1380  000A7A  0100               	movlb	0	; () banked
  1381  000A7C  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1382  000A7E  B4D8               	btfsc	status,2,c
  1383  000A80  D009               	goto	l8023
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;State_Mchn.c: 105: {
  1387                           ;State_Mchn.c: 106: SETxAPIxVAL(39, 3);
  1388  000A82  0E00               	movlw	0
  1389  000A84  0100               	movlb	0	; () banked
  1390  000A86  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1391  000A88  0E03               	movlw	3
  1392  000A8A  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1393  000A8C  0E27               	movlw	39
  1394  000A8E  EC5C  F01D         	call	_SETxAPIxVAL
  1395  000A92  D023               	goto	l8033
  1396  000A94                     l8023:
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;State_Mchn.c: 109: }
  1400                           ;State_Mchn.c: 110: if(GETxAPIxVAL(38))
  1401  000A94  0E26               	movlw	38
  1402  000A96  EC69  F01E         	call	_GETxAPIxVAL
  1403  000A9A  0100               	movlb	0	; () banked
  1404  000A9C  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1405  000A9E  0100               	movlb	0	; () banked
  1406  000AA0  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1407  000AA2  B4D8               	btfsc	status,2,c
  1408  000AA4  D009               	goto	l8029
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;State_Mchn.c: 111: {
  1412                           ;State_Mchn.c: 112: SETxAPIxVAL(39, 4);
  1413  000AA6  0E00               	movlw	0
  1414  000AA8  0100               	movlb	0	; () banked
  1415  000AAA  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1416  000AAC  0E04               	movlw	4
  1417  000AAE  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1418  000AB0  0E27               	movlw	39
  1419  000AB2  EC5C  F01D         	call	_SETxAPIxVAL
  1420  000AB6  D011               	goto	l8033
  1421  000AB8                     l8029:
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;State_Mchn.c: 115: }
  1425                           ;State_Mchn.c: 116: if(GETxAPIxVAL(34))
  1426  000AB8  0E22               	movlw	34
  1427  000ABA  EC69  F01E         	call	_GETxAPIxVAL
  1428  000ABE  0100               	movlb	0	; () banked
  1429  000AC0  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1430  000AC2  0100               	movlb	0	; () banked
  1431  000AC4  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1432  000AC6  B4D8               	btfsc	status,2,c
  1433  000AC8  D00A               	goto	l8035
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;State_Mchn.c: 117: {
  1437                           ;State_Mchn.c: 118: SETxAPIxVAL(39, 5);
  1438  000ACA  0E00               	movlw	0
  1439  000ACC  0100               	movlb	0	; () banked
  1440  000ACE  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1441  000AD0  0E05               	movlw	5
  1442  000AD2  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1443  000AD4  0E27               	movlw	39
  1444  000AD6  EC5C  F01D         	call	_SETxAPIxVAL
  1445  000ADA                     l8033:
  1446                           
  1447                           ;State_Mchn.c: 119: Switch_Init = 2;
  1448  000ADA  0E02               	movlw	2
  1449  000ADC  D7B3               	goto	L1
  1450  000ADE                     l8035:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;State_Mchn.c: 121: }
  1454                           ;State_Mchn.c: 122: if(GETxAPIxVAL(39) > 0 && GETxAPIxVAL(40) > 0){
  1455  000ADE  0E27               	movlw	39
  1456  000AE0  EC69  F01E         	call	_GETxAPIxVAL
  1457  000AE4  0100               	movlb	0	; () banked
  1458  000AE6  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1459  000AE8  0100               	movlb	0	; () banked
  1460  000AEA  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1461  000AEC  B4D8               	btfsc	status,2,c
  1462  000AEE  D009               	goto	l8041
  1463                           
  1464                           ; BSR set to: 0
  1465  000AF0  0E28               	movlw	40
  1466  000AF2  EC69  F01E         	call	_GETxAPIxVAL
  1467  000AF6  0100               	movlb	0	; () banked
  1468  000AF8  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1469  000AFA  0100               	movlb	0	; () banked
  1470  000AFC  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1471  000AFE  A4D8               	btfss	status,2,c
  1472  000B00  D0C7               	goto	l8103
  1473  000B02                     l8041:
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;State_Mchn.c: 125: }
  1477                           ;State_Mchn.c: 126: Switch_Init = 1;
  1478  000B02  0E01               	movlw	1
  1479  000B04  0100               	movlb	0	; () banked
  1480  000B06  6F7E               	movwf	_Switch_Init& (0+255),b
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;State_Mchn.c: 127: Green_Led(2);
  1484  000B08  0E02               	movlw	2
  1485  000B0A  EC45  F01C         	call	_Green_Led
  1486                           
  1487                           ;State_Mchn.c: 128: break;
  1488  000B0E  EF04  F00A         	goto	l8471
  1489  000B12                     l8045:
  1490  000B12  0E23               	movlw	35
  1491  000B14  EC69  F01E         	call	_GETxAPIxVAL
  1492  000B18  0100               	movlb	0	; () banked
  1493  000B1A  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1494  000B1C  0100               	movlb	0	; () banked
  1495  000B1E  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1496  000B20  A4D8               	btfss	status,2,c
  1497  000B22  D030               	goto	l8059
  1498                           
  1499                           ; BSR set to: 0
  1500  000B24  0E24               	movlw	36
  1501  000B26  EC69  F01E         	call	_GETxAPIxVAL
  1502  000B2A  0100               	movlb	0	; () banked
  1503  000B2C  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1504  000B2E  0100               	movlb	0	; () banked
  1505  000B30  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1506  000B32  A4D8               	btfss	status,2,c
  1507  000B34  D027               	goto	l8059
  1508                           
  1509                           ; BSR set to: 0
  1510  000B36  0E25               	movlw	37
  1511  000B38  EC69  F01E         	call	_GETxAPIxVAL
  1512  000B3C  0100               	movlb	0	; () banked
  1513  000B3E  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1514  000B40  0100               	movlb	0	; () banked
  1515  000B42  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1516  000B44  A4D8               	btfss	status,2,c
  1517  000B46  D01E               	goto	l8059
  1518                           
  1519                           ; BSR set to: 0
  1520  000B48  0E26               	movlw	38
  1521  000B4A  EC69  F01E         	call	_GETxAPIxVAL
  1522  000B4E  0100               	movlb	0	; () banked
  1523  000B50  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1524  000B52  0100               	movlb	0	; () banked
  1525  000B54  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1526  000B56  A4D8               	btfss	status,2,c
  1527  000B58  D015               	goto	l8059
  1528                           
  1529                           ; BSR set to: 0
  1530  000B5A  0E22               	movlw	34
  1531  000B5C  EC69  F01E         	call	_GETxAPIxVAL
  1532  000B60  0100               	movlb	0	; () banked
  1533  000B62  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1534  000B64  0100               	movlb	0	; () banked
  1535  000B66  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1536  000B68  A4D8               	btfss	status,2,c
  1537  000B6A  D00C               	goto	l8059
  1538                           
  1539                           ; BSR set to: 0
  1540  000B6C  0E20               	movlw	32
  1541  000B6E  EC69  F01E         	call	_GETxAPIxVAL
  1542  000B72  0100               	movlb	0	; () banked
  1543  000B74  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1544  000B76  0100               	movlb	0	; () banked
  1545  000B78  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1546  000B7A  A4D8               	btfss	status,2,c
  1547  000B7C  D003               	goto	l8059
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;State_Mchn.c: 131: {
  1551                           ;State_Mchn.c: 132: Switch_Init = 3;
  1552  000B7E  0E03               	movlw	3
  1553  000B80  0100               	movlb	0	; () banked
  1554  000B82  6F7E               	movwf	_Switch_Init& (0+255),b
  1555  000B84                     l8059:
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;State_Mchn.c: 133: }
  1559                           ;State_Mchn.c: 134: Red_Led(0);
  1560  000B84  0E00               	movlw	0
  1561  000B86  EC05  F01C         	call	_Red_Led
  1562                           
  1563                           ;State_Mchn.c: 135: Green_Led(2);
  1564  000B8A  0E02               	movlw	2
  1565  000B8C  EC45  F01C         	call	_Green_Led
  1566                           
  1567                           ;State_Mchn.c: 136: break;
  1568  000B90  EF04  F00A         	goto	l8471
  1569  000B94                     l8063:
  1570  000B94  0E23               	movlw	35
  1571  000B96  EC69  F01E         	call	_GETxAPIxVAL
  1572  000B9A  0100               	movlb	0	; () banked
  1573  000B9C  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1574  000B9E  0100               	movlb	0	; () banked
  1575  000BA0  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1576  000BA2  B4D8               	btfsc	status,2,c
  1577  000BA4  D009               	goto	l8069
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;State_Mchn.c: 139: {
  1581                           ;State_Mchn.c: 140: SETxAPIxVAL(40, 1);
  1582  000BA6  0E00               	movlw	0
  1583  000BA8  0100               	movlb	0	; () banked
  1584  000BAA  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1585  000BAC  0E01               	movlw	1
  1586  000BAE  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1587  000BB0  0E28               	movlw	40
  1588  000BB2  EC5C  F01D         	call	_SETxAPIxVAL
  1589  000BB6  D06C               	goto	l8103
  1590  000BB8                     l8069:
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;State_Mchn.c: 143: }
  1594                           ;State_Mchn.c: 144: if(GETxAPIxVAL(36))
  1595  000BB8  0E24               	movlw	36
  1596  000BBA  EC69  F01E         	call	_GETxAPIxVAL
  1597  000BBE  0100               	movlb	0	; () banked
  1598  000BC0  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1599  000BC2  0100               	movlb	0	; () banked
  1600  000BC4  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1601  000BC6  B4D8               	btfsc	status,2,c
  1602  000BC8  D009               	goto	l8075
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;State_Mchn.c: 145: {
  1606                           ;State_Mchn.c: 146: SETxAPIxVAL(40, 2);
  1607  000BCA  0E00               	movlw	0
  1608  000BCC  0100               	movlb	0	; () banked
  1609  000BCE  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1610  000BD0  0E02               	movlw	2
  1611  000BD2  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1612  000BD4  0E28               	movlw	40
  1613  000BD6  EC5C  F01D         	call	_SETxAPIxVAL
  1614  000BDA  D05A               	goto	l8103
  1615  000BDC                     l8075:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;State_Mchn.c: 149: }
  1619                           ;State_Mchn.c: 150: if(GETxAPIxVAL(37))
  1620  000BDC  0E25               	movlw	37
  1621  000BDE  EC69  F01E         	call	_GETxAPIxVAL
  1622  000BE2  0100               	movlb	0	; () banked
  1623  000BE4  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1624  000BE6  0100               	movlb	0	; () banked
  1625  000BE8  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1626  000BEA  B4D8               	btfsc	status,2,c
  1627  000BEC  D009               	goto	l8081
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;State_Mchn.c: 151: {
  1631                           ;State_Mchn.c: 152: SETxAPIxVAL(40, 3);
  1632  000BEE  0E00               	movlw	0
  1633  000BF0  0100               	movlb	0	; () banked
  1634  000BF2  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1635  000BF4  0E03               	movlw	3
  1636  000BF6  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1637  000BF8  0E28               	movlw	40
  1638  000BFA  EC5C  F01D         	call	_SETxAPIxVAL
  1639  000BFE  D048               	goto	l8103
  1640  000C00                     l8081:
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;State_Mchn.c: 155: }
  1644                           ;State_Mchn.c: 156: if(GETxAPIxVAL(38))
  1645  000C00  0E26               	movlw	38
  1646  000C02  EC69  F01E         	call	_GETxAPIxVAL
  1647  000C06  0100               	movlb	0	; () banked
  1648  000C08  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1649  000C0A  0100               	movlb	0	; () banked
  1650  000C0C  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1651  000C0E  B4D8               	btfsc	status,2,c
  1652  000C10  D009               	goto	l8087
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;State_Mchn.c: 157: {
  1656                           ;State_Mchn.c: 158: SETxAPIxVAL(40, 4);
  1657  000C12  0E00               	movlw	0
  1658  000C14  0100               	movlb	0	; () banked
  1659  000C16  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1660  000C18  0E04               	movlw	4
  1661  000C1A  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1662  000C1C  0E28               	movlw	40
  1663  000C1E  EC5C  F01D         	call	_SETxAPIxVAL
  1664  000C22  D036               	goto	l8103
  1665  000C24                     l8087:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;State_Mchn.c: 161: }
  1669                           ;State_Mchn.c: 162: if(GETxAPIxVAL(34))
  1670  000C24  0E22               	movlw	34
  1671  000C26  EC69  F01E         	call	_GETxAPIxVAL
  1672  000C2A  0100               	movlb	0	; () banked
  1673  000C2C  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1674  000C2E  0100               	movlb	0	; () banked
  1675  000C30  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1676  000C32  B4D8               	btfsc	status,2,c
  1677  000C34  D009               	goto	l8093
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;State_Mchn.c: 163: {
  1681                           ;State_Mchn.c: 164: SETxAPIxVAL(40, 5);
  1682  000C36  0E00               	movlw	0
  1683  000C38  0100               	movlb	0	; () banked
  1684  000C3A  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1685  000C3C  0E05               	movlw	5
  1686  000C3E  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1687  000C40  0E28               	movlw	40
  1688  000C42  EC5C  F01D         	call	_SETxAPIxVAL
  1689  000C46  D024               	goto	l8103
  1690  000C48                     l8093:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;State_Mchn.c: 167: }
  1694                           ;State_Mchn.c: 168: if(GETxAPIxVAL(32))
  1695  000C48  0E20               	movlw	32
  1696  000C4A  EC69  F01E         	call	_GETxAPIxVAL
  1697  000C4E  0100               	movlb	0	; () banked
  1698  000C50  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1699  000C52  0100               	movlb	0	; () banked
  1700  000C54  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1701  000C56  B4D8               	btfsc	status,2,c
  1702  000C58  D009               	goto	l8099
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;State_Mchn.c: 169: {
  1706                           ;State_Mchn.c: 170: SETxAPIxVAL(40, 9);
  1707  000C5A  0E00               	movlw	0
  1708  000C5C  0100               	movlb	0	; () banked
  1709  000C5E  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1710  000C60  0E09               	movlw	9
  1711  000C62  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1712  000C64  0E28               	movlw	40
  1713  000C66  EC5C  F01D         	call	_SETxAPIxVAL
  1714  000C6A  D012               	goto	l8103
  1715  000C6C                     l8099:
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;State_Mchn.c: 173: }
  1719                           ;State_Mchn.c: 174: if(GETxAPIxVAL(39) > 0 && GETxAPIxVAL(40) > 0){
  1720  000C6C  0E27               	movlw	39
  1721  000C6E  EC69  F01E         	call	_GETxAPIxVAL
  1722  000C72  0100               	movlb	0	; () banked
  1723  000C74  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1724  000C76  0100               	movlb	0	; () banked
  1725  000C78  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1726  000C7A  B4D8               	btfsc	status,2,c
  1727  000C7C  D00B               	goto	l8105
  1728                           
  1729                           ; BSR set to: 0
  1730  000C7E  0E28               	movlw	40
  1731  000C80  EC69  F01E         	call	_GETxAPIxVAL
  1732  000C84  0100               	movlb	0	; () banked
  1733  000C86  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1734  000C88  0100               	movlb	0	; () banked
  1735  000C8A  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1736  000C8C  B4D8               	btfsc	status,2,c
  1737  000C8E  D002               	goto	l8105
  1738  000C90                     l8103:
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;State_Mchn.c: 175: Switch_Init = 4;
  1742  000C90  0E04               	movlw	4
  1743  000C92  D6D8               	goto	L1
  1744  000C94                     l8105:
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;State_Mchn.c: 177: }
  1748                           ;State_Mchn.c: 178: Green_Led(2);
  1749  000C94  0E02               	movlw	2
  1750  000C96  EC45  F01C         	call	_Green_Led
  1751                           
  1752                           ;State_Mchn.c: 179: Switch_Init = 3;
  1753  000C9A  0E03               	movlw	3
  1754  000C9C  D6D3               	goto	L1
  1755  000C9E                     l8109:
  1756                           
  1757                           ; BSR set to: 0
  1758  000C9E  0E23               	movlw	35
  1759  000CA0  EC69  F01E         	call	_GETxAPIxVAL
  1760  000CA4  0100               	movlb	0	; () banked
  1761  000CA6  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1762  000CA8  0100               	movlb	0	; () banked
  1763  000CAA  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1764  000CAC  A4D8               	btfss	status,2,c
  1765  000CAE  D070               	goto	l8133
  1766                           
  1767                           ; BSR set to: 0
  1768  000CB0  0E24               	movlw	36
  1769  000CB2  EC69  F01E         	call	_GETxAPIxVAL
  1770  000CB6  0100               	movlb	0	; () banked
  1771  000CB8  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1772  000CBA  0100               	movlb	0	; () banked
  1773  000CBC  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1774  000CBE  A4D8               	btfss	status,2,c
  1775  000CC0  D067               	goto	l8133
  1776                           
  1777                           ; BSR set to: 0
  1778  000CC2  0E25               	movlw	37
  1779  000CC4  EC69  F01E         	call	_GETxAPIxVAL
  1780  000CC8  0100               	movlb	0	; () banked
  1781  000CCA  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1782  000CCC  0100               	movlb	0	; () banked
  1783  000CCE  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1784  000CD0  A4D8               	btfss	status,2,c
  1785  000CD2  D05E               	goto	l8133
  1786                           
  1787                           ; BSR set to: 0
  1788  000CD4  0E26               	movlw	38
  1789  000CD6  EC69  F01E         	call	_GETxAPIxVAL
  1790  000CDA  0100               	movlb	0	; () banked
  1791  000CDC  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1792  000CDE  0100               	movlb	0	; () banked
  1793  000CE0  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1794  000CE2  A4D8               	btfss	status,2,c
  1795  000CE4  D055               	goto	l8133
  1796                           
  1797                           ; BSR set to: 0
  1798  000CE6  0E22               	movlw	34
  1799  000CE8  EC69  F01E         	call	_GETxAPIxVAL
  1800  000CEC  0100               	movlb	0	; () banked
  1801  000CEE  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1802  000CF0  0100               	movlb	0	; () banked
  1803  000CF2  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1804  000CF4  A4D8               	btfss	status,2,c
  1805  000CF6  D04C               	goto	l8133
  1806                           
  1807                           ; BSR set to: 0
  1808  000CF8  0E20               	movlw	32
  1809  000CFA  EC69  F01E         	call	_GETxAPIxVAL
  1810  000CFE  0100               	movlb	0	; () banked
  1811  000D00  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1812  000D02  0100               	movlb	0	; () banked
  1813  000D04  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1814  000D06  A4D8               	btfss	status,2,c
  1815  000D08  D043               	goto	l8133
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;State_Mchn.c: 183: {
  1819                           ;State_Mchn.c: 184: if(GETxAPIxVAL(39) == GETxAPIxVAL(40))
  1820  000D0A  0E27               	movlw	39
  1821  000D0C  EC69  F01E         	call	_GETxAPIxVAL
  1822  000D10  C090  F0BB         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  1823  000D14  C091  F0BC         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  1824  000D18  0E28               	movlw	40
  1825  000D1A  EC69  F01E         	call	_GETxAPIxVAL
  1826  000D1E  0100               	movlb	0	; () banked
  1827  000D20  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1828  000D22  0100               	movlb	0	; () banked
  1829  000D24  19BB               	xorwf	??_Update_StateMchn& (0+255),w,b
  1830  000D26  E11C               	bnz	l8129
  1831  000D28  0100               	movlb	0	; () banked
  1832  000D2A  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1833  000D2C  0100               	movlb	0	; () banked
  1834  000D2E  19BC               	xorwf	(??_Update_StateMchn+1)& (0+255),w,b
  1835  000D30  A4D8               	btfss	status,2,c
  1836  000D32  D016               	goto	l8129
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;State_Mchn.c: 185: {
  1840                           ;State_Mchn.c: 186: SETxAPIxVAL(40, 0);
  1841  000D34  0E00               	movlw	0
  1842  000D36  0100               	movlb	0	; () banked
  1843  000D38  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1844  000D3A  0E00               	movlw	0
  1845  000D3C  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1846  000D3E  0E28               	movlw	40
  1847  000D40  EC5C  F01D         	call	_SETxAPIxVAL
  1848                           
  1849                           ;State_Mchn.c: 187: SETxAPIxVAL(39, 0);
  1850  000D44  0E00               	movlw	0
  1851  000D46  0100               	movlb	0	; () banked
  1852  000D48  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1853  000D4A  0E00               	movlw	0
  1854  000D4C  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1855  000D4E  0E27               	movlw	39
  1856  000D50  EC5C  F01D         	call	_SETxAPIxVAL
  1857                           
  1858                           ;State_Mchn.c: 188: Red_Led(1);
  1859  000D54  0E01               	movlw	1
  1860  000D56  EC05  F01C         	call	_Red_Led
  1861                           
  1862                           ;State_Mchn.c: 189: Switch_Init = 1;
  1863  000D5A  0E01               	movlw	1
  1864  000D5C  0100               	movlb	0	; () banked
  1865  000D5E  6F7E               	movwf	_Switch_Init& (0+255),b
  1866  000D60                     l8129:
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;State_Mchn.c: 191: }
  1870                           ;State_Mchn.c: 192: if(GETxAPIxVAL(39) != GETxAPIxVAL(40))
  1871  000D60  0E27               	movlw	39
  1872  000D62  EC69  F01E         	call	_GETxAPIxVAL
  1873  000D66  C090  F0BB         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  1874  000D6A  C091  F0BC         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  1875  000D6E  0E28               	movlw	40
  1876  000D70  EC69  F01E         	call	_GETxAPIxVAL
  1877  000D74  0100               	movlb	0	; () banked
  1878  000D76  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1879  000D78  0100               	movlb	0	; () banked
  1880  000D7A  19BB               	xorwf	??_Update_StateMchn& (0+255),w,b
  1881  000D7C  E106               	bnz	u8320
  1882  000D7E  0100               	movlb	0	; () banked
  1883  000D80  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1884  000D82  0100               	movlb	0	; () banked
  1885  000D84  19BC               	xorwf	(??_Update_StateMchn+1)& (0+255),w,b
  1886  000D86  B4D8               	btfsc	status,2,c
  1887  000D88  D003               	goto	l8133
  1888  000D8A                     u8320:
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;State_Mchn.c: 193: {
  1892                           ;State_Mchn.c: 194: Switch_Init = 5;
  1893  000D8A  0E05               	movlw	5
  1894  000D8C  0100               	movlb	0	; () banked
  1895  000D8E  6F7E               	movwf	_Switch_Init& (0+255),b
  1896  000D90                     l8133:
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;State_Mchn.c: 195: }
  1900                           ;State_Mchn.c: 196: }
  1901                           ;State_Mchn.c: 197: Green_Led(2);
  1902  000D90  0E02               	movlw	2
  1903  000D92  EC45  F01C         	call	_Green_Led
  1904                           
  1905                           ;State_Mchn.c: 198: break;
  1906  000D96  D338               	goto	l8471
  1907  000D98                     l8135:
  1908  000D98  0E28               	movlw	40
  1909  000D9A  EC69  F01E         	call	_GETxAPIxVAL
  1910  000D9E  0E09               	movlw	9
  1911  000DA0  0100               	movlb	0	; () banked
  1912  000DA2  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  1913  000DA4  0100               	movlb	0	; () banked
  1914  000DA6  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1915  000DA8  B4D8               	btfsc	status,2,c
  1916  000DAA  D003               	goto	l8139
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;State_Mchn.c: 201: {
  1920                           ;State_Mchn.c: 202: Switch_Init = 6;
  1921  000DAC  0E06               	movlw	6
  1922  000DAE  0100               	movlb	0	; () banked
  1923  000DB0  6F7E               	movwf	_Switch_Init& (0+255),b
  1924  000DB2                     l8139:
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;State_Mchn.c: 203: }
  1928                           ;State_Mchn.c: 204: if(GETxAPIxVAL(40) == 9)
  1929  000DB2  0E28               	movlw	40
  1930  000DB4  EC69  F01E         	call	_GETxAPIxVAL
  1931  000DB8  0E09               	movlw	9
  1932  000DBA  0100               	movlb	0	; () banked
  1933  000DBC  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  1934  000DBE  0100               	movlb	0	; () banked
  1935  000DC0  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1936  000DC2  A4D8               	btfss	status,2,c
  1937  000DC4  D321               	goto	l8471
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;State_Mchn.c: 205: {
  1941                           ;State_Mchn.c: 206: Switch_Init = 9;
  1942  000DC6  0E09               	movlw	9
  1943  000DC8  D63D               	goto	L1
  1944  000DCA                     l8143:
  1945                           
  1946                           ; BSR set to: 0
  1947  000DCA  0E08               	movlw	8
  1948  000DCC  D63B               	goto	L1
  1949  000DCE                     l8145:
  1950                           
  1951                           ; BSR set to: 0
  1952  000DCE  0E20               	movlw	32
  1953  000DD0  EC69  F01E         	call	_GETxAPIxVAL
  1954  000DD4  0100               	movlb	0	; () banked
  1955  000DD6  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1956  000DD8  0100               	movlb	0	; () banked
  1957  000DDA  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1958  000DDC  A4D8               	btfss	status,2,c
  1959  000DDE  D009               	goto	l8149
  1960                           
  1961                           ; BSR set to: 0
  1962  000DE0  0E46               	movlw	70
  1963  000DE2  EC69  F01E         	call	_GETxAPIxVAL
  1964  000DE6  0100               	movlb	0	; () banked
  1965  000DE8  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  1966  000DEA  0100               	movlb	0	; () banked
  1967  000DEC  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1968  000DEE  B4D8               	btfsc	status,2,c
  1969  000DF0  D011               	goto	l8153
  1970  000DF2                     l8149:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;State_Mchn.c: 214: {
  1974                           ;State_Mchn.c: 215: Switch_Main = 1;
  1975  000DF2  0E01               	movlw	1
  1976  000DF4  0100               	movlb	0	; () banked
  1977  000DF6  6F80               	movwf	_Switch_Main& (0+255),b
  1978                           
  1979                           ;State_Mchn.c: 216: Switch_Init = 0;
  1980  000DF8  0E00               	movlw	0
  1981  000DFA  0100               	movlb	0	; () banked
  1982  000DFC  6F7E               	movwf	_Switch_Init& (0+255),b
  1983                           
  1984                           ;State_Mchn.c: 217: Stop_Program = 0;
  1985  000DFE  0E00               	movlw	0
  1986  000E00  0100               	movlb	0	; () banked
  1987  000E02  6F7D               	movwf	_Stop_Program& (0+255),b
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;State_Mchn.c: 218: SETxAPIxVAL(70, 0);
  1991  000E04  0E00               	movlw	0
  1992  000E06  0100               	movlb	0	; () banked
  1993  000E08  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1994  000E0A  0E00               	movlw	0
  1995  000E0C  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  1996  000E0E  0E46               	movlw	70
  1997  000E10  EC5C  F01D         	call	_SETxAPIxVAL
  1998  000E14                     l8153:
  1999                           
  2000                           ;State_Mchn.c: 219: }
  2001                           ;State_Mchn.c: 220: Green_Led(3);
  2002  000E14  0E03               	movlw	3
  2003  000E16  EC45  F01C         	call	_Green_Led
  2004                           
  2005                           ;State_Mchn.c: 221: Red_Led(0);
  2006  000E1A  0E00               	movlw	0
  2007  000E1C  EC05  F01C         	call	_Red_Led
  2008                           
  2009                           ;State_Mchn.c: 222: break;
  2010  000E20  D2F3               	goto	l8471
  2011  000E22                     l8157:
  2012  000E22  0E27               	movlw	39
  2013  000E24  EC69  F01E         	call	_GETxAPIxVAL
  2014  000E28  0E05               	movlw	5
  2015  000E2A  0100               	movlb	0	; () banked
  2016  000E2C  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2017  000E2E  0100               	movlb	0	; () banked
  2018  000E30  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2019  000E32  B4D8               	btfsc	status,2,c
  2020  000E34  D015               	goto	l8175
  2021  000E36  D02B               	goto	l8177
  2022  000E38                     l8161:
  2023                           
  2024                           ; BSR set to: 0
  2025  000E38  0E01               	movlw	1
  2026  000E3A  D005               	goto	L4
  2027  000E3C                     l8163:
  2028                           
  2029                           ; BSR set to: 0
  2030  000E3C  0E05               	movlw	5
  2031  000E3E  D003               	goto	L4
  2032  000E40                     l8165:
  2033                           
  2034                           ; BSR set to: 0
  2035  000E40  0E02               	movlw	2
  2036  000E42  D001               	goto	L4
  2037  000E44                     l8167:
  2038                           
  2039                           ; BSR set to: 0
  2040  000E44  0E03               	movlw	3
  2041  000E46                     L4:
  2042  000E46  0100               	movlb	0	; () banked
  2043  000E48  6F82               	movwf	_Switch_Program& (0+255),b
  2044                           
  2045                           ;State_Mchn.c: 238: Switch_Init = 7;
  2046  000E4A  0E07               	movlw	7
  2047  000E4C  0100               	movlb	0	; () banked
  2048  000E4E  6F7E               	movwf	_Switch_Init& (0+255),b
  2049                           
  2050                           ;State_Mchn.c: 239: break;
  2051  000E50  D01E               	goto	l8177
  2052  000E52                     l8169:
  2053                           
  2054                           ; BSR set to: 0
  2055  000E52  0E08               	movlw	8
  2056  000E54  0100               	movlb	0	; () banked
  2057  000E56  6F7E               	movwf	_Switch_Init& (0+255),b
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;State_Mchn.c: 241: Red_Led(1);
  2061  000E58  0E01               	movlw	1
  2062  000E5A  EC05  F01C         	call	_Red_Led
  2063                           
  2064                           ;State_Mchn.c: 243: }
  2065                           
  2066                           ;State_Mchn.c: 242: break;
  2067  000E5E  D017               	goto	l8177
  2068  000E60                     l8175:
  2069  000E60  0E28               	movlw	40
  2070  000E62  EC69  F01E         	call	_GETxAPIxVAL
  2071                           
  2072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2073                           ; Switch size 1, requested type "space"
  2074                           ; Number of cases is 1, Range of values is 0 to 0
  2075                           ; switch strategies available:
  2076                           ; Name         Instructions Cycles
  2077                           ; simple_byte            4     3 (average)
  2078                           ;	Chosen strategy is simple_byte
  2079  000E66  0100               	movlb	0	; () banked
  2080  000E68  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2081  000E6A  0A00               	xorlw	0	; case 0
  2082  000E6C  A4D8               	btfss	status,2,c
  2083  000E6E  D7F1               	goto	l8169
  2084                           
  2085                           ; BSR set to: 0
  2086                           ; Switch size 1, requested type "space"
  2087                           ; Number of cases is 4, Range of values is 1 to 4
  2088                           ; switch strategies available:
  2089                           ; Name         Instructions Cycles
  2090                           ; simple_byte           13     7 (average)
  2091                           ;	Chosen strategy is simple_byte
  2092  000E70  0100               	movlb	0	; () banked
  2093  000E72  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  2094  000E74  0A01               	xorlw	1	; case 1
  2095  000E76  B4D8               	btfsc	status,2,c
  2096  000E78  D7DF               	goto	l8161
  2097  000E7A  0A03               	xorlw	3	; case 2
  2098  000E7C  B4D8               	btfsc	status,2,c
  2099  000E7E  D7DE               	goto	l8163
  2100  000E80  0A01               	xorlw	1	; case 3
  2101  000E82  B4D8               	btfsc	status,2,c
  2102  000E84  D7DD               	goto	l8165
  2103  000E86  0A07               	xorlw	7	; case 4
  2104  000E88  B4D8               	btfsc	status,2,c
  2105  000E8A  D7DC               	goto	l8167
  2106  000E8C  D7E2               	goto	l8169
  2107  000E8E                     l8177:
  2108                           
  2109                           ;State_Mchn.c: 244: }
  2110                           ;State_Mchn.c: 245: if(GETxAPIxVAL(40) == 5)
  2111  000E8E  0E28               	movlw	40
  2112  000E90  EC69  F01E         	call	_GETxAPIxVAL
  2113  000E94  0E05               	movlw	5
  2114  000E96  0100               	movlb	0	; () banked
  2115  000E98  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2116  000E9A  0100               	movlb	0	; () banked
  2117  000E9C  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2118  000E9E  B4D8               	btfsc	status,2,c
  2119  000EA0  D015               	goto	l8195
  2120  000EA2  D02B               	goto	l8197
  2121  000EA4                     l8181:
  2122                           
  2123                           ; BSR set to: 0
  2124  000EA4  0E01               	movlw	1
  2125  000EA6  D005               	goto	L7
  2126  000EA8                     l8183:
  2127                           
  2128                           ; BSR set to: 0
  2129  000EA8  0E05               	movlw	5
  2130  000EAA  D003               	goto	L7
  2131  000EAC                     l8185:
  2132                           
  2133                           ; BSR set to: 0
  2134  000EAC  0E02               	movlw	2
  2135  000EAE  D001               	goto	L7
  2136  000EB0                     l8187:
  2137                           
  2138                           ; BSR set to: 0
  2139  000EB0  0E03               	movlw	3
  2140  000EB2                     L7:
  2141  000EB2  0100               	movlb	0	; () banked
  2142  000EB4  6F82               	movwf	_Switch_Program& (0+255),b
  2143                           
  2144                           ;State_Mchn.c: 259: Switch_Init = 7;
  2145  000EB6  0E07               	movlw	7
  2146  000EB8  0100               	movlb	0	; () banked
  2147  000EBA  6F7E               	movwf	_Switch_Init& (0+255),b
  2148                           
  2149                           ;State_Mchn.c: 260: break;
  2150  000EBC  D01E               	goto	l8197
  2151  000EBE                     l8189:
  2152                           
  2153                           ; BSR set to: 0
  2154  000EBE  0E08               	movlw	8
  2155  000EC0  0100               	movlb	0	; () banked
  2156  000EC2  6F7E               	movwf	_Switch_Init& (0+255),b
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;State_Mchn.c: 262: Red_Led(1);
  2160  000EC4  0E01               	movlw	1
  2161  000EC6  EC05  F01C         	call	_Red_Led
  2162                           
  2163                           ;State_Mchn.c: 264: }
  2164                           
  2165                           ;State_Mchn.c: 263: break;
  2166  000ECA  D017               	goto	l8197
  2167  000ECC                     l8195:
  2168  000ECC  0E27               	movlw	39
  2169  000ECE  EC69  F01E         	call	_GETxAPIxVAL
  2170                           
  2171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2172                           ; Switch size 1, requested type "space"
  2173                           ; Number of cases is 1, Range of values is 0 to 0
  2174                           ; switch strategies available:
  2175                           ; Name         Instructions Cycles
  2176                           ; simple_byte            4     3 (average)
  2177                           ;	Chosen strategy is simple_byte
  2178  000ED2  0100               	movlb	0	; () banked
  2179  000ED4  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2180  000ED6  0A00               	xorlw	0	; case 0
  2181  000ED8  A4D8               	btfss	status,2,c
  2182  000EDA  D7F1               	goto	l8189
  2183                           
  2184                           ; BSR set to: 0
  2185                           ; Switch size 1, requested type "space"
  2186                           ; Number of cases is 4, Range of values is 1 to 4
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte           13     7 (average)
  2190                           ;	Chosen strategy is simple_byte
  2191  000EDC  0100               	movlb	0	; () banked
  2192  000EDE  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  2193  000EE0  0A01               	xorlw	1	; case 1
  2194  000EE2  B4D8               	btfsc	status,2,c
  2195  000EE4  D7DF               	goto	l8181
  2196  000EE6  0A03               	xorlw	3	; case 2
  2197  000EE8  B4D8               	btfsc	status,2,c
  2198  000EEA  D7DE               	goto	l8183
  2199  000EEC  0A01               	xorlw	1	; case 3
  2200  000EEE  B4D8               	btfsc	status,2,c
  2201  000EF0  D7DD               	goto	l8185
  2202  000EF2  0A07               	xorlw	7	; case 4
  2203  000EF4  B4D8               	btfsc	status,2,c
  2204  000EF6  D7DC               	goto	l8187
  2205  000EF8  D7E2               	goto	l8189
  2206  000EFA                     l8197:
  2207                           
  2208                           ;State_Mchn.c: 265: }
  2209                           ;State_Mchn.c: 266: if((GETxAPIxVAL(39) != 5) && (GETxAPIxVAL(40) != 5))
  2210  000EFA  0E27               	movlw	39
  2211  000EFC  EC69  F01E         	call	_GETxAPIxVAL
  2212  000F00  0E05               	movlw	5
  2213  000F02  0100               	movlb	0	; () banked
  2214  000F04  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2215  000F06  0100               	movlb	0	; () banked
  2216  000F08  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2217  000F0A  B4D8               	btfsc	status,2,c
  2218  000F0C  D27D               	goto	l8471
  2219                           
  2220                           ; BSR set to: 0
  2221  000F0E  0E28               	movlw	40
  2222  000F10  EC69  F01E         	call	_GETxAPIxVAL
  2223  000F14  0E05               	movlw	5
  2224  000F16  0100               	movlb	0	; () banked
  2225  000F18  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2226  000F1A  0100               	movlb	0	; () banked
  2227  000F1C  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2228  000F1E  A4D8               	btfss	status,2,c
  2229  000F20  D091               	goto	l8273
  2230  000F22  D272               	goto	l8471
  2231  000F24                     l8205:
  2232                           
  2233                           ; BSR set to: 0
  2234  000F24  0E01               	movlw	1
  2235  000F26  D063               	goto	L18
  2236  000F28                     l8207:
  2237                           
  2238                           ; BSR set to: 0
  2239  000F28  0E02               	movlw	2
  2240  000F2A  D061               	goto	L18
  2241  000F2C                     l8209:
  2242                           
  2243                           ; BSR set to: 0
  2244  000F2C  0E04               	movlw	4
  2245  000F2E  D05F               	goto	L18
  2246  000F30                     l8211:
  2247                           
  2248                           ; BSR set to: 0
  2249  000F30  0E08               	movlw	8
  2250  000F32  0100               	movlb	0	; () banked
  2251  000F34  6F7E               	movwf	_Switch_Init& (0+255),b
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;State_Mchn.c: 284: Red_Led(1);
  2255  000F36  0E01               	movlw	1
  2256  000F38  EC05  F01C         	call	_Red_Led
  2257                           
  2258                           ;State_Mchn.c: 286: }
  2259                           
  2260                           ;State_Mchn.c: 285: break;
  2261  000F3C  D265               	goto	l8471
  2262  000F3E                     l8217:
  2263  000F3E  0E28               	movlw	40
  2264  000F40  EC69  F01E         	call	_GETxAPIxVAL
  2265                           
  2266                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2267                           ; Switch size 1, requested type "space"
  2268                           ; Number of cases is 1, Range of values is 0 to 0
  2269                           ; switch strategies available:
  2270                           ; Name         Instructions Cycles
  2271                           ; simple_byte            4     3 (average)
  2272                           ;	Chosen strategy is simple_byte
  2273  000F44  0100               	movlb	0	; () banked
  2274  000F46  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2275  000F48  0A00               	xorlw	0	; case 0
  2276  000F4A  A4D8               	btfss	status,2,c
  2277  000F4C  D7F1               	goto	l8211
  2278                           
  2279                           ; BSR set to: 0
  2280                           ; Switch size 1, requested type "space"
  2281                           ; Number of cases is 4, Range of values is 1 to 4
  2282                           ; switch strategies available:
  2283                           ; Name         Instructions Cycles
  2284                           ; simple_byte           13     7 (average)
  2285                           ;	Chosen strategy is simple_byte
  2286  000F4E  0100               	movlb	0	; () banked
  2287  000F50  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  2288  000F52  0A01               	xorlw	1	; case 1
  2289  000F54  B4D8               	btfsc	status,2,c
  2290  000F56  D04F               	goto	l8257
  2291  000F58  0A03               	xorlw	3	; case 2
  2292  000F5A  B4D8               	btfsc	status,2,c
  2293  000F5C  D7E3               	goto	l8205
  2294  000F5E  0A01               	xorlw	1	; case 3
  2295  000F60  B4D8               	btfsc	status,2,c
  2296  000F62  D7E2               	goto	l8207
  2297  000F64  0A07               	xorlw	7	; case 4
  2298  000F66  B4D8               	btfsc	status,2,c
  2299  000F68  D7E1               	goto	l8209
  2300  000F6A  D7E2               	goto	l8211
  2301  000F6C                     l8223:
  2302                           
  2303                           ; BSR set to: 0
  2304  000F6C  0E00               	movlw	0
  2305  000F6E  D03F               	goto	L18
  2306  000F70                     l8227:
  2307                           
  2308                           ; BSR set to: 0
  2309  000F70  0E08               	movlw	8
  2310  000F72  0100               	movlb	0	; () banked
  2311  000F74  6F7E               	movwf	_Switch_Init& (0+255),b
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;State_Mchn.c: 302: Red_Led(1);
  2315  000F76  0E01               	movlw	1
  2316  000F78  EC05  F01C         	call	_Red_Led
  2317                           
  2318                           ;State_Mchn.c: 304: }
  2319                           
  2320                           ;State_Mchn.c: 303: break;
  2321  000F7C  D245               	goto	l8471
  2322  000F7E                     l8233:
  2323  000F7E  0E28               	movlw	40
  2324  000F80  EC69  F01E         	call	_GETxAPIxVAL
  2325                           
  2326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2327                           ; Switch size 1, requested type "space"
  2328                           ; Number of cases is 1, Range of values is 0 to 0
  2329                           ; switch strategies available:
  2330                           ; Name         Instructions Cycles
  2331                           ; simple_byte            4     3 (average)
  2332                           ;	Chosen strategy is simple_byte
  2333  000F84  0100               	movlb	0	; () banked
  2334  000F86  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2335  000F88  0A00               	xorlw	0	; case 0
  2336  000F8A  A4D8               	btfss	status,2,c
  2337  000F8C  D7F1               	goto	l8227
  2338                           
  2339                           ; BSR set to: 0
  2340                           ; Switch size 1, requested type "space"
  2341                           ; Number of cases is 4, Range of values is 1 to 4
  2342                           ; switch strategies available:
  2343                           ; Name         Instructions Cycles
  2344                           ; simple_byte           13     7 (average)
  2345                           ;	Chosen strategy is simple_byte
  2346  000F8E  0100               	movlb	0	; () banked
  2347  000F90  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  2348  000F92  0A01               	xorlw	1	; case 1
  2349  000F94  B4D8               	btfsc	status,2,c
  2350  000F96  D7C6               	goto	l8205
  2351  000F98  0A03               	xorlw	3	; case 2
  2352  000F9A  B4D8               	btfsc	status,2,c
  2353  000F9C  D02C               	goto	l8257
  2354  000F9E  0A01               	xorlw	1	; case 3
  2355  000FA0  B4D8               	btfsc	status,2,c
  2356  000FA2  D7E4               	goto	l8223
  2357  000FA4  0A07               	xorlw	7	; case 4
  2358  000FA6  B4D8               	btfsc	status,2,c
  2359  000FA8  D01F               	goto	l8253
  2360  000FAA  D7E2               	goto	l8227
  2361  000FAC                     l8243:
  2362                           
  2363                           ; BSR set to: 0
  2364  000FAC  0E08               	movlw	8
  2365  000FAE  0100               	movlb	0	; () banked
  2366  000FB0  6F7E               	movwf	_Switch_Init& (0+255),b
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;State_Mchn.c: 320: Red_Led(1);
  2370  000FB2  0E01               	movlw	1
  2371  000FB4  EC05  F01C         	call	_Red_Led
  2372                           
  2373                           ;State_Mchn.c: 322: }
  2374                           
  2375                           ;State_Mchn.c: 321: break;
  2376  000FB8  D227               	goto	l8471
  2377  000FBA                     l8249:
  2378  000FBA  0E28               	movlw	40
  2379  000FBC  EC69  F01E         	call	_GETxAPIxVAL
  2380                           
  2381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2382                           ; Switch size 1, requested type "space"
  2383                           ; Number of cases is 1, Range of values is 0 to 0
  2384                           ; switch strategies available:
  2385                           ; Name         Instructions Cycles
  2386                           ; simple_byte            4     3 (average)
  2387                           ;	Chosen strategy is simple_byte
  2388  000FC0  0100               	movlb	0	; () banked
  2389  000FC2  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2390  000FC4  0A00               	xorlw	0	; case 0
  2391  000FC6  A4D8               	btfss	status,2,c
  2392  000FC8  D7F1               	goto	l8243
  2393                           
  2394                           ; BSR set to: 0
  2395                           ; Switch size 1, requested type "space"
  2396                           ; Number of cases is 4, Range of values is 1 to 4
  2397                           ; switch strategies available:
  2398                           ; Name         Instructions Cycles
  2399                           ; simple_byte           13     7 (average)
  2400                           ;	Chosen strategy is simple_byte
  2401  000FCA  0100               	movlb	0	; () banked
  2402  000FCC  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  2403  000FCE  0A01               	xorlw	1	; case 1
  2404  000FD0  B4D8               	btfsc	status,2,c
  2405  000FD2  D7AA               	goto	l8207
  2406  000FD4  0A03               	xorlw	3	; case 2
  2407  000FD6  B4D8               	btfsc	status,2,c
  2408  000FD8  D7C9               	goto	l8223
  2409  000FDA  0A01               	xorlw	1	; case 3
  2410  000FDC  B4D8               	btfsc	status,2,c
  2411  000FDE  D00B               	goto	l8257
  2412  000FE0  0A07               	xorlw	7	; case 4
  2413  000FE2  B4D8               	btfsc	status,2,c
  2414  000FE4  D003               	goto	l8255
  2415  000FE6  D7E2               	goto	l8243
  2416  000FE8                     l8253:
  2417                           
  2418                           ; BSR set to: 0
  2419  000FE8  0E06               	movlw	6
  2420  000FEA  D001               	goto	L18
  2421  000FEC                     l8255:
  2422                           
  2423                           ; BSR set to: 0
  2424  000FEC  0E03               	movlw	3
  2425  000FEE                     L18:
  2426  000FEE  0100               	movlb	0	; () banked
  2427  000FF0  6F82               	movwf	_Switch_Program& (0+255),b
  2428                           
  2429                           ;State_Mchn.c: 333: Switch_Init = 7;
  2430  000FF2  0E07               	movlw	7
  2431  000FF4  D527               	goto	L1
  2432  000FF6                     l8257:
  2433                           
  2434                           ; BSR set to: 0
  2435  000FF6  0E00               	movlw	0
  2436  000FF8  D525               	goto	L1
  2437  000FFA                     l8259:
  2438                           
  2439                           ; BSR set to: 0
  2440  000FFA  0E08               	movlw	8
  2441  000FFC  0100               	movlb	0	; () banked
  2442  000FFE  6F7E               	movwf	_Switch_Init& (0+255),b
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;State_Mchn.c: 338: Red_Led(1);
  2446  001000  0E01               	movlw	1
  2447  001002  EC05  F01C         	call	_Red_Led
  2448                           
  2449                           ;State_Mchn.c: 340: }
  2450                           
  2451                           ;State_Mchn.c: 339: break;
  2452  001006  D200               	goto	l8471
  2453  001008                     l8265:
  2454  001008  0E28               	movlw	40
  2455  00100A  EC69  F01E         	call	_GETxAPIxVAL
  2456                           
  2457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2458                           ; Switch size 1, requested type "space"
  2459                           ; Number of cases is 1, Range of values is 0 to 0
  2460                           ; switch strategies available:
  2461                           ; Name         Instructions Cycles
  2462                           ; simple_byte            4     3 (average)
  2463                           ;	Chosen strategy is simple_byte
  2464  00100E  0100               	movlb	0	; () banked
  2465  001010  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2466  001012  0A00               	xorlw	0	; case 0
  2467  001014  A4D8               	btfss	status,2,c
  2468  001016  D7F1               	goto	l8259
  2469                           
  2470                           ; BSR set to: 0
  2471                           ; Switch size 1, requested type "space"
  2472                           ; Number of cases is 4, Range of values is 1 to 4
  2473                           ; switch strategies available:
  2474                           ; Name         Instructions Cycles
  2475                           ; simple_byte           13     7 (average)
  2476                           ;	Chosen strategy is simple_byte
  2477  001018  0100               	movlb	0	; () banked
  2478  00101A  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  2479  00101C  0A01               	xorlw	1	; case 1
  2480  00101E  B4D8               	btfsc	status,2,c
  2481  001020  D785               	goto	l8209
  2482  001022  0A03               	xorlw	3	; case 2
  2483  001024  B4D8               	btfsc	status,2,c
  2484  001026  D7E0               	goto	l8253
  2485  001028  0A01               	xorlw	1	; case 3
  2486  00102A  B4D8               	btfsc	status,2,c
  2487  00102C  D7DF               	goto	l8255
  2488  00102E  0A07               	xorlw	7	; case 4
  2489  001030  B4D8               	btfsc	status,2,c
  2490  001032  D7E1               	goto	l8257
  2491  001034  D7E2               	goto	l8259
  2492  001036                     l8267:
  2493                           
  2494                           ; BSR set to: 0
  2495  001036  0E08               	movlw	8
  2496  001038  0100               	movlb	0	; () banked
  2497  00103A  6F7E               	movwf	_Switch_Init& (0+255),b
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;State_Mchn.c: 343: Red_Led(1);
  2501  00103C  0E01               	movlw	1
  2502  00103E  EC05  F01C         	call	_Red_Led
  2503                           
  2504                           ;State_Mchn.c: 345: }
  2505                           
  2506                           ;State_Mchn.c: 344: break;
  2507  001042  D1E2               	goto	l8471
  2508  001044                     l8273:
  2509  001044  0E27               	movlw	39
  2510  001046  EC69  F01E         	call	_GETxAPIxVAL
  2511                           
  2512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2513                           ; Switch size 1, requested type "space"
  2514                           ; Number of cases is 1, Range of values is 0 to 0
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte            4     3 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519  00104A  0100               	movlb	0	; () banked
  2520  00104C  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2521  00104E  0A00               	xorlw	0	; case 0
  2522  001050  A4D8               	btfss	status,2,c
  2523  001052  D7F1               	goto	l8267
  2524                           
  2525                           ; BSR set to: 0
  2526                           ; Switch size 1, requested type "space"
  2527                           ; Number of cases is 4, Range of values is 1 to 4
  2528                           ; switch strategies available:
  2529                           ; Name         Instructions Cycles
  2530                           ; simple_byte           13     7 (average)
  2531                           ;	Chosen strategy is simple_byte
  2532  001054  0100               	movlb	0	; () banked
  2533  001056  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  2534  001058  0A01               	xorlw	1	; case 1
  2535  00105A  B4D8               	btfsc	status,2,c
  2536  00105C  D770               	goto	l8217
  2537  00105E  0A03               	xorlw	3	; case 2
  2538  001060  B4D8               	btfsc	status,2,c
  2539  001062  D78D               	goto	l8233
  2540  001064  0A01               	xorlw	1	; case 3
  2541  001066  B4D8               	btfsc	status,2,c
  2542  001068  D7A8               	goto	l8249
  2543  00106A  0A07               	xorlw	7	; case 4
  2544  00106C  B4D8               	btfsc	status,2,c
  2545  00106E  D7CC               	goto	l8265
  2546  001070  D7E2               	goto	l8267
  2547  001072                     l8275:
  2548                           
  2549                           ; BSR set to: 0
  2550  001072  0E0B               	movlw	11
  2551  001074  D4E7               	goto	L1
  2552  001076                     l8277:
  2553                           
  2554                           ; BSR set to: 0
  2555  001076  0E20               	movlw	32
  2556  001078  EC69  F01E         	call	_GETxAPIxVAL
  2557  00107C  0100               	movlb	0	; () banked
  2558  00107E  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  2559  001080  0100               	movlb	0	; () banked
  2560  001082  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2561  001084  A4D8               	btfss	status,2,c
  2562  001086  D009               	goto	l8281
  2563                           
  2564                           ; BSR set to: 0
  2565  001088  0E46               	movlw	70
  2566  00108A  EC69  F01E         	call	_GETxAPIxVAL
  2567  00108E  0100               	movlb	0	; () banked
  2568  001090  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  2569  001092  0100               	movlb	0	; () banked
  2570  001094  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2571  001096  B4D8               	btfsc	status,2,c
  2572  001098  D009               	goto	l8283
  2573  00109A                     l8281:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;State_Mchn.c: 353: {
  2577                           ;State_Mchn.c: 354: Switch_Main = 2;
  2578  00109A  0E02               	movlw	2
  2579  00109C  0100               	movlb	0	; () banked
  2580  00109E  6F80               	movwf	_Switch_Main& (0+255),b
  2581                           
  2582                           ;State_Mchn.c: 355: Switch_Init = 0;
  2583  0010A0  0E00               	movlw	0
  2584  0010A2  0100               	movlb	0	; () banked
  2585  0010A4  6F7E               	movwf	_Switch_Init& (0+255),b
  2586                           
  2587                           ;State_Mchn.c: 356: Stop_Program = 0;
  2588  0010A6  0E00               	movlw	0
  2589  0010A8  0100               	movlb	0	; () banked
  2590  0010AA  6F7D               	movwf	_Stop_Program& (0+255),b
  2591  0010AC                     l8283:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;State_Mchn.c: 357: }
  2595                           ;State_Mchn.c: 358: Green_Led(3);
  2596  0010AC  0E03               	movlw	3
  2597  0010AE  EC45  F01C         	call	_Green_Led
  2598                           
  2599                           ;State_Mchn.c: 359: Red_Led(0);
  2600  0010B2  0E00               	movlw	0
  2601  0010B4  EC05  F01C         	call	_Red_Led
  2602                           
  2603                           ;State_Mchn.c: 360: break;
  2604  0010B8  D1A7               	goto	l8471
  2605  0010BA                     l8287:
  2606  0010BA  0E27               	movlw	39
  2607  0010BC  EC69  F01E         	call	_GETxAPIxVAL
  2608  0010C0  0E05               	movlw	5
  2609  0010C2  0100               	movlb	0	; () banked
  2610  0010C4  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2611  0010C6  0100               	movlb	0	; () banked
  2612  0010C8  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2613  0010CA  A4D8               	btfss	status,2,c
  2614  0010CC  D012               	goto	l8305
  2615  0010CE                     l8289:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;State_Mchn.c: 363: {
  2619                           ;State_Mchn.c: 364: Switch_Program = 0;
  2620  0010CE  0E00               	movlw	0
  2621  0010D0  D005               	goto	L22
  2622  0010D2                     l8291:
  2623                           
  2624                           ; BSR set to: 0
  2625  0010D2  0E01               	movlw	1
  2626  0010D4  D003               	goto	L22
  2627  0010D6                     l8293:
  2628                           
  2629                           ; BSR set to: 0
  2630  0010D6  0E03               	movlw	3
  2631  0010D8  D001               	goto	L22
  2632  0010DA                     l8297:
  2633                           
  2634                           ; BSR set to: 0
  2635  0010DA  0E02               	movlw	2
  2636  0010DC                     L22:
  2637  0010DC  0100               	movlb	0	; () banked
  2638  0010DE  6F82               	movwf	_Switch_Program& (0+255),b
  2639  0010E0  0E0A               	movlw	10
  2640  0010E2  D4B0               	goto	L1
  2641  0010E4                     l8299:
  2642                           
  2643                           ; BSR set to: 0
  2644  0010E4  0E0B               	movlw	11
  2645  0010E6  0100               	movlb	0	; () banked
  2646  0010E8  6F7E               	movwf	_Switch_Init& (0+255),b
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;State_Mchn.c: 374: Red_Led(1);
  2650  0010EA  0E01               	movlw	1
  2651  0010EC  EC05  F01C         	call	_Red_Led
  2652                           
  2653                           ;State_Mchn.c: 376: }
  2654                           
  2655                           ;State_Mchn.c: 375: break;
  2656  0010F0  D18B               	goto	l8471
  2657  0010F2                     l8305:
  2658  0010F2  0E27               	movlw	39
  2659  0010F4  EC69  F01E         	call	_GETxAPIxVAL
  2660                           
  2661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2662                           ; Switch size 1, requested type "space"
  2663                           ; Number of cases is 1, Range of values is 0 to 0
  2664                           ; switch strategies available:
  2665                           ; Name         Instructions Cycles
  2666                           ; simple_byte            4     3 (average)
  2667                           ;	Chosen strategy is simple_byte
  2668  0010F8  0100               	movlb	0	; () banked
  2669  0010FA  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2670  0010FC  0A00               	xorlw	0	; case 0
  2671  0010FE  A4D8               	btfss	status,2,c
  2672  001100  D7F1               	goto	l8299
  2673                           
  2674                           ; BSR set to: 0
  2675                           ; Switch size 1, requested type "space"
  2676                           ; Number of cases is 4, Range of values is 1 to 4
  2677                           ; switch strategies available:
  2678                           ; Name         Instructions Cycles
  2679                           ; simple_byte           13     7 (average)
  2680                           ;	Chosen strategy is simple_byte
  2681  001102  0100               	movlb	0	; () banked
  2682  001104  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  2683  001106  0A01               	xorlw	1	; case 1
  2684  001108  B4D8               	btfsc	status,2,c
  2685  00110A  D7E3               	goto	l8291
  2686  00110C  0A03               	xorlw	3	; case 2
  2687  00110E  B4D8               	btfsc	status,2,c
  2688  001110  D7E2               	goto	l8293
  2689  001112  0A01               	xorlw	1	; case 3
  2690  001114  B4D8               	btfsc	status,2,c
  2691  001116  D7DB               	goto	l8289
  2692  001118  0A07               	xorlw	7	; case 4
  2693  00111A  B4D8               	btfsc	status,2,c
  2694  00111C  D7DE               	goto	l8297
  2695  00111E  D7E2               	goto	l8299
  2696  001120                     l8307:
  2697                           
  2698                           ; BSR set to: 0
  2699  001120  0E00               	movlw	0
  2700  001122  0100               	movlb	0	; () banked
  2701  001124  6F7E               	movwf	_Switch_Init& (0+255),b
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;State_Mchn.c: 380: Red_Led(1);
  2705  001126  0E01               	movlw	1
  2706  001128  EC05  F01C         	call	_Red_Led
  2707                           
  2708                           ;State_Mchn.c: 382: }
  2709                           
  2710                           ;State_Mchn.c: 381: break;
  2711  00112C  D16D               	goto	l8471
  2712  00112E                     l8313:
  2713  00112E  0100               	movlb	0	; () banked
  2714  001130  517E               	movf	_Switch_Init& (0+255),w,b
  2715                           
  2716                           ; Switch size 1, requested type "space"
  2717                           ; Number of cases is 12, Range of values is 0 to 11
  2718                           ; switch strategies available:
  2719                           ; Name         Instructions Cycles
  2720                           ; simple_byte           37    19 (average)
  2721                           ;	Chosen strategy is simple_byte
  2722  001132  0A00               	xorlw	0	; case 0
  2723  001134  B4D8               	btfsc	status,2,c
  2724  001136  D46C               	goto	l8001
  2725  001138  0A01               	xorlw	1	; case 1
  2726  00113A  B4D8               	btfsc	status,2,c
  2727  00113C  D471               	goto	l8005
  2728  00113E  0A03               	xorlw	3	; case 2
  2729  001140  B4D8               	btfsc	status,2,c
  2730  001142  D4E7               	goto	l8045
  2731  001144  0A01               	xorlw	1	; case 3
  2732  001146  B4D8               	btfsc	status,2,c
  2733  001148  D525               	goto	l8063
  2734  00114A  0A07               	xorlw	7	; case 4
  2735  00114C  B4D8               	btfsc	status,2,c
  2736  00114E  D5A7               	goto	l8109
  2737  001150  0A01               	xorlw	1	; case 5
  2738  001152  B4D8               	btfsc	status,2,c
  2739  001154  D621               	goto	l8135
  2740  001156  0A03               	xorlw	3	; case 6
  2741  001158  B4D8               	btfsc	status,2,c
  2742  00115A  D637               	goto	l8143
  2743  00115C  0A01               	xorlw	1	; case 7
  2744  00115E  B4D8               	btfsc	status,2,c
  2745  001160  D636               	goto	l8145
  2746  001162  0A0F               	xorlw	15	; case 8
  2747  001164  B4D8               	btfsc	status,2,c
  2748  001166  D65D               	goto	l8157
  2749  001168  0A01               	xorlw	1	; case 9
  2750  00116A  B4D8               	btfsc	status,2,c
  2751  00116C  D782               	goto	l8275
  2752  00116E  0A03               	xorlw	3	; case 10
  2753  001170  B4D8               	btfsc	status,2,c
  2754  001172  D781               	goto	l8277
  2755  001174  0A01               	xorlw	1	; case 11
  2756  001176  B4D8               	btfsc	status,2,c
  2757  001178  D7A0               	goto	l8287
  2758  00117A  D7D2               	goto	l8307
  2759  00117C                     l8315:
  2760                           
  2761                           ; BSR set to: 0
  2762  00117C  0E01               	movlw	1
  2763  00117E  0100               	movlb	0	; () banked
  2764  001180  6FB9               	movwf	Train_Path@To& (0+255),b
  2765  001182  0E03               	movlw	3
  2766  001184  ECFE  F010         	call	_Train_Path
  2767  001188  0900               	iorlw	0
  2768  00118A  A4D8               	btfss	status,2,c
  2769  00118C  D090               	goto	l8399
  2770                           
  2771                           ;State_Mchn.c: 389: {
  2772                           ;State_Mchn.c: 390: Switch_Program = 1;
  2773  00118E  0E01               	movlw	1
  2774  001190  0100               	movlb	0	; () banked
  2775  001192  6F82               	movwf	_Switch_Program& (0+255),b
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;State_Mchn.c: 391: Eeprom_Store();
  2779  001194  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  2780  001198                     l8321:
  2781                           
  2782                           ;State_Mchn.c: 392: if(Stop_Program == 1)
  2783  001198  0100               	movlb	0	; () banked
  2784  00119A  057D               	decf	_Stop_Program& (0+255),w,b
  2785  00119C  A4D8               	btfss	status,2,c
  2786  00119E  D087               	goto	l8399
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;State_Mchn.c: 393: {
  2790                           ;State_Mchn.c: 394: Switch_Main = 0;
  2791  0011A0  0E00               	movlw	0
  2792  0011A2  0100               	movlb	0	; () banked
  2793  0011A4  6F80               	movwf	_Switch_Main& (0+255),b
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;State_Mchn.c: 396: }
  2797                           ;State_Mchn.c: 397: }
  2798                           ;State_Mchn.c: 398: break;
  2799                           
  2800                           ; BSR set to: 0
  2801  0011A6  D083               	goto	l8399
  2802  0011A8                     l8325:
  2803                           
  2804                           ; BSR set to: 0
  2805  0011A8  0E03               	movlw	3
  2806  0011AA  0100               	movlb	0	; () banked
  2807  0011AC  6FB9               	movwf	Train_Path@To& (0+255),b
  2808  0011AE  0E02               	movlw	2
  2809  0011B0  ECFE  F010         	call	_Train_Path
  2810  0011B4  0900               	iorlw	0
  2811  0011B6  A4D8               	btfss	status,2,c
  2812  0011B8  D07A               	goto	l8399
  2813                           
  2814                           ;State_Mchn.c: 401: {
  2815                           ;State_Mchn.c: 402: Switch_Program = 2;
  2816  0011BA  0E02               	movlw	2
  2817  0011BC  0100               	movlb	0	; () banked
  2818  0011BE  6F82               	movwf	_Switch_Program& (0+255),b
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;State_Mchn.c: 403: Eeprom_Store();
  2822  0011C0  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  2823  0011C4  D7E9               	goto	l8321
  2824  0011C6                     l8335:
  2825                           
  2826                           ; BSR set to: 0
  2827  0011C6  0E04               	movlw	4
  2828  0011C8  0100               	movlb	0	; () banked
  2829  0011CA  6FB9               	movwf	Train_Path@To& (0+255),b
  2830  0011CC  0E01               	movlw	1
  2831  0011CE  ECFE  F010         	call	_Train_Path
  2832  0011D2  0900               	iorlw	0
  2833  0011D4  A4D8               	btfss	status,2,c
  2834  0011D6  D06B               	goto	l8399
  2835                           
  2836                           ;State_Mchn.c: 413: {
  2837                           ;State_Mchn.c: 414: Switch_Program = 3;
  2838  0011D8  0E03               	movlw	3
  2839  0011DA  0100               	movlb	0	; () banked
  2840  0011DC  6F82               	movwf	_Switch_Program& (0+255),b
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;State_Mchn.c: 415: Eeprom_Store();
  2844  0011DE  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  2845  0011E2  D7DA               	goto	l8321
  2846  0011E4                     l8345:
  2847                           
  2848                           ; BSR set to: 0
  2849  0011E4  0E01               	movlw	1
  2850  0011E6  0100               	movlb	0	; () banked
  2851  0011E8  6FB9               	movwf	Train_Path@To& (0+255),b
  2852  0011EA  0E03               	movlw	3
  2853  0011EC  ECFE  F010         	call	_Train_Path
  2854  0011F0  0900               	iorlw	0
  2855  0011F2  A4D8               	btfss	status,2,c
  2856  0011F4  D05C               	goto	l8399
  2857                           
  2858                           ;State_Mchn.c: 425: {
  2859                           ;State_Mchn.c: 426: Switch_Program = 4;
  2860  0011F6  0E04               	movlw	4
  2861  0011F8  0100               	movlb	0	; () banked
  2862  0011FA  6F82               	movwf	_Switch_Program& (0+255),b
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;State_Mchn.c: 427: Eeprom_Store();
  2866  0011FC  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  2867  001200  D7CB               	goto	l8321
  2868  001202                     l8355:
  2869                           
  2870                           ; BSR set to: 0
  2871  001202  0E02               	movlw	2
  2872  001204  0100               	movlb	0	; () banked
  2873  001206  6FB9               	movwf	Train_Path@To& (0+255),b
  2874  001208  0E04               	movlw	4
  2875  00120A  ECFE  F010         	call	_Train_Path
  2876  00120E  0900               	iorlw	0
  2877  001210  A4D8               	btfss	status,2,c
  2878  001212  D04D               	goto	l8399
  2879                           
  2880                           ;State_Mchn.c: 437: {
  2881                           ;State_Mchn.c: 438: Switch_Program = 5;
  2882  001214  0E05               	movlw	5
  2883  001216  0100               	movlb	0	; () banked
  2884  001218  6F82               	movwf	_Switch_Program& (0+255),b
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;State_Mchn.c: 439: Eeprom_Store();
  2888  00121A  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  2889  00121E  D7BC               	goto	l8321
  2890  001220                     l8365:
  2891                           
  2892                           ; BSR set to: 0
  2893  001220  0E04               	movlw	4
  2894  001222  0100               	movlb	0	; () banked
  2895  001224  6FB9               	movwf	Train_Path@To& (0+255),b
  2896  001226  0E01               	movlw	1
  2897  001228  ECFE  F010         	call	_Train_Path
  2898  00122C  0900               	iorlw	0
  2899  00122E  A4D8               	btfss	status,2,c
  2900  001230  D03E               	goto	l8399
  2901                           
  2902                           ;State_Mchn.c: 449: {
  2903                           ;State_Mchn.c: 450: Switch_Program = 6;
  2904  001232  0E06               	movlw	6
  2905  001234  0100               	movlb	0	; () banked
  2906  001236  6F82               	movwf	_Switch_Program& (0+255),b
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;State_Mchn.c: 451: Eeprom_Store();
  2910  001238  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  2911  00123C  D7AD               	goto	l8321
  2912  00123E                     l8375:
  2913                           
  2914                           ; BSR set to: 0
  2915  00123E  0E03               	movlw	3
  2916  001240  0100               	movlb	0	; () banked
  2917  001242  6FB9               	movwf	Train_Path@To& (0+255),b
  2918  001244  0E02               	movlw	2
  2919  001246  ECFE  F010         	call	_Train_Path
  2920  00124A  0900               	iorlw	0
  2921  00124C  A4D8               	btfss	status,2,c
  2922  00124E  D02F               	goto	l8399
  2923                           
  2924                           ;State_Mchn.c: 461: {
  2925                           ;State_Mchn.c: 462: Switch_Program = 7;
  2926  001250  0E07               	movlw	7
  2927  001252  0100               	movlb	0	; () banked
  2928  001254  6F82               	movwf	_Switch_Program& (0+255),b
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;State_Mchn.c: 463: Eeprom_Store();
  2932  001256  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  2933  00125A  D79E               	goto	l8321
  2934  00125C                     l8385:
  2935                           
  2936                           ; BSR set to: 0
  2937  00125C  0E02               	movlw	2
  2938  00125E  0100               	movlb	0	; () banked
  2939  001260  6FB9               	movwf	Train_Path@To& (0+255),b
  2940  001262  0E04               	movlw	4
  2941  001264  ECFE  F010         	call	_Train_Path
  2942  001268  0900               	iorlw	0
  2943  00126A  A4D8               	btfss	status,2,c
  2944  00126C  D020               	goto	l8399
  2945                           
  2946                           ;State_Mchn.c: 473: {
  2947                           ;State_Mchn.c: 474: Switch_Program = 0;
  2948  00126E  0E00               	movlw	0
  2949  001270  0100               	movlb	0	; () banked
  2950  001272  6F82               	movwf	_Switch_Program& (0+255),b
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;State_Mchn.c: 475: Eeprom_Store();
  2954  001274  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  2955  001278  D78F               	goto	l8321
  2956  00127A                     l8397:
  2957                           
  2958                           ; BSR set to: 0
  2959  00127A  0100               	movlb	0	; () banked
  2960  00127C  5182               	movf	_Switch_Program& (0+255),w,b
  2961                           
  2962                           ; Switch size 1, requested type "space"
  2963                           ; Number of cases is 8, Range of values is 0 to 7
  2964                           ; switch strategies available:
  2965                           ; Name         Instructions Cycles
  2966                           ; simple_byte           25    13 (average)
  2967                           ;	Chosen strategy is simple_byte
  2968  00127E  0A00               	xorlw	0	; case 0
  2969  001280  B4D8               	btfsc	status,2,c
  2970  001282  D77C               	goto	l8315
  2971  001284  0A01               	xorlw	1	; case 1
  2972  001286  B4D8               	btfsc	status,2,c
  2973  001288  D78F               	goto	l8325
  2974  00128A  0A03               	xorlw	3	; case 2
  2975  00128C  B4D8               	btfsc	status,2,c
  2976  00128E  D79B               	goto	l8335
  2977  001290  0A01               	xorlw	1	; case 3
  2978  001292  B4D8               	btfsc	status,2,c
  2979  001294  D7A7               	goto	l8345
  2980  001296  0A07               	xorlw	7	; case 4
  2981  001298  B4D8               	btfsc	status,2,c
  2982  00129A  D7B3               	goto	l8355
  2983  00129C  0A01               	xorlw	1	; case 5
  2984  00129E  B4D8               	btfsc	status,2,c
  2985  0012A0  D7BF               	goto	l8365
  2986  0012A2  0A03               	xorlw	3	; case 6
  2987  0012A4  B4D8               	btfsc	status,2,c
  2988  0012A6  D7CB               	goto	l8375
  2989  0012A8  0A01               	xorlw	1	; case 7
  2990  0012AA  B4D8               	btfsc	status,2,c
  2991  0012AC  D7D7               	goto	l8385
  2992  0012AE                     l8399:
  2993                           
  2994                           ;State_Mchn.c: 671: if(GETxAPIxVAL(33) || GETxAPIxVAL(71))
  2995  0012AE  0E21               	movlw	33
  2996  0012B0  EC69  F01E         	call	_GETxAPIxVAL
  2997  0012B4  0100               	movlb	0	; () banked
  2998  0012B6  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  2999  0012B8  0100               	movlb	0	; () banked
  3000  0012BA  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3001  0012BC  A4D8               	btfss	status,2,c
  3002  0012BE  D009               	goto	l8403
  3003                           
  3004                           ; BSR set to: 0
  3005  0012C0  0E47               	movlw	71
  3006  0012C2  EC69  F01E         	call	_GETxAPIxVAL
  3007  0012C6  0100               	movlb	0	; () banked
  3008  0012C8  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  3009  0012CA  0100               	movlb	0	; () banked
  3010  0012CC  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3011  0012CE  B4D8               	btfsc	status,2,c
  3012  0012D0  D00B               	goto	l8407
  3013  0012D2                     l8403:
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;State_Mchn.c: 672: {
  3017                           ;State_Mchn.c: 673: Stop_Program = 1;
  3018  0012D2  0E01               	movlw	1
  3019  0012D4  0100               	movlb	0	; () banked
  3020  0012D6  6F7D               	movwf	_Stop_Program& (0+255),b
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;State_Mchn.c: 674: SETxAPIxVAL(71, 0);
  3024  0012D8  0E00               	movlw	0
  3025  0012DA  0100               	movlb	0	; () banked
  3026  0012DC  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  3027  0012DE  0E00               	movlw	0
  3028  0012E0  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  3029  0012E2  0E47               	movlw	71
  3030  0012E4  EC5C  F01D         	call	_SETxAPIxVAL
  3031  0012E8                     l8407:
  3032                           
  3033                           ;State_Mchn.c: 675: }
  3034                           ;State_Mchn.c: 677: if(Stop_Program == 1)
  3035  0012E8  0100               	movlb	0	; () banked
  3036  0012EA  057D               	decf	_Stop_Program& (0+255),w,b
  3037  0012EC  A4D8               	btfss	status,2,c
  3038  0012EE  D003               	goto	l318
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;State_Mchn.c: 678: {
  3042                           ;State_Mchn.c: 679: Red_Led(2);
  3043  0012F0  0E02               	movlw	2
  3044  0012F2  EC05  F01C         	call	_Red_Led
  3045  0012F6                     l318:
  3046                           
  3047                           ;State_Mchn.c: 680: }
  3048                           ;State_Mchn.c: 682: Green_Led(1);
  3049  0012F6  0E01               	movlw	1
  3050  0012F8  EC45  F01C         	call	_Green_Led
  3051                           
  3052                           ;State_Mchn.c: 684: break;
  3053  0012FC  D085               	goto	l8471
  3054  0012FE                     l8411:
  3055  0012FE  0E01               	movlw	1
  3056  001300  0100               	movlb	0	; () banked
  3057  001302  6FB9               	movwf	Train_Path@To& (0+255),b
  3058  001304  0E03               	movlw	3
  3059  001306  ECFE  F010         	call	_Train_Path
  3060  00130A  0900               	iorlw	0
  3061  00130C  A4D8               	btfss	status,2,c
  3062  00130E  D048               	goto	l8455
  3063                           
  3064                           ;State_Mchn.c: 690: {
  3065                           ;State_Mchn.c: 691: Switch_Program = 1;
  3066  001310  0E01               	movlw	1
  3067  001312  0100               	movlb	0	; () banked
  3068  001314  6F82               	movwf	_Switch_Program& (0+255),b
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;State_Mchn.c: 692: Eeprom_Store();
  3072  001316  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  3073  00131A                     l8417:
  3074                           
  3075                           ;State_Mchn.c: 693: if(Stop_Program == 1)
  3076  00131A  0100               	movlb	0	; () banked
  3077  00131C  057D               	decf	_Stop_Program& (0+255),w,b
  3078  00131E  A4D8               	btfss	status,2,c
  3079  001320  D03F               	goto	l8455
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;State_Mchn.c: 694: {
  3083                           ;State_Mchn.c: 695: Switch_Main = 0;
  3084  001322  0E00               	movlw	0
  3085  001324  0100               	movlb	0	; () banked
  3086  001326  6F80               	movwf	_Switch_Main& (0+255),b
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;State_Mchn.c: 697: }
  3090                           ;State_Mchn.c: 698: }
  3091                           ;State_Mchn.c: 699: break;
  3092                           
  3093                           ; BSR set to: 0
  3094  001328  D03B               	goto	l8455
  3095  00132A                     l8421:
  3096                           
  3097                           ; BSR set to: 0
  3098  00132A  0E04               	movlw	4
  3099  00132C  0100               	movlb	0	; () banked
  3100  00132E  6FB9               	movwf	Train_Path@To& (0+255),b
  3101  001330  0E01               	movlw	1
  3102  001332  ECFE  F010         	call	_Train_Path
  3103  001336  0900               	iorlw	0
  3104  001338  A4D8               	btfss	status,2,c
  3105  00133A  D032               	goto	l8455
  3106                           
  3107                           ;State_Mchn.c: 702: {
  3108                           ;State_Mchn.c: 703: Switch_Program = 2;
  3109  00133C  0E02               	movlw	2
  3110  00133E  0100               	movlb	0	; () banked
  3111  001340  6F82               	movwf	_Switch_Program& (0+255),b
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;State_Mchn.c: 704: Eeprom_Store();
  3115  001342  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  3116  001346  D7E9               	goto	l8417
  3117  001348                     l8431:
  3118                           
  3119                           ; BSR set to: 0
  3120  001348  0E02               	movlw	2
  3121  00134A  0100               	movlb	0	; () banked
  3122  00134C  6FB9               	movwf	Train_Path@To& (0+255),b
  3123  00134E  0E04               	movlw	4
  3124  001350  ECFE  F010         	call	_Train_Path
  3125  001354  0900               	iorlw	0
  3126  001356  A4D8               	btfss	status,2,c
  3127  001358  D023               	goto	l8455
  3128                           
  3129                           ;State_Mchn.c: 714: {
  3130                           ;State_Mchn.c: 715: Switch_Program = 3;
  3131  00135A  0E03               	movlw	3
  3132  00135C  0100               	movlb	0	; () banked
  3133  00135E  6F82               	movwf	_Switch_Program& (0+255),b
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;State_Mchn.c: 716: Eeprom_Store();
  3137  001360  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  3138  001364  D7DA               	goto	l8417
  3139  001366                     l8441:
  3140                           
  3141                           ; BSR set to: 0
  3142  001366  0E03               	movlw	3
  3143  001368  0100               	movlb	0	; () banked
  3144  00136A  6FB9               	movwf	Train_Path@To& (0+255),b
  3145  00136C  0E02               	movlw	2
  3146  00136E  ECFE  F010         	call	_Train_Path
  3147  001372  0900               	iorlw	0
  3148  001374  A4D8               	btfss	status,2,c
  3149  001376  D014               	goto	l8455
  3150                           
  3151                           ;State_Mchn.c: 726: {
  3152                           ;State_Mchn.c: 727: Switch_Program = 0;
  3153  001378  0E00               	movlw	0
  3154  00137A  0100               	movlb	0	; () banked
  3155  00137C  6F82               	movwf	_Switch_Program& (0+255),b
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;State_Mchn.c: 728: Eeprom_Store();
  3159  00137E  ECF4  F01A         	call	_Eeprom_Store	;wreg free
  3160  001382  D7CB               	goto	l8417
  3161  001384                     l8453:
  3162  001384  0100               	movlb	0	; () banked
  3163  001386  5182               	movf	_Switch_Program& (0+255),w,b
  3164                           
  3165                           ; Switch size 1, requested type "space"
  3166                           ; Number of cases is 4, Range of values is 0 to 3
  3167                           ; switch strategies available:
  3168                           ; Name         Instructions Cycles
  3169                           ; simple_byte           13     7 (average)
  3170                           ;	Chosen strategy is simple_byte
  3171  001388  0A00               	xorlw	0	; case 0
  3172  00138A  B4D8               	btfsc	status,2,c
  3173  00138C  D7B8               	goto	l8411
  3174  00138E  0A01               	xorlw	1	; case 1
  3175  001390  B4D8               	btfsc	status,2,c
  3176  001392  D7CB               	goto	l8421
  3177  001394  0A03               	xorlw	3	; case 2
  3178  001396  B4D8               	btfsc	status,2,c
  3179  001398  D7D7               	goto	l8431
  3180  00139A  0A01               	xorlw	1	; case 3
  3181  00139C  B4D8               	btfsc	status,2,c
  3182  00139E  D7E3               	goto	l8441
  3183  0013A0                     l8455:
  3184                           
  3185                           ;State_Mchn.c: 922: if(GETxAPIxVAL(33) || GETxAPIxVAL(71))
  3186  0013A0  0E21               	movlw	33
  3187  0013A2  EC69  F01E         	call	_GETxAPIxVAL
  3188  0013A6  0100               	movlb	0	; () banked
  3189  0013A8  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  3190  0013AA  0100               	movlb	0	; () banked
  3191  0013AC  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3192  0013AE  A4D8               	btfss	status,2,c
  3193  0013B0  D009               	goto	l8459
  3194                           
  3195                           ; BSR set to: 0
  3196  0013B2  0E47               	movlw	71
  3197  0013B4  EC69  F01E         	call	_GETxAPIxVAL
  3198  0013B8  0100               	movlb	0	; () banked
  3199  0013BA  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  3200  0013BC  0100               	movlb	0	; () banked
  3201  0013BE  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3202  0013C0  B4D8               	btfsc	status,2,c
  3203  0013C2  D00B               	goto	l8463
  3204  0013C4                     l8459:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;State_Mchn.c: 923: {
  3208                           ;State_Mchn.c: 924: Stop_Program = 1;
  3209  0013C4  0E01               	movlw	1
  3210  0013C6  0100               	movlb	0	; () banked
  3211  0013C8  6F7D               	movwf	_Stop_Program& (0+255),b
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;State_Mchn.c: 925: SETxAPIxVAL(71, 0);
  3215  0013CA  0E00               	movlw	0
  3216  0013CC  0100               	movlb	0	; () banked
  3217  0013CE  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  3218  0013D0  0E00               	movlw	0
  3219  0013D2  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  3220  0013D4  0E47               	movlw	71
  3221  0013D6  EC5C  F01D         	call	_SETxAPIxVAL
  3222  0013DA                     l8463:
  3223                           
  3224                           ;State_Mchn.c: 926: }
  3225                           ;State_Mchn.c: 928: if(Stop_Program == 1)
  3226  0013DA  0100               	movlb	0	; () banked
  3227  0013DC  057D               	decf	_Stop_Program& (0+255),w,b
  3228  0013DE  A4D8               	btfss	status,2,c
  3229  0013E0  D003               	goto	l338
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;State_Mchn.c: 929: {
  3233                           ;State_Mchn.c: 930: Red_Led(2);
  3234  0013E2  0E02               	movlw	2
  3235  0013E4  EC05  F01C         	call	_Red_Led
  3236  0013E8                     l338:
  3237                           
  3238                           ;State_Mchn.c: 931: }
  3239                           ;State_Mchn.c: 933: Green_Led(1);
  3240  0013E8  0E01               	movlw	1
  3241  0013EA  EC45  F01C         	call	_Green_Led
  3242                           
  3243                           ;State_Mchn.c: 938: }
  3244                           
  3245                           ;State_Mchn.c: 937: default : break;
  3246                           
  3247                           ;State_Mchn.c: 935: break;
  3248  0013EE  D00C               	goto	l8471
  3249  0013F0                     l8469:
  3250  0013F0  0100               	movlb	0	; () banked
  3251  0013F2  5180               	movf	_Switch_Main& (0+255),w,b
  3252                           
  3253                           ; Switch size 1, requested type "space"
  3254                           ; Number of cases is 3, Range of values is 0 to 2
  3255                           ; switch strategies available:
  3256                           ; Name         Instructions Cycles
  3257                           ; simple_byte           10     6 (average)
  3258                           ;	Chosen strategy is simple_byte
  3259  0013F4  0A00               	xorlw	0	; case 0
  3260  0013F6  B4D8               	btfsc	status,2,c
  3261  0013F8  EF3D  F004         	goto	l7965
  3262  0013FC  0A01               	xorlw	1	; case 1
  3263  0013FE  B4D8               	btfsc	status,2,c
  3264  001400  D73C               	goto	l8397
  3265  001402  0A03               	xorlw	3	; case 2
  3266  001404  B4D8               	btfsc	status,2,c
  3267  001406  D7BE               	goto	l8453
  3268  001408                     l8471:
  3269                           
  3270                           ;State_Mchn.c: 939: SETxAPIxVAL(63, Switch_Main);
  3271  001408  C080  F0AC         	movff	_Switch_Main,SETxAPIxVAL@value
  3272  00140C  0100               	movlb	0	; () banked
  3273  00140E  6BAD               	clrf	(SETxAPIxVAL@value+1)& (0+255),b
  3274  001410  0E3F               	movlw	63
  3275  001412  EC5C  F01D         	call	_SETxAPIxVAL
  3276                           
  3277                           ;State_Mchn.c: 940: SETxAPIxVAL(80, Switch_Program);
  3278  001416  C082  F0AC         	movff	_Switch_Program,SETxAPIxVAL@value
  3279  00141A  0100               	movlb	0	; () banked
  3280  00141C  6BAD               	clrf	(SETxAPIxVAL@value+1)& (0+255),b
  3281  00141E  0E50               	movlw	80
  3282  001420  EC5C  F01D         	call	_SETxAPIxVAL
  3283  001424  0012               	return		;funcret
  3284  001426                     __end_of_Update_StateMchn:
  3285                           	opt stack 0
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           postdec1	equ	0xFE5
  3293                           fsr1h	equ	0xFE2
  3294                           fsr1l	equ	0xFE1
  3295                           status	equ	0xFD8
  3296                           
  3297 ;; *************** function _Train_Path *****************
  3298 ;; Defined at:
  3299 ;;		line 958 in file "../State_Mchn.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  From            1    wreg     unsigned char 
  3302 ;;  To              1   41[BANK0 ] unsigned char 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  From            1   42[BANK0 ] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      unsigned char 
  3307 ;; Registers used:
  3308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3314 ;;      Params:         0       1       0       0       0       0       0       0       0
  3315 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3317 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3318 ;;Total ram usage:        2 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    9
  3321 ;; This function calls:
  3322 ;;		_GETxAPIxVAL
  3323 ;;		_Junction
  3324 ;;		_Left_Mountain_From_The_Left
  3325 ;;		_Left_Mountain_From_The_Right
  3326 ;;		_Right_Mountain_From_The_Left
  3327 ;;		_Right_Mountain_From_The_Right
  3328 ;;		_SETxAPIxVAL
  3329 ;;		_Train_Move_Left_Brake
  3330 ;;		_Train_Move_Left_Start
  3331 ;;		_Train_Move_Right_Brake
  3332 ;;		_Train_Move_Right_Start
  3333 ;; This function is called by:
  3334 ;;		_Update_StateMchn
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text2
  3339  0021FC                     __ptext2:
  3340                           	opt stack 0
  3341  0021FC                     _Train_Path:
  3342                           	opt stack 20
  3343                           
  3344                           ;incstack = 0
  3345                           ;Train_Path@From stored from wreg
  3346  0021FC  0100               	movlb	0	; () banked
  3347  0021FE  6FBA               	movwf	Train_Path@From& (0+255),b
  3348                           
  3349                           ;State_Mchn.c: 960: static char Return_Val = 1;
  3350                           ;State_Mchn.c: 962: SETxAPIxVAL(61, From);
  3351  002200  C0BA  F0AC         	movff	Train_Path@From,SETxAPIxVAL@value
  3352  002204  0100               	movlb	0	; () banked
  3353  002206  6BAD               	clrf	(SETxAPIxVAL@value+1)& (0+255),b
  3354  002208  0E3D               	movlw	61
  3355  00220A  EC5C  F01D         	call	_SETxAPIxVAL
  3356                           
  3357                           ;State_Mchn.c: 963: SETxAPIxVAL(62, To);
  3358  00220E  C0B9  F0AC         	movff	Train_Path@To,SETxAPIxVAL@value
  3359  002212  0100               	movlb	0	; () banked
  3360  002214  6BAD               	clrf	(SETxAPIxVAL@value+1)& (0+255),b
  3361  002216  0E3E               	movlw	62
  3362  002218  EC5C  F01D         	call	_SETxAPIxVAL
  3363                           
  3364                           ;State_Mchn.c: 965: switch(Switch_Train_Path)
  3365  00221C  D1A1               	goto	l7823
  3366  00221E                     l7615:
  3367  00221E  0E00               	movlw	0
  3368  002220  0100               	movlb	0	; () banked
  3369  002222  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  3370  002224  0E01               	movlw	1
  3371  002226  EC3D  F016         	call	_Junction
  3372  00222A  0900               	iorlw	0
  3373  00222C  B4D8               	btfsc	status,2,c
  3374  00222E  D01B               	goto	l7629
  3375  002230                     l349:
  3376                           
  3377                           ;State_Mchn.c: 973: }
  3378                           ;State_Mchn.c: 974: Return_Val = 1;
  3379  002230  0E01               	movlw	1
  3380  002232                     L39:
  3381  002232  0100               	movlb	0	; () banked
  3382  002234  6FC6               	movwf	Train_Path@Return_Val& (0+255),b
  3383                           
  3384                           ;State_Mchn.c: 975: break;
  3385  002236  D1BE               	goto	l7825
  3386  002238                     l7619:
  3387                           
  3388                           ; BSR set to: 0
  3389  002238  0E01               	movlw	1
  3390  00223A  0100               	movlb	0	; () banked
  3391  00223C  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  3392  00223E  0E01               	movlw	1
  3393  002240  EC3D  F016         	call	_Junction
  3394  002244  D7F2               	goto	L58
  3395  002246                     l7623:
  3396                           
  3397                           ; BSR set to: 0
  3398  002246  0E01               	movlw	1
  3399  002248  0100               	movlb	0	; () banked
  3400  00224A  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  3401  00224C  0E00               	movlw	0
  3402  00224E  EC3D  F016         	call	_Junction
  3403  002252  D7EB               	goto	L58
  3404  002254                     l7627:
  3405                           
  3406                           ; BSR set to: 0
  3407  002254  0E00               	movlw	0
  3408  002256  0100               	movlb	0	; () banked
  3409  002258  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  3410  00225A  0E00               	movlw	0
  3411  00225C  EC3D  F016         	call	_Junction
  3412  002260  0900               	iorlw	0
  3413  002262  A4D8               	btfss	status,2,c
  3414  002264  D7E5               	goto	l349
  3415  002266                     l7629:
  3416                           
  3417                           ;State_Mchn.c: 991: {
  3418                           ;State_Mchn.c: 992: Switch_Train_Path = 1;
  3419  002266  0E01               	movlw	1
  3420  002268  D016               	goto	L40
  3421  00226A                     l7633:
  3422  00226A  0100               	movlb	0	; () banked
  3423  00226C  51BA               	movf	Train_Path@From& (0+255),w,b
  3424                           
  3425                           ; Switch size 1, requested type "space"
  3426                           ; Number of cases is 4, Range of values is 1 to 4
  3427                           ; switch strategies available:
  3428                           ; Name         Instructions Cycles
  3429                           ; simple_byte           13     7 (average)
  3430                           ;	Chosen strategy is simple_byte
  3431  00226E  0A01               	xorlw	1	; case 1
  3432  002270  B4D8               	btfsc	status,2,c
  3433  002272  D7E9               	goto	l7623
  3434  002274  0A03               	xorlw	3	; case 2
  3435  002276  B4D8               	btfsc	status,2,c
  3436  002278  D7ED               	goto	l7627
  3437  00227A  0A01               	xorlw	1	; case 3
  3438  00227C  B4D8               	btfsc	status,2,c
  3439  00227E  D7CF               	goto	l7615
  3440  002280  0A07               	xorlw	7	; case 4
  3441  002282  B4D8               	btfsc	status,2,c
  3442  002284  D7D9               	goto	l7619
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;State_Mchn.c: 999: break;
  3446  002286  D196               	goto	l7825
  3447  002288                     l7635:
  3448                           
  3449                           ; BSR set to: 0
  3450  002288  0E00               	movlw	0
  3451  00228A  0100               	movlb	0	; () banked
  3452  00228C  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  3453  00228E  0E01               	movlw	1
  3454  002290  EC3D  F016         	call	_Junction
  3455  002294  D01A               	goto	L45
  3456  002296                     L40:
  3457  002296  0100               	movlb	0	; () banked
  3458  002298  6F84               	movwf	_Switch_Train_Path& (0+255),b
  3459                           
  3460                           ;State_Mchn.c: 1006: Return_Val = 1;
  3461  00229A  0E01               	movlw	1
  3462  00229C  0100               	movlb	0	; () banked
  3463  00229E  6FC6               	movwf	Train_Path@Return_Val& (0+255),b
  3464  0022A0  D7C7               	goto	l349
  3465  0022A2                     l7639:
  3466                           
  3467                           ; BSR set to: 0
  3468  0022A2  0E01               	movlw	1
  3469  0022A4  0100               	movlb	0	; () banked
  3470  0022A6  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  3471  0022A8  0E01               	movlw	1
  3472  0022AA  EC3D  F016         	call	_Junction
  3473  0022AE  D00D               	goto	L45
  3474  0022B0                     l7643:
  3475                           
  3476                           ; BSR set to: 0
  3477  0022B0  0E01               	movlw	1
  3478  0022B2  0100               	movlb	0	; () banked
  3479  0022B4  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  3480  0022B6  0E00               	movlw	0
  3481  0022B8  EC3D  F016         	call	_Junction
  3482  0022BC  D006               	goto	L45
  3483  0022BE                     l7647:
  3484                           
  3485                           ; BSR set to: 0
  3486  0022BE  0E00               	movlw	0
  3487  0022C0  0100               	movlb	0	; () banked
  3488  0022C2  6FB1               	movwf	Junction@Straight_Bend& (0+255),b
  3489  0022C4  0E00               	movlw	0
  3490  0022C6  EC3D  F016         	call	_Junction
  3491  0022CA                     L45:
  3492  0022CA  0900               	iorlw	0
  3493  0022CC  A4D8               	btfss	status,2,c
  3494  0022CE  D7B0               	goto	l349
  3495                           
  3496                           ;State_Mchn.c: 1025: {
  3497                           ;State_Mchn.c: 1026: Switch_Train_Path = 2;
  3498  0022D0  0E02               	movlw	2
  3499  0022D2  D7E1               	goto	L40
  3500  0022D4                     l7653:
  3501                           
  3502                           ; BSR set to: 0
  3503  0022D4  0100               	movlb	0	; () banked
  3504  0022D6  51B9               	movf	Train_Path@To& (0+255),w,b
  3505                           
  3506                           ; Switch size 1, requested type "space"
  3507                           ; Number of cases is 4, Range of values is 1 to 4
  3508                           ; switch strategies available:
  3509                           ; Name         Instructions Cycles
  3510                           ; simple_byte           13     7 (average)
  3511                           ;	Chosen strategy is simple_byte
  3512  0022D8  0A01               	xorlw	1	; case 1
  3513  0022DA  B4D8               	btfsc	status,2,c
  3514  0022DC  D7E9               	goto	l7643
  3515  0022DE  0A03               	xorlw	3	; case 2
  3516  0022E0  B4D8               	btfsc	status,2,c
  3517  0022E2  D7ED               	goto	l7647
  3518  0022E4  0A01               	xorlw	1	; case 3
  3519  0022E6  B4D8               	btfsc	status,2,c
  3520  0022E8  D7CF               	goto	l7635
  3521  0022EA  0A07               	xorlw	7	; case 4
  3522  0022EC  B4D8               	btfsc	status,2,c
  3523  0022EE  D7D9               	goto	l7639
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;State_Mchn.c: 1033: break;
  3527  0022F0  D161               	goto	l7825
  3528  0022F2                     l7655:
  3529                           
  3530                           ; BSR set to: 0
  3531  0022F2  ECDC  F016         	call	_Train_Move_Right_Start	;wreg free
  3532  0022F6  D008               	goto	L48
  3533  0022F8                     l7659:
  3534                           
  3535                           ; BSR set to: 0
  3536  0022F8  ECDC  F016         	call	_Train_Move_Right_Start	;wreg free
  3537  0022FC  D005               	goto	L48
  3538  0022FE                     l7663:
  3539                           
  3540                           ; BSR set to: 0
  3541  0022FE  EC7A  F017         	call	_Train_Move_Left_Start	;wreg free
  3542  002302  D002               	goto	L48
  3543  002304                     l7667:
  3544                           
  3545                           ; BSR set to: 0
  3546  002304  EC7A  F017         	call	_Train_Move_Left_Start	;wreg free
  3547  002308                     L48:
  3548  002308  0900               	iorlw	0
  3549  00230A  A4D8               	btfss	status,2,c
  3550  00230C  D791               	goto	l349
  3551                           
  3552                           ;State_Mchn.c: 1059: {
  3553                           ;State_Mchn.c: 1060: Switch_Train_Path = 3;
  3554  00230E  0E03               	movlw	3
  3555  002310  D7C2               	goto	L40
  3556  002312                     l7673:
  3557                           
  3558                           ; BSR set to: 0
  3559  002312  0100               	movlb	0	; () banked
  3560  002314  51B9               	movf	Train_Path@To& (0+255),w,b
  3561                           
  3562                           ; Switch size 1, requested type "space"
  3563                           ; Number of cases is 4, Range of values is 1 to 4
  3564                           ; switch strategies available:
  3565                           ; Name         Instructions Cycles
  3566                           ; simple_byte           13     7 (average)
  3567                           ;	Chosen strategy is simple_byte
  3568  002316  0A01               	xorlw	1	; case 1
  3569  002318  B4D8               	btfsc	status,2,c
  3570  00231A  D7F1               	goto	l7663
  3571  00231C  0A03               	xorlw	3	; case 2
  3572  00231E  B4D8               	btfsc	status,2,c
  3573  002320  D7F1               	goto	l7667
  3574  002322  0A01               	xorlw	1	; case 3
  3575  002324  B4D8               	btfsc	status,2,c
  3576  002326  D7E5               	goto	l7655
  3577  002328  0A07               	xorlw	7	; case 4
  3578  00232A  B4D8               	btfsc	status,2,c
  3579  00232C  D7E5               	goto	l7659
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;State_Mchn.c: 1067: break;
  3583  00232E  D142               	goto	l7825
  3584  002330                     l7675:
  3585                           
  3586                           ; BSR set to: 0
  3587  002330  0E1C               	movlw	28
  3588  002332  EC69  F01E         	call	_GETxAPIxVAL
  3589  002336  0100               	movlb	0	; () banked
  3590  002338  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3591  00233A  0100               	movlb	0	; () banked
  3592  00233C  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3593  00233E  B4D8               	btfsc	status,2,c
  3594  002340  D088               	goto	l7737
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;State_Mchn.c: 1074: else if(GETxAPIxVAL(41) == 1){
  3598                           
  3599                           ; BSR set to: 0
  3600                           
  3601                           ;State_Mchn.c: 1073: }
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;State_Mchn.c: 1072: Switch_Train_Path = 4;
  3605  002342  0E29               	movlw	41
  3606  002344  EC69  F01E         	call	_GETxAPIxVAL
  3607  002348  0100               	movlb	0	; () banked
  3608  00234A  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3609  00234C  0100               	movlb	0	; () banked
  3610  00234E  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3611  002350  A4D8               	btfss	status,2,c
  3612  002352  D002               	goto	l7683
  3613  002354                     
  3614                           ; BSR set to: 0
  3615                           ;State_Mchn.c: 1075: Switch_Train_Path = 5;
  3616  002354  0E05               	movlw	5
  3617  002356  D049               	goto	L30
  3618  002358                     l7683:
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;State_Mchn.c: 1077: else if(GETxAPIxVAL(42) == 1){
  3622  002358  0E2A               	movlw	42
  3623  00235A  EC69  F01E         	call	_GETxAPIxVAL
  3624  00235E  0100               	movlb	0	; () banked
  3625  002360  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3626  002362  0100               	movlb	0	; () banked
  3627  002364  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3628  002366  A4D8               	btfss	status,2,c
  3629  002368  D002               	goto	l7687
  3630  00236A                     
  3631                           ; BSR set to: 0
  3632                           ;State_Mchn.c: 1078: Switch_Train_Path = 6;
  3633  00236A  0E06               	movlw	6
  3634  00236C  D03E               	goto	L30
  3635  00236E                     l7687:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;State_Mchn.c: 1080: else if(GETxAPIxVAL(44) == 1){
  3639  00236E  0E2C               	movlw	44
  3640  002370  EC69  F01E         	call	_GETxAPIxVAL
  3641  002374  0100               	movlb	0	; () banked
  3642  002376  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3643  002378  0100               	movlb	0	; () banked
  3644  00237A  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3645  00237C  A4D8               	btfss	status,2,c
  3646  00237E  D002               	goto	l7691
  3647  002380                     
  3648                           ; BSR set to: 0
  3649                           ;State_Mchn.c: 1081: Switch_Train_Path = 7;
  3650  002380  0E07               	movlw	7
  3651  002382  D033               	goto	L30
  3652  002384                     l7691:
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;State_Mchn.c: 1083: else if(GETxAPIxVAL(43) == 1){
  3656  002384  0E2B               	movlw	43
  3657  002386  EC69  F01E         	call	_GETxAPIxVAL
  3658  00238A  0100               	movlb	0	; () banked
  3659  00238C  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3660  00238E  0100               	movlb	0	; () banked
  3661  002390  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3662  002392  A4D8               	btfss	status,2,c
  3663  002394  D74D               	goto	l349
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;State_Mchn.c: 1084: Switch_Train_Path = 8;
  3667  002396  0E08               	movlw	8
  3668  002398  D028               	goto	L30
  3669  00239A                     l7695:
  3670                           
  3671                           ; BSR set to: 0
  3672  00239A  0E1D               	movlw	29
  3673  00239C  EC69  F01E         	call	_GETxAPIxVAL
  3674  0023A0  0100               	movlb	0	; () banked
  3675  0023A2  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3676  0023A4  0100               	movlb	0	; () banked
  3677  0023A6  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3678  0023A8  B4D8               	btfsc	status,2,c
  3679  0023AA  D053               	goto	l7737
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;State_Mchn.c: 1091: else if(GETxAPIxVAL(41) == 1){
  3683                           
  3684                           ; BSR set to: 0
  3685                           
  3686                           ;State_Mchn.c: 1090: }
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;State_Mchn.c: 1089: Switch_Train_Path = 4;
  3690  0023AC  0E29               	movlw	41
  3691  0023AE  EC69  F01E         	call	_GETxAPIxVAL
  3692  0023B2  0100               	movlb	0	; () banked
  3693  0023B4  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3694  0023B6  0100               	movlb	0	; () banked
  3695  0023B8  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3696  0023BA  B4D8               	btfsc	status,2,c
  3697  0023BC  D7CB               	goto	L95
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;State_Mchn.c: 1094: else if(GETxAPIxVAL(42) == 1){
  3701                           
  3702                           ; BSR set to: 0
  3703                           
  3704                           ;State_Mchn.c: 1093: }
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;State_Mchn.c: 1092: Switch_Train_Path = 5;
  3708  0023BE  0E2A               	movlw	42
  3709  0023C0  EC69  F01E         	call	_GETxAPIxVAL
  3710  0023C4  0100               	movlb	0	; () banked
  3711  0023C6  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3712  0023C8  0100               	movlb	0	; () banked
  3713  0023CA  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3714  0023CC  B4D8               	btfsc	status,2,c
  3715  0023CE  D7CD               	goto	L96
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;State_Mchn.c: 1097: else if(GETxAPIxVAL(44) == 1){
  3719                           
  3720                           ; BSR set to: 0
  3721                           
  3722                           ;State_Mchn.c: 1096: }
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;State_Mchn.c: 1095: Switch_Train_Path = 6;
  3726  0023D0  0E2C               	movlw	44
  3727  0023D2  EC69  F01E         	call	_GETxAPIxVAL
  3728  0023D6  0100               	movlb	0	; () banked
  3729  0023D8  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3730  0023DA  0100               	movlb	0	; () banked
  3731  0023DC  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3732  0023DE  B4D8               	btfsc	status,2,c
  3733  0023E0  D7CF               	goto	L97
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;State_Mchn.c: 1100: else if(GETxAPIxVAL(43) == 1){
  3737                           
  3738                           ; BSR set to: 0
  3739                           
  3740                           ;State_Mchn.c: 1099: }
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;State_Mchn.c: 1098: Switch_Train_Path = 7;
  3744  0023E2  0E2B               	movlw	43
  3745  0023E4  EC69  F01E         	call	_GETxAPIxVAL
  3746  0023E8  D7D0               	goto	L41
  3747  0023EA                     L30:
  3748  0023EA  0100               	movlb	0	; () banked
  3749  0023EC  6F84               	movwf	_Switch_Train_Path& (0+255),b
  3750                           
  3751                           ; BSR set to: 0
  3752                           
  3753                           ; BSR set to: 0
  3754                           
  3755                           ; BSR set to: 0
  3756  0023EE  D720               	goto	l349
  3757  0023F0                     l7715:
  3758                           
  3759                           ; BSR set to: 0
  3760  0023F0  0E1E               	movlw	30
  3761  0023F2  EC69  F01E         	call	_GETxAPIxVAL
  3762  0023F6  0100               	movlb	0	; () banked
  3763  0023F8  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3764  0023FA  0100               	movlb	0	; () banked
  3765  0023FC  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3766  0023FE  B4D8               	btfsc	status,2,c
  3767  002400  D028               	goto	l7737
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;State_Mchn.c: 1109: else if(GETxAPIxVAL(41) == 1){
  3771                           
  3772                           ; BSR set to: 0
  3773                           
  3774                           ;State_Mchn.c: 1108: }
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;State_Mchn.c: 1106: {
  3778                           ;State_Mchn.c: 1107: Switch_Train_Path = 4;
  3779  002402  0E29               	movlw	41
  3780  002404  EC69  F01E         	call	_GETxAPIxVAL
  3781  002408  0100               	movlb	0	; () banked
  3782  00240A  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3783  00240C  0100               	movlb	0	; () banked
  3784  00240E  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3785  002410  B4D8               	btfsc	status,2,c
  3786  002412  D02A               	goto	l7741
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;State_Mchn.c: 1112: else if(GETxAPIxVAL(42) == 1){
  3790                           
  3791                           ; BSR set to: 0
  3792                           
  3793                           ;State_Mchn.c: 1111: }
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;State_Mchn.c: 1110: Switch_Train_Path = 12;
  3797  002414  0E2A               	movlw	42
  3798  002416  EC69  F01E         	call	_GETxAPIxVAL
  3799  00241A  0100               	movlb	0	; () banked
  3800  00241C  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3801  00241E  0100               	movlb	0	; () banked
  3802  002420  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3803  002422  B4D8               	btfsc	status,2,c
  3804  002424  D02C               	goto	l7745
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;State_Mchn.c: 1115: else if(GETxAPIxVAL(44) == 1){
  3808                           
  3809                           ; BSR set to: 0
  3810                           
  3811                           ;State_Mchn.c: 1114: }
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;State_Mchn.c: 1113: Switch_Train_Path = 11;
  3815  002426  0E2C               	movlw	44
  3816  002428  EC69  F01E         	call	_GETxAPIxVAL
  3817  00242C  0100               	movlb	0	; () banked
  3818  00242E  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3819  002430  0100               	movlb	0	; () banked
  3820  002432  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3821  002434  B4D8               	btfsc	status,2,c
  3822  002436  D02E               	goto	l7749
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;State_Mchn.c: 1118: else if(GETxAPIxVAL(43) == 1){
  3826                           
  3827                           ; BSR set to: 0
  3828                           
  3829                           ;State_Mchn.c: 1117: }
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;State_Mchn.c: 1116: Switch_Train_Path = 10;
  3833  002438  0E2B               	movlw	43
  3834  00243A  EC69  F01E         	call	_GETxAPIxVAL
  3835  00243E  D02F               	goto	L49
  3836  002440                     l7735:
  3837                           
  3838                           ; BSR set to: 0
  3839  002440  0E1F               	movlw	31
  3840  002442  EC69  F01E         	call	_GETxAPIxVAL
  3841  002446  0100               	movlb	0	; () banked
  3842  002448  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3843  00244A  0100               	movlb	0	; () banked
  3844  00244C  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3845  00244E  A4D8               	btfss	status,2,c
  3846  002450  D002               	goto	l7739
  3847  002452                     l7737:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;State_Mchn.c: 1124: {
  3851                           ;State_Mchn.c: 1125: Switch_Train_Path = 4;
  3852  002452  0E04               	movlw	4
  3853  002454  D7CA               	goto	L30
  3854  002456                     l7739:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;State_Mchn.c: 1127: else if(GETxAPIxVAL(41) == 1){
  3858  002456  0E29               	movlw	41
  3859  002458  EC69  F01E         	call	_GETxAPIxVAL
  3860  00245C  0100               	movlb	0	; () banked
  3861  00245E  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3862  002460  0100               	movlb	0	; () banked
  3863  002462  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3864  002464  A4D8               	btfss	status,2,c
  3865  002466  D002               	goto	l7743
  3866  002468                     l7741:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;State_Mchn.c: 1128: Switch_Train_Path = 12;
  3870  002468  0E0C               	movlw	12
  3871  00246A  D7BF               	goto	L30
  3872  00246C                     l7743:
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;State_Mchn.c: 1130: else if(GETxAPIxVAL(42) == 1){
  3876  00246C  0E2A               	movlw	42
  3877  00246E  EC69  F01E         	call	_GETxAPIxVAL
  3878  002472  0100               	movlb	0	; () banked
  3879  002474  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3880  002476  0100               	movlb	0	; () banked
  3881  002478  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3882  00247A  A4D8               	btfss	status,2,c
  3883  00247C  D002               	goto	l7747
  3884  00247E                     l7745:
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;State_Mchn.c: 1131: Switch_Train_Path = 11;
  3888  00247E  0E0B               	movlw	11
  3889  002480  D7B4               	goto	L30
  3890  002482                     l7747:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;State_Mchn.c: 1133: else if(GETxAPIxVAL(44) == 1){
  3894  002482  0E2C               	movlw	44
  3895  002484  EC69  F01E         	call	_GETxAPIxVAL
  3896  002488  0100               	movlb	0	; () banked
  3897  00248A  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3898  00248C  0100               	movlb	0	; () banked
  3899  00248E  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3900  002490  A4D8               	btfss	status,2,c
  3901  002492  D002               	goto	l7751
  3902  002494                     l7749:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;State_Mchn.c: 1134: Switch_Train_Path = 10;
  3906  002494  0E0A               	movlw	10
  3907  002496  D7A9               	goto	L30
  3908  002498                     l7751:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;State_Mchn.c: 1136: else if(GETxAPIxVAL(43) == 1){
  3912  002498  0E2B               	movlw	43
  3913  00249A  EC69  F01E         	call	_GETxAPIxVAL
  3914  00249E                     L49:
  3915  00249E  0100               	movlb	0	; () banked
  3916  0024A0  0590               	decf	?_GETxAPIxVAL& (0+255),w,b
  3917  0024A2  0100               	movlb	0	; () banked
  3918  0024A4  1191               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3919  0024A6  A4D8               	btfss	status,2,c
  3920  0024A8  D6C3               	goto	l349
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;State_Mchn.c: 1137: Switch_Train_Path = 9;
  3924  0024AA  0E09               	movlw	9
  3925  0024AC  D79E               	goto	L30
  3926  0024AE                     l7757:
  3927                           
  3928                           ; BSR set to: 0
  3929  0024AE  0100               	movlb	0	; () banked
  3930  0024B0  51B9               	movf	Train_Path@To& (0+255),w,b
  3931                           
  3932                           ; Switch size 1, requested type "space"
  3933                           ; Number of cases is 4, Range of values is 1 to 4
  3934                           ; switch strategies available:
  3935                           ; Name         Instructions Cycles
  3936                           ; simple_byte           13     7 (average)
  3937                           ;	Chosen strategy is simple_byte
  3938  0024B2  0A01               	xorlw	1	; case 1
  3939  0024B4  B4D8               	btfsc	status,2,c
  3940  0024B6  D79C               	goto	l7715
  3941  0024B8  0A03               	xorlw	3	; case 2
  3942  0024BA  B4D8               	btfsc	status,2,c
  3943  0024BC  D7C1               	goto	l7735
  3944  0024BE  0A01               	xorlw	1	; case 3
  3945  0024C0  B4D8               	btfsc	status,2,c
  3946  0024C2  D736               	goto	l7675
  3947  0024C4  0A07               	xorlw	7	; case 4
  3948  0024C6  B4D8               	btfsc	status,2,c
  3949  0024C8  D768               	goto	l7695
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;State_Mchn.c: 1143: break;
  3953  0024CA  D074               	goto	l7825
  3954  0024CC                     l7759:
  3955                           
  3956                           ; BSR set to: 0
  3957  0024CC  EC9B  F015         	call	_Train_Move_Right_Brake	;wreg free
  3958  0024D0  D008               	goto	L93
  3959  0024D2                     l7765:
  3960                           
  3961                           ; BSR set to: 0
  3962  0024D2  EC9B  F015         	call	_Train_Move_Right_Brake	;wreg free
  3963  0024D6  D005               	goto	L93
  3964  0024D8                     l7771:
  3965                           
  3966                           ; BSR set to: 0
  3967  0024D8  ECF6  F014         	call	_Train_Move_Left_Brake	;wreg free
  3968  0024DC  D002               	goto	L93
  3969  0024DE                     l7777:
  3970                           
  3971                           ; BSR set to: 0
  3972  0024DE  ECF6  F014         	call	_Train_Move_Left_Brake	;wreg free
  3973  0024E2                     L93:
  3974  0024E2  0900               	iorlw	0
  3975  0024E4  A4D8               	btfss	status,2,c
  3976  0024E6  D6A4               	goto	l349
  3977                           
  3978                           ;State_Mchn.c: 1172: {
  3979                           ;State_Mchn.c: 1173: Switch_Train_Path = 0;
  3980  0024E8  0E00               	movlw	0
  3981  0024EA  0100               	movlb	0	; () banked
  3982  0024EC  6F84               	movwf	_Switch_Train_Path& (0+255),b
  3983                           
  3984                           ;State_Mchn.c: 1174: Return_Val = 0;
  3985  0024EE  0E00               	movlw	0
  3986  0024F0  D6A0               	goto	L39
  3987  0024F2                     l7785:
  3988                           
  3989                           ; BSR set to: 0
  3990  0024F2  0100               	movlb	0	; () banked
  3991  0024F4  51B9               	movf	Train_Path@To& (0+255),w,b
  3992                           
  3993                           ; Switch size 1, requested type "space"
  3994                           ; Number of cases is 4, Range of values is 1 to 4
  3995                           ; switch strategies available:
  3996                           ; Name         Instructions Cycles
  3997                           ; simple_byte           13     7 (average)
  3998                           ;	Chosen strategy is simple_byte
  3999  0024F6  0A01               	xorlw	1	; case 1
  4000  0024F8  B4D8               	btfsc	status,2,c
  4001  0024FA  D7EE               	goto	l7771
  4002  0024FC  0A03               	xorlw	3	; case 2
  4003  0024FE  B4D8               	btfsc	status,2,c
  4004  002500  D7EE               	goto	l7777
  4005  002502  0A01               	xorlw	1	; case 3
  4006  002504  B4D8               	btfsc	status,2,c
  4007  002506  D7E2               	goto	l7759
  4008  002508  0A07               	xorlw	7	; case 4
  4009  00250A  B4D8               	btfsc	status,2,c
  4010  00250C  D7E2               	goto	l7765
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;State_Mchn.c: 1181: break;
  4014  00250E  D052               	goto	l7825
  4015  002510                     l7787:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;State_Mchn.c: 1184: if(Left_Mountain_From_The_Left(1) == 0){
  4019  002510  0E01               	movlw	1
  4020  002512  EC4A  F019         	call	_Left_Mountain_From_The_Left
  4021  002516  D01B               	goto	L94
  4022  002518                     l7791:
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;State_Mchn.c: 1191: if(Left_Mountain_From_The_Left(2) == 0){
  4026  002518  0E02               	movlw	2
  4027  00251A  EC4A  F019         	call	_Left_Mountain_From_The_Left
  4028  00251E  D017               	goto	L94
  4029  002520                     l7795:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;State_Mchn.c: 1198: if(Right_Mountain_From_The_Left(3) == 0){
  4033  002520  0E03               	movlw	3
  4034  002522  ECB0  F018         	call	_Right_Mountain_From_The_Left
  4035  002526  D013               	goto	L94
  4036  002528                     l7799:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;State_Mchn.c: 1205: if(Right_Mountain_From_The_Left(4) == 0){
  4040  002528  0E04               	movlw	4
  4041  00252A  ECB0  F018         	call	_Right_Mountain_From_The_Left
  4042  00252E  D00F               	goto	L94
  4043  002530                     l7803:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;State_Mchn.c: 1212: if(Right_Mountain_From_The_Right(4) == 0){
  4047  002530  0E04               	movlw	4
  4048  002532  EC16  F018         	call	_Right_Mountain_From_The_Right
  4049  002536  D00B               	goto	L94
  4050  002538                     l7807:
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;State_Mchn.c: 1219: if(Right_Mountain_From_The_Right(3) == 0){
  4054  002538  0E03               	movlw	3
  4055  00253A  EC16  F018         	call	_Right_Mountain_From_The_Right
  4056  00253E  D007               	goto	L94
  4057  002540                     l7811:
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;State_Mchn.c: 1226: if(Left_Mountain_From_The_Right(2) == 0){
  4061  002540  0E02               	movlw	2
  4062  002542  ECE3  F019         	call	_Left_Mountain_From_The_Right
  4063  002546  D003               	goto	L94
  4064  002548                     l7815:
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;State_Mchn.c: 1233: if(Left_Mountain_From_The_Right(1) == 0){
  4068  002548  0E01               	movlw	1
  4069  00254A  ECE3  F019         	call	_Left_Mountain_From_The_Right
  4070  00254E                     L94:
  4071  00254E  0900               	iorlw	0
  4072  002550  A4D8               	btfss	status,2,c
  4073  002552  D66E               	goto	l349
  4074                           
  4075                           ;State_Mchn.c: 1234: Switch_Train_Path = 3;
  4076  002554  0E03               	movlw	3
  4077  002556  D001               	goto	L42
  4078  002558                     l7819:
  4079                           
  4080                           ; BSR set to: 0
  4081  002558  0E00               	movlw	0
  4082  00255A                     L42:
  4083  00255A  0100               	movlb	0	; () banked
  4084  00255C  6F84               	movwf	_Switch_Train_Path& (0+255),b
  4085  00255E  D668               	goto	l349
  4086  002560                     l7823:
  4087  002560  0100               	movlb	0	; () banked
  4088  002562  5184               	movf	_Switch_Train_Path& (0+255),w,b
  4089                           
  4090                           ; Switch size 1, requested type "space"
  4091                           ; Number of cases is 13, Range of values is 0 to 12
  4092                           ; switch strategies available:
  4093                           ; Name         Instructions Cycles
  4094                           ; simple_byte           40    21 (average)
  4095                           ;	Chosen strategy is simple_byte
  4096  002564  0A00               	xorlw	0	; case 0
  4097  002566  B4D8               	btfsc	status,2,c
  4098  002568  D680               	goto	l7633
  4099  00256A  0A01               	xorlw	1	; case 1
  4100  00256C  B4D8               	btfsc	status,2,c
  4101  00256E  D6B2               	goto	l7653
  4102  002570  0A03               	xorlw	3	; case 2
  4103  002572  B4D8               	btfsc	status,2,c
  4104  002574  D6CE               	goto	l7673
  4105  002576  0A01               	xorlw	1	; case 3
  4106  002578  B4D8               	btfsc	status,2,c
  4107  00257A  D799               	goto	l7757
  4108  00257C  0A07               	xorlw	7	; case 4
  4109  00257E  B4D8               	btfsc	status,2,c
  4110  002580  D7B8               	goto	l7785
  4111  002582  0A01               	xorlw	1	; case 5
  4112  002584  B4D8               	btfsc	status,2,c
  4113  002586  D7C4               	goto	l7787
  4114  002588  0A03               	xorlw	3	; case 6
  4115  00258A  B4D8               	btfsc	status,2,c
  4116  00258C  D7C5               	goto	l7791
  4117  00258E  0A01               	xorlw	1	; case 7
  4118  002590  B4D8               	btfsc	status,2,c
  4119  002592  D7C6               	goto	l7795
  4120  002594  0A0F               	xorlw	15	; case 8
  4121  002596  B4D8               	btfsc	status,2,c
  4122  002598  D7C7               	goto	l7799
  4123  00259A  0A01               	xorlw	1	; case 9
  4124  00259C  B4D8               	btfsc	status,2,c
  4125  00259E  D7C8               	goto	l7803
  4126  0025A0  0A03               	xorlw	3	; case 10
  4127  0025A2  B4D8               	btfsc	status,2,c
  4128  0025A4  D7C9               	goto	l7807
  4129  0025A6  0A01               	xorlw	1	; case 11
  4130  0025A8  B4D8               	btfsc	status,2,c
  4131  0025AA  D7CA               	goto	l7811
  4132  0025AC  0A07               	xorlw	7	; case 12
  4133  0025AE  B4D8               	btfsc	status,2,c
  4134  0025B0  D7CB               	goto	l7815
  4135  0025B2  D7D2               	goto	l7819
  4136  0025B4                     l7825:
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;State_Mchn.c: 1242: return(Return_Val);
  4140  0025B4  0100               	movlb	0	; () banked
  4141  0025B6  51C6               	movf	Train_Path@Return_Val& (0+255),w,b
  4142  0025B8  0012               	return	
  4143  0025BA                     __end_of_Train_Path:
  4144                           	opt stack 0
  4145                           tblptru	equ	0xFF8
  4146                           tblptrh	equ	0xFF7
  4147                           tblptrl	equ	0xFF6
  4148                           tablat	equ	0xFF5
  4149                           postinc0	equ	0xFEE
  4150                           wreg	equ	0xFE8
  4151                           postdec1	equ	0xFE5
  4152                           fsr1h	equ	0xFE2
  4153                           fsr1l	equ	0xFE1
  4154                           status	equ	0xFD8
  4155                           
  4156 ;; *************** function _Train_Move_Right_Start *****************
  4157 ;; Defined at:
  4158 ;;		line 27 in file "../train_move_right.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      unsigned char 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4172 ;;      Params:         0       0       0       0       0       0       0       0       0
  4173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4175 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4176 ;;Total ram usage:        0 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    8
  4179 ;; This function calls:
  4180 ;;		_GETxAPIxVAL
  4181 ;;		_SETxAPIxVAL
  4182 ;;		_SETxPWM
  4183 ;; This function is called by:
  4184 ;;		_Train_Path
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text3
  4189  002DB8                     __ptext3:
  4190                           	opt stack 0
  4191  002DB8                     _Train_Move_Right_Start:
  4192                           	opt stack 20
  4193                           
  4194                           ;train_move_right.c: 29: static char Return_Val = 1;
  4195                           ;train_move_right.c: 30: static unsigned int Train_Move_Wait_Time = 0;
  4196                           ;train_move_right.c: 32: switch(Switch_Train_Move)
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;incstack = 0
  4200  002DB8  D08C               	goto	l6835
  4201  002DBA                     l6789:
  4202  002DBA  0E14               	movlw	20
  4203  002DBC  EC69  F01E         	call	_GETxAPIxVAL
  4204  002DC0  0100               	movlb	0	; () banked
  4205  002DC2  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  4206  002DC4  0100               	movlb	0	; () banked
  4207  002DC6  5D68               	subwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),w,b
  4208  002DC8  0100               	movlb	0	; () banked
  4209  002DCA  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4210  002DCC  0100               	movlb	0	; () banked
  4211  002DCE  5969               	subwfb	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  4212  002DD0  A0D8               	btfss	status,0,c
  4213  002DD2  D002               	goto	l6793
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;train_move_right.c: 37: {
  4217                           ;train_move_right.c: 38: Switch_Train_Move = 1;
  4218  002DD4  0E01               	movlw	1
  4219  002DD6  D034               	goto	L62
  4220  002DD8                     l6793:
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;train_move_right.c: 42: }
  4224                           ;train_move_right.c: 43: Train_Move_Wait_Time++;
  4225  002DD8  0100               	movlb	0	; () banked
  4226  002DDA  4B68               	infsnz	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),f,b
  4227  002DDC  2B69               	incf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;train_move_right.c: 44: Switch_Train_Move = 0;
  4231  002DDE  0E00               	movlw	0
  4232  002DE0  0100               	movlb	0	; () banked
  4233  002DE2  6F83               	movwf	_Switch_Train_Move& (0+255),b
  4234  002DE4  D072               	goto	L63
  4235  002DE6                     l6799:
  4236                           
  4237                           ; BSR set to: 0
  4238  002DE6  0E16               	movlw	22
  4239  002DE8  EC69  F01E         	call	_GETxAPIxVAL
  4240  002DEC  C090  F0B1         	movff	?_GETxAPIxVAL,SETxPWM@speed
  4241  002DF0  C091  F0B2         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  4242  002DF4  0E01               	movlw	1
  4243  002DF6  0100               	movlb	0	; () banked
  4244  002DF8  6FB3               	movwf	SETxPWM@direction& (0+255),b
  4245  002DFA  ECBF  F01B         	call	_SETxPWM	;wreg free
  4246                           
  4247                           ;train_move_right.c: 49: Train_Move_Pwm_Count = GETxAPIxVAL(22);
  4248  002DFE  0E16               	movlw	22
  4249  002E00  EC69  F01E         	call	_GETxAPIxVAL
  4250  002E04  C090  F072         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  4251  002E08  C091  F073         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  4252                           
  4253                           ;train_move_right.c: 50: SETxAPIxVAL(69, 0);;
  4254  002E0C  0E00               	movlw	0
  4255  002E0E  0100               	movlb	0	; () banked
  4256  002E10  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  4257  002E12  0E00               	movlw	0
  4258  002E14  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  4259  002E16  0E45               	movlw	69
  4260  002E18  EC5C  F01D         	call	_SETxAPIxVAL
  4261                           
  4262                           ;train_move_right.c: 51: Return_Val = 1;
  4263  002E1C  0E01               	movlw	1
  4264  002E1E  0100               	movlb	0	; () banked
  4265  002E20  6FC5               	movwf	Train_Move_Right_Start@Return_Val& (0+255),b
  4266  002E22  D01C               	goto	l6817
  4267  002E24                     l6809:
  4268                           
  4269                           ; BSR set to: 0
  4270  002E24  0E12               	movlw	18
  4271  002E26  EC69  F01E         	call	_GETxAPIxVAL
  4272  002E2A  0100               	movlb	0	; () banked
  4273  002E2C  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  4274  002E2E  0100               	movlb	0	; () banked
  4275  002E30  5D68               	subwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),w,b
  4276  002E32  0100               	movlb	0	; () banked
  4277  002E34  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4278  002E36  0100               	movlb	0	; () banked
  4279  002E38  5969               	subwfb	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  4280  002E3A  A0D8               	btfss	status,0,c
  4281  002E3C  D009               	goto	l6813
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;train_move_right.c: 56: {
  4285                           ;train_move_right.c: 57: Switch_Train_Move = 3;
  4286  002E3E  0E03               	movlw	3
  4287  002E40                     L62:
  4288  002E40  0100               	movlb	0	; () banked
  4289  002E42  6F83               	movwf	_Switch_Train_Move& (0+255),b
  4290                           
  4291                           ;train_move_right.c: 58: Train_Move_Wait_Time = 0;
  4292  002E44  0E00               	movlw	0
  4293  002E46  0100               	movlb	0	; () banked
  4294  002E48  6F69               	movwf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),b
  4295  002E4A  0E00               	movlw	0
  4296  002E4C  6F68               	movwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),b
  4297  002E4E  D03D               	goto	L63
  4298  002E50                     l6813:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;train_move_right.c: 61: }
  4302                           ;train_move_right.c: 62: Return_Val = 1;
  4303  002E50  0E01               	movlw	1
  4304  002E52  0100               	movlb	0	; () banked
  4305  002E54  6FC5               	movwf	Train_Move_Right_Start@Return_Val& (0+255),b
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;train_move_right.c: 63: Train_Move_Wait_Time++;
  4309  002E56  0100               	movlb	0	; () banked
  4310  002E58  4B68               	infsnz	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),f,b
  4311  002E5A  2B69               	incf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  4312  002E5C                     l6817:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;train_move_right.c: 64: Switch_Train_Move = 2;
  4316  002E5C  0E02               	movlw	2
  4317  002E5E  0100               	movlb	0	; () banked
  4318  002E60  6F83               	movwf	_Switch_Train_Move& (0+255),b
  4319                           
  4320                           ;train_move_right.c: 65: break;
  4321  002E62  D045               	goto	l6837
  4322  002E64                     l6819:
  4323                           
  4324                           ; BSR set to: 0
  4325  002E64  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  4326  002E68  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  4327  002E6C  0E01               	movlw	1
  4328  002E6E  0100               	movlb	0	; () banked
  4329  002E70  6FB3               	movwf	SETxPWM@direction& (0+255),b
  4330  002E72  ECBF  F01B         	call	_SETxPWM	;wreg free
  4331                           
  4332                           ;train_move_right.c: 68: if (Train_Move_Pwm_Count >= GETxAPIxVAL(23))
  4333  002E76  0E17               	movlw	23
  4334  002E78  EC69  F01E         	call	_GETxAPIxVAL
  4335  002E7C  0100               	movlb	0	; () banked
  4336  002E7E  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  4337  002E80  0100               	movlb	0	; () banked
  4338  002E82  5D72               	subwf	_Train_Move_Pwm_Count& (0+255),w,b
  4339  002E84  0100               	movlb	0	; () banked
  4340  002E86  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4341  002E88  0100               	movlb	0	; () banked
  4342  002E8A  5973               	subwfb	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  4343  002E8C  A0D8               	btfss	status,0,c
  4344  002E8E  D005               	goto	l6825
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;train_move_right.c: 69: {
  4348                           ;train_move_right.c: 70: Switch_Train_Move = 0;
  4349  002E90  0E00               	movlw	0
  4350  002E92  0100               	movlb	0	; () banked
  4351  002E94  6F83               	movwf	_Switch_Train_Move& (0+255),b
  4352                           
  4353                           ;train_move_right.c: 71: Return_Val = 0;
  4354  002E96  0E00               	movlw	0
  4355  002E98  D019               	goto	L61
  4356  002E9A                     l6825:
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;train_move_right.c: 73: }
  4360                           ;train_move_right.c: 74: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  4361  002E9A  0E1A               	movlw	26
  4362  002E9C  EC69  F01E         	call	_GETxAPIxVAL
  4363  002EA0  0100               	movlb	0	; () banked
  4364  002EA2  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  4365  002EA4  0100               	movlb	0	; () banked
  4366  002EA6  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  4367  002EA8  0100               	movlb	0	; () banked
  4368  002EAA  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4369  002EAC  0100               	movlb	0	; () banked
  4370  002EAE  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  4371  002EB0  A0D8               	btfss	status,0,c
  4372  002EB2  D008               	goto	l6831
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;train_move_right.c: 75: {
  4376                           ;train_move_right.c: 76: Train_Move_Pwm_Count++;
  4377  002EB4  0100               	movlb	0	; () banked
  4378  002EB6  4B72               	infsnz	_Train_Move_Pwm_Count& (0+255),f,b
  4379  002EB8  2B73               	incf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;train_move_right.c: 77: Train_Move_Pwm_Fast_Count = 0;
  4383  002EBA  0E00               	movlw	0
  4384  002EBC  0100               	movlb	0	; () banked
  4385  002EBE  6F75               	movwf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),b
  4386  002EC0  0E00               	movlw	0
  4387  002EC2  6F74               	movwf	_Train_Move_Pwm_Fast_Count& (0+255),b
  4388  002EC4                     l6831:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;train_move_right.c: 78: }
  4392                           ;train_move_right.c: 79: Train_Move_Pwm_Fast_Count++;
  4393  002EC4  0100               	movlb	0	; () banked
  4394  002EC6  4B74               	infsnz	_Train_Move_Pwm_Fast_Count& (0+255),f,b
  4395  002EC8  2B75               	incf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),f,b
  4396  002ECA                     L63:
  4397                           
  4398                           ;train_move_right.c: 80: Return_Val = 1;
  4399  002ECA  0E01               	movlw	1
  4400  002ECC                     L61:
  4401  002ECC  0100               	movlb	0	; () banked
  4402  002ECE  6FC5               	movwf	Train_Move_Right_Start@Return_Val& (0+255),b
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;train_move_right.c: 84: }
  4406                           
  4407                           ; BSR set to: 0
  4408                           
  4409                           ;train_move_right.c: 83: default : break;
  4410                           
  4411                           ;train_move_right.c: 81: break;
  4412  002ED0  D00E               	goto	l6837
  4413  002ED2                     l6835:
  4414  002ED2  0100               	movlb	0	; () banked
  4415  002ED4  5183               	movf	_Switch_Train_Move& (0+255),w,b
  4416                           
  4417                           ; Switch size 1, requested type "space"
  4418                           ; Number of cases is 4, Range of values is 0 to 3
  4419                           ; switch strategies available:
  4420                           ; Name         Instructions Cycles
  4421                           ; simple_byte           13     7 (average)
  4422                           ;	Chosen strategy is simple_byte
  4423  002ED6  0A00               	xorlw	0	; case 0
  4424  002ED8  B4D8               	btfsc	status,2,c
  4425  002EDA  D76F               	goto	l6789
  4426  002EDC  0A01               	xorlw	1	; case 1
  4427  002EDE  B4D8               	btfsc	status,2,c
  4428  002EE0  D782               	goto	l6799
  4429  002EE2  0A03               	xorlw	3	; case 2
  4430  002EE4  B4D8               	btfsc	status,2,c
  4431  002EE6  D79E               	goto	l6809
  4432  002EE8  0A01               	xorlw	1	; case 3
  4433  002EEA  B4D8               	btfsc	status,2,c
  4434  002EEC  D7BB               	goto	l6819
  4435  002EEE                     l6837:
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;train_move_right.c: 86: return(Return_Val);
  4439  002EEE  0100               	movlb	0	; () banked
  4440  002EF0  51C5               	movf	Train_Move_Right_Start@Return_Val& (0+255),w,b
  4441  002EF2  0012               	return	
  4442  002EF4                     __end_of_Train_Move_Right_Start:
  4443                           	opt stack 0
  4444                           tblptru	equ	0xFF8
  4445                           tblptrh	equ	0xFF7
  4446                           tblptrl	equ	0xFF6
  4447                           tablat	equ	0xFF5
  4448                           postinc0	equ	0xFEE
  4449                           wreg	equ	0xFE8
  4450                           postdec1	equ	0xFE5
  4451                           fsr1h	equ	0xFE2
  4452                           fsr1l	equ	0xFE1
  4453                           status	equ	0xFD8
  4454                           
  4455 ;; *************** function _Train_Move_Right_Brake *****************
  4456 ;; Defined at:
  4457 ;;		line 254 in file "../train_move_right.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;		None
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      unsigned char 
  4464 ;; Registers used:
  4465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4471 ;;      Params:         0       0       0       0       0       0       0       0       0
  4472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4474 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4475 ;;Total ram usage:        0 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    8
  4478 ;; This function calls:
  4479 ;;		_GETxAPIxVAL
  4480 ;;		_SETxAPIxVAL
  4481 ;;		_SETxPWM
  4482 ;; This function is called by:
  4483 ;;		_Train_Path
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text4
  4488  002B36                     __ptext4:
  4489                           	opt stack 0
  4490  002B36                     _Train_Move_Right_Brake:
  4491                           	opt stack 20
  4492                           
  4493                           ;train_move_right.c: 256: static char Return_Val = 1;
  4494                           ;train_move_right.c: 257: static unsigned int Train_Move_Wait_Time = 0;
  4495                           ;train_move_right.c: 259: switch(Switch_Train_Move)
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;incstack = 0
  4499  002B36  D090               	goto	l6947
  4500  002B38                     l6901:
  4501  002B38  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  4502  002B3C  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  4503  002B40  0E01               	movlw	1
  4504  002B42  0100               	movlb	0	; () banked
  4505  002B44  6FB3               	movwf	SETxPWM@direction& (0+255),b
  4506  002B46  ECBF  F01B         	call	_SETxPWM	;wreg free
  4507                           
  4508                           ;train_move_right.c: 262: if (Train_Move_Pwm_Count <= GETxAPIxVAL(22))
  4509  002B4A  0E16               	movlw	22
  4510  002B4C  EC69  F01E         	call	_GETxAPIxVAL
  4511  002B50  0100               	movlb	0	; () banked
  4512  002B52  5172               	movf	_Train_Move_Pwm_Count& (0+255),w,b
  4513  002B54  0100               	movlb	0	; () banked
  4514  002B56  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  4515  002B58  0100               	movlb	0	; () banked
  4516  002B5A  5173               	movf	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  4517  002B5C  0100               	movlb	0	; () banked
  4518  002B5E  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  4519  002B60  A0D8               	btfss	status,0,c
  4520  002B62  D002               	goto	l6907
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;train_move_right.c: 263: {
  4524                           ;train_move_right.c: 264: Switch_Train_Move = 1;
  4525  002B64  0E01               	movlw	1
  4526  002B66  D072               	goto	L68
  4527  002B68                     l6907:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;train_move_right.c: 267: }
  4531                           ;train_move_right.c: 268: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(25))
  4532  002B68  0E19               	movlw	25
  4533  002B6A  EC69  F01E         	call	_GETxAPIxVAL
  4534  002B6E  0100               	movlb	0	; () banked
  4535  002B70  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  4536  002B72  0100               	movlb	0	; () banked
  4537  002B74  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  4538  002B76  0100               	movlb	0	; () banked
  4539  002B78  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4540  002B7A  0100               	movlb	0	; () banked
  4541  002B7C  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  4542  002B7E  A0D8               	btfss	status,0,c
  4543  002B80  D00A               	goto	l6913
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;train_move_right.c: 269: {
  4547                           ;train_move_right.c: 270: Train_Move_Pwm_Count--;
  4548  002B82  0100               	movlb	0	; () banked
  4549  002B84  0772               	decf	_Train_Move_Pwm_Count& (0+255),f,b
  4550  002B86  A0D8               	btfss	status,0,c
  4551  002B88  0773               	decf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;train_move_right.c: 271: Train_Move_Pwm_Fast_Count = 0;
  4555  002B8A  0E00               	movlw	0
  4556  002B8C  0100               	movlb	0	; () banked
  4557  002B8E  6F75               	movwf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),b
  4558  002B90  0E00               	movlw	0
  4559  002B92  6F74               	movwf	_Train_Move_Pwm_Fast_Count& (0+255),b
  4560                           
  4561                           ;train_move_right.c: 272: }
  4562  002B94  D05D               	goto	l6943
  4563  002B96                     l6913:
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;train_move_right.c: 273: else{Train_Move_Pwm_Fast_Count++;}
  4567  002B96  0100               	movlb	0	; () banked
  4568  002B98  4B74               	infsnz	_Train_Move_Pwm_Fast_Count& (0+255),f,b
  4569  002B9A  2B75               	incf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),f,b
  4570  002B9C  D059               	goto	l6943
  4571  002B9E                     l6917:
  4572                           
  4573                           ; BSR set to: 0
  4574  002B9E  0E12               	movlw	18
  4575  002BA0  EC69  F01E         	call	_GETxAPIxVAL
  4576  002BA4  0100               	movlb	0	; () banked
  4577  002BA6  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  4578  002BA8  0100               	movlb	0	; () banked
  4579  002BAA  5D66               	subwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),w,b
  4580  002BAC  0100               	movlb	0	; () banked
  4581  002BAE  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4582  002BB0  0100               	movlb	0	; () banked
  4583  002BB2  5967               	subwfb	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  4584  002BB4  A0D8               	btfss	status,0,c
  4585  002BB6  D009               	goto	l6921
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;train_move_right.c: 278: {
  4589                           ;train_move_right.c: 279: Switch_Train_Move = 2;
  4590  002BB8  0E02               	movlw	2
  4591  002BBA  0100               	movlb	0	; () banked
  4592  002BBC  6F83               	movwf	_Switch_Train_Move& (0+255),b
  4593                           
  4594                           ;train_move_right.c: 280: Train_Move_Wait_Time = 0;
  4595  002BBE  0E00               	movlw	0
  4596  002BC0  0100               	movlb	0	; () banked
  4597  002BC2  6F67               	movwf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),b
  4598  002BC4  0E00               	movlw	0
  4599  002BC6  6F66               	movwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),b
  4600  002BC8  D043               	goto	l6943
  4601  002BCA                     l6921:
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;train_move_right.c: 283: }
  4605                           ;train_move_right.c: 284: Return_Val = 1;
  4606  002BCA  0E01               	movlw	1
  4607  002BCC  0100               	movlb	0	; () banked
  4608  002BCE  6FC4               	movwf	Train_Move_Right_Brake@Return_Val& (0+255),b
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;train_move_right.c: 285: Train_Move_Wait_Time++;
  4612  002BD0  0100               	movlb	0	; () banked
  4613  002BD2  4B66               	infsnz	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),f,b
  4614  002BD4  2B67               	incf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;train_move_right.c: 286: Switch_Train_Move = 1;
  4618  002BD6  0E01               	movlw	1
  4619  002BD8  0100               	movlb	0	; () banked
  4620  002BDA  6F83               	movwf	_Switch_Train_Move& (0+255),b
  4621                           
  4622                           ;train_move_right.c: 287: break;
  4623  002BDC  D04B               	goto	l6949
  4624  002BDE                     l6927:
  4625                           
  4626                           ; BSR set to: 0
  4627  002BDE  0E16               	movlw	22
  4628  002BE0  EC69  F01E         	call	_GETxAPIxVAL
  4629  002BE4  C090  F0B1         	movff	?_GETxAPIxVAL,SETxPWM@speed
  4630  002BE8  C091  F0B2         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  4631  002BEC  0E01               	movlw	1
  4632  002BEE  0100               	movlb	0	; () banked
  4633  002BF0  6FB3               	movwf	SETxPWM@direction& (0+255),b
  4634  002BF2  ECBF  F01B         	call	_SETxPWM	;wreg free
  4635                           
  4636                           ;train_move_right.c: 290: SETxAPIxVAL(69, 1);;
  4637  002BF6  0E00               	movlw	0
  4638  002BF8  0100               	movlb	0	; () banked
  4639  002BFA  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  4640  002BFC  0E01               	movlw	1
  4641  002BFE  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  4642  002C00  0E45               	movlw	69
  4643  002C02  EC5C  F01D         	call	_SETxAPIxVAL
  4644                           
  4645                           ;train_move_right.c: 291: Train_Move_Pwm_Count = GETxAPIxVAL(22);
  4646  002C06  0E16               	movlw	22
  4647  002C08  EC69  F01E         	call	_GETxAPIxVAL
  4648  002C0C  C090  F072         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  4649  002C10  C091  F073         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  4650  002C14  D01A               	goto	l6941
  4651  002C16                     l6935:
  4652                           
  4653                           ; BSR set to: 0
  4654  002C16  0E14               	movlw	20
  4655  002C18  EC69  F01E         	call	_GETxAPIxVAL
  4656  002C1C  0100               	movlb	0	; () banked
  4657  002C1E  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  4658  002C20  0100               	movlb	0	; () banked
  4659  002C22  5D66               	subwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),w,b
  4660  002C24  0100               	movlb	0	; () banked
  4661  002C26  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4662  002C28  0100               	movlb	0	; () banked
  4663  002C2A  5967               	subwfb	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  4664  002C2C  A0D8               	btfss	status,0,c
  4665  002C2E  D00A               	goto	l6939
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;train_move_right.c: 297: {
  4669                           ;train_move_right.c: 298: Switch_Train_Move = 0;
  4670  002C30  0E00               	movlw	0
  4671  002C32  0100               	movlb	0	; () banked
  4672  002C34  6F83               	movwf	_Switch_Train_Move& (0+255),b
  4673                           
  4674                           ;train_move_right.c: 299: Train_Move_Wait_Time = 0;
  4675  002C36  0E00               	movlw	0
  4676  002C38  0100               	movlb	0	; () banked
  4677  002C3A  6F67               	movwf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),b
  4678  002C3C  0E00               	movlw	0
  4679  002C3E  6F66               	movwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),b
  4680                           
  4681                           ;train_move_right.c: 300: Return_Val = 0;
  4682  002C40  0E00               	movlw	0
  4683  002C42  D007               	goto	L66
  4684  002C44                     l6939:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;train_move_right.c: 302: }
  4688                           ;train_move_right.c: 303: Train_Move_Wait_Time++;
  4689  002C44  0100               	movlb	0	; () banked
  4690  002C46  4B66               	infsnz	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),f,b
  4691  002C48  2B67               	incf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  4692  002C4A                     l6941:
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;train_move_right.c: 304: Switch_Train_Move = 3;
  4696  002C4A  0E03               	movlw	3
  4697  002C4C                     L68:
  4698  002C4C  0100               	movlb	0	; () banked
  4699  002C4E  6F83               	movwf	_Switch_Train_Move& (0+255),b
  4700  002C50                     l6943:
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;train_move_right.c: 305: Return_Val = 1;
  4704  002C50  0E01               	movlw	1
  4705  002C52                     L66:
  4706  002C52  0100               	movlb	0	; () banked
  4707  002C54  6FC4               	movwf	Train_Move_Right_Brake@Return_Val& (0+255),b
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;train_move_right.c: 309: }
  4711                           
  4712                           ; BSR set to: 0
  4713                           
  4714                           ;train_move_right.c: 308: default : break;
  4715                           
  4716                           ;train_move_right.c: 306: break;
  4717  002C56  D00E               	goto	l6949
  4718  002C58                     l6947:
  4719  002C58  0100               	movlb	0	; () banked
  4720  002C5A  5183               	movf	_Switch_Train_Move& (0+255),w,b
  4721                           
  4722                           ; Switch size 1, requested type "space"
  4723                           ; Number of cases is 4, Range of values is 0 to 3
  4724                           ; switch strategies available:
  4725                           ; Name         Instructions Cycles
  4726                           ; simple_byte           13     7 (average)
  4727                           ;	Chosen strategy is simple_byte
  4728  002C5C  0A00               	xorlw	0	; case 0
  4729  002C5E  B4D8               	btfsc	status,2,c
  4730  002C60  D76B               	goto	l6901
  4731  002C62  0A01               	xorlw	1	; case 1
  4732  002C64  B4D8               	btfsc	status,2,c
  4733  002C66  D79B               	goto	l6917
  4734  002C68  0A03               	xorlw	3	; case 2
  4735  002C6A  B4D8               	btfsc	status,2,c
  4736  002C6C  D7B8               	goto	l6927
  4737  002C6E  0A01               	xorlw	1	; case 3
  4738  002C70  B4D8               	btfsc	status,2,c
  4739  002C72  D7D1               	goto	l6935
  4740  002C74                     l6949:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;train_move_right.c: 311: return(Return_Val);
  4744  002C74  0100               	movlb	0	; () banked
  4745  002C76  51C4               	movf	Train_Move_Right_Brake@Return_Val& (0+255),w,b
  4746  002C78  0012               	return	
  4747  002C7A                     __end_of_Train_Move_Right_Brake:
  4748                           	opt stack 0
  4749                           tblptru	equ	0xFF8
  4750                           tblptrh	equ	0xFF7
  4751                           tblptrl	equ	0xFF6
  4752                           tablat	equ	0xFF5
  4753                           postinc0	equ	0xFEE
  4754                           wreg	equ	0xFE8
  4755                           postdec1	equ	0xFE5
  4756                           fsr1h	equ	0xFE2
  4757                           fsr1l	equ	0xFE1
  4758                           status	equ	0xFD8
  4759                           
  4760 ;; *************** function _Train_Move_Left_Start *****************
  4761 ;; Defined at:
  4762 ;;		line 27 in file "../train_move_left.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;		None
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      unsigned char 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4776 ;;      Params:         0       0       0       0       0       0       0       0       0
  4777 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4779 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4780 ;;Total ram usage:        0 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    8
  4783 ;; This function calls:
  4784 ;;		_GETxAPIxVAL
  4785 ;;		_SETxAPIxVAL
  4786 ;;		_SETxPWM
  4787 ;; This function is called by:
  4788 ;;		_Train_Path
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text5
  4793  002EF4                     __ptext5:
  4794                           	opt stack 0
  4795  002EF4                     _Train_Move_Left_Start:
  4796                           	opt stack 20
  4797                           
  4798                           ;train_move_left.c: 29: static char Return_Val = 1;
  4799                           ;train_move_left.c: 30: static unsigned int Train_Move_Wait_Time = 0;
  4800                           ;train_move_left.c: 32: switch(Switch_Train_Move)
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;incstack = 0
  4804  002EF4  D08A               	goto	l6893
  4805  002EF6                     l6843:
  4806  002EF6  0E14               	movlw	20
  4807  002EF8  EC69  F01E         	call	_GETxAPIxVAL
  4808  002EFC  0100               	movlb	0	; () banked
  4809  002EFE  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  4810  002F00  0100               	movlb	0	; () banked
  4811  002F02  5D64               	subwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),w,b
  4812  002F04  0100               	movlb	0	; () banked
  4813  002F06  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4814  002F08  0100               	movlb	0	; () banked
  4815  002F0A  5965               	subwfb	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  4816  002F0C  A0D8               	btfss	status,0,c
  4817  002F0E  D002               	goto	l6847
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;train_move_left.c: 37: {
  4821                           ;train_move_left.c: 38: Switch_Train_Move = 1;
  4822  002F10  0E01               	movlw	1
  4823  002F12  D036               	goto	L71
  4824  002F14                     l6847:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;train_move_left.c: 42: }
  4828                           ;train_move_left.c: 43: Train_Move_Wait_Time++;
  4829  002F14  0100               	movlb	0	; () banked
  4830  002F16  4B64               	infsnz	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),f,b
  4831  002F18  2B65               	incf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;train_move_left.c: 44: Switch_Train_Move = 0;
  4835  002F1A  0E00               	movlw	0
  4836  002F1C  D020               	goto	L69
  4837  002F1E                     l6851:
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;train_move_left.c: 45: Return_Val = 1;
  4841  002F1E  0E01               	movlw	1
  4842  002F20  0100               	movlb	0	; () banked
  4843  002F22  6FC3               	movwf	Train_Move_Left_Start@Return_Val& (0+255),b
  4844                           
  4845                           ;train_move_left.c: 46: break;
  4846  002F24  D080               	goto	l6895
  4847  002F26                     l6853:
  4848                           
  4849                           ; BSR set to: 0
  4850  002F26  0E15               	movlw	21
  4851  002F28  EC69  F01E         	call	_GETxAPIxVAL
  4852  002F2C  C090  F0B1         	movff	?_GETxAPIxVAL,SETxPWM@speed
  4853  002F30  C091  F0B2         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  4854  002F34  0E00               	movlw	0
  4855  002F36  0100               	movlb	0	; () banked
  4856  002F38  6FB3               	movwf	SETxPWM@direction& (0+255),b
  4857  002F3A  ECBF  F01B         	call	_SETxPWM	;wreg free
  4858                           
  4859                           ;train_move_left.c: 49: Train_Move_Pwm_Count = GETxAPIxVAL(21);
  4860  002F3E  0E15               	movlw	21
  4861  002F40  EC69  F01E         	call	_GETxAPIxVAL
  4862  002F44  C090  F072         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  4863  002F48  C091  F073         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  4864                           
  4865                           ;train_move_left.c: 50: SETxAPIxVAL(69, 0);
  4866  002F4C  0E00               	movlw	0
  4867  002F4E  0100               	movlb	0	; () banked
  4868  002F50  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  4869  002F52  0E00               	movlw	0
  4870  002F54  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  4871  002F56  0E45               	movlw	69
  4872  002F58  EC5C  F01D         	call	_SETxAPIxVAL
  4873  002F5C  D01C               	goto	l6869
  4874  002F5E                     L69:
  4875  002F5E  0100               	movlb	0	; () banked
  4876  002F60  6F83               	movwf	_Switch_Train_Move& (0+255),b
  4877  002F62  D7DD               	goto	l6851
  4878  002F64                     l6863:
  4879                           
  4880                           ; BSR set to: 0
  4881  002F64  0E12               	movlw	18
  4882  002F66  EC69  F01E         	call	_GETxAPIxVAL
  4883  002F6A  0100               	movlb	0	; () banked
  4884  002F6C  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  4885  002F6E  0100               	movlb	0	; () banked
  4886  002F70  5D64               	subwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),w,b
  4887  002F72  0100               	movlb	0	; () banked
  4888  002F74  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4889  002F76  0100               	movlb	0	; () banked
  4890  002F78  5965               	subwfb	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  4891  002F7A  A0D8               	btfss	status,0,c
  4892  002F7C  D009               	goto	l6867
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;train_move_left.c: 56: {
  4896                           ;train_move_left.c: 57: Switch_Train_Move = 3;
  4897  002F7E  0E03               	movlw	3
  4898  002F80                     L71:
  4899  002F80  0100               	movlb	0	; () banked
  4900  002F82  6F83               	movwf	_Switch_Train_Move& (0+255),b
  4901                           
  4902                           ;train_move_left.c: 58: Train_Move_Wait_Time = 0;
  4903  002F84  0E00               	movlw	0
  4904  002F86  0100               	movlb	0	; () banked
  4905  002F88  6F65               	movwf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),b
  4906  002F8A  0E00               	movlw	0
  4907  002F8C  6F64               	movwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),b
  4908  002F8E  D7C7               	goto	l6851
  4909  002F90                     l6867:
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;train_move_left.c: 61: }
  4913                           ;train_move_left.c: 62: Train_Move_Wait_Time++;
  4914  002F90  0100               	movlb	0	; () banked
  4915  002F92  4B64               	infsnz	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),f,b
  4916  002F94  2B65               	incf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  4917  002F96                     l6869:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;train_move_left.c: 63: Switch_Train_Move = 2;
  4921  002F96  0E02               	movlw	2
  4922  002F98  D7E2               	goto	L69
  4923  002F9A                     l6873:
  4924                           
  4925                           ; BSR set to: 0
  4926  002F9A  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  4927  002F9E  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  4928  002FA2  0E00               	movlw	0
  4929  002FA4  0100               	movlb	0	; () banked
  4930  002FA6  6FB3               	movwf	SETxPWM@direction& (0+255),b
  4931  002FA8  ECBF  F01B         	call	_SETxPWM	;wreg free
  4932                           
  4933                           ;train_move_left.c: 68: Return_Val = 1;
  4934  002FAC  0E01               	movlw	1
  4935  002FAE  0100               	movlb	0	; () banked
  4936  002FB0  6FC3               	movwf	Train_Move_Left_Start@Return_Val& (0+255),b
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;train_move_left.c: 69: if (Train_Move_Pwm_Count >= GETxAPIxVAL(24))
  4940  002FB2  0E18               	movlw	24
  4941  002FB4  EC69  F01E         	call	_GETxAPIxVAL
  4942  002FB8  0100               	movlb	0	; () banked
  4943  002FBA  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  4944  002FBC  0100               	movlb	0	; () banked
  4945  002FBE  5D72               	subwf	_Train_Move_Pwm_Count& (0+255),w,b
  4946  002FC0  0100               	movlb	0	; () banked
  4947  002FC2  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4948  002FC4  0100               	movlb	0	; () banked
  4949  002FC6  5973               	subwfb	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  4950  002FC8  A0D8               	btfss	status,0,c
  4951  002FCA  D005               	goto	l6883
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;train_move_left.c: 70: {
  4955                           ;train_move_left.c: 71: Switch_Train_Move = 0;
  4956  002FCC  0E00               	movlw	0
  4957  002FCE  0100               	movlb	0	; () banked
  4958  002FD0  6F83               	movwf	_Switch_Train_Move& (0+255),b
  4959                           
  4960                           ;train_move_left.c: 72: Return_Val = 0;
  4961  002FD2  0E00               	movlw	0
  4962  002FD4  D7A5               	goto	L70
  4963  002FD6                     l6883:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;train_move_left.c: 75: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  4967  002FD6  0E1A               	movlw	26
  4968  002FD8  EC69  F01E         	call	_GETxAPIxVAL
  4969  002FDC  0100               	movlb	0	; () banked
  4970  002FDE  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  4971  002FE0  0100               	movlb	0	; () banked
  4972  002FE2  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  4973  002FE4  0100               	movlb	0	; () banked
  4974  002FE6  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4975  002FE8  0100               	movlb	0	; () banked
  4976  002FEA  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  4977  002FEC  A0D8               	btfss	status,0,c
  4978  002FEE  D009               	goto	l6889
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;train_move_left.c: 76: {
  4982                           ;train_move_left.c: 77: Train_Move_Pwm_Count++;
  4983  002FF0  0100               	movlb	0	; () banked
  4984  002FF2  4B72               	infsnz	_Train_Move_Pwm_Count& (0+255),f,b
  4985  002FF4  2B73               	incf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;train_move_left.c: 78: Train_Move_Pwm_Fast_Count = 0;
  4989  002FF6  0E00               	movlw	0
  4990  002FF8  0100               	movlb	0	; () banked
  4991  002FFA  6F75               	movwf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),b
  4992  002FFC  0E00               	movlw	0
  4993  002FFE  6F74               	movwf	_Train_Move_Pwm_Fast_Count& (0+255),b
  4994                           
  4995                           ;train_move_left.c: 79: }
  4996  003000  D012               	goto	l6895
  4997  003002                     l6889:
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;train_move_left.c: 80: else{Train_Move_Pwm_Fast_Count++;}
  5001  003002  0100               	movlb	0	; () banked
  5002  003004  4B74               	infsnz	_Train_Move_Pwm_Fast_Count& (0+255),f,b
  5003  003006  2B75               	incf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),f,b
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;train_move_left.c: 83: }
  5007                           
  5008                           ; BSR set to: 0
  5009                           
  5010                           ;train_move_left.c: 82: default : break;
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;train_move_left.c: 81: break;
  5014                           
  5015                           ; BSR set to: 0
  5016  003008  D00E               	goto	l6895
  5017  00300A                     l6893:
  5018  00300A  0100               	movlb	0	; () banked
  5019  00300C  5183               	movf	_Switch_Train_Move& (0+255),w,b
  5020                           
  5021                           ; Switch size 1, requested type "space"
  5022                           ; Number of cases is 4, Range of values is 0 to 3
  5023                           ; switch strategies available:
  5024                           ; Name         Instructions Cycles
  5025                           ; simple_byte           13     7 (average)
  5026                           ;	Chosen strategy is simple_byte
  5027  00300E  0A00               	xorlw	0	; case 0
  5028  003010  B4D8               	btfsc	status,2,c
  5029  003012  D771               	goto	l6843
  5030  003014  0A01               	xorlw	1	; case 1
  5031  003016  B4D8               	btfsc	status,2,c
  5032  003018  D786               	goto	l6853
  5033  00301A  0A03               	xorlw	3	; case 2
  5034  00301C  B4D8               	btfsc	status,2,c
  5035  00301E  D7A2               	goto	l6863
  5036  003020  0A01               	xorlw	1	; case 3
  5037  003022  B4D8               	btfsc	status,2,c
  5038  003024  D7BA               	goto	l6873
  5039  003026                     l6895:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;train_move_left.c: 85: return(Return_Val);
  5043  003026  0100               	movlb	0	; () banked
  5044  003028  51C3               	movf	Train_Move_Left_Start@Return_Val& (0+255),w,b
  5045  00302A  0012               	return	
  5046  00302C                     __end_of_Train_Move_Left_Start:
  5047                           	opt stack 0
  5048                           tblptru	equ	0xFF8
  5049                           tblptrh	equ	0xFF7
  5050                           tblptrl	equ	0xFF6
  5051                           tablat	equ	0xFF5
  5052                           postinc0	equ	0xFEE
  5053                           wreg	equ	0xFE8
  5054                           postdec1	equ	0xFE5
  5055                           fsr1h	equ	0xFE2
  5056                           fsr1l	equ	0xFE1
  5057                           status	equ	0xFD8
  5058                           
  5059 ;; *************** function _Train_Move_Left_Brake *****************
  5060 ;; Defined at:
  5061 ;;		line 254 in file "../train_move_left.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;		None
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;		None
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      unsigned char 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5075 ;;      Params:         0       0       0       0       0       0       0       0       0
  5076 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5078 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5079 ;;Total ram usage:        0 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    8
  5082 ;; This function calls:
  5083 ;;		_GETxAPIxVAL
  5084 ;;		_SETxAPIxVAL
  5085 ;;		_SETxPWM
  5086 ;; This function is called by:
  5087 ;;		_Train_Path
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text6
  5092  0029EC                     __ptext6:
  5093                           	opt stack 0
  5094  0029EC                     _Train_Move_Left_Brake:
  5095                           	opt stack 20
  5096                           
  5097                           ;train_move_left.c: 256: static char Return_Val = 1;
  5098                           ;train_move_left.c: 257: static unsigned int Train_Move_Wait_Time = 0;
  5099                           ;train_move_left.c: 259: switch(Switch_Train_Move)
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;incstack = 0
  5103  0029EC  D093               	goto	l7001
  5104  0029EE                     l6955:
  5105  0029EE  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5106  0029F2  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5107  0029F6  0E00               	movlw	0
  5108  0029F8  0100               	movlb	0	; () banked
  5109  0029FA  6FB3               	movwf	SETxPWM@direction& (0+255),b
  5110  0029FC  ECBF  F01B         	call	_SETxPWM	;wreg free
  5111                           
  5112                           ;train_move_left.c: 262: Return_Val = 1;
  5113  002A00  0E01               	movlw	1
  5114  002A02  0100               	movlb	0	; () banked
  5115  002A04  6FC2               	movwf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;train_move_left.c: 263: if (Train_Move_Pwm_Count <= GETxAPIxVAL(21))
  5119  002A06  0E15               	movlw	21
  5120  002A08  EC69  F01E         	call	_GETxAPIxVAL
  5121  002A0C  0100               	movlb	0	; () banked
  5122  002A0E  5172               	movf	_Train_Move_Pwm_Count& (0+255),w,b
  5123  002A10  0100               	movlb	0	; () banked
  5124  002A12  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  5125  002A14  0100               	movlb	0	; () banked
  5126  002A16  5173               	movf	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  5127  002A18  0100               	movlb	0	; () banked
  5128  002A1A  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  5129  002A1C  A0D8               	btfss	status,0,c
  5130  002A1E  D002               	goto	l6963
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;train_move_left.c: 264: {
  5134                           ;train_move_left.c: 265: Switch_Train_Move = 1;
  5135  002A20  0E01               	movlw	1
  5136  002A22  D072               	goto	L98
  5137  002A24                     l6963:
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;train_move_left.c: 268: }
  5141                           ;train_move_left.c: 269: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(25))
  5142  002A24  0E19               	movlw	25
  5143  002A26  EC69  F01E         	call	_GETxAPIxVAL
  5144  002A2A  0100               	movlb	0	; () banked
  5145  002A2C  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  5146  002A2E  0100               	movlb	0	; () banked
  5147  002A30  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  5148  002A32  0100               	movlb	0	; () banked
  5149  002A34  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5150  002A36  0100               	movlb	0	; () banked
  5151  002A38  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  5152  002A3A  A0D8               	btfss	status,0,c
  5153  002A3C  D00A               	goto	l6969
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;train_move_left.c: 270: {
  5157                           ;train_move_left.c: 271: Train_Move_Pwm_Count--;
  5158  002A3E  0100               	movlb	0	; () banked
  5159  002A40  0772               	decf	_Train_Move_Pwm_Count& (0+255),f,b
  5160  002A42  A0D8               	btfss	status,0,c
  5161  002A44  0773               	decf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;train_move_left.c: 272: Train_Move_Pwm_Fast_Count = 0;
  5165  002A46  0E00               	movlw	0
  5166  002A48  0100               	movlb	0	; () banked
  5167  002A4A  6F75               	movwf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),b
  5168  002A4C  0E00               	movlw	0
  5169  002A4E  6F74               	movwf	_Train_Move_Pwm_Fast_Count& (0+255),b
  5170                           
  5171                           ;train_move_left.c: 273: }
  5172  002A50  D06F               	goto	l7003
  5173  002A52                     l6969:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;train_move_left.c: 274: else{Train_Move_Pwm_Fast_Count++;}
  5177  002A52  0100               	movlb	0	; () banked
  5178  002A54  4B74               	infsnz	_Train_Move_Pwm_Fast_Count& (0+255),f,b
  5179  002A56  2B75               	incf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),f,b
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;train_move_left.c: 275: break;
  5183  002A58  D06B               	goto	l7003
  5184  002A5A                     l6971:
  5185                           
  5186                           ; BSR set to: 0
  5187  002A5A  0E12               	movlw	18
  5188  002A5C  EC69  F01E         	call	_GETxAPIxVAL
  5189  002A60  0100               	movlb	0	; () banked
  5190  002A62  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  5191  002A64  0100               	movlb	0	; () banked
  5192  002A66  5D62               	subwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),w,b
  5193  002A68  0100               	movlb	0	; () banked
  5194  002A6A  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5195  002A6C  0100               	movlb	0	; () banked
  5196  002A6E  5963               	subwfb	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  5197  002A70  A0D8               	btfss	status,0,c
  5198  002A72  D009               	goto	l6975
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;train_move_left.c: 278: {
  5202                           ;train_move_left.c: 279: Switch_Train_Move = 2;
  5203  002A74  0E02               	movlw	2
  5204  002A76  0100               	movlb	0	; () banked
  5205  002A78  6F83               	movwf	_Switch_Train_Move& (0+255),b
  5206                           
  5207                           ;train_move_left.c: 280: Train_Move_Wait_Time = 0;
  5208  002A7A  0E00               	movlw	0
  5209  002A7C  0100               	movlb	0	; () banked
  5210  002A7E  6F63               	movwf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),b
  5211  002A80  0E00               	movlw	0
  5212  002A82  6F62               	movwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),b
  5213  002A84  D043               	goto	l6997
  5214  002A86                     l6975:
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;train_move_left.c: 283: }
  5218                           ;train_move_left.c: 284: Return_Val = 1;
  5219  002A86  0E01               	movlw	1
  5220  002A88  0100               	movlb	0	; () banked
  5221  002A8A  6FC2               	movwf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;train_move_left.c: 285: Train_Move_Wait_Time++;
  5225  002A8C  0100               	movlb	0	; () banked
  5226  002A8E  4B62               	infsnz	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),f,b
  5227  002A90  2B63               	incf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;train_move_left.c: 286: Switch_Train_Move = 1;
  5231  002A92  0E01               	movlw	1
  5232  002A94  0100               	movlb	0	; () banked
  5233  002A96  6F83               	movwf	_Switch_Train_Move& (0+255),b
  5234                           
  5235                           ;train_move_left.c: 287: break;
  5236  002A98  D04B               	goto	l7003
  5237  002A9A                     l6981:
  5238                           
  5239                           ; BSR set to: 0
  5240  002A9A  0E15               	movlw	21
  5241  002A9C  EC69  F01E         	call	_GETxAPIxVAL
  5242  002AA0  C090  F0B1         	movff	?_GETxAPIxVAL,SETxPWM@speed
  5243  002AA4  C091  F0B2         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  5244  002AA8  0E00               	movlw	0
  5245  002AAA  0100               	movlb	0	; () banked
  5246  002AAC  6FB3               	movwf	SETxPWM@direction& (0+255),b
  5247  002AAE  ECBF  F01B         	call	_SETxPWM	;wreg free
  5248                           
  5249                           ;train_move_left.c: 290: SETxAPIxVAL(69, 1);;
  5250  002AB2  0E00               	movlw	0
  5251  002AB4  0100               	movlb	0	; () banked
  5252  002AB6  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  5253  002AB8  0E01               	movlw	1
  5254  002ABA  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  5255  002ABC  0E45               	movlw	69
  5256  002ABE  EC5C  F01D         	call	_SETxAPIxVAL
  5257                           
  5258                           ;train_move_left.c: 291: Train_Move_Pwm_Count = GETxAPIxVAL(21);
  5259  002AC2  0E15               	movlw	21
  5260  002AC4  EC69  F01E         	call	_GETxAPIxVAL
  5261  002AC8  C090  F072         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  5262  002ACC  C091  F073         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  5263  002AD0  D01A               	goto	L99
  5264  002AD2                     l6989:
  5265                           
  5266                           ; BSR set to: 0
  5267  002AD2  0E14               	movlw	20
  5268  002AD4  EC69  F01E         	call	_GETxAPIxVAL
  5269  002AD8  0100               	movlb	0	; () banked
  5270  002ADA  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  5271  002ADC  0100               	movlb	0	; () banked
  5272  002ADE  5D62               	subwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),w,b
  5273  002AE0  0100               	movlb	0	; () banked
  5274  002AE2  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5275  002AE4  0100               	movlb	0	; () banked
  5276  002AE6  5963               	subwfb	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  5277  002AE8  A0D8               	btfss	status,0,c
  5278  002AEA  D00A               	goto	l6993
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;train_move_left.c: 297: {
  5282                           ;train_move_left.c: 298: Switch_Train_Move = 0;
  5283  002AEC  0E00               	movlw	0
  5284  002AEE  0100               	movlb	0	; () banked
  5285  002AF0  6F83               	movwf	_Switch_Train_Move& (0+255),b
  5286                           
  5287                           ;train_move_left.c: 299: Train_Move_Wait_Time = 0;
  5288  002AF2  0E00               	movlw	0
  5289  002AF4  0100               	movlb	0	; () banked
  5290  002AF6  6F63               	movwf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),b
  5291  002AF8  0E00               	movlw	0
  5292  002AFA  6F62               	movwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),b
  5293                           
  5294                           ;train_move_left.c: 300: Return_Val = 0;
  5295  002AFC  0E00               	movlw	0
  5296  002AFE  D007               	goto	L74
  5297  002B00                     l6993:
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;train_move_left.c: 302: }
  5301                           ;train_move_left.c: 303: Train_Move_Wait_Time++;
  5302  002B00  0100               	movlb	0	; () banked
  5303  002B02  4B62               	infsnz	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),f,b
  5304  002B04  2B63               	incf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  5305  002B06                     L99:
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;train_move_left.c: 304: Switch_Train_Move = 3;
  5309  002B06  0E03               	movlw	3
  5310  002B08                     L98:
  5311  002B08  0100               	movlb	0	; () banked
  5312  002B0A  6F83               	movwf	_Switch_Train_Move& (0+255),b
  5313  002B0C                     l6997:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;train_move_left.c: 305: Return_Val = 1;
  5317  002B0C  0E01               	movlw	1
  5318  002B0E                     L74:
  5319  002B0E  0100               	movlb	0	; () banked
  5320  002B10  6FC2               	movwf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;train_move_left.c: 309: }
  5324                           
  5325                           ; BSR set to: 0
  5326                           
  5327                           ;train_move_left.c: 308: default : break;
  5328                           
  5329                           ;train_move_left.c: 306: break;
  5330  002B12  D00E               	goto	l7003
  5331  002B14                     l7001:
  5332  002B14  0100               	movlb	0	; () banked
  5333  002B16  5183               	movf	_Switch_Train_Move& (0+255),w,b
  5334                           
  5335                           ; Switch size 1, requested type "space"
  5336                           ; Number of cases is 4, Range of values is 0 to 3
  5337                           ; switch strategies available:
  5338                           ; Name         Instructions Cycles
  5339                           ; simple_byte           13     7 (average)
  5340                           ;	Chosen strategy is simple_byte
  5341  002B18  0A00               	xorlw	0	; case 0
  5342  002B1A  B4D8               	btfsc	status,2,c
  5343  002B1C  D768               	goto	l6955
  5344  002B1E  0A01               	xorlw	1	; case 1
  5345  002B20  B4D8               	btfsc	status,2,c
  5346  002B22  D79B               	goto	l6971
  5347  002B24  0A03               	xorlw	3	; case 2
  5348  002B26  B4D8               	btfsc	status,2,c
  5349  002B28  D7B8               	goto	l6981
  5350  002B2A  0A01               	xorlw	1	; case 3
  5351  002B2C  B4D8               	btfsc	status,2,c
  5352  002B2E  D7D1               	goto	l6989
  5353  002B30                     l7003:
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;train_move_left.c: 311: return(Return_Val);
  5357  002B30  0100               	movlb	0	; () banked
  5358  002B32  51C2               	movf	Train_Move_Left_Brake@Return_Val& (0+255),w,b
  5359  002B34  0012               	return	
  5360  002B36                     __end_of_Train_Move_Left_Brake:
  5361                           	opt stack 0
  5362                           tblptru	equ	0xFF8
  5363                           tblptrh	equ	0xFF7
  5364                           tblptrl	equ	0xFF6
  5365                           tablat	equ	0xFF5
  5366                           postinc0	equ	0xFEE
  5367                           wreg	equ	0xFE8
  5368                           postdec1	equ	0xFE5
  5369                           fsr1h	equ	0xFE2
  5370                           fsr1l	equ	0xFE1
  5371                           status	equ	0xFD8
  5372                           
  5373 ;; *************** function _Right_Mountain_From_The_Right *****************
  5374 ;; Defined at:
  5375 ;;		line 103 in file "../train_move_left.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  rc              1    wreg     unsigned char 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  rc              1   40[BANK0 ] unsigned char 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      unsigned char 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5389 ;;      Params:         0       0       0       0       0       0       0       0       0
  5390 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5392 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5393 ;;Total ram usage:        1 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    8
  5396 ;; This function calls:
  5397 ;;		_GETxAPIxVAL
  5398 ;;		_SETxPWM
  5399 ;; This function is called by:
  5400 ;;		_Train_Path
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text7
  5405  00302C                     __ptext7:
  5406                           	opt stack 0
  5407  00302C                     _Right_Mountain_From_The_Right:
  5408                           	opt stack 20
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;incstack = 0
  5412                           ;Right_Mountain_From_The_Right@rc stored from wreg
  5413  00302C  0100               	movlb	0	; () banked
  5414  00302E  6FB8               	movwf	Right_Mountain_From_The_Right@rc& (0+255),b
  5415                           
  5416                           ;train_move_left.c: 105: static char Return_Val = 1;
  5417                           ;train_move_left.c: 107: switch (Switch_Moutain){
  5418  003030  D08C               	goto	l7181
  5419  003032                     l7129:
  5420  003032  0E03               	movlw	3
  5421  003034  0100               	movlb	0	; () banked
  5422  003036  19B8               	xorwf	Right_Mountain_From_The_Right@rc& (0+255),w,b
  5423  003038  B4D8               	btfsc	status,2,c
  5424  00303A  D00D               	goto	l7135
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;train_move_left.c: 112: else if(Mountain_Delay_Counter >= GETxAPIxVAL(53)){
  5428                           
  5429                           ; BSR set to: 0
  5430                           
  5431                           ;train_move_left.c: 111: }
  5432                           
  5433                           ;train_move_left.c: 110: Mountain_Delay_Counter = 0;
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;train_move_left.c: 109: Switch_Moutain = 1;
  5437  00303C  0E35               	movlw	53
  5438  00303E  EC69  F01E         	call	_GETxAPIxVAL
  5439  003042  0100               	movlb	0	; () banked
  5440  003044  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  5441  003046  0100               	movlb	0	; () banked
  5442  003048  5D70               	subwf	_Mountain_Delay_Counter& (0+255),w,b
  5443  00304A  0100               	movlb	0	; () banked
  5444  00304C  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5445  00304E  0100               	movlb	0	; () banked
  5446  003050  5971               	subwfb	(_Mountain_Delay_Counter+1)& (0+255),w,b
  5447  003052  A0D8               	btfss	status,0,c
  5448  003054  D009               	goto	l7137
  5449  003056                     l7135:
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;train_move_left.c: 113: Switch_Moutain = 1;
  5453  003056  0E01               	movlw	1
  5454  003058  0100               	movlb	0	; () banked
  5455  00305A  6F81               	movwf	_Switch_Moutain& (0+255),b
  5456                           
  5457                           ;train_move_left.c: 114: Mountain_Delay_Counter = 0;
  5458  00305C  0E00               	movlw	0
  5459  00305E  0100               	movlb	0	; () banked
  5460  003060  6F71               	movwf	(_Mountain_Delay_Counter+1)& (0+255),b
  5461  003062  0E00               	movlw	0
  5462  003064  6F70               	movwf	_Mountain_Delay_Counter& (0+255),b
  5463                           
  5464                           ;train_move_left.c: 115: }
  5465  003066  D06D               	goto	l7177
  5466  003068                     l7137:
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;train_move_left.c: 116: else{
  5470                           ;train_move_left.c: 117: Mountain_Delay_Counter++;
  5471  003068  0100               	movlb	0	; () banked
  5472  00306A  4B70               	infsnz	_Mountain_Delay_Counter& (0+255),f,b
  5473  00306C  2B71               	incf	(_Mountain_Delay_Counter+1)& (0+255),f,b
  5474                           
  5475                           ; BSR set to: 0
  5476  00306E  D069               	goto	l7177
  5477  003070                     l7141:
  5478                           
  5479                           ; BSR set to: 0
  5480  003070  0E04               	movlw	4
  5481  003072  0100               	movlb	0	; () banked
  5482  003074  19B8               	xorwf	Right_Mountain_From_The_Right@rc& (0+255),w,b
  5483  003076  A4D8               	btfss	status,2,c
  5484  003078  D028               	goto	l7159
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;train_move_left.c: 123: SETxPWM(Train_Move_Pwm_Count, 0);
  5488  00307A  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5489  00307E  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5490  003082  0E00               	movlw	0
  5491  003084  0100               	movlb	0	; () banked
  5492  003086  6FB3               	movwf	SETxPWM@direction& (0+255),b
  5493  003088  ECBF  F01B         	call	_SETxPWM	;wreg free
  5494                           
  5495                           ;train_move_left.c: 124: if (Train_Move_Pwm_Count <= GETxAPIxVAL(46))
  5496  00308C  0E2E               	movlw	46
  5497  00308E  EC69  F01E         	call	_GETxAPIxVAL
  5498  003092  0100               	movlb	0	; () banked
  5499  003094  5172               	movf	_Train_Move_Pwm_Count& (0+255),w,b
  5500  003096  0100               	movlb	0	; () banked
  5501  003098  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  5502  00309A  0100               	movlb	0	; () banked
  5503  00309C  5173               	movf	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  5504  00309E  0100               	movlb	0	; () banked
  5505  0030A0  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  5506  0030A2  B0D8               	btfsc	status,0,c
  5507  0030A4  D02D               	goto	l7165
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;train_move_left.c: 131: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  5511                           
  5512                           ; BSR set to: 0
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;train_move_left.c: 130: }
  5516                           
  5517                           ;train_move_left.c: 129: break;
  5518                           
  5519                           ;train_move_left.c: 128: Return_Val = 0;
  5520                           
  5521                           ;train_move_left.c: 127: Switch_Moutain = 0;
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;train_move_left.c: 125: {
  5525                           ;train_move_left.c: 126: Switch_Train_Move = 0;
  5526  0030A6  0E1A               	movlw	26
  5527  0030A8  EC69  F01E         	call	_GETxAPIxVAL
  5528  0030AC  0100               	movlb	0	; () banked
  5529  0030AE  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  5530  0030B0  0100               	movlb	0	; () banked
  5531  0030B2  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  5532  0030B4  0100               	movlb	0	; () banked
  5533  0030B6  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5534  0030B8  0100               	movlb	0	; () banked
  5535  0030BA  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  5536  0030BC  A0D8               	btfss	status,0,c
  5537  0030BE  D03E               	goto	l7175
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;train_move_left.c: 132: {
  5541                           ;train_move_left.c: 133: Train_Move_Pwm_Count--;
  5542  0030C0  0100               	movlb	0	; () banked
  5543  0030C2  0772               	decf	_Train_Move_Pwm_Count& (0+255),f,b
  5544  0030C4  A0D8               	btfss	status,0,c
  5545  0030C6  0773               	decf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  5546  0030C8  D033               	goto	l7173
  5547  0030CA                     l7159:
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;train_move_left.c: 138: else if (rc == 3){
  5551  0030CA  0E03               	movlw	3
  5552  0030CC  0100               	movlb	0	; () banked
  5553  0030CE  19B8               	xorwf	Right_Mountain_From_The_Right@rc& (0+255),w,b
  5554  0030D0  A4D8               	btfss	status,2,c
  5555  0030D2  D037               	goto	l7177
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;train_move_left.c: 139: SETxPWM(Train_Move_Pwm_Count, 0);
  5559  0030D4  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5560  0030D8  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5561  0030DC  0E00               	movlw	0
  5562  0030DE  0100               	movlb	0	; () banked
  5563  0030E0  6FB3               	movwf	SETxPWM@direction& (0+255),b
  5564  0030E2  ECBF  F01B         	call	_SETxPWM	;wreg free
  5565                           
  5566                           ;train_move_left.c: 140: if (Train_Move_Pwm_Count >= GETxAPIxVAL(24))
  5567  0030E6  0E18               	movlw	24
  5568  0030E8  EC69  F01E         	call	_GETxAPIxVAL
  5569  0030EC  0100               	movlb	0	; () banked
  5570  0030EE  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  5571  0030F0  0100               	movlb	0	; () banked
  5572  0030F2  5D72               	subwf	_Train_Move_Pwm_Count& (0+255),w,b
  5573  0030F4  0100               	movlb	0	; () banked
  5574  0030F6  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5575  0030F8  0100               	movlb	0	; () banked
  5576  0030FA  5973               	subwfb	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  5577  0030FC  A0D8               	btfss	status,0,c
  5578  0030FE  D008               	goto	l7169
  5579  003100                     l7165:
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;train_move_left.c: 141: {
  5583                           ;train_move_left.c: 142: Switch_Train_Move = 0;
  5584  003100  0E00               	movlw	0
  5585  003102  0100               	movlb	0	; () banked
  5586  003104  6F83               	movwf	_Switch_Train_Move& (0+255),b
  5587                           
  5588                           ;train_move_left.c: 143: Switch_Moutain = 0;
  5589  003106  0E00               	movlw	0
  5590  003108  0100               	movlb	0	; () banked
  5591  00310A  6F81               	movwf	_Switch_Moutain& (0+255),b
  5592                           
  5593                           ;train_move_left.c: 144: Return_Val = 0;
  5594  00310C  0E00               	movlw	0
  5595  00310E  D01A               	goto	L78
  5596  003110                     l7169:
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;train_move_left.c: 147: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  5600  003110  0E1A               	movlw	26
  5601  003112  EC69  F01E         	call	_GETxAPIxVAL
  5602  003116  0100               	movlb	0	; () banked
  5603  003118  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  5604  00311A  0100               	movlb	0	; () banked
  5605  00311C  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  5606  00311E  0100               	movlb	0	; () banked
  5607  003120  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5608  003122  0100               	movlb	0	; () banked
  5609  003124  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  5610  003126  A0D8               	btfss	status,0,c
  5611  003128  D009               	goto	l7175
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;train_move_left.c: 148: {
  5615                           ;train_move_left.c: 149: Train_Move_Pwm_Count++;
  5616  00312A  0100               	movlb	0	; () banked
  5617  00312C  4B72               	infsnz	_Train_Move_Pwm_Count& (0+255),f,b
  5618  00312E  2B73               	incf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  5619  003130                     l7173:
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;train_move_left.c: 150: Train_Move_Pwm_Fast_Count = 0;
  5623  003130  0E00               	movlw	0
  5624  003132  0100               	movlb	0	; () banked
  5625  003134  6F75               	movwf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),b
  5626  003136  0E00               	movlw	0
  5627  003138  6F74               	movwf	_Train_Move_Pwm_Fast_Count& (0+255),b
  5628                           
  5629                           ;train_move_left.c: 151: }
  5630  00313A  D003               	goto	l7177
  5631  00313C                     l7175:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;train_move_left.c: 152: else{Train_Move_Pwm_Fast_Count++;}
  5635  00313C  0100               	movlb	0	; () banked
  5636  00313E  4B74               	infsnz	_Train_Move_Pwm_Fast_Count& (0+255),f,b
  5637  003140  2B75               	incf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),f,b
  5638  003142                     l7177:
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;train_move_left.c: 153: }
  5642                           ;train_move_left.c: 154: Return_Val = 1;
  5643  003142  0E01               	movlw	1
  5644  003144                     L78:
  5645  003144  0100               	movlb	0	; () banked
  5646  003146  6FC1               	movwf	Right_Mountain_From_The_Right@Return_Val& (0+255),b
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;train_move_left.c: 159: }
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;train_move_left.c: 158: break;
  5653                           
  5654                           ;train_move_left.c: 157: default:
  5655                           
  5656                           ;train_move_left.c: 155: break;
  5657  003148  D008               	goto	l7183
  5658  00314A                     l7181:
  5659  00314A  0100               	movlb	0	; () banked
  5660  00314C  5181               	movf	_Switch_Moutain& (0+255),w,b
  5661                           
  5662                           ; Switch size 1, requested type "space"
  5663                           ; Number of cases is 2, Range of values is 0 to 1
  5664                           ; switch strategies available:
  5665                           ; Name         Instructions Cycles
  5666                           ; simple_byte            7     4 (average)
  5667                           ;	Chosen strategy is simple_byte
  5668  00314E  0A00               	xorlw	0	; case 0
  5669  003150  B4D8               	btfsc	status,2,c
  5670  003152  D76F               	goto	l7129
  5671  003154  0A01               	xorlw	1	; case 1
  5672  003156  B4D8               	btfsc	status,2,c
  5673  003158  D78B               	goto	l7141
  5674  00315A                     l7183:
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;train_move_left.c: 161: return(Return_Val);
  5678  00315A  0100               	movlb	0	; () banked
  5679  00315C  51C1               	movf	Right_Mountain_From_The_Right@Return_Val& (0+255),w,b
  5680  00315E  0012               	return	
  5681  003160                     __end_of_Right_Mountain_From_The_Right:
  5682                           	opt stack 0
  5683                           tblptru	equ	0xFF8
  5684                           tblptrh	equ	0xFF7
  5685                           tblptrl	equ	0xFF6
  5686                           tablat	equ	0xFF5
  5687                           postinc0	equ	0xFEE
  5688                           wreg	equ	0xFE8
  5689                           postdec1	equ	0xFE5
  5690                           fsr1h	equ	0xFE2
  5691                           fsr1l	equ	0xFE1
  5692                           status	equ	0xFD8
  5693                           
  5694 ;; *************** function _Right_Mountain_From_The_Left *****************
  5695 ;; Defined at:
  5696 ;;		line 179 in file "../train_move_right.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  rc              1    wreg     unsigned char 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  rc              1   40[BANK0 ] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      unsigned char 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0
  5711 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5713 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5714 ;;Total ram usage:        1 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    8
  5717 ;; This function calls:
  5718 ;;		_GETxAPIxVAL
  5719 ;;		_SETxPWM
  5720 ;; This function is called by:
  5721 ;;		_Train_Path
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text8
  5726  003160                     __ptext8:
  5727                           	opt stack 0
  5728  003160                     _Right_Mountain_From_The_Left:
  5729                           	opt stack 20
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;incstack = 0
  5733                           ;Right_Mountain_From_The_Left@rc stored from wreg
  5734  003160  0100               	movlb	0	; () banked
  5735  003162  6FB8               	movwf	Right_Mountain_From_The_Left@rc& (0+255),b
  5736                           
  5737                           ;train_move_right.c: 181: static char Return_Val = 1;
  5738                           ;train_move_right.c: 183: switch (Switch_Moutain){
  5739  003164  D08C               	goto	l7121
  5740  003166                     l7069:
  5741  003166  0E04               	movlw	4
  5742  003168  0100               	movlb	0	; () banked
  5743  00316A  19B8               	xorwf	Right_Mountain_From_The_Left@rc& (0+255),w,b
  5744  00316C  B4D8               	btfsc	status,2,c
  5745  00316E  D00D               	goto	l7075
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;train_move_right.c: 188: else if(Mountain_Delay_Counter >= GETxAPIxVAL(56)){
  5749                           
  5750                           ; BSR set to: 0
  5751                           
  5752                           ;train_move_right.c: 187: }
  5753                           
  5754                           ;train_move_right.c: 186: Mountain_Delay_Counter = 0;
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;train_move_right.c: 185: Switch_Moutain = 1;
  5758  003170  0E38               	movlw	56
  5759  003172  EC69  F01E         	call	_GETxAPIxVAL
  5760  003176  0100               	movlb	0	; () banked
  5761  003178  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  5762  00317A  0100               	movlb	0	; () banked
  5763  00317C  5D70               	subwf	_Mountain_Delay_Counter& (0+255),w,b
  5764  00317E  0100               	movlb	0	; () banked
  5765  003180  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5766  003182  0100               	movlb	0	; () banked
  5767  003184  5971               	subwfb	(_Mountain_Delay_Counter+1)& (0+255),w,b
  5768  003186  A0D8               	btfss	status,0,c
  5769  003188  D009               	goto	l7077
  5770  00318A                     l7075:
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;train_move_right.c: 189: Switch_Moutain = 1;
  5774  00318A  0E01               	movlw	1
  5775  00318C  0100               	movlb	0	; () banked
  5776  00318E  6F81               	movwf	_Switch_Moutain& (0+255),b
  5777                           
  5778                           ;train_move_right.c: 190: Mountain_Delay_Counter = 0;
  5779  003190  0E00               	movlw	0
  5780  003192  0100               	movlb	0	; () banked
  5781  003194  6F71               	movwf	(_Mountain_Delay_Counter+1)& (0+255),b
  5782  003196  0E00               	movlw	0
  5783  003198  6F70               	movwf	_Mountain_Delay_Counter& (0+255),b
  5784                           
  5785                           ;train_move_right.c: 191: }
  5786  00319A  D06D               	goto	l7117
  5787  00319C                     l7077:
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;train_move_right.c: 192: else{
  5791                           ;train_move_right.c: 193: Mountain_Delay_Counter++;
  5792  00319C  0100               	movlb	0	; () banked
  5793  00319E  4B70               	infsnz	_Mountain_Delay_Counter& (0+255),f,b
  5794  0031A0  2B71               	incf	(_Mountain_Delay_Counter+1)& (0+255),f,b
  5795                           
  5796                           ; BSR set to: 0
  5797  0031A2  D069               	goto	l7117
  5798  0031A4                     l7081:
  5799                           
  5800                           ; BSR set to: 0
  5801  0031A4  0E03               	movlw	3
  5802  0031A6  0100               	movlb	0	; () banked
  5803  0031A8  19B8               	xorwf	Right_Mountain_From_The_Left@rc& (0+255),w,b
  5804  0031AA  A4D8               	btfss	status,2,c
  5805  0031AC  D027               	goto	l7099
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;train_move_right.c: 199: SETxPWM(Train_Move_Pwm_Count, 1);
  5809  0031AE  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5810  0031B2  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5811  0031B6  0E01               	movlw	1
  5812  0031B8  0100               	movlb	0	; () banked
  5813  0031BA  6FB3               	movwf	SETxPWM@direction& (0+255),b
  5814  0031BC  ECBF  F01B         	call	_SETxPWM	;wreg free
  5815                           
  5816                           ;train_move_right.c: 200: if (Train_Move_Pwm_Count >= GETxAPIxVAL(47))
  5817  0031C0  0E2F               	movlw	47
  5818  0031C2  EC69  F01E         	call	_GETxAPIxVAL
  5819  0031C6  0100               	movlb	0	; () banked
  5820  0031C8  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  5821  0031CA  0100               	movlb	0	; () banked
  5822  0031CC  5D72               	subwf	_Train_Move_Pwm_Count& (0+255),w,b
  5823  0031CE  0100               	movlb	0	; () banked
  5824  0031D0  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5825  0031D2  0100               	movlb	0	; () banked
  5826  0031D4  5973               	subwfb	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  5827  0031D6  B0D8               	btfsc	status,0,c
  5828  0031D8  D02C               	goto	l7105
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;train_move_right.c: 207: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  5832                           
  5833                           ; BSR set to: 0
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;train_move_right.c: 206: }
  5837                           
  5838                           ;train_move_right.c: 205: break;
  5839                           
  5840                           ;train_move_right.c: 204: Return_Val = 0;
  5841                           
  5842                           ;train_move_right.c: 203: Switch_Moutain = 0;
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;train_move_right.c: 201: {
  5846                           ;train_move_right.c: 202: Switch_Train_Move = 0;
  5847  0031DA  0E1A               	movlw	26
  5848  0031DC  EC69  F01E         	call	_GETxAPIxVAL
  5849  0031E0  0100               	movlb	0	; () banked
  5850  0031E2  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  5851  0031E4  0100               	movlb	0	; () banked
  5852  0031E6  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  5853  0031E8  0100               	movlb	0	; () banked
  5854  0031EA  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5855  0031EC  0100               	movlb	0	; () banked
  5856  0031EE  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  5857  0031F0  A0D8               	btfss	status,0,c
  5858  0031F2  D03E               	goto	l7115
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;train_move_right.c: 208: {
  5862                           ;train_move_right.c: 209: Train_Move_Pwm_Count++;
  5863  0031F4  0100               	movlb	0	; () banked
  5864  0031F6  4B72               	infsnz	_Train_Move_Pwm_Count& (0+255),f,b
  5865  0031F8  2B73               	incf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  5866  0031FA  D034               	goto	l7113
  5867  0031FC                     l7099:
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;train_move_right.c: 214: else if (rc == 4){
  5871  0031FC  0E04               	movlw	4
  5872  0031FE  0100               	movlb	0	; () banked
  5873  003200  19B8               	xorwf	Right_Mountain_From_The_Left@rc& (0+255),w,b
  5874  003202  A4D8               	btfss	status,2,c
  5875  003204  D038               	goto	l7117
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;train_move_right.c: 215: SETxPWM(Train_Move_Pwm_Count, 1);
  5879  003206  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5880  00320A  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5881  00320E  0E01               	movlw	1
  5882  003210  0100               	movlb	0	; () banked
  5883  003212  6FB3               	movwf	SETxPWM@direction& (0+255),b
  5884  003214  ECBF  F01B         	call	_SETxPWM	;wreg free
  5885                           
  5886                           ;train_move_right.c: 216: if (Train_Move_Pwm_Count <= GETxAPIxVAL(23))
  5887  003218  0E17               	movlw	23
  5888  00321A  EC69  F01E         	call	_GETxAPIxVAL
  5889  00321E  0100               	movlb	0	; () banked
  5890  003220  5172               	movf	_Train_Move_Pwm_Count& (0+255),w,b
  5891  003222  0100               	movlb	0	; () banked
  5892  003224  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  5893  003226  0100               	movlb	0	; () banked
  5894  003228  5173               	movf	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  5895  00322A  0100               	movlb	0	; () banked
  5896  00322C  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  5897  00322E  A0D8               	btfss	status,0,c
  5898  003230  D008               	goto	l7109
  5899  003232                     l7105:
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;train_move_right.c: 217: {
  5903                           ;train_move_right.c: 218: Switch_Train_Move = 0;
  5904  003232  0E00               	movlw	0
  5905  003234  0100               	movlb	0	; () banked
  5906  003236  6F83               	movwf	_Switch_Train_Move& (0+255),b
  5907                           
  5908                           ;train_move_right.c: 219: Switch_Moutain = 0;
  5909  003238  0E00               	movlw	0
  5910  00323A  0100               	movlb	0	; () banked
  5911  00323C  6F81               	movwf	_Switch_Moutain& (0+255),b
  5912                           
  5913                           ;train_move_right.c: 220: Return_Val = 0;
  5914  00323E  0E00               	movlw	0
  5915  003240  D01B               	goto	L81
  5916  003242                     l7109:
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;train_move_right.c: 223: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  5920  003242  0E1A               	movlw	26
  5921  003244  EC69  F01E         	call	_GETxAPIxVAL
  5922  003248  0100               	movlb	0	; () banked
  5923  00324A  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  5924  00324C  0100               	movlb	0	; () banked
  5925  00324E  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  5926  003250  0100               	movlb	0	; () banked
  5927  003252  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5928  003254  0100               	movlb	0	; () banked
  5929  003256  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  5930  003258  A0D8               	btfss	status,0,c
  5931  00325A  D00A               	goto	l7115
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;train_move_right.c: 224: {
  5935                           ;train_move_right.c: 225: Train_Move_Pwm_Count--;
  5936  00325C  0100               	movlb	0	; () banked
  5937  00325E  0772               	decf	_Train_Move_Pwm_Count& (0+255),f,b
  5938  003260  A0D8               	btfss	status,0,c
  5939  003262  0773               	decf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  5940  003264                     l7113:
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;train_move_right.c: 226: Train_Move_Pwm_Fast_Count = 0;
  5944  003264  0E00               	movlw	0
  5945  003266  0100               	movlb	0	; () banked
  5946  003268  6F75               	movwf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),b
  5947  00326A  0E00               	movlw	0
  5948  00326C  6F74               	movwf	_Train_Move_Pwm_Fast_Count& (0+255),b
  5949                           
  5950                           ;train_move_right.c: 227: }
  5951  00326E  D003               	goto	l7117
  5952  003270                     l7115:
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;train_move_right.c: 228: else{Train_Move_Pwm_Fast_Count++;}
  5956  003270  0100               	movlb	0	; () banked
  5957  003272  4B74               	infsnz	_Train_Move_Pwm_Fast_Count& (0+255),f,b
  5958  003274  2B75               	incf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),f,b
  5959  003276                     l7117:
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;train_move_right.c: 229: }
  5963                           ;train_move_right.c: 230: Return_Val = 1;
  5964  003276  0E01               	movlw	1
  5965  003278                     L81:
  5966  003278  0100               	movlb	0	; () banked
  5967  00327A  6FC0               	movwf	Right_Mountain_From_The_Left@Return_Val& (0+255),b
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;train_move_right.c: 235: }
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;train_move_right.c: 234: break;
  5974                           
  5975                           ;train_move_right.c: 233: default:
  5976                           
  5977                           ;train_move_right.c: 231: break;
  5978  00327C  D008               	goto	l7123
  5979  00327E                     l7121:
  5980  00327E  0100               	movlb	0	; () banked
  5981  003280  5181               	movf	_Switch_Moutain& (0+255),w,b
  5982                           
  5983                           ; Switch size 1, requested type "space"
  5984                           ; Number of cases is 2, Range of values is 0 to 1
  5985                           ; switch strategies available:
  5986                           ; Name         Instructions Cycles
  5987                           ; simple_byte            7     4 (average)
  5988                           ;	Chosen strategy is simple_byte
  5989  003282  0A00               	xorlw	0	; case 0
  5990  003284  B4D8               	btfsc	status,2,c
  5991  003286  D76F               	goto	l7069
  5992  003288  0A01               	xorlw	1	; case 1
  5993  00328A  B4D8               	btfsc	status,2,c
  5994  00328C  D78B               	goto	l7081
  5995  00328E                     l7123:
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;train_move_right.c: 237: return(Return_Val);
  5999  00328E  0100               	movlb	0	; () banked
  6000  003290  51C0               	movf	Right_Mountain_From_The_Left@Return_Val& (0+255),w,b
  6001  003292  0012               	return	
  6002  003294                     __end_of_Right_Mountain_From_The_Left:
  6003                           	opt stack 0
  6004                           tblptru	equ	0xFF8
  6005                           tblptrh	equ	0xFF7
  6006                           tblptrl	equ	0xFF6
  6007                           tablat	equ	0xFF5
  6008                           postinc0	equ	0xFEE
  6009                           wreg	equ	0xFE8
  6010                           postdec1	equ	0xFE5
  6011                           fsr1h	equ	0xFE2
  6012                           fsr1l	equ	0xFE1
  6013                           status	equ	0xFD8
  6014                           
  6015 ;; *************** function _Left_Mountain_From_The_Right *****************
  6016 ;; Defined at:
  6017 ;;		line 178 in file "../train_move_left.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  rc              1    wreg     unsigned char 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  rc              1   40[BANK0 ] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      unsigned char 
  6024 ;; Registers used:
  6025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6031 ;;      Params:         0       0       0       0       0       0       0       0       0
  6032 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6034 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6035 ;;Total ram usage:        1 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:    8
  6038 ;; This function calls:
  6039 ;;		_GETxAPIxVAL
  6040 ;;		_SETxPWM
  6041 ;; This function is called by:
  6042 ;;		_Train_Path
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text9
  6047  0033C6                     __ptext9:
  6048                           	opt stack 0
  6049  0033C6                     _Left_Mountain_From_The_Right:
  6050                           	opt stack 20
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;incstack = 0
  6054                           ;Left_Mountain_From_The_Right@rc stored from wreg
  6055  0033C6  0100               	movlb	0	; () banked
  6056  0033C8  6FB8               	movwf	Left_Mountain_From_The_Right@rc& (0+255),b
  6057                           
  6058                           ;train_move_left.c: 180: static char Return_Val = 1;
  6059                           ;train_move_left.c: 182: switch (Switch_Moutain){
  6060  0033CA  D08A               	goto	l7241
  6061  0033CC                     l7189:
  6062  0033CC  0100               	movlb	0	; () banked
  6063  0033CE  05B8               	decf	Left_Mountain_From_The_Right@rc& (0+255),w,b
  6064  0033D0  B4D8               	btfsc	status,2,c
  6065  0033D2  D00D               	goto	l7195
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;train_move_left.c: 187: else if(Mountain_Delay_Counter >= GETxAPIxVAL(58)){
  6069                           
  6070                           ; BSR set to: 0
  6071                           
  6072                           ;train_move_left.c: 186: }
  6073                           
  6074                           ;train_move_left.c: 185: Mountain_Delay_Counter = 0;
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;train_move_left.c: 184: Switch_Moutain = 1;
  6078  0033D4  0E3A               	movlw	58
  6079  0033D6  EC69  F01E         	call	_GETxAPIxVAL
  6080  0033DA  0100               	movlb	0	; () banked
  6081  0033DC  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  6082  0033DE  0100               	movlb	0	; () banked
  6083  0033E0  5D70               	subwf	_Mountain_Delay_Counter& (0+255),w,b
  6084  0033E2  0100               	movlb	0	; () banked
  6085  0033E4  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6086  0033E6  0100               	movlb	0	; () banked
  6087  0033E8  5971               	subwfb	(_Mountain_Delay_Counter+1)& (0+255),w,b
  6088  0033EA  A0D8               	btfss	status,0,c
  6089  0033EC  D009               	goto	l7197
  6090  0033EE                     l7195:
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;train_move_left.c: 188: Switch_Moutain = 1;
  6094  0033EE  0E01               	movlw	1
  6095  0033F0  0100               	movlb	0	; () banked
  6096  0033F2  6F81               	movwf	_Switch_Moutain& (0+255),b
  6097                           
  6098                           ;train_move_left.c: 189: Mountain_Delay_Counter = 0;
  6099  0033F4  0E00               	movlw	0
  6100  0033F6  0100               	movlb	0	; () banked
  6101  0033F8  6F71               	movwf	(_Mountain_Delay_Counter+1)& (0+255),b
  6102  0033FA  0E00               	movlw	0
  6103  0033FC  6F70               	movwf	_Mountain_Delay_Counter& (0+255),b
  6104                           
  6105                           ;train_move_left.c: 190: }
  6106  0033FE  D06C               	goto	l7237
  6107  003400                     l7197:
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;train_move_left.c: 191: else{
  6111                           ;train_move_left.c: 192: Mountain_Delay_Counter++;
  6112  003400  0100               	movlb	0	; () banked
  6113  003402  4B70               	infsnz	_Mountain_Delay_Counter& (0+255),f,b
  6114  003404  2B71               	incf	(_Mountain_Delay_Counter+1)& (0+255),f,b
  6115                           
  6116                           ; BSR set to: 0
  6117  003406  D068               	goto	l7237
  6118  003408                     l7201:
  6119                           
  6120                           ; BSR set to: 0
  6121  003408  0E02               	movlw	2
  6122  00340A  0100               	movlb	0	; () banked
  6123  00340C  19B8               	xorwf	Left_Mountain_From_The_Right@rc& (0+255),w,b
  6124  00340E  A4D8               	btfss	status,2,c
  6125  003410  D027               	goto	l7219
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;train_move_left.c: 198: SETxPWM(Train_Move_Pwm_Count, 0);
  6129  003412  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6130  003416  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6131  00341A  0E00               	movlw	0
  6132  00341C  0100               	movlb	0	; () banked
  6133  00341E  6FB3               	movwf	SETxPWM@direction& (0+255),b
  6134  003420  ECBF  F01B         	call	_SETxPWM	;wreg free
  6135                           
  6136                           ;train_move_left.c: 199: if (Train_Move_Pwm_Count >= GETxAPIxVAL(52))
  6137  003424  0E34               	movlw	52
  6138  003426  EC69  F01E         	call	_GETxAPIxVAL
  6139  00342A  0100               	movlb	0	; () banked
  6140  00342C  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  6141  00342E  0100               	movlb	0	; () banked
  6142  003430  5D72               	subwf	_Train_Move_Pwm_Count& (0+255),w,b
  6143  003432  0100               	movlb	0	; () banked
  6144  003434  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6145  003436  0100               	movlb	0	; () banked
  6146  003438  5973               	subwfb	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  6147  00343A  B0D8               	btfsc	status,0,c
  6148  00343C  D02B               	goto	l7225
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;train_move_left.c: 206: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  6152                           
  6153                           ; BSR set to: 0
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;train_move_left.c: 205: }
  6157                           
  6158                           ;train_move_left.c: 204: break;
  6159                           
  6160                           ;train_move_left.c: 203: Return_Val = 0;
  6161                           
  6162                           ;train_move_left.c: 202: Switch_Moutain = 0;
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;train_move_left.c: 200: {
  6166                           ;train_move_left.c: 201: Switch_Train_Move = 0;
  6167  00343E  0E1A               	movlw	26
  6168  003440  EC69  F01E         	call	_GETxAPIxVAL
  6169  003444  0100               	movlb	0	; () banked
  6170  003446  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  6171  003448  0100               	movlb	0	; () banked
  6172  00344A  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  6173  00344C  0100               	movlb	0	; () banked
  6174  00344E  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6175  003450  0100               	movlb	0	; () banked
  6176  003452  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  6177  003454  A0D8               	btfss	status,0,c
  6178  003456  D03D               	goto	l7235
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;train_move_left.c: 207: {
  6182                           ;train_move_left.c: 208: Train_Move_Pwm_Count++;
  6183  003458  0100               	movlb	0	; () banked
  6184  00345A  4B72               	infsnz	_Train_Move_Pwm_Count& (0+255),f,b
  6185  00345C  2B73               	incf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  6186  00345E  D033               	goto	l7233
  6187  003460                     l7219:
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;train_move_left.c: 213: else if (rc == 1){
  6191  003460  0100               	movlb	0	; () banked
  6192  003462  05B8               	decf	Left_Mountain_From_The_Right@rc& (0+255),w,b
  6193  003464  A4D8               	btfss	status,2,c
  6194  003466  D038               	goto	l7237
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;train_move_left.c: 214: SETxPWM(Train_Move_Pwm_Count, 0);
  6198  003468  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6199  00346C  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6200  003470  0E00               	movlw	0
  6201  003472  0100               	movlb	0	; () banked
  6202  003474  6FB3               	movwf	SETxPWM@direction& (0+255),b
  6203  003476  ECBF  F01B         	call	_SETxPWM	;wreg free
  6204                           
  6205                           ;train_move_left.c: 215: if (Train_Move_Pwm_Count <= GETxAPIxVAL(24))
  6206  00347A  0E18               	movlw	24
  6207  00347C  EC69  F01E         	call	_GETxAPIxVAL
  6208  003480  0100               	movlb	0	; () banked
  6209  003482  5172               	movf	_Train_Move_Pwm_Count& (0+255),w,b
  6210  003484  0100               	movlb	0	; () banked
  6211  003486  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  6212  003488  0100               	movlb	0	; () banked
  6213  00348A  5173               	movf	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  6214  00348C  0100               	movlb	0	; () banked
  6215  00348E  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  6216  003490  A0D8               	btfss	status,0,c
  6217  003492  D008               	goto	l7229
  6218  003494                     l7225:
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;train_move_left.c: 216: {
  6222                           ;train_move_left.c: 217: Switch_Train_Move = 0;
  6223  003494  0E00               	movlw	0
  6224  003496  0100               	movlb	0	; () banked
  6225  003498  6F83               	movwf	_Switch_Train_Move& (0+255),b
  6226                           
  6227                           ;train_move_left.c: 218: Switch_Moutain = 0;
  6228  00349A  0E00               	movlw	0
  6229  00349C  0100               	movlb	0	; () banked
  6230  00349E  6F81               	movwf	_Switch_Moutain& (0+255),b
  6231                           
  6232                           ;train_move_left.c: 219: Return_Val = 0;
  6233  0034A0  0E00               	movlw	0
  6234  0034A2  D01B               	goto	L84
  6235  0034A4                     l7229:
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;train_move_left.c: 222: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  6239  0034A4  0E1A               	movlw	26
  6240  0034A6  EC69  F01E         	call	_GETxAPIxVAL
  6241  0034AA  0100               	movlb	0	; () banked
  6242  0034AC  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  6243  0034AE  0100               	movlb	0	; () banked
  6244  0034B0  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  6245  0034B2  0100               	movlb	0	; () banked
  6246  0034B4  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6247  0034B6  0100               	movlb	0	; () banked
  6248  0034B8  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  6249  0034BA  A0D8               	btfss	status,0,c
  6250  0034BC  D00A               	goto	l7235
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;train_move_left.c: 223: {
  6254                           ;train_move_left.c: 224: Train_Move_Pwm_Count--;
  6255  0034BE  0100               	movlb	0	; () banked
  6256  0034C0  0772               	decf	_Train_Move_Pwm_Count& (0+255),f,b
  6257  0034C2  A0D8               	btfss	status,0,c
  6258  0034C4  0773               	decf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  6259  0034C6                     l7233:
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;train_move_left.c: 225: Train_Move_Pwm_Fast_Count = 0;
  6263  0034C6  0E00               	movlw	0
  6264  0034C8  0100               	movlb	0	; () banked
  6265  0034CA  6F75               	movwf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),b
  6266  0034CC  0E00               	movlw	0
  6267  0034CE  6F74               	movwf	_Train_Move_Pwm_Fast_Count& (0+255),b
  6268                           
  6269                           ;train_move_left.c: 226: }
  6270  0034D0  D003               	goto	l7237
  6271  0034D2                     l7235:
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;train_move_left.c: 227: else{Train_Move_Pwm_Fast_Count++;}
  6275  0034D2  0100               	movlb	0	; () banked
  6276  0034D4  4B74               	infsnz	_Train_Move_Pwm_Fast_Count& (0+255),f,b
  6277  0034D6  2B75               	incf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),f,b
  6278  0034D8                     l7237:
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;train_move_left.c: 228: }
  6282                           ;train_move_left.c: 229: Return_Val = 1;
  6283  0034D8  0E01               	movlw	1
  6284  0034DA                     L84:
  6285  0034DA  0100               	movlb	0	; () banked
  6286  0034DC  6FBF               	movwf	Left_Mountain_From_The_Right@Return_Val& (0+255),b
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;train_move_left.c: 234: }
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;train_move_left.c: 233: break;
  6293                           
  6294                           ;train_move_left.c: 232: default:
  6295                           
  6296                           ;train_move_left.c: 230: break;
  6297  0034DE  D008               	goto	l7243
  6298  0034E0                     l7241:
  6299  0034E0  0100               	movlb	0	; () banked
  6300  0034E2  5181               	movf	_Switch_Moutain& (0+255),w,b
  6301                           
  6302                           ; Switch size 1, requested type "space"
  6303                           ; Number of cases is 2, Range of values is 0 to 1
  6304                           ; switch strategies available:
  6305                           ; Name         Instructions Cycles
  6306                           ; simple_byte            7     4 (average)
  6307                           ;	Chosen strategy is simple_byte
  6308  0034E4  0A00               	xorlw	0	; case 0
  6309  0034E6  B4D8               	btfsc	status,2,c
  6310  0034E8  D771               	goto	l7189
  6311  0034EA  0A01               	xorlw	1	; case 1
  6312  0034EC  B4D8               	btfsc	status,2,c
  6313  0034EE  D78C               	goto	l7201
  6314  0034F0                     l7243:
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;train_move_left.c: 236: return(Return_Val);
  6318  0034F0  0100               	movlb	0	; () banked
  6319  0034F2  51BF               	movf	Left_Mountain_From_The_Right@Return_Val& (0+255),w,b
  6320  0034F4  0012               	return	
  6321  0034F6                     __end_of_Left_Mountain_From_The_Right:
  6322                           	opt stack 0
  6323                           tblptru	equ	0xFF8
  6324                           tblptrh	equ	0xFF7
  6325                           tblptrl	equ	0xFF6
  6326                           tablat	equ	0xFF5
  6327                           postinc0	equ	0xFEE
  6328                           wreg	equ	0xFE8
  6329                           postdec1	equ	0xFE5
  6330                           fsr1h	equ	0xFE2
  6331                           fsr1l	equ	0xFE1
  6332                           status	equ	0xFD8
  6333                           
  6334 ;; *************** function _Left_Mountain_From_The_Left *****************
  6335 ;; Defined at:
  6336 ;;		line 104 in file "../train_move_right.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  rc              1    wreg     unsigned char 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  rc              1   40[BANK0 ] unsigned char 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      unsigned char 
  6343 ;; Registers used:
  6344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0
  6351 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6353 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6354 ;;Total ram usage:        1 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    8
  6357 ;; This function calls:
  6358 ;;		_GETxAPIxVAL
  6359 ;;		_SETxPWM
  6360 ;; This function is called by:
  6361 ;;		_Train_Path
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text10
  6366  003294                     __ptext10:
  6367                           	opt stack 0
  6368  003294                     _Left_Mountain_From_The_Left:
  6369                           	opt stack 20
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;incstack = 0
  6373                           ;Left_Mountain_From_The_Left@rc stored from wreg
  6374  003294  0100               	movlb	0	; () banked
  6375  003296  6FB8               	movwf	Left_Mountain_From_The_Left@rc& (0+255),b
  6376                           
  6377                           ;train_move_right.c: 106: static char Return_Val = 1;
  6378                           ;train_move_right.c: 108: switch (Switch_Moutain){
  6379  003298  D08B               	goto	l7061
  6380  00329A                     l7009:
  6381  00329A  0E02               	movlw	2
  6382  00329C  0100               	movlb	0	; () banked
  6383  00329E  19B8               	xorwf	Left_Mountain_From_The_Left@rc& (0+255),w,b
  6384  0032A0  B4D8               	btfsc	status,2,c
  6385  0032A2  D00D               	goto	l7015
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;train_move_right.c: 113: else if(Mountain_Delay_Counter >= GETxAPIxVAL(59)){
  6389                           
  6390                           ; BSR set to: 0
  6391                           
  6392                           ;train_move_right.c: 112: }
  6393                           
  6394                           ;train_move_right.c: 111: Mountain_Delay_Counter = 0;
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;train_move_right.c: 110: Switch_Moutain = 1;
  6398  0032A4  0E3B               	movlw	59
  6399  0032A6  EC69  F01E         	call	_GETxAPIxVAL
  6400  0032AA  0100               	movlb	0	; () banked
  6401  0032AC  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  6402  0032AE  0100               	movlb	0	; () banked
  6403  0032B0  5D70               	subwf	_Mountain_Delay_Counter& (0+255),w,b
  6404  0032B2  0100               	movlb	0	; () banked
  6405  0032B4  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6406  0032B6  0100               	movlb	0	; () banked
  6407  0032B8  5971               	subwfb	(_Mountain_Delay_Counter+1)& (0+255),w,b
  6408  0032BA  A0D8               	btfss	status,0,c
  6409  0032BC  D009               	goto	l7017
  6410  0032BE                     l7015:
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;train_move_right.c: 114: Switch_Moutain = 1;
  6414  0032BE  0E01               	movlw	1
  6415  0032C0  0100               	movlb	0	; () banked
  6416  0032C2  6F81               	movwf	_Switch_Moutain& (0+255),b
  6417                           
  6418                           ;train_move_right.c: 115: Mountain_Delay_Counter = 0;
  6419  0032C4  0E00               	movlw	0
  6420  0032C6  0100               	movlb	0	; () banked
  6421  0032C8  6F71               	movwf	(_Mountain_Delay_Counter+1)& (0+255),b
  6422  0032CA  0E00               	movlw	0
  6423  0032CC  6F70               	movwf	_Mountain_Delay_Counter& (0+255),b
  6424                           
  6425                           ;train_move_right.c: 116: }
  6426  0032CE  D06C               	goto	l7057
  6427  0032D0                     l7017:
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;train_move_right.c: 117: else{
  6431                           ;train_move_right.c: 118: Mountain_Delay_Counter++;
  6432  0032D0  0100               	movlb	0	; () banked
  6433  0032D2  4B70               	infsnz	_Mountain_Delay_Counter& (0+255),f,b
  6434  0032D4  2B71               	incf	(_Mountain_Delay_Counter+1)& (0+255),f,b
  6435                           
  6436                           ; BSR set to: 0
  6437  0032D6  D068               	goto	l7057
  6438  0032D8                     l7021:
  6439                           
  6440                           ; BSR set to: 0
  6441  0032D8  0100               	movlb	0	; () banked
  6442  0032DA  05B8               	decf	Left_Mountain_From_The_Left@rc& (0+255),w,b
  6443  0032DC  A4D8               	btfss	status,2,c
  6444  0032DE  D028               	goto	l7039
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;train_move_right.c: 124: SETxPWM(Train_Move_Pwm_Count, 1);
  6448  0032E0  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6449  0032E4  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6450  0032E8  0E01               	movlw	1
  6451  0032EA  0100               	movlb	0	; () banked
  6452  0032EC  6FB3               	movwf	SETxPWM@direction& (0+255),b
  6453  0032EE  ECBF  F01B         	call	_SETxPWM	;wreg free
  6454                           
  6455                           ;train_move_right.c: 125: if (Train_Move_Pwm_Count <= GETxAPIxVAL(49))
  6456  0032F2  0E31               	movlw	49
  6457  0032F4  EC69  F01E         	call	_GETxAPIxVAL
  6458  0032F8  0100               	movlb	0	; () banked
  6459  0032FA  5172               	movf	_Train_Move_Pwm_Count& (0+255),w,b
  6460  0032FC  0100               	movlb	0	; () banked
  6461  0032FE  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  6462  003300  0100               	movlb	0	; () banked
  6463  003302  5173               	movf	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  6464  003304  0100               	movlb	0	; () banked
  6465  003306  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  6466  003308  B0D8               	btfsc	status,0,c
  6467  00330A  D02D               	goto	l7045
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;train_move_right.c: 132: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  6471                           
  6472                           ; BSR set to: 0
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;train_move_right.c: 131: }
  6476                           
  6477                           ;train_move_right.c: 130: break;
  6478                           
  6479                           ;train_move_right.c: 129: Return_Val = 0;
  6480                           
  6481                           ;train_move_right.c: 128: Switch_Moutain = 0;
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;train_move_right.c: 126: {
  6485                           ;train_move_right.c: 127: Switch_Train_Move = 0;
  6486  00330C  0E1A               	movlw	26
  6487  00330E  EC69  F01E         	call	_GETxAPIxVAL
  6488  003312  0100               	movlb	0	; () banked
  6489  003314  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  6490  003316  0100               	movlb	0	; () banked
  6491  003318  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  6492  00331A  0100               	movlb	0	; () banked
  6493  00331C  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6494  00331E  0100               	movlb	0	; () banked
  6495  003320  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  6496  003322  A0D8               	btfss	status,0,c
  6497  003324  D03E               	goto	l7055
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;train_move_right.c: 133: {
  6501                           ;train_move_right.c: 134: Train_Move_Pwm_Count--;
  6502  003326  0100               	movlb	0	; () banked
  6503  003328  0772               	decf	_Train_Move_Pwm_Count& (0+255),f,b
  6504  00332A  A0D8               	btfss	status,0,c
  6505  00332C  0773               	decf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  6506  00332E  D033               	goto	l7053
  6507  003330                     l7039:
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;train_move_right.c: 139: else if (rc == 2){
  6511  003330  0E02               	movlw	2
  6512  003332  0100               	movlb	0	; () banked
  6513  003334  19B8               	xorwf	Left_Mountain_From_The_Left@rc& (0+255),w,b
  6514  003336  A4D8               	btfss	status,2,c
  6515  003338  D037               	goto	l7057
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;train_move_right.c: 140: SETxPWM(Train_Move_Pwm_Count, 1);
  6519  00333A  C072  F0B1         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6520  00333E  C073  F0B2         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6521  003342  0E01               	movlw	1
  6522  003344  0100               	movlb	0	; () banked
  6523  003346  6FB3               	movwf	SETxPWM@direction& (0+255),b
  6524  003348  ECBF  F01B         	call	_SETxPWM	;wreg free
  6525                           
  6526                           ;train_move_right.c: 141: if (Train_Move_Pwm_Count >= GETxAPIxVAL(23))
  6527  00334C  0E17               	movlw	23
  6528  00334E  EC69  F01E         	call	_GETxAPIxVAL
  6529  003352  0100               	movlb	0	; () banked
  6530  003354  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  6531  003356  0100               	movlb	0	; () banked
  6532  003358  5D72               	subwf	_Train_Move_Pwm_Count& (0+255),w,b
  6533  00335A  0100               	movlb	0	; () banked
  6534  00335C  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6535  00335E  0100               	movlb	0	; () banked
  6536  003360  5973               	subwfb	(_Train_Move_Pwm_Count+1)& (0+255),w,b
  6537  003362  A0D8               	btfss	status,0,c
  6538  003364  D008               	goto	l7049
  6539  003366                     l7045:
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;train_move_right.c: 142: {
  6543                           ;train_move_right.c: 143: Switch_Train_Move = 0;
  6544  003366  0E00               	movlw	0
  6545  003368  0100               	movlb	0	; () banked
  6546  00336A  6F83               	movwf	_Switch_Train_Move& (0+255),b
  6547                           
  6548                           ;train_move_right.c: 144: Switch_Moutain = 0;
  6549  00336C  0E00               	movlw	0
  6550  00336E  0100               	movlb	0	; () banked
  6551  003370  6F81               	movwf	_Switch_Moutain& (0+255),b
  6552                           
  6553                           ;train_move_right.c: 145: Return_Val = 0;
  6554  003372  0E00               	movlw	0
  6555  003374  D01A               	goto	L87
  6556  003376                     l7049:
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;train_move_right.c: 148: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  6560  003376  0E1A               	movlw	26
  6561  003378  EC69  F01E         	call	_GETxAPIxVAL
  6562  00337C  0100               	movlb	0	; () banked
  6563  00337E  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  6564  003380  0100               	movlb	0	; () banked
  6565  003382  5D74               	subwf	_Train_Move_Pwm_Fast_Count& (0+255),w,b
  6566  003384  0100               	movlb	0	; () banked
  6567  003386  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6568  003388  0100               	movlb	0	; () banked
  6569  00338A  5975               	subwfb	(_Train_Move_Pwm_Fast_Count+1)& (0+255),w,b
  6570  00338C  A0D8               	btfss	status,0,c
  6571  00338E  D009               	goto	l7055
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;train_move_right.c: 149: {
  6575                           ;train_move_right.c: 150: Train_Move_Pwm_Count++;
  6576  003390  0100               	movlb	0	; () banked
  6577  003392  4B72               	infsnz	_Train_Move_Pwm_Count& (0+255),f,b
  6578  003394  2B73               	incf	(_Train_Move_Pwm_Count+1)& (0+255),f,b
  6579  003396                     l7053:
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;train_move_right.c: 151: Train_Move_Pwm_Fast_Count = 0;
  6583  003396  0E00               	movlw	0
  6584  003398  0100               	movlb	0	; () banked
  6585  00339A  6F75               	movwf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),b
  6586  00339C  0E00               	movlw	0
  6587  00339E  6F74               	movwf	_Train_Move_Pwm_Fast_Count& (0+255),b
  6588                           
  6589                           ;train_move_right.c: 152: }
  6590  0033A0  D003               	goto	l7057
  6591  0033A2                     l7055:
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;train_move_right.c: 153: else {Train_Move_Pwm_Fast_Count++;}
  6595  0033A2  0100               	movlb	0	; () banked
  6596  0033A4  4B74               	infsnz	_Train_Move_Pwm_Fast_Count& (0+255),f,b
  6597  0033A6  2B75               	incf	(_Train_Move_Pwm_Fast_Count+1)& (0+255),f,b
  6598  0033A8                     l7057:
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;train_move_right.c: 154: }
  6602                           ;train_move_right.c: 155: Return_Val = 1;
  6603  0033A8  0E01               	movlw	1
  6604  0033AA                     L87:
  6605  0033AA  0100               	movlb	0	; () banked
  6606  0033AC  6FBE               	movwf	Left_Mountain_From_The_Left@Return_Val& (0+255),b
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;train_move_right.c: 160: }
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;train_move_right.c: 159: break;
  6613                           
  6614                           ;train_move_right.c: 158: default:
  6615                           
  6616                           ;train_move_right.c: 156: break;
  6617  0033AE  D008               	goto	l7063
  6618  0033B0                     l7061:
  6619  0033B0  0100               	movlb	0	; () banked
  6620  0033B2  5181               	movf	_Switch_Moutain& (0+255),w,b
  6621                           
  6622                           ; Switch size 1, requested type "space"
  6623                           ; Number of cases is 2, Range of values is 0 to 1
  6624                           ; switch strategies available:
  6625                           ; Name         Instructions Cycles
  6626                           ; simple_byte            7     4 (average)
  6627                           ;	Chosen strategy is simple_byte
  6628  0033B4  0A00               	xorlw	0	; case 0
  6629  0033B6  B4D8               	btfsc	status,2,c
  6630  0033B8  D770               	goto	l7009
  6631  0033BA  0A01               	xorlw	1	; case 1
  6632  0033BC  B4D8               	btfsc	status,2,c
  6633  0033BE  D78C               	goto	l7021
  6634  0033C0                     l7063:
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;train_move_right.c: 162: return(Return_Val);
  6638  0033C0  0100               	movlb	0	; () banked
  6639  0033C2  51BE               	movf	Left_Mountain_From_The_Left@Return_Val& (0+255),w,b
  6640  0033C4  0012               	return	
  6641  0033C6                     __end_of_Left_Mountain_From_The_Left:
  6642                           	opt stack 0
  6643                           tblptru	equ	0xFF8
  6644                           tblptrh	equ	0xFF7
  6645                           tblptrl	equ	0xFF6
  6646                           tablat	equ	0xFF5
  6647                           postinc0	equ	0xFEE
  6648                           wreg	equ	0xFE8
  6649                           postdec1	equ	0xFE5
  6650                           fsr1h	equ	0xFE2
  6651                           fsr1l	equ	0xFE1
  6652                           status	equ	0xFD8
  6653                           
  6654 ;; *************** function _SETxPWM *****************
  6655 ;; Defined at:
  6656 ;;		line 20 in file "../set_pwm.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  speed           2   33[BANK0 ] unsigned int 
  6659 ;;  direction       1   35[BANK0 ] unsigned char 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;  pwm_speed       2   38[BANK0 ] unsigned int 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  1    wreg      void 
  6664 ;; Registers used:
  6665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6671 ;;      Params:         0       3       0       0       0       0       0       0       0
  6672 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6673 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6674 ;;      Totals:         0       7       0       0       0       0       0       0       0
  6675 ;;Total ram usage:        7 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:    7
  6678 ;; This function calls:
  6679 ;;		_SETxAPIxVAL
  6680 ;; This function is called by:
  6681 ;;		_Train_Move_Left_Start
  6682 ;;		_Right_Mountain_From_The_Right
  6683 ;;		_Left_Mountain_From_The_Right
  6684 ;;		_Train_Move_Left_Brake
  6685 ;;		_Train_Move_Right_Start
  6686 ;;		_Left_Mountain_From_The_Left
  6687 ;;		_Right_Mountain_From_The_Left
  6688 ;;		_Train_Move_Right_Brake
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text11
  6693  00377E                     __ptext11:
  6694                           	opt stack 0
  6695  00377E                     _SETxPWM:
  6696                           	opt stack 20
  6697                           
  6698                           ;set_pwm.c: 22: unsigned int pwm_speed = 511;
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;incstack = 0
  6702  00377E  0E01               	movlw	1
  6703  003780  0100               	movlb	0	; () banked
  6704  003782  6FB7               	movwf	(SETxPWM@pwm_speed+1)& (0+255),b
  6705  003784  69B6               	setf	SETxPWM@pwm_speed& (0+255),b
  6706                           
  6707                           ;set_pwm.c: 24: if (direction == 0){
  6708  003786  0100               	movlb	0	; () banked
  6709  003788  51B3               	movf	SETxPWM@direction& (0+255),w,b
  6710  00378A  0100               	movlb	0	; () banked
  6711  00378C  A4D8               	btfss	status,2,c
  6712  00378E  D01F               	goto	l6715
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;set_pwm.c: 25: pwm_speed = 511 - (speed * 2);
  6716  003790  C0B1  F0B4         	movff	SETxPWM@speed,??_SETxPWM
  6717  003794  C0B2  F0B5         	movff	SETxPWM@speed+1,??_SETxPWM+1
  6718  003798  90D8               	bcf	status,0,c
  6719  00379A  0100               	movlb	0	; () banked
  6720  00379C  37B4               	rlcf	??_SETxPWM& (0+255),f,b
  6721  00379E  37B5               	rlcf	(??_SETxPWM+1)& (0+255),f,b
  6722  0037A0  0100               	movlb	0	; () banked
  6723  0037A2  1FB4               	comf	??_SETxPWM& (0+255),f,b
  6724  0037A4  1FB5               	comf	(??_SETxPWM+1)& (0+255),f,b
  6725  0037A6  4BB4               	infsnz	??_SETxPWM& (0+255),f,b
  6726  0037A8  2BB5               	incf	(??_SETxPWM+1)& (0+255),f,b
  6727  0037AA  0EFF               	movlw	255
  6728  0037AC  0100               	movlb	0	; () banked
  6729  0037AE  25B4               	addwf	??_SETxPWM& (0+255),w,b
  6730  0037B0  0100               	movlb	0	; () banked
  6731  0037B2  6FB6               	movwf	SETxPWM@pwm_speed& (0+255),b
  6732  0037B4  0E01               	movlw	1
  6733  0037B6  0100               	movlb	0	; () banked
  6734  0037B8  21B5               	addwfc	(??_SETxPWM+1)& (0+255),w,b
  6735  0037BA  0100               	movlb	0	; () banked
  6736  0037BC  6FB7               	movwf	(SETxPWM@pwm_speed+1)& (0+255),b
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;set_pwm.c: 26: SETxAPIxVAL(68, pwm_speed);
  6740  0037BE  C0B6  F0AC         	movff	SETxPWM@pwm_speed,SETxAPIxVAL@value
  6741  0037C2  C0B7  F0AD         	movff	SETxPWM@pwm_speed+1,SETxAPIxVAL@value+1
  6742  0037C6  0E44               	movlw	68
  6743  0037C8  EC5C  F01D         	call	_SETxAPIxVAL
  6744                           
  6745                           ;set_pwm.c: 28: }
  6746  0037CC  0012               	return	
  6747  0037CE                     l6715:
  6748                           
  6749                           ;set_pwm.c: 29: else if (direction == 1){
  6750  0037CE  0100               	movlb	0	; () banked
  6751  0037D0  05B3               	decf	SETxPWM@direction& (0+255),w,b
  6752  0037D2  A4D8               	btfss	status,2,c
  6753  0037D4  0012               	return	
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;set_pwm.c: 30: pwm_speed = 511 + (speed * 2);
  6757  0037D6  C0B1  F0B4         	movff	SETxPWM@speed,??_SETxPWM
  6758  0037DA  C0B2  F0B5         	movff	SETxPWM@speed+1,??_SETxPWM+1
  6759  0037DE  90D8               	bcf	status,0,c
  6760  0037E0  0100               	movlb	0	; () banked
  6761  0037E2  37B4               	rlcf	??_SETxPWM& (0+255),f,b
  6762  0037E4  37B5               	rlcf	(??_SETxPWM+1)& (0+255),f,b
  6763  0037E6  0EFF               	movlw	255
  6764  0037E8  0100               	movlb	0	; () banked
  6765  0037EA  25B4               	addwf	??_SETxPWM& (0+255),w,b
  6766  0037EC  0100               	movlb	0	; () banked
  6767  0037EE  6FB6               	movwf	SETxPWM@pwm_speed& (0+255),b
  6768  0037F0  0E01               	movlw	1
  6769  0037F2  0100               	movlb	0	; () banked
  6770  0037F4  21B5               	addwfc	(??_SETxPWM+1)& (0+255),w,b
  6771  0037F6  0100               	movlb	0	; () banked
  6772  0037F8  6FB7               	movwf	(SETxPWM@pwm_speed+1)& (0+255),b
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;set_pwm.c: 31: SETxAPIxVAL(68, pwm_speed);
  6776  0037FA  C0B6  F0AC         	movff	SETxPWM@pwm_speed,SETxAPIxVAL@value
  6777  0037FE  C0B7  F0AD         	movff	SETxPWM@pwm_speed+1,SETxAPIxVAL@value+1
  6778  003802  0E44               	movlw	68
  6779  003804  EC5C  F01D         	call	_SETxAPIxVAL
  6780  003808  0012               	return	
  6781  00380A                     __end_of_SETxPWM:
  6782                           	opt stack 0
  6783                           tblptru	equ	0xFF8
  6784                           tblptrh	equ	0xFF7
  6785                           tblptrl	equ	0xFF6
  6786                           tablat	equ	0xFF5
  6787                           postinc0	equ	0xFEE
  6788                           wreg	equ	0xFE8
  6789                           postdec1	equ	0xFE5
  6790                           fsr1h	equ	0xFE2
  6791                           fsr1l	equ	0xFE1
  6792                           status	equ	0xFD8
  6793                           
  6794 ;; *************** function _Junction *****************
  6795 ;; Defined at:
  6796 ;;		line 23 in file "../junction.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  Junction_Lef    1    wreg     unsigned char 
  6799 ;;  Straight_Ben    1   33[BANK0 ] unsigned char 
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;  Junction_Lef    1   34[BANK0 ] unsigned char 
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      unsigned char 
  6804 ;; Registers used:
  6805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6811 ;;      Params:         0       1       0       0       0       0       0       0       0
  6812 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6814 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6815 ;;Total ram usage:        2 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; Hardware stack levels required when called:    7
  6818 ;; This function calls:
  6819 ;;		_GETxAPIxVAL
  6820 ;;		_SETxAPIxVAL
  6821 ;; This function is called by:
  6822 ;;		_Update_StateMchn
  6823 ;;		_Train_Path
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text12
  6828  002C7A                     __ptext12:
  6829                           	opt stack 0
  6830  002C7A                     _Junction:
  6831                           	opt stack 21
  6832                           
  6833                           ;incstack = 0
  6834                           ;Junction@Junction_Left_Right stored from wreg
  6835  002C7A  0100               	movlb	0	; () banked
  6836  002C7C  6FB2               	movwf	Junction@Junction_Left_Right& (0+255),b
  6837                           
  6838                           ;junction.c: 25: static char Return_Val = 1;
  6839                           ;junction.c: 26: static unsigned int Junction_Switch_Time = 0;
  6840                           ;junction.c: 28: switch (Switch_Junction)
  6841  002C7E  D08E               	goto	l6781
  6842  002C80                     l6741:
  6843  002C80  0E01               	movlw	1
  6844  002C82  0100               	movlb	0	; () banked
  6845  002C84  6FBD               	movwf	Junction@Return_Val& (0+255),b
  6846                           
  6847                           ;junction.c: 31: switch (Junction_Left_Right)
  6848  002C86  D036               	goto	l6761
  6849  002C88                     l6743:
  6850                           
  6851                           ; BSR set to: 0
  6852  002C88  0E00               	movlw	0
  6853  002C8A  0100               	movlb	0	; () banked
  6854  002C8C  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6855  002C8E  0E01               	movlw	1
  6856  002C90  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  6857  002C92  0E40               	movlw	64
  6858  002C94  EC5C  F01D         	call	_SETxAPIxVAL
  6859  002C98  D035               	goto	l6763
  6860  002C9A                     l6745:
  6861  002C9A  0E00               	movlw	0
  6862  002C9C  0100               	movlb	0	; () banked
  6863  002C9E  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6864  002CA0  0E01               	movlw	1
  6865  002CA2  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  6866  002CA4  0E41               	movlw	65
  6867  002CA6  EC5C  F01D         	call	_SETxAPIxVAL
  6868                           
  6869                           ;junction.c: 38: }
  6870                           
  6871                           ;junction.c: 37: default : break;
  6872  002CAA  D02C               	goto	l6763
  6873  002CAC                     l6749:
  6874  002CAC  0100               	movlb	0	; () banked
  6875  002CAE  51B1               	movf	Junction@Straight_Bend& (0+255),w,b
  6876                           
  6877                           ; Switch size 1, requested type "space"
  6878                           ; Number of cases is 2, Range of values is 0 to 1
  6879                           ; switch strategies available:
  6880                           ; Name         Instructions Cycles
  6881                           ; simple_byte            7     4 (average)
  6882                           ;	Chosen strategy is simple_byte
  6883  002CB0  0A00               	xorlw	0	; case 0
  6884  002CB2  B4D8               	btfsc	status,2,c
  6885  002CB4  D7E9               	goto	l6743
  6886  002CB6  0A01               	xorlw	1	; case 1
  6887  002CB8  B4D8               	btfsc	status,2,c
  6888  002CBA  D7EF               	goto	l6745
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;junction.c: 39: break;
  6892  002CBC  D023               	goto	l6763
  6893  002CBE                     l6751:
  6894                           
  6895                           ; BSR set to: 0
  6896  002CBE  0E00               	movlw	0
  6897  002CC0  0100               	movlb	0	; () banked
  6898  002CC2  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6899  002CC4  0E01               	movlw	1
  6900  002CC6  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  6901  002CC8  0E42               	movlw	66
  6902  002CCA  EC5C  F01D         	call	_SETxAPIxVAL
  6903  002CCE  D01A               	goto	l6763
  6904  002CD0                     l6753:
  6905  002CD0  0E00               	movlw	0
  6906  002CD2  0100               	movlb	0	; () banked
  6907  002CD4  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6908  002CD6  0E01               	movlw	1
  6909  002CD8  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  6910  002CDA  0E43               	movlw	67
  6911  002CDC  EC5C  F01D         	call	_SETxAPIxVAL
  6912                           
  6913                           ;junction.c: 46: }
  6914                           
  6915                           ;junction.c: 45: default : break;
  6916  002CE0  D011               	goto	l6763
  6917  002CE2                     l6757:
  6918  002CE2  0100               	movlb	0	; () banked
  6919  002CE4  51B1               	movf	Junction@Straight_Bend& (0+255),w,b
  6920                           
  6921                           ; Switch size 1, requested type "space"
  6922                           ; Number of cases is 2, Range of values is 0 to 1
  6923                           ; switch strategies available:
  6924                           ; Name         Instructions Cycles
  6925                           ; simple_byte            7     4 (average)
  6926                           ;	Chosen strategy is simple_byte
  6927  002CE6  0A00               	xorlw	0	; case 0
  6928  002CE8  B4D8               	btfsc	status,2,c
  6929  002CEA  D7E9               	goto	l6751
  6930  002CEC  0A01               	xorlw	1	; case 1
  6931  002CEE  B4D8               	btfsc	status,2,c
  6932  002CF0  D7EF               	goto	l6753
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;junction.c: 50: }
  6936                           
  6937                           ; BSR set to: 0
  6938                           
  6939                           ;junction.c: 49: default : break;
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;junction.c: 47: break;
  6943  002CF2  D008               	goto	l6763
  6944  002CF4                     l6761:
  6945                           
  6946                           ; BSR set to: 0
  6947  002CF4  0100               	movlb	0	; () banked
  6948  002CF6  51B2               	movf	Junction@Junction_Left_Right& (0+255),w,b
  6949                           
  6950                           ; Switch size 1, requested type "space"
  6951                           ; Number of cases is 2, Range of values is 0 to 1
  6952                           ; switch strategies available:
  6953                           ; Name         Instructions Cycles
  6954                           ; simple_byte            7     4 (average)
  6955                           ;	Chosen strategy is simple_byte
  6956  002CF8  0A00               	xorlw	0	; case 0
  6957  002CFA  B4D8               	btfsc	status,2,c
  6958  002CFC  D7D7               	goto	l6749
  6959  002CFE  0A01               	xorlw	1	; case 1
  6960  002D00  B4D8               	btfsc	status,2,c
  6961  002D02  D7EF               	goto	l6757
  6962  002D04                     l6763:
  6963                           
  6964                           ;junction.c: 51: Switch_Junction = 1;
  6965  002D04  0E01               	movlw	1
  6966  002D06  0100               	movlb	0	; () banked
  6967  002D08  6F7F               	movwf	_Switch_Junction& (0+255),b
  6968                           
  6969                           ;junction.c: 52: break;
  6970  002D0A  D053               	goto	l6783
  6971  002D0C                     l6765:
  6972                           
  6973                           ; BSR set to: 0
  6974  002D0C  0E13               	movlw	19
  6975  002D0E  EC69  F01E         	call	_GETxAPIxVAL
  6976  002D12  0100               	movlb	0	; () banked
  6977  002D14  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  6978  002D16  0100               	movlb	0	; () banked
  6979  002D18  5D60               	subwf	Junction@Junction_Switch_Time& (0+255),w,b
  6980  002D1A  0100               	movlb	0	; () banked
  6981  002D1C  5191               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6982  002D1E  0100               	movlb	0	; () banked
  6983  002D20  5961               	subwfb	(Junction@Junction_Switch_Time+1)& (0+255),w,b
  6984  002D22  A0D8               	btfss	status,0,c
  6985  002D24  D00A               	goto	l6769
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;junction.c: 55: {
  6989                           ;junction.c: 56: Switch_Junction = 2;
  6990  002D26  0E02               	movlw	2
  6991  002D28  0100               	movlb	0	; () banked
  6992  002D2A  6F7F               	movwf	_Switch_Junction& (0+255),b
  6993                           
  6994                           ;junction.c: 57: Junction_Switch_Time = 0;
  6995  002D2C  0E00               	movlw	0
  6996  002D2E  0100               	movlb	0	; () banked
  6997  002D30  6F61               	movwf	(Junction@Junction_Switch_Time+1)& (0+255),b
  6998  002D32  0E00               	movlw	0
  6999  002D34  6F60               	movwf	Junction@Junction_Switch_Time& (0+255),b
  7000                           
  7001                           ;junction.c: 58: Return_Val = 1;
  7002  002D36  0E01               	movlw	1
  7003  002D38  D02E               	goto	L88
  7004  002D3A                     l6769:
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;junction.c: 60: }
  7008                           ;junction.c: 61: Return_Val = 1;
  7009  002D3A  0E01               	movlw	1
  7010  002D3C  0100               	movlb	0	; () banked
  7011  002D3E  6FBD               	movwf	Junction@Return_Val& (0+255),b
  7012                           
  7013                           ;junction.c: 62: Switch_Junction = 1;
  7014  002D40  0E01               	movlw	1
  7015  002D42  0100               	movlb	0	; () banked
  7016  002D44  6F7F               	movwf	_Switch_Junction& (0+255),b
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;junction.c: 63: Junction_Switch_Time++;
  7020  002D46  0100               	movlb	0	; () banked
  7021  002D48  4B60               	infsnz	Junction@Junction_Switch_Time& (0+255),f,b
  7022  002D4A  2B61               	incf	(Junction@Junction_Switch_Time+1)& (0+255),f,b
  7023                           
  7024                           ;junction.c: 64: break;
  7025  002D4C  D032               	goto	l6783
  7026  002D4E                     l6773:
  7027                           
  7028                           ; BSR set to: 0
  7029  002D4E  0E00               	movlw	0
  7030  002D50  0100               	movlb	0	; () banked
  7031  002D52  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7032  002D54  0E00               	movlw	0
  7033  002D56  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  7034  002D58  0E40               	movlw	64
  7035  002D5A  EC5C  F01D         	call	_SETxAPIxVAL
  7036                           
  7037                           ;junction.c: 67: SETxAPIxVAL(65, 0);
  7038  002D5E  0E00               	movlw	0
  7039  002D60  0100               	movlb	0	; () banked
  7040  002D62  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7041  002D64  0E00               	movlw	0
  7042  002D66  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  7043  002D68  0E41               	movlw	65
  7044  002D6A  EC5C  F01D         	call	_SETxAPIxVAL
  7045                           
  7046                           ;junction.c: 68: SETxAPIxVAL(66,0);
  7047  002D6E  0E00               	movlw	0
  7048  002D70  0100               	movlb	0	; () banked
  7049  002D72  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7050  002D74  0E00               	movlw	0
  7051  002D76  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  7052  002D78  0E42               	movlw	66
  7053  002D7A  EC5C  F01D         	call	_SETxAPIxVAL
  7054                           
  7055                           ;junction.c: 69: SETxAPIxVAL(67,0);
  7056  002D7E  0E00               	movlw	0
  7057  002D80  0100               	movlb	0	; () banked
  7058  002D82  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7059  002D84  0E00               	movlw	0
  7060  002D86  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  7061  002D88  0E43               	movlw	67
  7062  002D8A  EC5C  F01D         	call	_SETxAPIxVAL
  7063                           
  7064                           ;junction.c: 70: Switch_Junction = 0;
  7065  002D8E  0E00               	movlw	0
  7066  002D90  0100               	movlb	0	; () banked
  7067  002D92  6F7F               	movwf	_Switch_Junction& (0+255),b
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;junction.c: 71: Return_Val = 0;
  7071  002D94  0E00               	movlw	0
  7072  002D96                     L88:
  7073  002D96  0100               	movlb	0	; () banked
  7074  002D98  6FBD               	movwf	Junction@Return_Val& (0+255),b
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;junction.c: 75: }
  7078                           
  7079                           ; BSR set to: 0
  7080                           
  7081                           ;junction.c: 74: default : break;
  7082                           
  7083                           ;junction.c: 72: break;
  7084  002D9A  D00B               	goto	l6783
  7085  002D9C                     l6781:
  7086  002D9C  0100               	movlb	0	; () banked
  7087  002D9E  517F               	movf	_Switch_Junction& (0+255),w,b
  7088                           
  7089                           ; Switch size 1, requested type "space"
  7090                           ; Number of cases is 3, Range of values is 0 to 2
  7091                           ; switch strategies available:
  7092                           ; Name         Instructions Cycles
  7093                           ; simple_byte           10     6 (average)
  7094                           ;	Chosen strategy is simple_byte
  7095  002DA0  0A00               	xorlw	0	; case 0
  7096  002DA2  B4D8               	btfsc	status,2,c
  7097  002DA4  D76D               	goto	l6741
  7098  002DA6  0A01               	xorlw	1	; case 1
  7099  002DA8  B4D8               	btfsc	status,2,c
  7100  002DAA  D7B0               	goto	l6765
  7101  002DAC  0A03               	xorlw	3	; case 2
  7102  002DAE  B4D8               	btfsc	status,2,c
  7103  002DB0  D7CE               	goto	l6773
  7104  002DB2                     l6783:
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;junction.c: 77: return (Return_Val);
  7108  002DB2  0100               	movlb	0	; () banked
  7109  002DB4  51BD               	movf	Junction@Return_Val& (0+255),w,b
  7110  002DB6  0012               	return	
  7111  002DB8                     __end_of_Junction:
  7112                           	opt stack 0
  7113                           tblptru	equ	0xFF8
  7114                           tblptrh	equ	0xFF7
  7115                           tblptrl	equ	0xFF6
  7116                           tablat	equ	0xFF5
  7117                           postinc0	equ	0xFEE
  7118                           wreg	equ	0xFE8
  7119                           postdec1	equ	0xFE5
  7120                           fsr1h	equ	0xFE2
  7121                           fsr1l	equ	0xFE1
  7122                           status	equ	0xFD8
  7123                           
  7124 ;; *************** function _Red_Led *****************
  7125 ;; Defined at:
  7126 ;;		line 97 in file "../io.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  Operation       1    wreg     unsigned char 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;  Operation       1   31[COMRAM] unsigned char 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  1    wreg      void 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7140 ;;      Params:         0       0       0       0       0       0       0       0       0
  7141 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7143 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7144 ;;Total ram usage:        1 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    3
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_Update_StateMchn
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text13
  7155  00380A                     __ptext13:
  7156                           	opt stack 0
  7157  00380A                     _Red_Led:
  7158                           	opt stack 26
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;incstack = 0
  7162                           ;Red_Led@Operation stored from wreg
  7163  00380A  6E20               	movwf	Red_Led@Operation,c
  7164                           
  7165                           ;io.c: 99: switch(Operation)
  7166  00380C  D030               	goto	l5151
  7167  00380E                     l745:
  7168  00380E  9A83               	bcf	3971,5,c	;volatile
  7169  003810  0012               	return	
  7170  003812                     l747:
  7171  003812  8A83               	bsf	3971,5,c	;volatile
  7172  003814  0012               	return	
  7173  003816                     l5129:
  7174  003816  4A23               	infsnz	_Red_Led_Counter,f,c
  7175  003818  2A24               	incf	_Red_Led_Counter+1,f,c
  7176                           
  7177                           ;io.c: 106: if(Red_Led_Counter >= 3000)
  7178  00381A  0EB8               	movlw	184
  7179  00381C  5C23               	subwf	_Red_Led_Counter,w,c
  7180  00381E  0E0B               	movlw	11
  7181  003820  5824               	subwfb	_Red_Led_Counter+1,w,c
  7182  003822  A0D8               	btfss	status,0,c
  7183  003824  D004               	goto	l5135
  7184                           
  7185                           ;io.c: 107: {
  7186                           ;io.c: 108: Red_Led_Counter = 0;
  7187  003826  0E00               	movlw	0
  7188  003828  6E24               	movwf	_Red_Led_Counter+1,c
  7189  00382A  0E00               	movlw	0
  7190  00382C  6E23               	movwf	_Red_Led_Counter,c
  7191  00382E                     l5135:
  7192                           
  7193                           ;io.c: 109: }
  7194                           ;io.c: 110: if(Red_Led_Counter >= 3000/2)
  7195  00382E  0EDC               	movlw	220
  7196  003830  5C23               	subwf	_Red_Led_Counter,w,c
  7197  003832  0E05               	movlw	5
  7198  003834  5824               	subwfb	_Red_Led_Counter+1,w,c
  7199  003836  A0D8               	btfss	status,0,c
  7200  003838  D002               	goto	l750
  7201                           
  7202                           ;io.c: 111: {
  7203                           ;io.c: 112: PORTDbits.RD5 = 1;
  7204  00383A  8A83               	bsf	3971,5,c	;volatile
  7205                           
  7206                           ;io.c: 113: }
  7207  00383C  0012               	return	
  7208  00383E                     l750:
  7209                           
  7210                           ;io.c: 114: else {PORTDbits.RD5 = 0;}
  7211  00383E  9A83               	bcf	3971,5,c	;volatile
  7212                           
  7213                           ;io.c: 115: break;
  7214  003840  0012               	return	
  7215  003842                     l5139:
  7216  003842  4A23               	infsnz	_Red_Led_Counter,f,c
  7217  003844  2A24               	incf	_Red_Led_Counter+1,f,c
  7218                           
  7219                           ;io.c: 118: if(Red_Led_Counter >= 1000)
  7220  003846  0EE8               	movlw	232
  7221  003848  5C23               	subwf	_Red_Led_Counter,w,c
  7222  00384A  0E03               	movlw	3
  7223  00384C  5824               	subwfb	_Red_Led_Counter+1,w,c
  7224  00384E  A0D8               	btfss	status,0,c
  7225  003850  D004               	goto	l5145
  7226                           
  7227                           ;io.c: 119: {
  7228                           ;io.c: 120: Red_Led_Counter = 0;
  7229  003852  0E00               	movlw	0
  7230  003854  6E24               	movwf	_Red_Led_Counter+1,c
  7231  003856  0E00               	movlw	0
  7232  003858  6E23               	movwf	_Red_Led_Counter,c
  7233  00385A                     l5145:
  7234                           
  7235                           ;io.c: 121: }
  7236                           ;io.c: 122: if(Red_Led_Counter >= 1000/2)
  7237  00385A  0EF4               	movlw	244
  7238  00385C  5C23               	subwf	_Red_Led_Counter,w,c
  7239  00385E  0E01               	movlw	1
  7240  003860  5824               	subwfb	_Red_Led_Counter+1,w,c
  7241  003862  A0D8               	btfss	status,0,c
  7242  003864  D002               	goto	l754
  7243                           
  7244                           ;io.c: 123: {
  7245                           ;io.c: 124: PORTDbits.RD5 = 1;
  7246  003866  8A83               	bsf	3971,5,c	;volatile
  7247                           
  7248                           ;io.c: 125: }
  7249  003868  0012               	return	
  7250  00386A                     l754:
  7251                           
  7252                           ;io.c: 126: else {PORTDbits.RD5 = 0;}
  7253  00386A  9A83               	bcf	3971,5,c	;volatile
  7254                           
  7255                           ;io.c: 130: }
  7256                           
  7257                           ;io.c: 129: default : break;
  7258                           
  7259                           ;io.c: 127: break;
  7260  00386C  0012               	return	
  7261  00386E                     l5151:
  7262  00386E  5020               	movf	Red_Led@Operation,w,c
  7263                           
  7264                           ; Switch size 1, requested type "space"
  7265                           ; Number of cases is 4, Range of values is 0 to 3
  7266                           ; switch strategies available:
  7267                           ; Name         Instructions Cycles
  7268                           ; simple_byte           13     7 (average)
  7269                           ;	Chosen strategy is simple_byte
  7270  003870  0A00               	xorlw	0	; case 0
  7271  003872  B4D8               	btfsc	status,2,c
  7272  003874  D7CC               	goto	l745
  7273  003876  0A01               	xorlw	1	; case 1
  7274  003878  B4D8               	btfsc	status,2,c
  7275  00387A  D7CB               	goto	l747
  7276  00387C  0A03               	xorlw	3	; case 2
  7277  00387E  B4D8               	btfsc	status,2,c
  7278  003880  D7CA               	goto	l5129
  7279  003882  0A01               	xorlw	1	; case 3
  7280  003884  A4D8               	btfss	status,2,c
  7281  003886  0012               	return	
  7282  003888  D7DC               	goto	l5139
  7283  00388A                     __end_of_Red_Led:
  7284                           	opt stack 0
  7285                           tblptru	equ	0xFF8
  7286                           tblptrh	equ	0xFF7
  7287                           tblptrl	equ	0xFF6
  7288                           tablat	equ	0xFF5
  7289                           postinc0	equ	0xFEE
  7290                           wreg	equ	0xFE8
  7291                           postdec1	equ	0xFE5
  7292                           fsr1h	equ	0xFE2
  7293                           fsr1l	equ	0xFE1
  7294                           status	equ	0xFD8
  7295                           
  7296 ;; *************** function _Green_Led *****************
  7297 ;; Defined at:
  7298 ;;		line 47 in file "../io.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;  Operation       1    wreg     unsigned char 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  Operation       1   31[COMRAM] unsigned char 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      void 
  7305 ;; Registers used:
  7306 ;;		wreg, status,2, status,0
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7312 ;;      Params:         0       0       0       0       0       0       0       0       0
  7313 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7315 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7316 ;;Total ram usage:        1 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    3
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_Update_StateMchn
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text14
  7327  00388A                     __ptext14:
  7328                           	opt stack 0
  7329  00388A                     _Green_Led:
  7330                           	opt stack 26
  7331                           
  7332                           ;incstack = 0
  7333                           ;Green_Led@Operation stored from wreg
  7334  00388A  6E20               	movwf	Green_Led@Operation,c
  7335                           
  7336                           ;io.c: 49: switch(Operation)
  7337  00388C  D030               	goto	l5125
  7338  00388E                     l729:
  7339  00388E  9C83               	bcf	3971,6,c	;volatile
  7340  003890  0012               	return	
  7341  003892                     l731:
  7342  003892  8C83               	bsf	3971,6,c	;volatile
  7343  003894  0012               	return	
  7344  003896                     l5103:
  7345  003896  4A21               	infsnz	_Green_Led_Counter,f,c
  7346  003898  2A22               	incf	_Green_Led_Counter+1,f,c
  7347                           
  7348                           ;io.c: 56: if(Green_Led_Counter >= 3000)
  7349  00389A  0EB8               	movlw	184
  7350  00389C  5C21               	subwf	_Green_Led_Counter,w,c
  7351  00389E  0E0B               	movlw	11
  7352  0038A0  5822               	subwfb	_Green_Led_Counter+1,w,c
  7353  0038A2  A0D8               	btfss	status,0,c
  7354  0038A4  D004               	goto	l5109
  7355                           
  7356                           ;io.c: 57: {
  7357                           ;io.c: 58: Green_Led_Counter = 0;
  7358  0038A6  0E00               	movlw	0
  7359  0038A8  6E22               	movwf	_Green_Led_Counter+1,c
  7360  0038AA  0E00               	movlw	0
  7361  0038AC  6E21               	movwf	_Green_Led_Counter,c
  7362  0038AE                     l5109:
  7363                           
  7364                           ;io.c: 59: }
  7365                           ;io.c: 60: if(Green_Led_Counter >= 3000/2)
  7366  0038AE  0EDC               	movlw	220
  7367  0038B0  5C21               	subwf	_Green_Led_Counter,w,c
  7368  0038B2  0E05               	movlw	5
  7369  0038B4  5822               	subwfb	_Green_Led_Counter+1,w,c
  7370  0038B6  A0D8               	btfss	status,0,c
  7371  0038B8  D002               	goto	l734
  7372                           
  7373                           ;io.c: 61: {
  7374                           ;io.c: 62: PORTDbits.RD6 = 1;
  7375  0038BA  8C83               	bsf	3971,6,c	;volatile
  7376                           
  7377                           ;io.c: 63: }
  7378  0038BC  0012               	return	
  7379  0038BE                     l734:
  7380                           
  7381                           ;io.c: 64: else {PORTDbits.RD6 = 0;}
  7382  0038BE  9C83               	bcf	3971,6,c	;volatile
  7383                           
  7384                           ;io.c: 65: break;
  7385  0038C0  0012               	return	
  7386  0038C2                     l5113:
  7387  0038C2  4A21               	infsnz	_Green_Led_Counter,f,c
  7388  0038C4  2A22               	incf	_Green_Led_Counter+1,f,c
  7389                           
  7390                           ;io.c: 68: if(Green_Led_Counter >= 1000)
  7391  0038C6  0EE8               	movlw	232
  7392  0038C8  5C21               	subwf	_Green_Led_Counter,w,c
  7393  0038CA  0E03               	movlw	3
  7394  0038CC  5822               	subwfb	_Green_Led_Counter+1,w,c
  7395  0038CE  A0D8               	btfss	status,0,c
  7396  0038D0  D004               	goto	l5119
  7397                           
  7398                           ;io.c: 69: {
  7399                           ;io.c: 70: Green_Led_Counter = 0;
  7400  0038D2  0E00               	movlw	0
  7401  0038D4  6E22               	movwf	_Green_Led_Counter+1,c
  7402  0038D6  0E00               	movlw	0
  7403  0038D8  6E21               	movwf	_Green_Led_Counter,c
  7404  0038DA                     l5119:
  7405                           
  7406                           ;io.c: 71: }
  7407                           ;io.c: 72: if(Green_Led_Counter >= 1000/2)
  7408  0038DA  0EF4               	movlw	244
  7409  0038DC  5C21               	subwf	_Green_Led_Counter,w,c
  7410  0038DE  0E01               	movlw	1
  7411  0038E0  5822               	subwfb	_Green_Led_Counter+1,w,c
  7412  0038E2  A0D8               	btfss	status,0,c
  7413  0038E4  D002               	goto	l738
  7414                           
  7415                           ;io.c: 73: {
  7416                           ;io.c: 74: PORTDbits.RD6 = 1;
  7417  0038E6  8C83               	bsf	3971,6,c	;volatile
  7418                           
  7419                           ;io.c: 75: }
  7420  0038E8  0012               	return	
  7421  0038EA                     l738:
  7422                           
  7423                           ;io.c: 76: else {PORTDbits.RD6 = 0;}
  7424  0038EA  9C83               	bcf	3971,6,c	;volatile
  7425                           
  7426                           ;io.c: 80: }
  7427                           
  7428                           ;io.c: 79: default : break;
  7429                           
  7430                           ;io.c: 77: break;
  7431  0038EC  0012               	return	
  7432  0038EE                     l5125:
  7433  0038EE  5020               	movf	Green_Led@Operation,w,c
  7434                           
  7435                           ; Switch size 1, requested type "space"
  7436                           ; Number of cases is 4, Range of values is 0 to 3
  7437                           ; switch strategies available:
  7438                           ; Name         Instructions Cycles
  7439                           ; simple_byte           13     7 (average)
  7440                           ;	Chosen strategy is simple_byte
  7441  0038F0  0A00               	xorlw	0	; case 0
  7442  0038F2  B4D8               	btfsc	status,2,c
  7443  0038F4  D7CC               	goto	l729
  7444  0038F6  0A01               	xorlw	1	; case 1
  7445  0038F8  B4D8               	btfsc	status,2,c
  7446  0038FA  D7CB               	goto	l731
  7447  0038FC  0A03               	xorlw	3	; case 2
  7448  0038FE  B4D8               	btfsc	status,2,c
  7449  003900  D7CA               	goto	l5103
  7450  003902  0A01               	xorlw	1	; case 3
  7451  003904  A4D8               	btfss	status,2,c
  7452  003906  0012               	return	
  7453  003908  D7DC               	goto	l5113
  7454  00390A                     __end_of_Green_Led:
  7455                           	opt stack 0
  7456                           tblptru	equ	0xFF8
  7457                           tblptrh	equ	0xFF7
  7458                           tblptrl	equ	0xFF6
  7459                           tablat	equ	0xFF5
  7460                           postinc0	equ	0xFEE
  7461                           wreg	equ	0xFE8
  7462                           postdec1	equ	0xFE5
  7463                           fsr1h	equ	0xFE2
  7464                           fsr1l	equ	0xFE1
  7465                           status	equ	0xFD8
  7466                           
  7467 ;; *************** function _Eeprom_Store *****************
  7468 ;; Defined at:
  7469 ;;		line 21 in file "../eeprom_settings.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;		None
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1    wreg      void 
  7476 ;; Registers used:
  7477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7483 ;;      Params:         0       0       0       0       0       0       0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7486 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7487 ;;Total ram usage:        0 bytes
  7488 ;; Hardware stack levels used:    1
  7489 ;; Hardware stack levels required when called:    4
  7490 ;; This function calls:
  7491 ;;		_GETxAPIxVAL
  7492 ;; This function is called by:
  7493 ;;		_Update_StateMchn
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text15
  7498  0035E8                     __ptext15:
  7499                           	opt stack 0
  7500  0035E8                     _Eeprom_Store:
  7501                           	opt stack 25
  7502                           
  7503                           ;eeprom_settings.c: 23: INTCON = 0x00;
  7504                           
  7505                           ;incstack = 0
  7506  0035E8  0E00               	movlw	0
  7507  0035EA  6EF2               	movwf	intcon,c	;volatile
  7508                           
  7509                           ;eeprom_settings.c: 25: EECON1bits.EEPGD = 0;
  7510  0035EC  9EA6               	bcf	4006,7,c	;volatile
  7511                           
  7512                           ;eeprom_settings.c: 26: EECON1bits.WREN = 1;
  7513  0035EE  84A6               	bsf	4006,2,c	;volatile
  7514                           
  7515                           ;eeprom_settings.c: 27: EEADR = 0x01;
  7516  0035F0  0E01               	movlw	1
  7517  0035F2  6EA9               	movwf	4009,c	;volatile
  7518                           
  7519                           ;eeprom_settings.c: 28: EEDATA = GETxAPIxVAL(23);
  7520  0035F4  0E17               	movlw	23
  7521  0035F6  EC69  F01E         	call	_GETxAPIxVAL
  7522  0035FA  0100               	movlb	0	; () banked
  7523  0035FC  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  7524  0035FE  6EA8               	movwf	4008,c	;volatile
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;eeprom_settings.c: 29: EECON2 = 0x55;
  7528  003600  0E55               	movlw	85
  7529  003602  6EA7               	movwf	4007,c	;volatile
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;eeprom_settings.c: 30: EECON2 = 0xaa;
  7533  003604  0EAA               	movlw	170
  7534  003606  6EA7               	movwf	4007,c	;volatile
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;eeprom_settings.c: 31: EECON1bits.WR = 1;
  7538  003608  82A6               	bsf	4006,1,c	;volatile
  7539  00360A                     l658:
  7540  00360A  A8A1               	btfss	4001,4,c	;volatile
  7541  00360C  D7FE               	goto	l658
  7542                           
  7543                           ;eeprom_settings.c: 33: PIR2bits.EEIF = 0;
  7544  00360E  98A1               	bcf	4001,4,c	;volatile
  7545                           
  7546                           ;eeprom_settings.c: 35: EECON1bits.EEPGD = 0;
  7547  003610  9EA6               	bcf	4006,7,c	;volatile
  7548                           
  7549                           ;eeprom_settings.c: 36: EECON1bits.WREN = 1;
  7550  003612  84A6               	bsf	4006,2,c	;volatile
  7551                           
  7552                           ;eeprom_settings.c: 37: EEADR = 0x00;
  7553  003614  0E00               	movlw	0
  7554  003616  6EA9               	movwf	4009,c	;volatile
  7555                           
  7556                           ;eeprom_settings.c: 38: EEDATA = GETxAPIxVAL(23)>>8;
  7557  003618  0E17               	movlw	23
  7558  00361A  EC69  F01E         	call	_GETxAPIxVAL
  7559  00361E  0100               	movlb	0	; () banked
  7560  003620  C091  F090         	movff	?_GETxAPIxVAL+1,?_GETxAPIxVAL
  7561  003624  0100               	movlb	0	; () banked
  7562  003626  6B91               	clrf	(?_GETxAPIxVAL+1)& (0+255),b
  7563  003628  0100               	movlb	0	; () banked
  7564  00362A  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  7565  00362C  6EA8               	movwf	4008,c	;volatile
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;eeprom_settings.c: 39: EECON2 = 0x55;
  7569  00362E  0E55               	movlw	85
  7570  003630  6EA7               	movwf	4007,c	;volatile
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;eeprom_settings.c: 40: EECON2 = 0xaa;
  7574  003632  0EAA               	movlw	170
  7575  003634  6EA7               	movwf	4007,c	;volatile
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;eeprom_settings.c: 41: EECON1bits.WR = 1;
  7579  003636  82A6               	bsf	4006,1,c	;volatile
  7580  003638                     l661:
  7581  003638  A8A1               	btfss	4001,4,c	;volatile
  7582  00363A  D7FE               	goto	l661
  7583                           
  7584                           ;eeprom_settings.c: 43: PIR2bits.EEIF = 0;
  7585  00363C  98A1               	bcf	4001,4,c	;volatile
  7586                           
  7587                           ;eeprom_settings.c: 45: EECON1bits.EEPGD = 0;
  7588  00363E  9EA6               	bcf	4006,7,c	;volatile
  7589                           
  7590                           ;eeprom_settings.c: 46: EECON1bits.WREN = 1;
  7591  003640  84A6               	bsf	4006,2,c	;volatile
  7592                           
  7593                           ;eeprom_settings.c: 47: EEADR = 0x03;
  7594  003642  0E03               	movlw	3
  7595  003644  6EA9               	movwf	4009,c	;volatile
  7596                           
  7597                           ;eeprom_settings.c: 48: EEDATA = GETxAPIxVAL(24);
  7598  003646  0E18               	movlw	24
  7599  003648  EC69  F01E         	call	_GETxAPIxVAL
  7600  00364C  0100               	movlb	0	; () banked
  7601  00364E  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  7602  003650  6EA8               	movwf	4008,c	;volatile
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;eeprom_settings.c: 49: EECON2 = 0x55;
  7606  003652  0E55               	movlw	85
  7607  003654  6EA7               	movwf	4007,c	;volatile
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;eeprom_settings.c: 50: EECON2 = 0xaa;
  7611  003656  0EAA               	movlw	170
  7612  003658  6EA7               	movwf	4007,c	;volatile
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;eeprom_settings.c: 51: EECON1bits.WR = 1;
  7616  00365A  82A6               	bsf	4006,1,c	;volatile
  7617  00365C                     l664:
  7618  00365C  A8A1               	btfss	4001,4,c	;volatile
  7619  00365E  D7FE               	goto	l664
  7620                           
  7621                           ;eeprom_settings.c: 53: PIR2bits.EEIF = 0;
  7622  003660  98A1               	bcf	4001,4,c	;volatile
  7623                           
  7624                           ;eeprom_settings.c: 55: EECON1bits.EEPGD = 0;
  7625  003662  9EA6               	bcf	4006,7,c	;volatile
  7626                           
  7627                           ;eeprom_settings.c: 56: EECON1bits.WREN = 1;
  7628  003664  84A6               	bsf	4006,2,c	;volatile
  7629                           
  7630                           ;eeprom_settings.c: 57: EEADR = 0x02;
  7631  003666  0E02               	movlw	2
  7632  003668  6EA9               	movwf	4009,c	;volatile
  7633                           
  7634                           ;eeprom_settings.c: 58: EEDATA = GETxAPIxVAL(24)>>8;
  7635  00366A  0E18               	movlw	24
  7636  00366C  EC69  F01E         	call	_GETxAPIxVAL
  7637  003670  0100               	movlb	0	; () banked
  7638  003672  C091  F090         	movff	?_GETxAPIxVAL+1,?_GETxAPIxVAL
  7639  003676  0100               	movlb	0	; () banked
  7640  003678  6B91               	clrf	(?_GETxAPIxVAL+1)& (0+255),b
  7641  00367A  0100               	movlb	0	; () banked
  7642  00367C  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  7643  00367E  6EA8               	movwf	4008,c	;volatile
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;eeprom_settings.c: 59: EECON2 = 0x55;
  7647  003680  0E55               	movlw	85
  7648  003682  6EA7               	movwf	4007,c	;volatile
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;eeprom_settings.c: 60: EECON2 = 0xaa;
  7652  003684  0EAA               	movlw	170
  7653  003686  6EA7               	movwf	4007,c	;volatile
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;eeprom_settings.c: 61: EECON1bits.WR = 1;
  7657  003688  82A6               	bsf	4006,1,c	;volatile
  7658  00368A                     l667:
  7659  00368A  A8A1               	btfss	4001,4,c	;volatile
  7660  00368C  D7FE               	goto	l667
  7661                           
  7662                           ;eeprom_settings.c: 63: PIR2bits.EEIF = 0;
  7663  00368E  98A1               	bcf	4001,4,c	;volatile
  7664                           
  7665                           ;eeprom_settings.c: 65: EECON1bits.EEPGD = 0;
  7666  003690  9EA6               	bcf	4006,7,c	;volatile
  7667                           
  7668                           ;eeprom_settings.c: 66: EECON1bits.WREN = 1;
  7669  003692  84A6               	bsf	4006,2,c	;volatile
  7670                           
  7671                           ;eeprom_settings.c: 67: EEADR = 0x04;
  7672  003694  0E04               	movlw	4
  7673  003696  6EA9               	movwf	4009,c	;volatile
  7674                           
  7675                           ;eeprom_settings.c: 68: EEDATA = GETxAPIxVAL(25);
  7676  003698  0E19               	movlw	25
  7677  00369A  EC69  F01E         	call	_GETxAPIxVAL
  7678  00369E  0100               	movlb	0	; () banked
  7679  0036A0  5190               	movf	?_GETxAPIxVAL& (0+255),w,b
  7680  0036A2  6EA8               	movwf	4008,c	;volatile
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;eeprom_settings.c: 69: EECON2 = 0x55;
  7684  0036A4  0E55               	movlw	85
  7685  0036A6  6EA7               	movwf	4007,c	;volatile
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;eeprom_settings.c: 70: EECON2 = 0xaa;
  7689  0036A8  0EAA               	movlw	170
  7690  0036AA  6EA7               	movwf	4007,c	;volatile
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;eeprom_settings.c: 71: EECON1bits.WR = 1;
  7694  0036AC  82A6               	bsf	4006,1,c	;volatile
  7695  0036AE                     l670:
  7696  0036AE  A8A1               	btfss	4001,4,c	;volatile
  7697  0036B0  D7FE               	goto	l670
  7698                           
  7699                           ;eeprom_settings.c: 73: PIR2bits.EEIF = 0;
  7700  0036B2  98A1               	bcf	4001,4,c	;volatile
  7701                           
  7702                           ;eeprom_settings.c: 76: INTCON = 0xA0;
  7703  0036B4  0EA0               	movlw	160
  7704  0036B6  6EF2               	movwf	intcon,c	;volatile
  7705  0036B8  0012               	return		;funcret
  7706  0036BA                     __end_of_Eeprom_Store:
  7707                           	opt stack 0
  7708                           tblptru	equ	0xFF8
  7709                           tblptrh	equ	0xFF7
  7710                           tblptrl	equ	0xFF6
  7711                           tablat	equ	0xFF5
  7712                           intcon	equ	0xFF2
  7713                           postinc0	equ	0xFEE
  7714                           wreg	equ	0xFE8
  7715                           postdec1	equ	0xFE5
  7716                           fsr1h	equ	0xFE2
  7717                           fsr1l	equ	0xFE1
  7718                           status	equ	0xFD8
  7719                           
  7720 ;; *************** function _Debounce_Inputs *****************
  7721 ;; Defined at:
  7722 ;;		line 148 in file "../io.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;		None
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;		None
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      void 
  7729 ;; Registers used:
  7730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7736 ;;      Params:         0       0       0       0       0       0       0       0       0
  7737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7738 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7739 ;;      Totals:         0       2       0       0       0       0       0       0       0
  7740 ;;Total ram usage:        2 bytes
  7741 ;; Hardware stack levels used:    1
  7742 ;; Hardware stack levels required when called:    7
  7743 ;; This function calls:
  7744 ;;		_GETxAPIxVAL
  7745 ;;		_SETxAPIxVAL
  7746 ;;		_SetDCPWM1
  7747 ;; This function is called by:
  7748 ;;		_Update_StateMchn
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text16
  7753  001426                     __ptext16:
  7754                           	opt stack 0
  7755  001426                     _Debounce_Inputs:
  7756                           	opt stack 22
  7757                           
  7758                           ;io.c: 150: PORTAbits.RA3 = GETxAPIxVAL(64);
  7759                           
  7760                           ;incstack = 0
  7761  001426  0E40               	movlw	64
  7762  001428  EC69  F01E         	call	_GETxAPIxVAL
  7763  00142C  0100               	movlb	0	; () banked
  7764  00142E  4790               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7765  001430  0100               	movlb	0	; () banked
  7766  001432  4790               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7767  001434  0100               	movlb	0	; () banked
  7768  001436  4790               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7769  001438  5080               	movf	3968,w,c	;volatile
  7770  00143A  0100               	movlb	0	; () banked
  7771  00143C  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7772  00143E  0BF7               	andlw	-9
  7773  001440  0100               	movlb	0	; () banked
  7774  001442  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7775  001444  6E80               	movwf	3968,c	;volatile
  7776                           
  7777                           ;io.c: 151: PORTAbits.RA2 = GETxAPIxVAL(65);
  7778  001446  0E41               	movlw	65
  7779  001448  EC69  F01E         	call	_GETxAPIxVAL
  7780  00144C  0100               	movlb	0	; () banked
  7781  00144E  4790               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7782  001450  0100               	movlb	0	; () banked
  7783  001452  4790               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7784  001454  5080               	movf	3968,w,c	;volatile
  7785  001456  0100               	movlb	0	; () banked
  7786  001458  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7787  00145A  0BFB               	andlw	-5
  7788  00145C  0100               	movlb	0	; () banked
  7789  00145E  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7790  001460  6E80               	movwf	3968,c	;volatile
  7791                           
  7792                           ;io.c: 152: PORTAbits.RA1 = GETxAPIxVAL(66);
  7793  001462  0E42               	movlw	66
  7794  001464  EC69  F01E         	call	_GETxAPIxVAL
  7795  001468  0100               	movlb	0	; () banked
  7796  00146A  4790               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7797  00146C  5080               	movf	3968,w,c	;volatile
  7798  00146E  0100               	movlb	0	; () banked
  7799  001470  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7800  001472  0BFD               	andlw	-3
  7801  001474  0100               	movlb	0	; () banked
  7802  001476  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7803  001478  6E80               	movwf	3968,c	;volatile
  7804                           
  7805                           ;io.c: 153: PORTAbits.RA0 = GETxAPIxVAL(67);
  7806  00147A  0E43               	movlw	67
  7807  00147C  EC69  F01E         	call	_GETxAPIxVAL
  7808  001480  5080               	movf	3968,w,c	;volatile
  7809  001482  0100               	movlb	0	; () banked
  7810  001484  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7811  001486  0BFE               	andlw	-2
  7812  001488  0100               	movlb	0	; () banked
  7813  00148A  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7814  00148C  6E80               	movwf	3968,c	;volatile
  7815                           
  7816                           ;io.c: 154: PORTCbits.RC0 = GETxAPIxVAL(69);
  7817  00148E  0E45               	movlw	69
  7818  001490  EC69  F01E         	call	_GETxAPIxVAL
  7819  001494  5082               	movf	3970,w,c	;volatile
  7820  001496  0100               	movlb	0	; () banked
  7821  001498  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7822  00149A  0BFE               	andlw	-2
  7823  00149C  0100               	movlb	0	; () banked
  7824  00149E  1990               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7825  0014A0  6E82               	movwf	3970,c	;volatile
  7826                           
  7827                           ;io.c: 155: SetDCPWM1(GETxAPIxVAL(68));
  7828  0014A2  0E44               	movlw	68
  7829  0014A4  EC69  F01E         	call	_GETxAPIxVAL
  7830  0014A8  C090  F092         	movff	?_GETxAPIxVAL,SetDCPWM1@dutycycle
  7831  0014AC  C091  F093         	movff	?_GETxAPIxVAL+1,SetDCPWM1@dutycycle+1
  7832  0014B0  ECAC  F01D         	call	_SetDCPWM1	;wreg free
  7833                           
  7834                           ;io.c: 157: switch(PORTDbits.RD1)
  7835  0014B4  D02A               	goto	l7303
  7836  0014B6                     l7285:
  7837  0014B6  502D               	movf	_Reed_Contact_LF_Counter,w,c
  7838  0014B8  B4D8               	btfsc	status,2,c
  7839  0014BA  D002               	goto	l7291
  7840                           
  7841                           ;io.c: 160: {
  7842                           ;io.c: 161: Reed_Contact_LF_Counter--;
  7843  0014BC  062D               	decf	_Reed_Contact_LF_Counter,f,c
  7844                           
  7845                           ;io.c: 163: }
  7846                           
  7847                           ;io.c: 162: break;
  7848  0014BE  D05B               	goto	l7323
  7849  0014C0                     l7291:
  7850                           
  7851                           ;io.c: 164: else {SETxAPIxVAL(31, 0);}
  7852  0014C0  0E00               	movlw	0
  7853  0014C2  0100               	movlb	0	; () banked
  7854  0014C4  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7855  0014C6  0E00               	movlw	0
  7856  0014C8  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  7857  0014CA  0E1F               	movlw	31
  7858  0014CC  EC5C  F01D         	call	_SETxAPIxVAL
  7859                           
  7860                           ;io.c: 165: break;
  7861  0014D0  D052               	goto	l7323
  7862  0014D2                     l7293:
  7863  0014D2  502D               	movf	_Reed_Contact_LF_Counter,w,c
  7864  0014D4  0100               	movlb	0	; () banked
  7865  0014D6  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  7866  0014D8  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  7867  0014DA  0E1B               	movlw	27
  7868  0014DC  EC69  F01E         	call	_GETxAPIxVAL
  7869  0014E0  0100               	movlb	0	; () banked
  7870  0014E2  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  7871  0014E4  0100               	movlb	0	; () banked
  7872  0014E6  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  7873  0014E8  0100               	movlb	0	; () banked
  7874  0014EA  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  7875  0014EC  0100               	movlb	0	; () banked
  7876  0014EE  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  7877  0014F0  A0D8               	btfss	status,0,c
  7878  0014F2  D002               	goto	l7299
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;io.c: 168: {
  7882                           ;io.c: 169: Reed_Contact_LF_Counter++;
  7883  0014F4  2A2D               	incf	_Reed_Contact_LF_Counter,f,c
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;io.c: 171: }
  7887                           
  7888                           ;io.c: 170: break;
  7889  0014F6  D03F               	goto	l7323
  7890  0014F8                     l7299:
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;io.c: 172: else {SETxAPIxVAL(31, 1);}
  7894  0014F8  0E00               	movlw	0
  7895  0014FA  0100               	movlb	0	; () banked
  7896  0014FC  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7897  0014FE  0E01               	movlw	1
  7898  001500  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  7899  001502  0E1F               	movlw	31
  7900  001504  EC5C  F01D         	call	_SETxAPIxVAL
  7901                           
  7902                           ;io.c: 176: }
  7903                           
  7904                           ;io.c: 175: default : break;
  7905                           
  7906                           ;io.c: 173: break;
  7907  001508  D036               	goto	l7323
  7908  00150A                     l7303:
  7909  00150A  A283               	btfss	3971,1,c	;volatile
  7910  00150C  D002               	goto	u6830
  7911  00150E  0E01               	movlw	1
  7912  001510  D001               	goto	u6836
  7913  001512                     u6830:
  7914  001512  0E00               	movlw	0
  7915  001514                     u6836:
  7916                           
  7917                           ; Switch size 1, requested type "space"
  7918                           ; Number of cases is 2, Range of values is 0 to 1
  7919                           ; switch strategies available:
  7920                           ; Name         Instructions Cycles
  7921                           ; simple_byte            7     4 (average)
  7922                           ;	Chosen strategy is simple_byte
  7923  001514  0A00               	xorlw	0	; case 0
  7924  001516  B4D8               	btfsc	status,2,c
  7925  001518  D7DC               	goto	l7293
  7926  00151A  0A01               	xorlw	1	; case 1
  7927  00151C  B4D8               	btfsc	status,2,c
  7928  00151E  D7CB               	goto	l7285
  7929                           
  7930                           ;io.c: 179: switch(PORTDbits.RD0)
  7931  001520  D02A               	goto	l7323
  7932  001522                     l7305:
  7933  001522  502C               	movf	_Reed_Contact_LB_Counter,w,c
  7934  001524  B4D8               	btfsc	status,2,c
  7935  001526  D002               	goto	l7311
  7936                           
  7937                           ;io.c: 182: {
  7938                           ;io.c: 183: Reed_Contact_LB_Counter--;
  7939  001528  062C               	decf	_Reed_Contact_LB_Counter,f,c
  7940                           
  7941                           ;io.c: 185: }
  7942                           
  7943                           ;io.c: 184: break;
  7944  00152A  D05B               	goto	l7343
  7945  00152C                     l7311:
  7946                           
  7947                           ;io.c: 186: else {SETxAPIxVAL(30, 0);}
  7948  00152C  0E00               	movlw	0
  7949  00152E  0100               	movlb	0	; () banked
  7950  001530  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7951  001532  0E00               	movlw	0
  7952  001534  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  7953  001536  0E1E               	movlw	30
  7954  001538  EC5C  F01D         	call	_SETxAPIxVAL
  7955                           
  7956                           ;io.c: 187: break;
  7957  00153C  D052               	goto	l7343
  7958  00153E                     l7313:
  7959  00153E  502C               	movf	_Reed_Contact_LB_Counter,w,c
  7960  001540  0100               	movlb	0	; () banked
  7961  001542  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  7962  001544  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  7963  001546  0E1B               	movlw	27
  7964  001548  EC69  F01E         	call	_GETxAPIxVAL
  7965  00154C  0100               	movlb	0	; () banked
  7966  00154E  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  7967  001550  0100               	movlb	0	; () banked
  7968  001552  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  7969  001554  0100               	movlb	0	; () banked
  7970  001556  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  7971  001558  0100               	movlb	0	; () banked
  7972  00155A  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  7973  00155C  A0D8               	btfss	status,0,c
  7974  00155E  D002               	goto	l7319
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;io.c: 190: {
  7978                           ;io.c: 191: Reed_Contact_LB_Counter++;
  7979  001560  2A2C               	incf	_Reed_Contact_LB_Counter,f,c
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;io.c: 193: }
  7983                           
  7984                           ;io.c: 192: break;
  7985  001562  D03F               	goto	l7343
  7986  001564                     l7319:
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;io.c: 194: else {SETxAPIxVAL(30, 1);}
  7990  001564  0E00               	movlw	0
  7991  001566  0100               	movlb	0	; () banked
  7992  001568  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7993  00156A  0E01               	movlw	1
  7994  00156C  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  7995  00156E  0E1E               	movlw	30
  7996  001570  EC5C  F01D         	call	_SETxAPIxVAL
  7997                           
  7998                           ;io.c: 198: }
  7999                           
  8000                           ;io.c: 197: default : break;
  8001                           
  8002                           ;io.c: 195: break;
  8003  001574  D036               	goto	l7343
  8004  001576                     l7323:
  8005  001576  A083               	btfss	3971,0,c	;volatile
  8006  001578  D002               	goto	u6860
  8007  00157A  0E01               	movlw	1
  8008  00157C  D001               	goto	u6866
  8009  00157E                     u6860:
  8010  00157E  0E00               	movlw	0
  8011  001580                     u6866:
  8012                           
  8013                           ; Switch size 1, requested type "space"
  8014                           ; Number of cases is 2, Range of values is 0 to 1
  8015                           ; switch strategies available:
  8016                           ; Name         Instructions Cycles
  8017                           ; simple_byte            7     4 (average)
  8018                           ;	Chosen strategy is simple_byte
  8019  001580  0A00               	xorlw	0	; case 0
  8020  001582  B4D8               	btfsc	status,2,c
  8021  001584  D7DC               	goto	l7313
  8022  001586  0A01               	xorlw	1	; case 1
  8023  001588  B4D8               	btfsc	status,2,c
  8024  00158A  D7CB               	goto	l7305
  8025                           
  8026                           ;io.c: 201: switch(PORTDbits.RD3)
  8027  00158C  D02A               	goto	l7343
  8028  00158E                     l7325:
  8029  00158E  5031               	movf	_Reed_Contact_RF_Counter,w,c
  8030  001590  B4D8               	btfsc	status,2,c
  8031  001592  D002               	goto	l7331
  8032                           
  8033                           ;io.c: 204: {
  8034                           ;io.c: 205: Reed_Contact_RF_Counter--;
  8035  001594  0631               	decf	_Reed_Contact_RF_Counter,f,c
  8036                           
  8037                           ;io.c: 207: }
  8038                           
  8039                           ;io.c: 206: break;
  8040  001596  D05B               	goto	l7363
  8041  001598                     l7331:
  8042                           
  8043                           ;io.c: 208: else {SETxAPIxVAL(29, 0);}
  8044  001598  0E00               	movlw	0
  8045  00159A  0100               	movlb	0	; () banked
  8046  00159C  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8047  00159E  0E00               	movlw	0
  8048  0015A0  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8049  0015A2  0E1D               	movlw	29
  8050  0015A4  EC5C  F01D         	call	_SETxAPIxVAL
  8051                           
  8052                           ;io.c: 209: break;
  8053  0015A8  D052               	goto	l7363
  8054  0015AA                     l7333:
  8055  0015AA  5031               	movf	_Reed_Contact_RF_Counter,w,c
  8056  0015AC  0100               	movlb	0	; () banked
  8057  0015AE  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8058  0015B0  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8059  0015B2  0E1B               	movlw	27
  8060  0015B4  EC69  F01E         	call	_GETxAPIxVAL
  8061  0015B8  0100               	movlb	0	; () banked
  8062  0015BA  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8063  0015BC  0100               	movlb	0	; () banked
  8064  0015BE  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8065  0015C0  0100               	movlb	0	; () banked
  8066  0015C2  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8067  0015C4  0100               	movlb	0	; () banked
  8068  0015C6  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8069  0015C8  A0D8               	btfss	status,0,c
  8070  0015CA  D002               	goto	l7339
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;io.c: 212: {
  8074                           ;io.c: 213: Reed_Contact_RF_Counter++;
  8075  0015CC  2A31               	incf	_Reed_Contact_RF_Counter,f,c
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;io.c: 215: }
  8079                           
  8080                           ;io.c: 214: break;
  8081  0015CE  D03F               	goto	l7363
  8082  0015D0                     l7339:
  8083                           
  8084                           ; BSR set to: 0
  8085                           ;io.c: 216: else {SETxAPIxVAL(29, 1);}
  8086  0015D0  0E00               	movlw	0
  8087  0015D2  0100               	movlb	0	; () banked
  8088  0015D4  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8089  0015D6  0E01               	movlw	1
  8090  0015D8  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8091  0015DA  0E1D               	movlw	29
  8092  0015DC  EC5C  F01D         	call	_SETxAPIxVAL
  8093                           
  8094                           ;io.c: 220: }
  8095                           
  8096                           ;io.c: 219: default : break;
  8097                           
  8098                           ;io.c: 217: break;
  8099  0015E0  D036               	goto	l7363
  8100  0015E2                     l7343:
  8101  0015E2  A683               	btfss	3971,3,c	;volatile
  8102  0015E4  D002               	goto	u6890
  8103  0015E6  0E01               	movlw	1
  8104  0015E8  D001               	goto	u6896
  8105  0015EA                     u6890:
  8106  0015EA  0E00               	movlw	0
  8107  0015EC                     u6896:
  8108                           
  8109                           ; Switch size 1, requested type "space"
  8110                           ; Number of cases is 2, Range of values is 0 to 1
  8111                           ; switch strategies available:
  8112                           ; Name         Instructions Cycles
  8113                           ; simple_byte            7     4 (average)
  8114                           ;	Chosen strategy is simple_byte
  8115  0015EC  0A00               	xorlw	0	; case 0
  8116  0015EE  B4D8               	btfsc	status,2,c
  8117  0015F0  D7DC               	goto	l7333
  8118  0015F2  0A01               	xorlw	1	; case 1
  8119  0015F4  B4D8               	btfsc	status,2,c
  8120  0015F6  D7CB               	goto	l7325
  8121                           
  8122                           ;io.c: 223: switch(PORTDbits.RD2)
  8123  0015F8  D02A               	goto	l7363
  8124  0015FA                     l7345:
  8125  0015FA  5030               	movf	_Reed_Contact_RB_Counter,w,c
  8126  0015FC  B4D8               	btfsc	status,2,c
  8127  0015FE  D002               	goto	l7351
  8128                           
  8129                           ;io.c: 226: {
  8130                           ;io.c: 227: Reed_Contact_RB_Counter--;
  8131  001600  0630               	decf	_Reed_Contact_RB_Counter,f,c
  8132                           
  8133                           ;io.c: 229: }
  8134                           
  8135                           ;io.c: 228: break;
  8136  001602  D05B               	goto	l7383
  8137  001604                     l7351:
  8138                           
  8139                           ;io.c: 230: else {SETxAPIxVAL(28, 0);}
  8140  001604  0E00               	movlw	0
  8141  001606  0100               	movlb	0	; () banked
  8142  001608  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8143  00160A  0E00               	movlw	0
  8144  00160C  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8145  00160E  0E1C               	movlw	28
  8146  001610  EC5C  F01D         	call	_SETxAPIxVAL
  8147                           
  8148                           ;io.c: 231: break;
  8149  001614  D052               	goto	l7383
  8150  001616                     l7353:
  8151  001616  5030               	movf	_Reed_Contact_RB_Counter,w,c
  8152  001618  0100               	movlb	0	; () banked
  8153  00161A  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8154  00161C  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8155  00161E  0E1B               	movlw	27
  8156  001620  EC69  F01E         	call	_GETxAPIxVAL
  8157  001624  0100               	movlb	0	; () banked
  8158  001626  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8159  001628  0100               	movlb	0	; () banked
  8160  00162A  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8161  00162C  0100               	movlb	0	; () banked
  8162  00162E  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8163  001630  0100               	movlb	0	; () banked
  8164  001632  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8165  001634  A0D8               	btfss	status,0,c
  8166  001636  D002               	goto	l7359
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;io.c: 234: {
  8170                           ;io.c: 235: Reed_Contact_RB_Counter++;
  8171  001638  2A30               	incf	_Reed_Contact_RB_Counter,f,c
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;io.c: 237: }
  8175                           
  8176                           ;io.c: 236: break;
  8177  00163A  D03F               	goto	l7383
  8178  00163C                     l7359:
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;io.c: 238: else {SETxAPIxVAL(28, 1);}
  8182  00163C  0E00               	movlw	0
  8183  00163E  0100               	movlb	0	; () banked
  8184  001640  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8185  001642  0E01               	movlw	1
  8186  001644  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8187  001646  0E1C               	movlw	28
  8188  001648  EC5C  F01D         	call	_SETxAPIxVAL
  8189                           
  8190                           ;io.c: 242: }
  8191                           
  8192                           ;io.c: 241: default : break;
  8193                           
  8194                           ;io.c: 239: break;
  8195  00164C  D036               	goto	l7383
  8196  00164E                     l7363:
  8197  00164E  A483               	btfss	3971,2,c	;volatile
  8198  001650  D002               	goto	u6920
  8199  001652  0E01               	movlw	1
  8200  001654  D001               	goto	u6926
  8201  001656                     u6920:
  8202  001656  0E00               	movlw	0
  8203  001658                     u6926:
  8204                           
  8205                           ; Switch size 1, requested type "space"
  8206                           ; Number of cases is 2, Range of values is 0 to 1
  8207                           ; switch strategies available:
  8208                           ; Name         Instructions Cycles
  8209                           ; simple_byte            7     4 (average)
  8210                           ;	Chosen strategy is simple_byte
  8211  001658  0A00               	xorlw	0	; case 0
  8212  00165A  B4D8               	btfsc	status,2,c
  8213  00165C  D7DC               	goto	l7353
  8214  00165E  0A01               	xorlw	1	; case 1
  8215  001660  B4D8               	btfsc	status,2,c
  8216  001662  D7CB               	goto	l7345
  8217                           
  8218                           ;io.c: 245: switch(!PORTBbits.RB0)
  8219  001664  D02A               	goto	l7383
  8220  001666                     l7365:
  8221  001666  502A               	movf	_Button_Contact_Counter_Start,w,c
  8222  001668  0100               	movlb	0	; () banked
  8223  00166A  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8224  00166C  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8225  00166E  0E1B               	movlw	27
  8226  001670  EC69  F01E         	call	_GETxAPIxVAL
  8227  001674  0100               	movlb	0	; () banked
  8228  001676  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8229  001678  0100               	movlb	0	; () banked
  8230  00167A  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8231  00167C  0100               	movlb	0	; () banked
  8232  00167E  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8233  001680  0100               	movlb	0	; () banked
  8234  001682  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8235  001684  A0D8               	btfss	status,0,c
  8236  001686  D002               	goto	l7371
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;io.c: 248: {
  8240                           ;io.c: 249: Button_Contact_Counter_Start++;
  8241  001688  2A2A               	incf	_Button_Contact_Counter_Start,f,c
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;io.c: 251: }
  8245                           
  8246                           ;io.c: 250: break;
  8247  00168A  D057               	goto	l7403
  8248  00168C                     l7371:
  8249                           
  8250                           ; BSR set to: 0
  8251                           ;io.c: 252: else {SETxAPIxVAL(32, 1); }
  8252  00168C  0E00               	movlw	0
  8253  00168E  0100               	movlb	0	; () banked
  8254  001690  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8255  001692  0E01               	movlw	1
  8256  001694  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8257  001696  0E20               	movlw	32
  8258  001698  EC5C  F01D         	call	_SETxAPIxVAL
  8259                           
  8260                           ;io.c: 253: break;
  8261  00169C  D04E               	goto	l7403
  8262  00169E                     l7373:
  8263  00169E  502A               	movf	_Button_Contact_Counter_Start,w,c
  8264  0016A0  B4D8               	btfsc	status,2,c
  8265  0016A2  D002               	goto	l7379
  8266                           
  8267                           ;io.c: 256: {
  8268                           ;io.c: 257: Button_Contact_Counter_Start--;
  8269  0016A4  062A               	decf	_Button_Contact_Counter_Start,f,c
  8270                           
  8271                           ;io.c: 259: }
  8272                           
  8273                           ;io.c: 258: break;
  8274  0016A6  D049               	goto	l7403
  8275  0016A8                     l7379:
  8276                           
  8277                           ;io.c: 260: else {SETxAPIxVAL(32, 0);}
  8278  0016A8  0E00               	movlw	0
  8279  0016AA  0100               	movlb	0	; () banked
  8280  0016AC  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8281  0016AE  0E00               	movlw	0
  8282  0016B0  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8283  0016B2  0E20               	movlw	32
  8284  0016B4  EC5C  F01D         	call	_SETxAPIxVAL
  8285                           
  8286                           ;io.c: 264: }
  8287                           
  8288                           ;io.c: 263: default : break;
  8289                           
  8290                           ;io.c: 261: break;
  8291  0016B8  D040               	goto	l7403
  8292  0016BA                     l7383:
  8293  0016BA  B081               	btfsc	3969,0,c	;volatile
  8294  0016BC  D002               	goto	u6950
  8295  0016BE  0E01               	movlw	1
  8296  0016C0  D001               	goto	u6960
  8297  0016C2                     u6950:
  8298  0016C2  0E00               	movlw	0
  8299  0016C4                     u6960:
  8300  0016C4  0100               	movlb	0	; () banked
  8301  0016C6  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8302  0016C8  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8303                           
  8304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8305                           ; Switch size 1, requested type "space"
  8306                           ; Number of cases is 1, Range of values is 0 to 0
  8307                           ; switch strategies available:
  8308                           ; Name         Instructions Cycles
  8309                           ; simple_byte            4     3 (average)
  8310                           ;	Chosen strategy is simple_byte
  8311  0016CA  0100               	movlb	0	; () banked
  8312  0016CC  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8313  0016CE  0A00               	xorlw	0	; case 0
  8314  0016D0  A4D8               	btfss	status,2,c
  8315  0016D2  D033               	goto	l7403
  8316                           
  8317                           ; BSR set to: 0
  8318                           ; Switch size 1, requested type "space"
  8319                           ; Number of cases is 2, Range of values is 0 to 1
  8320                           ; switch strategies available:
  8321                           ; Name         Instructions Cycles
  8322                           ; simple_byte            7     4 (average)
  8323                           ;	Chosen strategy is simple_byte
  8324  0016D4  0100               	movlb	0	; () banked
  8325  0016D6  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8326  0016D8  0A00               	xorlw	0	; case 0
  8327  0016DA  B4D8               	btfsc	status,2,c
  8328  0016DC  D7E0               	goto	l7373
  8329  0016DE  0A01               	xorlw	1	; case 1
  8330  0016E0  B4D8               	btfsc	status,2,c
  8331  0016E2  D7C1               	goto	l7365
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;io.c: 267: switch(!PORTDbits.RD7)
  8335  0016E4  D02A               	goto	l7403
  8336  0016E6                     l7385:
  8337                           
  8338                           ; BSR set to: 0
  8339  0016E6  502B               	movf	_Button_Contact_Counter_Stop,w,c
  8340  0016E8  0100               	movlb	0	; () banked
  8341  0016EA  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8342  0016EC  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8343  0016EE  0E1B               	movlw	27
  8344  0016F0  EC69  F01E         	call	_GETxAPIxVAL
  8345  0016F4  0100               	movlb	0	; () banked
  8346  0016F6  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8347  0016F8  0100               	movlb	0	; () banked
  8348  0016FA  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8349  0016FC  0100               	movlb	0	; () banked
  8350  0016FE  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8351  001700  0100               	movlb	0	; () banked
  8352  001702  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8353  001704  A0D8               	btfss	status,0,c
  8354  001706  D002               	goto	l7391
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;io.c: 270: {
  8358                           ;io.c: 271: Button_Contact_Counter_Stop++;
  8359  001708  2A2B               	incf	_Button_Contact_Counter_Stop,f,c
  8360                           
  8361                           ; BSR set to: 0
  8362                           ;io.c: 273: }
  8363                           
  8364                           ;io.c: 272: break;
  8365  00170A  D057               	goto	l7423
  8366  00170C                     l7391:
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;io.c: 274: else {SETxAPIxVAL(33, 1); }
  8370  00170C  0E00               	movlw	0
  8371  00170E  0100               	movlb	0	; () banked
  8372  001710  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8373  001712  0E01               	movlw	1
  8374  001714  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8375  001716  0E21               	movlw	33
  8376  001718  EC5C  F01D         	call	_SETxAPIxVAL
  8377                           
  8378                           ;io.c: 275: break;
  8379  00171C  D04E               	goto	l7423
  8380  00171E                     l7393:
  8381  00171E  502B               	movf	_Button_Contact_Counter_Stop,w,c
  8382  001720  B4D8               	btfsc	status,2,c
  8383  001722  D002               	goto	l7399
  8384                           
  8385                           ;io.c: 278: {
  8386                           ;io.c: 279: Button_Contact_Counter_Stop--;
  8387  001724  062B               	decf	_Button_Contact_Counter_Stop,f,c
  8388                           
  8389                           ;io.c: 281: }
  8390                           
  8391                           ;io.c: 280: break;
  8392  001726  D049               	goto	l7423
  8393  001728                     l7399:
  8394                           
  8395                           ;io.c: 282: else {SETxAPIxVAL(33, 0);}
  8396  001728  0E00               	movlw	0
  8397  00172A  0100               	movlb	0	; () banked
  8398  00172C  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8399  00172E  0E00               	movlw	0
  8400  001730  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8401  001732  0E21               	movlw	33
  8402  001734  EC5C  F01D         	call	_SETxAPIxVAL
  8403                           
  8404                           ;io.c: 286: }
  8405                           
  8406                           ;io.c: 285: default : break;
  8407                           
  8408                           ;io.c: 283: break;
  8409  001738  D040               	goto	l7423
  8410  00173A                     l7403:
  8411  00173A  BE83               	btfsc	3971,7,c	;volatile
  8412  00173C  D002               	goto	u6990
  8413  00173E  0E01               	movlw	1
  8414  001740  D001               	goto	u7000
  8415  001742                     u6990:
  8416  001742  0E00               	movlw	0
  8417  001744                     u7000:
  8418  001744  0100               	movlb	0	; () banked
  8419  001746  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8420  001748  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8421                           
  8422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8423                           ; Switch size 1, requested type "space"
  8424                           ; Number of cases is 1, Range of values is 0 to 0
  8425                           ; switch strategies available:
  8426                           ; Name         Instructions Cycles
  8427                           ; simple_byte            4     3 (average)
  8428                           ;	Chosen strategy is simple_byte
  8429  00174A  0100               	movlb	0	; () banked
  8430  00174C  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8431  00174E  0A00               	xorlw	0	; case 0
  8432  001750  A4D8               	btfss	status,2,c
  8433  001752  D033               	goto	l7423
  8434                           
  8435                           ; BSR set to: 0
  8436                           ; Switch size 1, requested type "space"
  8437                           ; Number of cases is 2, Range of values is 0 to 1
  8438                           ; switch strategies available:
  8439                           ; Name         Instructions Cycles
  8440                           ; simple_byte            7     4 (average)
  8441                           ;	Chosen strategy is simple_byte
  8442  001754  0100               	movlb	0	; () banked
  8443  001756  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8444  001758  0A00               	xorlw	0	; case 0
  8445  00175A  B4D8               	btfsc	status,2,c
  8446  00175C  D7E0               	goto	l7393
  8447  00175E  0A01               	xorlw	1	; case 1
  8448  001760  B4D8               	btfsc	status,2,c
  8449  001762  D7C1               	goto	l7385
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;io.c: 289: switch(!PORTBbits.RB1)
  8453  001764  D02A               	goto	l7423
  8454  001766                     l7405:
  8455                           
  8456                           ; BSR set to: 0
  8457  001766  5027               	movf	_Button_Contact_Counter_Middle,w,c
  8458  001768  0100               	movlb	0	; () banked
  8459  00176A  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8460  00176C  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8461  00176E  0E1B               	movlw	27
  8462  001770  EC69  F01E         	call	_GETxAPIxVAL
  8463  001774  0100               	movlb	0	; () banked
  8464  001776  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8465  001778  0100               	movlb	0	; () banked
  8466  00177A  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8467  00177C  0100               	movlb	0	; () banked
  8468  00177E  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8469  001780  0100               	movlb	0	; () banked
  8470  001782  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8471  001784  A0D8               	btfss	status,0,c
  8472  001786  D002               	goto	l7411
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;io.c: 292: {
  8476                           ;io.c: 293: Button_Contact_Counter_Middle++;
  8477  001788  2A27               	incf	_Button_Contact_Counter_Middle,f,c
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;io.c: 295: }
  8481                           
  8482                           ;io.c: 294: break;
  8483  00178A  D057               	goto	l7443
  8484  00178C                     l7411:
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;io.c: 296: else {SETxAPIxVAL(34, 1); }
  8488  00178C  0E00               	movlw	0
  8489  00178E  0100               	movlb	0	; () banked
  8490  001790  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8491  001792  0E01               	movlw	1
  8492  001794  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8493  001796  0E22               	movlw	34
  8494  001798  EC5C  F01D         	call	_SETxAPIxVAL
  8495                           
  8496                           ;io.c: 297: break;
  8497  00179C  D04E               	goto	l7443
  8498  00179E                     l7413:
  8499  00179E  5027               	movf	_Button_Contact_Counter_Middle,w,c
  8500  0017A0  B4D8               	btfsc	status,2,c
  8501  0017A2  D002               	goto	l7419
  8502                           
  8503                           ;io.c: 300: {
  8504                           ;io.c: 301: Button_Contact_Counter_Middle--;
  8505  0017A4  0627               	decf	_Button_Contact_Counter_Middle,f,c
  8506                           
  8507                           ;io.c: 303: }
  8508                           
  8509                           ;io.c: 302: break;
  8510  0017A6  D049               	goto	l7443
  8511  0017A8                     l7419:
  8512                           
  8513                           ;io.c: 304: else {SETxAPIxVAL(34, 0);}
  8514  0017A8  0E00               	movlw	0
  8515  0017AA  0100               	movlb	0	; () banked
  8516  0017AC  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8517  0017AE  0E00               	movlw	0
  8518  0017B0  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8519  0017B2  0E22               	movlw	34
  8520  0017B4  EC5C  F01D         	call	_SETxAPIxVAL
  8521                           
  8522                           ;io.c: 308: }
  8523                           
  8524                           ;io.c: 307: default : break;
  8525                           
  8526                           ;io.c: 305: break;
  8527  0017B8  D040               	goto	l7443
  8528  0017BA                     l7423:
  8529  0017BA  B281               	btfsc	3969,1,c	;volatile
  8530  0017BC  D002               	goto	u7030
  8531  0017BE  0E01               	movlw	1
  8532  0017C0  D001               	goto	u7040
  8533  0017C2                     u7030:
  8534  0017C2  0E00               	movlw	0
  8535  0017C4                     u7040:
  8536  0017C4  0100               	movlb	0	; () banked
  8537  0017C6  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8538  0017C8  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8539                           
  8540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8541                           ; Switch size 1, requested type "space"
  8542                           ; Number of cases is 1, Range of values is 0 to 0
  8543                           ; switch strategies available:
  8544                           ; Name         Instructions Cycles
  8545                           ; simple_byte            4     3 (average)
  8546                           ;	Chosen strategy is simple_byte
  8547  0017CA  0100               	movlb	0	; () banked
  8548  0017CC  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8549  0017CE  0A00               	xorlw	0	; case 0
  8550  0017D0  A4D8               	btfss	status,2,c
  8551  0017D2  D033               	goto	l7443
  8552                           
  8553                           ; BSR set to: 0
  8554                           ; Switch size 1, requested type "space"
  8555                           ; Number of cases is 2, Range of values is 0 to 1
  8556                           ; switch strategies available:
  8557                           ; Name         Instructions Cycles
  8558                           ; simple_byte            7     4 (average)
  8559                           ;	Chosen strategy is simple_byte
  8560  0017D4  0100               	movlb	0	; () banked
  8561  0017D6  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8562  0017D8  0A00               	xorlw	0	; case 0
  8563  0017DA  B4D8               	btfsc	status,2,c
  8564  0017DC  D7E0               	goto	l7413
  8565  0017DE  0A01               	xorlw	1	; case 1
  8566  0017E0  B4D8               	btfsc	status,2,c
  8567  0017E2  D7C1               	goto	l7405
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;io.c: 311: switch(!PORTBbits.RB5)
  8571  0017E4  D02A               	goto	l7443
  8572  0017E6                     l7425:
  8573                           
  8574                           ; BSR set to: 0
  8575  0017E6  5025               	movf	_Button_Contact_Counter_LB,w,c
  8576  0017E8  0100               	movlb	0	; () banked
  8577  0017EA  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8578  0017EC  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8579  0017EE  0E1B               	movlw	27
  8580  0017F0  EC69  F01E         	call	_GETxAPIxVAL
  8581  0017F4  0100               	movlb	0	; () banked
  8582  0017F6  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8583  0017F8  0100               	movlb	0	; () banked
  8584  0017FA  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8585  0017FC  0100               	movlb	0	; () banked
  8586  0017FE  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8587  001800  0100               	movlb	0	; () banked
  8588  001802  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8589  001804  A0D8               	btfss	status,0,c
  8590  001806  D002               	goto	l7431
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;io.c: 314: {
  8594                           ;io.c: 315: Button_Contact_Counter_LB++;
  8595  001808  2A25               	incf	_Button_Contact_Counter_LB,f,c
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;io.c: 317: }
  8599                           
  8600                           ;io.c: 316: break;
  8601  00180A  D057               	goto	l7463
  8602  00180C                     l7431:
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;io.c: 318: else {SETxAPIxVAL(35, 1); }
  8606  00180C  0E00               	movlw	0
  8607  00180E  0100               	movlb	0	; () banked
  8608  001810  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8609  001812  0E01               	movlw	1
  8610  001814  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8611  001816  0E23               	movlw	35
  8612  001818  EC5C  F01D         	call	_SETxAPIxVAL
  8613                           
  8614                           ;io.c: 319: break;
  8615  00181C  D04E               	goto	l7463
  8616  00181E                     l7433:
  8617  00181E  5025               	movf	_Button_Contact_Counter_LB,w,c
  8618  001820  B4D8               	btfsc	status,2,c
  8619  001822  D002               	goto	l7439
  8620                           
  8621                           ;io.c: 322: {
  8622                           ;io.c: 323: Button_Contact_Counter_LB--;
  8623  001824  0625               	decf	_Button_Contact_Counter_LB,f,c
  8624                           
  8625                           ;io.c: 325: }
  8626                           
  8627                           ;io.c: 324: break;
  8628  001826  D049               	goto	l7463
  8629  001828                     l7439:
  8630                           
  8631                           ;io.c: 326: else {SETxAPIxVAL(35, 0);}
  8632  001828  0E00               	movlw	0
  8633  00182A  0100               	movlb	0	; () banked
  8634  00182C  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8635  00182E  0E00               	movlw	0
  8636  001830  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8637  001832  0E23               	movlw	35
  8638  001834  EC5C  F01D         	call	_SETxAPIxVAL
  8639                           
  8640                           ;io.c: 330: }
  8641                           
  8642                           ;io.c: 329: default : break;
  8643                           
  8644                           ;io.c: 327: break;
  8645  001838  D040               	goto	l7463
  8646  00183A                     l7443:
  8647  00183A  BA81               	btfsc	3969,5,c	;volatile
  8648  00183C  D002               	goto	u7070
  8649  00183E  0E01               	movlw	1
  8650  001840  D001               	goto	u7080
  8651  001842                     u7070:
  8652  001842  0E00               	movlw	0
  8653  001844                     u7080:
  8654  001844  0100               	movlb	0	; () banked
  8655  001846  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8656  001848  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8657                           
  8658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8659                           ; Switch size 1, requested type "space"
  8660                           ; Number of cases is 1, Range of values is 0 to 0
  8661                           ; switch strategies available:
  8662                           ; Name         Instructions Cycles
  8663                           ; simple_byte            4     3 (average)
  8664                           ;	Chosen strategy is simple_byte
  8665  00184A  0100               	movlb	0	; () banked
  8666  00184C  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8667  00184E  0A00               	xorlw	0	; case 0
  8668  001850  A4D8               	btfss	status,2,c
  8669  001852  D033               	goto	l7463
  8670                           
  8671                           ; BSR set to: 0
  8672                           ; Switch size 1, requested type "space"
  8673                           ; Number of cases is 2, Range of values is 0 to 1
  8674                           ; switch strategies available:
  8675                           ; Name         Instructions Cycles
  8676                           ; simple_byte            7     4 (average)
  8677                           ;	Chosen strategy is simple_byte
  8678  001854  0100               	movlb	0	; () banked
  8679  001856  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8680  001858  0A00               	xorlw	0	; case 0
  8681  00185A  B4D8               	btfsc	status,2,c
  8682  00185C  D7E0               	goto	l7433
  8683  00185E  0A01               	xorlw	1	; case 1
  8684  001860  B4D8               	btfsc	status,2,c
  8685  001862  D7C1               	goto	l7425
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;io.c: 333: switch(!PORTBbits.RB4)
  8689  001864  D02A               	goto	l7463
  8690  001866                     l7445:
  8691                           
  8692                           ; BSR set to: 0
  8693  001866  5026               	movf	_Button_Contact_Counter_LF,w,c
  8694  001868  0100               	movlb	0	; () banked
  8695  00186A  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8696  00186C  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8697  00186E  0E1B               	movlw	27
  8698  001870  EC69  F01E         	call	_GETxAPIxVAL
  8699  001874  0100               	movlb	0	; () banked
  8700  001876  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8701  001878  0100               	movlb	0	; () banked
  8702  00187A  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8703  00187C  0100               	movlb	0	; () banked
  8704  00187E  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8705  001880  0100               	movlb	0	; () banked
  8706  001882  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8707  001884  A0D8               	btfss	status,0,c
  8708  001886  D002               	goto	l7451
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;io.c: 336: {
  8712                           ;io.c: 337: Button_Contact_Counter_LF++;
  8713  001888  2A26               	incf	_Button_Contact_Counter_LF,f,c
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;io.c: 339: }
  8717                           
  8718                           ;io.c: 338: break;
  8719  00188A  D057               	goto	l7483
  8720  00188C                     l7451:
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;io.c: 340: else {SETxAPIxVAL(36, 1); }
  8724  00188C  0E00               	movlw	0
  8725  00188E  0100               	movlb	0	; () banked
  8726  001890  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8727  001892  0E01               	movlw	1
  8728  001894  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8729  001896  0E24               	movlw	36
  8730  001898  EC5C  F01D         	call	_SETxAPIxVAL
  8731                           
  8732                           ;io.c: 341: break;
  8733  00189C  D04E               	goto	l7483
  8734  00189E                     l7453:
  8735  00189E  5026               	movf	_Button_Contact_Counter_LF,w,c
  8736  0018A0  B4D8               	btfsc	status,2,c
  8737  0018A2  D002               	goto	l7459
  8738                           
  8739                           ;io.c: 344: {
  8740                           ;io.c: 345: Button_Contact_Counter_LF--;
  8741  0018A4  0626               	decf	_Button_Contact_Counter_LF,f,c
  8742                           
  8743                           ;io.c: 347: }
  8744                           
  8745                           ;io.c: 346: break;
  8746  0018A6  D049               	goto	l7483
  8747  0018A8                     l7459:
  8748                           
  8749                           ;io.c: 348: else {SETxAPIxVAL(36, 0);}
  8750  0018A8  0E00               	movlw	0
  8751  0018AA  0100               	movlb	0	; () banked
  8752  0018AC  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8753  0018AE  0E00               	movlw	0
  8754  0018B0  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8755  0018B2  0E24               	movlw	36
  8756  0018B4  EC5C  F01D         	call	_SETxAPIxVAL
  8757                           
  8758                           ;io.c: 352: }
  8759                           
  8760                           ;io.c: 351: default : break;
  8761                           
  8762                           ;io.c: 349: break;
  8763  0018B8  D040               	goto	l7483
  8764  0018BA                     l7463:
  8765  0018BA  B881               	btfsc	3969,4,c	;volatile
  8766  0018BC  D002               	goto	u7110
  8767  0018BE  0E01               	movlw	1
  8768  0018C0  D001               	goto	u7120
  8769  0018C2                     u7110:
  8770  0018C2  0E00               	movlw	0
  8771  0018C4                     u7120:
  8772  0018C4  0100               	movlb	0	; () banked
  8773  0018C6  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8774  0018C8  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8775                           
  8776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8777                           ; Switch size 1, requested type "space"
  8778                           ; Number of cases is 1, Range of values is 0 to 0
  8779                           ; switch strategies available:
  8780                           ; Name         Instructions Cycles
  8781                           ; simple_byte            4     3 (average)
  8782                           ;	Chosen strategy is simple_byte
  8783  0018CA  0100               	movlb	0	; () banked
  8784  0018CC  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8785  0018CE  0A00               	xorlw	0	; case 0
  8786  0018D0  A4D8               	btfss	status,2,c
  8787  0018D2  D033               	goto	l7483
  8788                           
  8789                           ; BSR set to: 0
  8790                           ; Switch size 1, requested type "space"
  8791                           ; Number of cases is 2, Range of values is 0 to 1
  8792                           ; switch strategies available:
  8793                           ; Name         Instructions Cycles
  8794                           ; simple_byte            7     4 (average)
  8795                           ;	Chosen strategy is simple_byte
  8796  0018D4  0100               	movlb	0	; () banked
  8797  0018D6  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8798  0018D8  0A00               	xorlw	0	; case 0
  8799  0018DA  B4D8               	btfsc	status,2,c
  8800  0018DC  D7E0               	goto	l7453
  8801  0018DE  0A01               	xorlw	1	; case 1
  8802  0018E0  B4D8               	btfsc	status,2,c
  8803  0018E2  D7C1               	goto	l7445
  8804                           
  8805                           ; BSR set to: 0
  8806                           ;io.c: 355: switch(!PORTBbits.RB3)
  8807  0018E4  D02A               	goto	l7483
  8808  0018E6                     l7465:
  8809                           
  8810                           ; BSR set to: 0
  8811  0018E6  5028               	movf	_Button_Contact_Counter_RB,w,c
  8812  0018E8  0100               	movlb	0	; () banked
  8813  0018EA  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8814  0018EC  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8815  0018EE  0E1B               	movlw	27
  8816  0018F0  EC69  F01E         	call	_GETxAPIxVAL
  8817  0018F4  0100               	movlb	0	; () banked
  8818  0018F6  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8819  0018F8  0100               	movlb	0	; () banked
  8820  0018FA  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8821  0018FC  0100               	movlb	0	; () banked
  8822  0018FE  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8823  001900  0100               	movlb	0	; () banked
  8824  001902  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8825  001904  A0D8               	btfss	status,0,c
  8826  001906  D002               	goto	l7471
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;io.c: 358: {
  8830                           ;io.c: 359: Button_Contact_Counter_RB++;
  8831  001908  2A28               	incf	_Button_Contact_Counter_RB,f,c
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;io.c: 361: }
  8835                           
  8836                           ;io.c: 360: break;
  8837  00190A  D057               	goto	l7503
  8838  00190C                     l7471:
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;io.c: 362: else {SETxAPIxVAL(37, 1); }
  8842  00190C  0E00               	movlw	0
  8843  00190E  0100               	movlb	0	; () banked
  8844  001910  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8845  001912  0E01               	movlw	1
  8846  001914  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8847  001916  0E25               	movlw	37
  8848  001918  EC5C  F01D         	call	_SETxAPIxVAL
  8849                           
  8850                           ;io.c: 363: break;
  8851  00191C  D04E               	goto	l7503
  8852  00191E                     l7473:
  8853  00191E  5028               	movf	_Button_Contact_Counter_RB,w,c
  8854  001920  B4D8               	btfsc	status,2,c
  8855  001922  D002               	goto	l7479
  8856                           
  8857                           ;io.c: 366: {
  8858                           ;io.c: 367: Button_Contact_Counter_RB--;
  8859  001924  0628               	decf	_Button_Contact_Counter_RB,f,c
  8860                           
  8861                           ;io.c: 369: }
  8862                           
  8863                           ;io.c: 368: break;
  8864  001926  D049               	goto	l7503
  8865  001928                     l7479:
  8866                           
  8867                           ;io.c: 370: else {SETxAPIxVAL(37, 0);}
  8868  001928  0E00               	movlw	0
  8869  00192A  0100               	movlb	0	; () banked
  8870  00192C  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8871  00192E  0E00               	movlw	0
  8872  001930  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8873  001932  0E25               	movlw	37
  8874  001934  EC5C  F01D         	call	_SETxAPIxVAL
  8875                           
  8876                           ;io.c: 374: }
  8877                           
  8878                           ;io.c: 373: default : break;
  8879                           
  8880                           ;io.c: 371: break;
  8881  001938  D040               	goto	l7503
  8882  00193A                     l7483:
  8883  00193A  B681               	btfsc	3969,3,c	;volatile
  8884  00193C  D002               	goto	u7150
  8885  00193E  0E01               	movlw	1
  8886  001940  D001               	goto	u7160
  8887  001942                     u7150:
  8888  001942  0E00               	movlw	0
  8889  001944                     u7160:
  8890  001944  0100               	movlb	0	; () banked
  8891  001946  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8892  001948  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8893                           
  8894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8895                           ; Switch size 1, requested type "space"
  8896                           ; Number of cases is 1, Range of values is 0 to 0
  8897                           ; switch strategies available:
  8898                           ; Name         Instructions Cycles
  8899                           ; simple_byte            4     3 (average)
  8900                           ;	Chosen strategy is simple_byte
  8901  00194A  0100               	movlb	0	; () banked
  8902  00194C  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8903  00194E  0A00               	xorlw	0	; case 0
  8904  001950  A4D8               	btfss	status,2,c
  8905  001952  D033               	goto	l7503
  8906                           
  8907                           ; BSR set to: 0
  8908                           ; Switch size 1, requested type "space"
  8909                           ; Number of cases is 2, Range of values is 0 to 1
  8910                           ; switch strategies available:
  8911                           ; Name         Instructions Cycles
  8912                           ; simple_byte            7     4 (average)
  8913                           ;	Chosen strategy is simple_byte
  8914  001954  0100               	movlb	0	; () banked
  8915  001956  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8916  001958  0A00               	xorlw	0	; case 0
  8917  00195A  B4D8               	btfsc	status,2,c
  8918  00195C  D7E0               	goto	l7473
  8919  00195E  0A01               	xorlw	1	; case 1
  8920  001960  B4D8               	btfsc	status,2,c
  8921  001962  D7C1               	goto	l7465
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;io.c: 377: switch(!PORTBbits.RB2)
  8925  001964  D02A               	goto	l7503
  8926  001966                     l7485:
  8927                           
  8928                           ; BSR set to: 0
  8929  001966  5029               	movf	_Button_Contact_Counter_RF,w,c
  8930  001968  0100               	movlb	0	; () banked
  8931  00196A  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  8932  00196C  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8933  00196E  0E1B               	movlw	27
  8934  001970  EC69  F01E         	call	_GETxAPIxVAL
  8935  001974  0100               	movlb	0	; () banked
  8936  001976  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  8937  001978  0100               	movlb	0	; () banked
  8938  00197A  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8939  00197C  0100               	movlb	0	; () banked
  8940  00197E  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8941  001980  0100               	movlb	0	; () banked
  8942  001982  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8943  001984  A0D8               	btfss	status,0,c
  8944  001986  D002               	goto	l7491
  8945                           
  8946                           ; BSR set to: 0
  8947                           ;io.c: 380: {
  8948                           ;io.c: 381: Button_Contact_Counter_RF++;
  8949  001988  2A29               	incf	_Button_Contact_Counter_RF,f,c
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;io.c: 383: }
  8953                           
  8954                           ;io.c: 382: break;
  8955  00198A  D057               	goto	l7523
  8956  00198C                     l7491:
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;io.c: 384: else {SETxAPIxVAL(38, 1); }
  8960  00198C  0E00               	movlw	0
  8961  00198E  0100               	movlb	0	; () banked
  8962  001990  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8963  001992  0E01               	movlw	1
  8964  001994  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8965  001996  0E26               	movlw	38
  8966  001998  EC5C  F01D         	call	_SETxAPIxVAL
  8967                           
  8968                           ;io.c: 385: break;
  8969  00199C  D04E               	goto	l7523
  8970  00199E                     l7493:
  8971  00199E  5029               	movf	_Button_Contact_Counter_RF,w,c
  8972  0019A0  B4D8               	btfsc	status,2,c
  8973  0019A2  D002               	goto	l7499
  8974                           
  8975                           ;io.c: 388: {
  8976                           ;io.c: 389: Button_Contact_Counter_RF--;
  8977  0019A4  0629               	decf	_Button_Contact_Counter_RF,f,c
  8978                           
  8979                           ;io.c: 391: }
  8980                           
  8981                           ;io.c: 390: break;
  8982  0019A6  D049               	goto	l7523
  8983  0019A8                     l7499:
  8984                           
  8985                           ;io.c: 392: else {SETxAPIxVAL(38, 0);}
  8986  0019A8  0E00               	movlw	0
  8987  0019AA  0100               	movlb	0	; () banked
  8988  0019AC  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8989  0019AE  0E00               	movlw	0
  8990  0019B0  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  8991  0019B2  0E26               	movlw	38
  8992  0019B4  EC5C  F01D         	call	_SETxAPIxVAL
  8993                           
  8994                           ;io.c: 396: }
  8995                           
  8996                           ;io.c: 395: default : break;
  8997                           
  8998                           ;io.c: 393: break;
  8999  0019B8  D040               	goto	l7523
  9000  0019BA                     l7503:
  9001  0019BA  B481               	btfsc	3969,2,c	;volatile
  9002  0019BC  D002               	goto	u7190
  9003  0019BE  0E01               	movlw	1
  9004  0019C0  D001               	goto	u7200
  9005  0019C2                     u7190:
  9006  0019C2  0E00               	movlw	0
  9007  0019C4                     u7200:
  9008  0019C4  0100               	movlb	0	; () banked
  9009  0019C6  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  9010  0019C8  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9011                           
  9012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9013                           ; Switch size 1, requested type "space"
  9014                           ; Number of cases is 1, Range of values is 0 to 0
  9015                           ; switch strategies available:
  9016                           ; Name         Instructions Cycles
  9017                           ; simple_byte            4     3 (average)
  9018                           ;	Chosen strategy is simple_byte
  9019  0019CA  0100               	movlb	0	; () banked
  9020  0019CC  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9021  0019CE  0A00               	xorlw	0	; case 0
  9022  0019D0  A4D8               	btfss	status,2,c
  9023  0019D2  D033               	goto	l7523
  9024                           
  9025                           ; BSR set to: 0
  9026                           ; Switch size 1, requested type "space"
  9027                           ; Number of cases is 2, Range of values is 0 to 1
  9028                           ; switch strategies available:
  9029                           ; Name         Instructions Cycles
  9030                           ; simple_byte            7     4 (average)
  9031                           ;	Chosen strategy is simple_byte
  9032  0019D4  0100               	movlb	0	; () banked
  9033  0019D6  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  9034  0019D8  0A00               	xorlw	0	; case 0
  9035  0019DA  B4D8               	btfsc	status,2,c
  9036  0019DC  D7E0               	goto	l7493
  9037  0019DE  0A01               	xorlw	1	; case 1
  9038  0019E0  B4D8               	btfsc	status,2,c
  9039  0019E2  D7C1               	goto	l7485
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;io.c: 399: switch(PORTCbits.RC1)
  9043  0019E4  D02A               	goto	l7523
  9044  0019E6                     l7505:
  9045  0019E6  502F               	movf	_Reed_Contact_LMU_Counter,w,c
  9046  0019E8  0100               	movlb	0	; () banked
  9047  0019EA  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  9048  0019EC  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9049  0019EE  0E1B               	movlw	27
  9050  0019F0  EC69  F01E         	call	_GETxAPIxVAL
  9051  0019F4  0100               	movlb	0	; () banked
  9052  0019F6  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  9053  0019F8  0100               	movlb	0	; () banked
  9054  0019FA  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9055  0019FC  0100               	movlb	0	; () banked
  9056  0019FE  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9057  001A00  0100               	movlb	0	; () banked
  9058  001A02  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9059  001A04  A0D8               	btfss	status,0,c
  9060  001A06  D002               	goto	l7511
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;io.c: 402: {
  9064                           ;io.c: 403: Reed_Contact_LMU_Counter++;
  9065  001A08  2A2F               	incf	_Reed_Contact_LMU_Counter,f,c
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;io.c: 405: }
  9069                           
  9070                           ;io.c: 404: break;
  9071  001A0A  D04D               	goto	l7543
  9072  001A0C                     l7511:
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;io.c: 406: else {SETxAPIxVAL(41, 1); }
  9076  001A0C  0E00               	movlw	0
  9077  001A0E  0100               	movlb	0	; () banked
  9078  001A10  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9079  001A12  0E01               	movlw	1
  9080  001A14  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  9081  001A16  0E29               	movlw	41
  9082  001A18  EC5C  F01D         	call	_SETxAPIxVAL
  9083                           
  9084                           ;io.c: 407: break;
  9085  001A1C  D044               	goto	l7543
  9086  001A1E                     l7513:
  9087  001A1E  502F               	movf	_Reed_Contact_LMU_Counter,w,c
  9088  001A20  B4D8               	btfsc	status,2,c
  9089  001A22  D002               	goto	l7519
  9090                           
  9091                           ;io.c: 410: {
  9092                           ;io.c: 411: Reed_Contact_LMU_Counter--;
  9093  001A24  062F               	decf	_Reed_Contact_LMU_Counter,f,c
  9094                           
  9095                           ;io.c: 413: }
  9096                           
  9097                           ;io.c: 412: break;
  9098  001A26  D03F               	goto	l7543
  9099  001A28                     l7519:
  9100                           
  9101                           ;io.c: 414: else {SETxAPIxVAL(41, 0);}
  9102  001A28  0E00               	movlw	0
  9103  001A2A  0100               	movlb	0	; () banked
  9104  001A2C  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9105  001A2E  0E00               	movlw	0
  9106  001A30  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  9107  001A32  0E29               	movlw	41
  9108  001A34  EC5C  F01D         	call	_SETxAPIxVAL
  9109                           
  9110                           ;io.c: 418: }
  9111                           
  9112                           ;io.c: 417: default : break;
  9113                           
  9114                           ;io.c: 415: break;
  9115  001A38  D036               	goto	l7543
  9116  001A3A                     l7523:
  9117  001A3A  A282               	btfss	3970,1,c	;volatile
  9118  001A3C  D002               	goto	u7230
  9119  001A3E  0E01               	movlw	1
  9120  001A40  D001               	goto	u7236
  9121  001A42                     u7230:
  9122  001A42  0E00               	movlw	0
  9123  001A44                     u7236:
  9124                           
  9125                           ; Switch size 1, requested type "space"
  9126                           ; Number of cases is 2, Range of values is 0 to 1
  9127                           ; switch strategies available:
  9128                           ; Name         Instructions Cycles
  9129                           ; simple_byte            7     4 (average)
  9130                           ;	Chosen strategy is simple_byte
  9131  001A44  0A00               	xorlw	0	; case 0
  9132  001A46  B4D8               	btfsc	status,2,c
  9133  001A48  D7CE               	goto	l7505
  9134  001A4A  0A01               	xorlw	1	; case 1
  9135  001A4C  B4D8               	btfsc	status,2,c
  9136  001A4E  D7E7               	goto	l7513
  9137                           
  9138                           ;io.c: 421: switch(PORTDbits.RD4)
  9139  001A50  D02A               	goto	l7543
  9140  001A52                     l7525:
  9141  001A52  502E               	movf	_Reed_Contact_LMD_Counter,w,c
  9142  001A54  0100               	movlb	0	; () banked
  9143  001A56  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  9144  001A58  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9145  001A5A  0E1B               	movlw	27
  9146  001A5C  EC69  F01E         	call	_GETxAPIxVAL
  9147  001A60  0100               	movlb	0	; () banked
  9148  001A62  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  9149  001A64  0100               	movlb	0	; () banked
  9150  001A66  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9151  001A68  0100               	movlb	0	; () banked
  9152  001A6A  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9153  001A6C  0100               	movlb	0	; () banked
  9154  001A6E  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9155  001A70  A0D8               	btfss	status,0,c
  9156  001A72  D002               	goto	l7531
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;io.c: 424: {
  9160                           ;io.c: 425: Reed_Contact_LMD_Counter++;
  9161  001A74  2A2E               	incf	_Reed_Contact_LMD_Counter,f,c
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;io.c: 427: }
  9165                           
  9166                           ;io.c: 426: break;
  9167  001A76  D04D               	goto	l7563
  9168  001A78                     l7531:
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;io.c: 428: else {SETxAPIxVAL(42, 1); }
  9172  001A78  0E00               	movlw	0
  9173  001A7A  0100               	movlb	0	; () banked
  9174  001A7C  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9175  001A7E  0E01               	movlw	1
  9176  001A80  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  9177  001A82  0E2A               	movlw	42
  9178  001A84  EC5C  F01D         	call	_SETxAPIxVAL
  9179                           
  9180                           ;io.c: 429: break;
  9181  001A88  D044               	goto	l7563
  9182  001A8A                     l7533:
  9183  001A8A  502E               	movf	_Reed_Contact_LMD_Counter,w,c
  9184  001A8C  B4D8               	btfsc	status,2,c
  9185  001A8E  D002               	goto	l7539
  9186                           
  9187                           ;io.c: 432: {
  9188                           ;io.c: 433: Reed_Contact_LMD_Counter--;
  9189  001A90  062E               	decf	_Reed_Contact_LMD_Counter,f,c
  9190                           
  9191                           ;io.c: 435: }
  9192                           
  9193                           ;io.c: 434: break;
  9194  001A92  D03F               	goto	l7563
  9195  001A94                     l7539:
  9196                           
  9197                           ;io.c: 436: else {SETxAPIxVAL(42, 0);}
  9198  001A94  0E00               	movlw	0
  9199  001A96  0100               	movlb	0	; () banked
  9200  001A98  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9201  001A9A  0E00               	movlw	0
  9202  001A9C  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  9203  001A9E  0E2A               	movlw	42
  9204  001AA0  EC5C  F01D         	call	_SETxAPIxVAL
  9205                           
  9206                           ;io.c: 440: }
  9207                           
  9208                           ;io.c: 439: default : break;
  9209                           
  9210                           ;io.c: 437: break;
  9211  001AA4  D036               	goto	l7563
  9212  001AA6                     l7543:
  9213  001AA6  A883               	btfss	3971,4,c	;volatile
  9214  001AA8  D002               	goto	u7260
  9215  001AAA  0E01               	movlw	1
  9216  001AAC  D001               	goto	u7266
  9217  001AAE                     u7260:
  9218  001AAE  0E00               	movlw	0
  9219  001AB0                     u7266:
  9220                           
  9221                           ; Switch size 1, requested type "space"
  9222                           ; Number of cases is 2, Range of values is 0 to 1
  9223                           ; switch strategies available:
  9224                           ; Name         Instructions Cycles
  9225                           ; simple_byte            7     4 (average)
  9226                           ;	Chosen strategy is simple_byte
  9227  001AB0  0A00               	xorlw	0	; case 0
  9228  001AB2  B4D8               	btfsc	status,2,c
  9229  001AB4  D7CE               	goto	l7525
  9230  001AB6  0A01               	xorlw	1	; case 1
  9231  001AB8  B4D8               	btfsc	status,2,c
  9232  001ABA  D7E7               	goto	l7533
  9233                           
  9234                           ;io.c: 443: switch(PORTEbits.RE1)
  9235  001ABC  D02A               	goto	l7563
  9236  001ABE                     l7545:
  9237  001ABE  5033               	movf	_Reed_Contact_RMU_Counter,w,c
  9238  001AC0  0100               	movlb	0	; () banked
  9239  001AC2  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  9240  001AC4  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9241  001AC6  0E1B               	movlw	27
  9242  001AC8  EC69  F01E         	call	_GETxAPIxVAL
  9243  001ACC  0100               	movlb	0	; () banked
  9244  001ACE  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  9245  001AD0  0100               	movlb	0	; () banked
  9246  001AD2  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9247  001AD4  0100               	movlb	0	; () banked
  9248  001AD6  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9249  001AD8  0100               	movlb	0	; () banked
  9250  001ADA  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9251  001ADC  A0D8               	btfss	status,0,c
  9252  001ADE  D002               	goto	l7551
  9253                           
  9254                           ; BSR set to: 0
  9255                           ;io.c: 446: {
  9256                           ;io.c: 447: Reed_Contact_RMU_Counter++;
  9257  001AE0  2A33               	incf	_Reed_Contact_RMU_Counter,f,c
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;io.c: 449: }
  9261                           
  9262                           ;io.c: 448: break;
  9263  001AE2  D04D               	goto	l7583
  9264  001AE4                     l7551:
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;io.c: 450: else {SETxAPIxVAL(43, 1); }
  9268  001AE4  0E00               	movlw	0
  9269  001AE6  0100               	movlb	0	; () banked
  9270  001AE8  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9271  001AEA  0E01               	movlw	1
  9272  001AEC  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  9273  001AEE  0E2B               	movlw	43
  9274  001AF0  EC5C  F01D         	call	_SETxAPIxVAL
  9275                           
  9276                           ;io.c: 451: break;
  9277  001AF4  D044               	goto	l7583
  9278  001AF6                     l7553:
  9279  001AF6  5033               	movf	_Reed_Contact_RMU_Counter,w,c
  9280  001AF8  B4D8               	btfsc	status,2,c
  9281  001AFA  D002               	goto	l7559
  9282                           
  9283                           ;io.c: 454: {
  9284                           ;io.c: 455: Reed_Contact_RMU_Counter--;
  9285  001AFC  0633               	decf	_Reed_Contact_RMU_Counter,f,c
  9286                           
  9287                           ;io.c: 457: }
  9288                           
  9289                           ;io.c: 456: break;
  9290  001AFE  D03F               	goto	l7583
  9291  001B00                     l7559:
  9292                           
  9293                           ;io.c: 458: else {SETxAPIxVAL(43, 0);}
  9294  001B00  0E00               	movlw	0
  9295  001B02  0100               	movlb	0	; () banked
  9296  001B04  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9297  001B06  0E00               	movlw	0
  9298  001B08  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  9299  001B0A  0E2B               	movlw	43
  9300  001B0C  EC5C  F01D         	call	_SETxAPIxVAL
  9301                           
  9302                           ;io.c: 462: }
  9303                           
  9304                           ;io.c: 461: default : break;
  9305                           
  9306                           ;io.c: 459: break;
  9307  001B10  D036               	goto	l7583
  9308  001B12                     l7563:
  9309  001B12  A284               	btfss	3972,1,c	;volatile
  9310  001B14  D002               	goto	u7290
  9311  001B16  0E01               	movlw	1
  9312  001B18  D001               	goto	u7296
  9313  001B1A                     u7290:
  9314  001B1A  0E00               	movlw	0
  9315  001B1C                     u7296:
  9316                           
  9317                           ; Switch size 1, requested type "space"
  9318                           ; Number of cases is 2, Range of values is 0 to 1
  9319                           ; switch strategies available:
  9320                           ; Name         Instructions Cycles
  9321                           ; simple_byte            7     4 (average)
  9322                           ;	Chosen strategy is simple_byte
  9323  001B1C  0A00               	xorlw	0	; case 0
  9324  001B1E  B4D8               	btfsc	status,2,c
  9325  001B20  D7CE               	goto	l7545
  9326  001B22  0A01               	xorlw	1	; case 1
  9327  001B24  B4D8               	btfsc	status,2,c
  9328  001B26  D7E7               	goto	l7553
  9329                           
  9330                           ;io.c: 465: switch(PORTEbits.RE0)
  9331  001B28  D02A               	goto	l7583
  9332  001B2A                     l7565:
  9333  001B2A  5032               	movf	_Reed_Contact_RMD_Counter,w,c
  9334  001B2C  0100               	movlb	0	; () banked
  9335  001B2E  6FB1               	movwf	??_Debounce_Inputs& (0+255),b
  9336  001B30  6BB2               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9337  001B32  0E1B               	movlw	27
  9338  001B34  EC69  F01E         	call	_GETxAPIxVAL
  9339  001B38  0100               	movlb	0	; () banked
  9340  001B3A  51B1               	movf	??_Debounce_Inputs& (0+255),w,b
  9341  001B3C  0100               	movlb	0	; () banked
  9342  001B3E  5D90               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9343  001B40  0100               	movlb	0	; () banked
  9344  001B42  51B2               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9345  001B44  0100               	movlb	0	; () banked
  9346  001B46  5991               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9347  001B48  A0D8               	btfss	status,0,c
  9348  001B4A  D002               	goto	l7571
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;io.c: 468: {
  9352                           ;io.c: 469: Reed_Contact_RMD_Counter++;
  9353  001B4C  2A32               	incf	_Reed_Contact_RMD_Counter,f,c
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;io.c: 471: }
  9357                           
  9358                           ;io.c: 470: break;
  9359  001B4E  0012               	return	
  9360  001B50                     l7571:
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;io.c: 472: else {SETxAPIxVAL(44, 1); }
  9364  001B50  0E00               	movlw	0
  9365  001B52  0100               	movlb	0	; () banked
  9366  001B54  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9367  001B56  0E01               	movlw	1
  9368  001B58  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  9369  001B5A  0E2C               	movlw	44
  9370  001B5C  EC5C  F01D         	call	_SETxAPIxVAL
  9371                           
  9372                           ;io.c: 473: break;
  9373  001B60  0012               	return	
  9374  001B62                     l7573:
  9375  001B62  5032               	movf	_Reed_Contact_RMD_Counter,w,c
  9376  001B64  B4D8               	btfsc	status,2,c
  9377  001B66  D002               	goto	l7579
  9378                           
  9379                           ;io.c: 476: {
  9380                           ;io.c: 477: Reed_Contact_RMD_Counter--;
  9381  001B68  0632               	decf	_Reed_Contact_RMD_Counter,f,c
  9382                           
  9383                           ;io.c: 479: }
  9384                           
  9385                           ;io.c: 478: break;
  9386  001B6A  0012               	return	
  9387  001B6C                     l7579:
  9388                           
  9389                           ;io.c: 480: else {SETxAPIxVAL(44, 0);}
  9390  001B6C  0E00               	movlw	0
  9391  001B6E  0100               	movlb	0	; () banked
  9392  001B70  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9393  001B72  0E00               	movlw	0
  9394  001B74  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
  9395  001B76  0E2C               	movlw	44
  9396  001B78  EC5C  F01D         	call	_SETxAPIxVAL
  9397                           
  9398                           ;io.c: 484: }
  9399                           
  9400                           ;io.c: 483: default : break;
  9401                           
  9402                           ;io.c: 481: break;
  9403  001B7C  0012               	return	
  9404  001B7E                     l7583:
  9405  001B7E  A084               	btfss	3972,0,c	;volatile
  9406  001B80  D002               	goto	u7320
  9407  001B82  0E01               	movlw	1
  9408  001B84  D001               	goto	u7326
  9409  001B86                     u7320:
  9410  001B86  0E00               	movlw	0
  9411  001B88                     u7326:
  9412                           
  9413                           ; Switch size 1, requested type "space"
  9414                           ; Number of cases is 2, Range of values is 0 to 1
  9415                           ; switch strategies available:
  9416                           ; Name         Instructions Cycles
  9417                           ; simple_byte            7     4 (average)
  9418                           ;	Chosen strategy is simple_byte
  9419  001B88  0A00               	xorlw	0	; case 0
  9420  001B8A  B4D8               	btfsc	status,2,c
  9421  001B8C  D7CE               	goto	l7565
  9422  001B8E  0A01               	xorlw	1	; case 1
  9423  001B90  A4D8               	btfss	status,2,c
  9424  001B92  0012               	return	
  9425  001B94  D7E6               	goto	l7573
  9426  001B96                     __end_of_Debounce_Inputs:
  9427                           	opt stack 0
  9428                           tblptru	equ	0xFF8
  9429                           tblptrh	equ	0xFF7
  9430                           tblptrl	equ	0xFF6
  9431                           tablat	equ	0xFF5
  9432                           intcon	equ	0xFF2
  9433                           postinc0	equ	0xFEE
  9434                           wreg	equ	0xFE8
  9435                           postdec1	equ	0xFE5
  9436                           fsr1h	equ	0xFE2
  9437                           fsr1l	equ	0xFE1
  9438                           status	equ	0xFD8
  9439                           
  9440 ;; *************** function _SetDCPWM1 *****************
  9441 ;; Defined at:
  9442 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic18\plib\PWM\pw1setdc.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  dutycycle       2    2[BANK0 ] unsigned int 
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;  DCycle          2    6[BANK0 ] struct PWMDC
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  1    wreg      void 
  9449 ;; Registers used:
  9450 ;;		wreg, status,2, status,0
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9456 ;;      Params:         0       2       0       0       0       0       0       0       0
  9457 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9458 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9459 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9460 ;;Total ram usage:        6 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; Hardware stack levels required when called:    3
  9463 ;; This function calls:
  9464 ;;		Nothing
  9465 ;; This function is called by:
  9466 ;;		_Debounce_Inputs
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470                           	psect	text17
  9471  003B58                     __ptext17:
  9472                           	opt stack 0
  9473  003B58                     _SetDCPWM1:
  9474                           	opt stack 25
  9475                           
  9476                           ;incstack = 0
  9477  003B58  C092  F094         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  9478  003B5C  C093  F095         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  9479  003B60  0E06               	movlw	6
  9480  003B62                     u6805:
  9481  003B62  90D8               	bcf	status,0,c
  9482  003B64  0100               	movlb	0	; () banked
  9483  003B66  3794               	rlcf	??_SetDCPWM1& (0+255),f,b
  9484  003B68  3795               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  9485  003B6A  2EE8               	decfsz	wreg,f,c
  9486  003B6C  D7FA               	goto	u6805
  9487  003B6E  C094  F096         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  9488  003B72  C095  F097         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  9489                           
  9490                           ; BSR set to: 0
  9491  003B76  C097  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  9492  003B7A  C096  F094         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  9493  003B7E  0100               	movlb	0	; () banked
  9494  003B80  90D8               	bcf	status,0,c
  9495  003B82  3394               	rrcf	??_SetDCPWM1& (0+255),f,b
  9496  003B84  0100               	movlb	0	; () banked
  9497  003B86  90D8               	bcf	status,0,c
  9498  003B88  3394               	rrcf	??_SetDCPWM1& (0+255),f,b
  9499  003B8A  0E30               	movlw	48
  9500  003B8C  0100               	movlb	0	; () banked
  9501  003B8E  1794               	andwf	??_SetDCPWM1& (0+255),f,b
  9502  003B90  50BD               	movf	4029,w,c	;volatile
  9503  003B92  0BCF               	andlw	207
  9504  003B94  0100               	movlb	0	; () banked
  9505  003B96  1194               	iorwf	??_SetDCPWM1& (0+255),w,b
  9506  003B98  6EBD               	movwf	4029,c	;volatile
  9507                           
  9508                           ; BSR set to: 0
  9509  003B9A  0012               	return		;funcret
  9510  003B9C                     __end_of_SetDCPWM1:
  9511                           	opt stack 0
  9512                           tblptru	equ	0xFF8
  9513                           tblptrh	equ	0xFF7
  9514                           tblptrl	equ	0xFF6
  9515                           tablat	equ	0xFF5
  9516                           intcon	equ	0xFF2
  9517                           postinc0	equ	0xFEE
  9518                           wreg	equ	0xFE8
  9519                           postdec1	equ	0xFE5
  9520                           fsr1h	equ	0xFE2
  9521                           fsr1l	equ	0xFE1
  9522                           status	equ	0xFD8
  9523                           
  9524 ;; *************** function _READxRECEIVEDxMESSAGE *****************
  9525 ;; Defined at:
  9526 ;;		line 32 in file "../terminal.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;		None
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;		None
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  1    wreg      void 
  9533 ;; Registers used:
  9534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9540 ;;      Params:         0       0       0       0       0       0       0       0       0
  9541 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9542 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9543 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9544 ;;Total ram usage:        4 bytes
  9545 ;; Hardware stack levels used:    1
  9546 ;; Hardware stack levels required when called:    8
  9547 ;; This function calls:
  9548 ;;		_EUSART1_Read
  9549 ;;		_TranslateMessage
  9550 ;;		_printf
  9551 ;; This function is called by:
  9552 ;;		_main
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           	psect	text18
  9557  002730                     __ptext18:
  9558                           	opt stack 0
  9559  002730                     _READxRECEIVEDxMESSAGE:
  9560                           	opt stack 22
  9561                           
  9562                           ;terminal.c: 34: if ((eusart1RxCount) > 0){
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;incstack = 0
  9566  002730  503A               	movf	_eusart1RxCount,w,c	;volatile
  9567  002732  B4D8               	btfsc	status,2,c
  9568  002734  D0A4               	goto	l8567
  9569                           
  9570                           ;terminal.c: 37: Received_Data = EUSART1_Read();
  9571  002736  ECE9  F01D         	call	_EUSART1_Read	;wreg free
  9572  00273A  0100               	movlb	0	; () banked
  9573  00273C  6F7B               	movwf	_Received_Data& (0+255),b
  9574                           
  9575                           ;terminal.c: 39: switch (RxSwitch){
  9576  00273E  D093               	goto	l8565
  9577  002740                     l8509:
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;terminal.c: 41: pData = &Data[0];
  9581  002740  0E86               	movlw	low _Data
  9582  002742  0100               	movlb	0	; () banked
  9583  002744  6F76               	movwf	_pData& (0+255),b
  9584  002746  0E00               	movlw	high _Data
  9585  002748  0100               	movlb	0	; () banked
  9586  00274A  6F77               	movwf	(_pData+1)& (0+255),b
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;terminal.c: 42: pLen = &Data[DataLen - 1];
  9590  00274C  0EFF               	movlw	255
  9591  00274E  0100               	movlb	0	; () banked
  9592  002750  6FB5               	movwf	??_READxRECEIVEDxMESSAGE& (0+255),b
  9593  002752  0EFF               	movlw	255
  9594  002754  0100               	movlb	0	; () banked
  9595  002756  6FB6               	movwf	(??_READxRECEIVEDxMESSAGE+1)& (0+255),b
  9596  002758  0E0B               	movlw	low _DataLen
  9597  00275A  6EF6               	movwf	tblptrl,c
  9598  00275C                     	if	1	;There is more than 1 active tblptr byte
  9599  00275C  0E08               	movlw	high _DataLen
  9600  00275E  6EF7               	movwf	tblptrh,c
  9601  002760                     	endif
  9602  002760                     	if	0	;There are less than 3 active tblptr bytes
  9603  002760                     	endif
  9604  002760  0008               	tblrd		*
  9605  002762  50F5               	movf	tablat,w,c
  9606  002764  0100               	movlb	0	; () banked
  9607  002766  6FB7               	movwf	(??_READxRECEIVEDxMESSAGE+2)& (0+255),b
  9608  002768  6BB8               	clrf	(??_READxRECEIVEDxMESSAGE+3)& (0+255),b
  9609  00276A  0100               	movlb	0	; () banked
  9610  00276C  51B5               	movf	??_READxRECEIVEDxMESSAGE& (0+255),w,b
  9611  00276E  0100               	movlb	0	; () banked
  9612  002770  27B7               	addwf	(??_READxRECEIVEDxMESSAGE+2)& (0+255),f,b
  9613  002772  0100               	movlb	0	; () banked
  9614  002774  51B6               	movf	(??_READxRECEIVEDxMESSAGE+1)& (0+255),w,b
  9615  002776  0100               	movlb	0	; () banked
  9616  002778  23B8               	addwfc	(??_READxRECEIVEDxMESSAGE+3)& (0+255),f,b
  9617  00277A  0E86               	movlw	low _Data
  9618  00277C  0100               	movlb	0	; () banked
  9619  00277E  25B7               	addwf	(??_READxRECEIVEDxMESSAGE+2)& (0+255),w,b
  9620  002780  0100               	movlb	0	; () banked
  9621  002782  6F78               	movwf	_pLen& (0+255),b
  9622  002784  0E00               	movlw	high _Data
  9623  002786  0100               	movlb	0	; () banked
  9624  002788  21B8               	addwfc	(??_READxRECEIVEDxMESSAGE+3)& (0+255),w,b
  9625  00278A  0100               	movlb	0	; () banked
  9626  00278C  6F79               	movwf	(_pLen+1)& (0+255),b
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;terminal.c: 43: if (Received_Data == 's' || Received_Data == 'g'){
  9630  00278E  0E73               	movlw	115
  9631  002790  0100               	movlb	0	; () banked
  9632  002792  197B               	xorwf	_Received_Data& (0+255),w,b
  9633  002794  B4D8               	btfsc	status,2,c
  9634  002796  D005               	goto	l8517
  9635                           
  9636                           ; BSR set to: 0
  9637  002798  0E67               	movlw	103
  9638  00279A  0100               	movlb	0	; () banked
  9639  00279C  197B               	xorwf	_Received_Data& (0+255),w,b
  9640  00279E  A4D8               	btfss	status,2,c
  9641  0027A0  D00B               	goto	l8523
  9642  0027A2                     l8517:
  9643                           
  9644                           ; BSR set to: 0
  9645                           ;terminal.c: 44: *pData = Received_Data;
  9646  0027A2  C076  FFD9         	movff	_pData,fsr2l
  9647  0027A6  C077  FFDA         	movff	_pData+1,fsr2h
  9648  0027AA  C07B  FFDF         	movff	_Received_Data,indf2
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;terminal.c: 45: *pData++;
  9652  0027AE  0100               	movlb	0	; () banked
  9653  0027B0  4B76               	infsnz	_pData& (0+255),f,b
  9654  0027B2  2B77               	incf	(_pData+1)& (0+255),f,b
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;terminal.c: 46: RxSwitch = 1;
  9658  0027B4  0E01               	movlw	1
  9659  0027B6  D00F               	goto	L91
  9660  0027B8                     l8523:
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;terminal.c: 48: else{
  9664                           ;terminal.c: 49: RxSwitch = 0;
  9665  0027B8  0E00               	movlw	0
  9666  0027BA  D00D               	goto	L91
  9667  0027BC                     l8525:
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;terminal.c: 54: if (Received_Data == 'x'){
  9671  0027BC  0E78               	movlw	120
  9672  0027BE  0100               	movlb	0	; () banked
  9673  0027C0  197B               	xorwf	_Received_Data& (0+255),w,b
  9674  0027C2  A4D8               	btfss	status,2,c
  9675  0027C4  D7F9               	goto	l8523
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;terminal.c: 55: *pData = Received_Data;
  9679  0027C6  C076  FFD9         	movff	_pData,fsr2l
  9680  0027CA  C077  FFDA         	movff	_pData+1,fsr2h
  9681  0027CE  C07B  FFDF         	movff	_Received_Data,indf2
  9682  0027D2  D045               	goto	l8559
  9683  0027D4                     l8531:
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;terminal.c: 57: RxSwitch = 2;
  9687  0027D4  0E02               	movlw	2
  9688  0027D6                     L91:
  9689  0027D6  0100               	movlb	0	; () banked
  9690  0027D8  6F7C               	movwf	_RxSwitch& (0+255),b
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;terminal.c: 61: }
  9694                           ;terminal.c: 62: break;
  9695  0027DA  D051               	goto	l8567
  9696  0027DC                     l8535:
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;terminal.c: 65: if (Received_Data == 'G'){
  9700  0027DC  0E47               	movlw	71
  9701  0027DE  0100               	movlb	0	; () banked
  9702  0027E0  197B               	xorwf	_Received_Data& (0+255),w,b
  9703  0027E2  B4D8               	btfsc	status,2,c
  9704  0027E4  D00A               	goto	l8543
  9705  0027E6  D022               	goto	l8551
  9706  0027E8                     l8539:
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;terminal.c: 69: *pData = '\0';
  9710  0027E8  C076  FFD9         	movff	_pData,fsr2l
  9711  0027EC  C077  FFDA         	movff	_pData+1,fsr2h
  9712  0027F0  0E00               	movlw	0
  9713  0027F2  6EDF               	movwf	indf2,c
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;terminal.c: 70: pData++;
  9717  0027F4  0100               	movlb	0	; () banked
  9718  0027F6  4B76               	infsnz	_pData& (0+255),f,b
  9719  0027F8  2B77               	incf	(_pData+1)& (0+255),f,b
  9720  0027FA                     l8543:
  9721                           
  9722                           ; BSR set to: 0
  9723  0027FA  0100               	movlb	0	; () banked
  9724  0027FC  5178               	movf	_pLen& (0+255),w,b
  9725  0027FE  0100               	movlb	0	; () banked
  9726  002800  5D76               	subwf	_pData& (0+255),w,b
  9727  002802  0100               	movlb	0	; () banked
  9728  002804  5179               	movf	(_pLen+1)& (0+255),w,b
  9729  002806  0100               	movlb	0	; () banked
  9730  002808  5977               	subwfb	(_pData+1)& (0+255),w,b
  9731  00280A  A0D8               	btfss	status,0,c
  9732  00280C  D7ED               	goto	l8539
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;terminal.c: 71: }
  9736                           ;terminal.c: 72: printf("\r\nX0\r\n");
  9737                           
  9738                           ; BSR set to: 0
  9739  00280E  0E45               	movlw	low STR_1
  9740  002810  0100               	movlb	0	; () banked
  9741  002812  6F9B               	movwf	printf@f& (0+255),b
  9742  002814  0E08               	movlw	high STR_1
  9743  002816  0100               	movlb	0	; () banked
  9744  002818  6F9C               	movwf	(printf@f+1)& (0+255),b
  9745  00281A  EC4C  F014         	call	_printf	;wreg free
  9746                           
  9747                           ;terminal.c: 73: RxSwitch = 3;
  9748  00281E  0E03               	movlw	3
  9749  002820  0100               	movlb	0	; () banked
  9750  002822  6F7C               	movwf	_RxSwitch& (0+255),b
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;terminal.c: 74: Message_To_Translate = 1;
  9754  002824  0E01               	movlw	1
  9755  002826  0100               	movlb	0	; () banked
  9756  002828  6F7A               	movwf	_Message_To_Translate& (0+255),b
  9757                           
  9758                           ;terminal.c: 75: }
  9759  00282A  D029               	goto	l8567
  9760  00282C                     l8551:
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;terminal.c: 76: else{
  9764                           ;terminal.c: 77: *pData = Received_Data;
  9765  00282C  C076  FFD9         	movff	_pData,fsr2l
  9766  002830  C077  FFDA         	movff	_pData+1,fsr2h
  9767  002834  C07B  FFDF         	movff	_Received_Data,indf2
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;terminal.c: 78: if (pData > pLen){
  9771  002838  0100               	movlb	0	; () banked
  9772  00283A  5176               	movf	_pData& (0+255),w,b
  9773  00283C  0100               	movlb	0	; () banked
  9774  00283E  5D78               	subwf	_pLen& (0+255),w,b
  9775  002840  0100               	movlb	0	; () banked
  9776  002842  5177               	movf	(_pData+1)& (0+255),w,b
  9777  002844  0100               	movlb	0	; () banked
  9778  002846  5979               	subwfb	(_pLen+1)& (0+255),w,b
  9779  002848  B0D8               	btfsc	status,0,c
  9780  00284A  D009               	goto	l8559
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;terminal.c: 79: printf("\r\nE#10\r\n");
  9784  00284C  0E18               	movlw	low STR_2
  9785  00284E  0100               	movlb	0	; () banked
  9786  002850  6F9B               	movwf	printf@f& (0+255),b
  9787  002852  0E08               	movlw	high STR_2
  9788  002854  0100               	movlb	0	; () banked
  9789  002856  6F9C               	movwf	(printf@f+1)& (0+255),b
  9790  002858  EC4C  F014         	call	_printf	;wreg free
  9791  00285C  D7AD               	goto	l8523
  9792  00285E                     l8559:
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;terminal.c: 82: else{
  9796                           ;terminal.c: 83: pData++;
  9797  00285E  0100               	movlb	0	; () banked
  9798  002860  4B76               	infsnz	_pData& (0+255),f,b
  9799  002862  2B77               	incf	(_pData+1)& (0+255),f,b
  9800  002864  D7B7               	goto	l8531
  9801  002866                     l8565:
  9802                           
  9803                           ; BSR set to: 0
  9804  002866  0100               	movlb	0	; () banked
  9805  002868  517C               	movf	_RxSwitch& (0+255),w,b
  9806                           
  9807                           ; Switch size 1, requested type "space"
  9808                           ; Number of cases is 4, Range of values is 0 to 3
  9809                           ; switch strategies available:
  9810                           ; Name         Instructions Cycles
  9811                           ; simple_byte           13     7 (average)
  9812                           ;	Chosen strategy is simple_byte
  9813  00286A  0A00               	xorlw	0	; case 0
  9814  00286C  B4D8               	btfsc	status,2,c
  9815  00286E  D768               	goto	l8509
  9816  002870  0A01               	xorlw	1	; case 1
  9817  002872  B4D8               	btfsc	status,2,c
  9818  002874  D7A3               	goto	l8525
  9819  002876  0A03               	xorlw	3	; case 2
  9820  002878  B4D8               	btfsc	status,2,c
  9821  00287A  D7B0               	goto	l8535
  9822  00287C  0A01               	xorlw	1	; case 3
  9823  00287E                     l8567:
  9824                           
  9825                           ;terminal.c: 95: }
  9826                           ;terminal.c: 97: if (Message_To_Translate == 1){
  9827  00287E  0100               	movlb	0	; () banked
  9828  002880  057A               	decf	_Message_To_Translate& (0+255),w,b
  9829  002882  A4D8               	btfss	status,2,c
  9830  002884  0012               	return	
  9831                           
  9832                           ; BSR set to: 0
  9833                           ;terminal.c: 98: TranslateMessage();
  9834  002886  ECDD  F012         	call	_TranslateMessage	;wreg free
  9835                           
  9836                           ;terminal.c: 99: Message_To_Translate = 0;
  9837  00288A  0E00               	movlw	0
  9838  00288C  0100               	movlb	0	; () banked
  9839  00288E  6F7A               	movwf	_Message_To_Translate& (0+255),b
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;terminal.c: 100: RxSwitch = 0;
  9843  002890  0E00               	movlw	0
  9844  002892  0100               	movlb	0	; () banked
  9845  002894  6F7C               	movwf	_RxSwitch& (0+255),b
  9846  002896  0012               	return	
  9847  002898                     __end_of_READxRECEIVEDxMESSAGE:
  9848                           	opt stack 0
  9849                           tblptru	equ	0xFF8
  9850                           tblptrh	equ	0xFF7
  9851                           tblptrl	equ	0xFF6
  9852                           tablat	equ	0xFF5
  9853                           intcon	equ	0xFF2
  9854                           postinc0	equ	0xFEE
  9855                           wreg	equ	0xFE8
  9856                           postdec1	equ	0xFE5
  9857                           fsr1h	equ	0xFE2
  9858                           fsr1l	equ	0xFE1
  9859                           indf2	equ	0xFDF
  9860                           fsr2h	equ	0xFDA
  9861                           fsr2l	equ	0xFD9
  9862                           status	equ	0xFD8
  9863                           
  9864 ;; *************** function _TranslateMessage *****************
  9865 ;; Defined at:
  9866 ;;		line 118 in file "../terminal.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;		None
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;  Index           2   35[BANK0 ] unsigned int 
  9871 ;;  Value           2   33[BANK0 ] unsigned int 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  1    wreg      void 
  9874 ;; Registers used:
  9875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9881 ;;      Params:         0       0       0       0       0       0       0       0       0
  9882 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9884 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9885 ;;Total ram usage:        4 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; Hardware stack levels required when called:    7
  9888 ;; This function calls:
  9889 ;;		_GETxAPIxRW
  9890 ;;		_GETxAPIxVAL
  9891 ;;		_SENDxMESSAGE
  9892 ;;		_SETxAPIxVAL
  9893 ;;		_atoi
  9894 ;;		_printf
  9895 ;; This function is called by:
  9896 ;;		_READxRECEIVEDxMESSAGE
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           	psect	text19
  9901  0025BA                     __ptext19:
  9902                           	opt stack 0
  9903  0025BA                     _TranslateMessage:
  9904                           	opt stack 22
  9905                           
  9906                           ;terminal.c: 120: unsigned int Value, Index;
  9907                           ;terminal.c: 122: if(Data[0] == 's'){
  9908                           
  9909                           ; BSR set to: 0
  9910                           ;incstack = 0
  9911  0025BA  0E73               	movlw	115
  9912  0025BC  0100               	movlb	0	; () banked
  9913  0025BE  1986               	xorwf	_Data& (0+255),w,b
  9914  0025C0  A4D8               	btfss	status,2,c
  9915  0025C2  D06E               	goto	l7909
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;terminal.c: 124: pData = &Data[2];
  9919  0025C4  0E88               	movlw	low (_Data+2)
  9920  0025C6  0100               	movlb	0	; () banked
  9921  0025C8  6F76               	movwf	_pData& (0+255),b
  9922  0025CA  0E00               	movlw	high (_Data+2)
  9923  0025CC  0100               	movlb	0	; () banked
  9924  0025CE  6F77               	movwf	(_pData+1)& (0+255),b
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;terminal.c: 125: Index = atoi (pData);
  9928  0025D0  C076  F096         	movff	_pData,atoi@s
  9929  0025D4  C077  F097         	movff	_pData+1,atoi@s+1
  9930  0025D8  EC7B  F01A         	call	_atoi	;wreg free
  9931  0025DC  C096  F0B3         	movff	?_atoi,TranslateMessage@Index
  9932  0025E0  C097  F0B4         	movff	?_atoi+1,TranslateMessage@Index+1
  9933                           
  9934                           ;terminal.c: 126: pData = &Data[5];
  9935  0025E4  0E8B               	movlw	low (_Data+5)
  9936  0025E6  0100               	movlb	0	; () banked
  9937  0025E8  6F76               	movwf	_pData& (0+255),b
  9938  0025EA  0E00               	movlw	high (_Data+5)
  9939  0025EC  0100               	movlb	0	; () banked
  9940  0025EE  6F77               	movwf	(_pData+1)& (0+255),b
  9941                           
  9942                           ;terminal.c: 127: Value = atoi (pData);
  9943  0025F0  C076  F096         	movff	_pData,atoi@s
  9944  0025F4  C077  F097         	movff	_pData+1,atoi@s+1
  9945  0025F8  EC7B  F01A         	call	_atoi	;wreg free
  9946  0025FC  C096  F0B1         	movff	?_atoi,TranslateMessage@Value
  9947  002600  C097  F0B2         	movff	?_atoi+1,TranslateMessage@Value+1
  9948                           
  9949                           ;terminal.c: 129: if (GETxAPIxRW(Index) == 0){
  9950  002604  0100               	movlb	0	; () banked
  9951  002606  51B3               	movf	TranslateMessage@Index& (0+255),w,b
  9952  002608  EC77  F01E         	call	_GETxAPIxRW
  9953  00260C  0100               	movlb	0	; () banked
  9954  00260E  5190               	movf	?_GETxAPIxRW& (0+255),w,b
  9955  002610  0100               	movlb	0	; () banked
  9956  002612  1191               	iorwf	(?_GETxAPIxRW+1)& (0+255),w,b
  9957  002614  A4D8               	btfss	status,2,c
  9958  002616  D009               	goto	l7895
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;terminal.c: 130: printf("\r\nE#11\r\n");
  9962  002618  0E21               	movlw	low STR_3
  9963  00261A  0100               	movlb	0	; () banked
  9964  00261C  6F9B               	movwf	printf@f& (0+255),b
  9965  00261E  0E08               	movlw	high STR_3
  9966  002620  0100               	movlb	0	; () banked
  9967  002622  6F9C               	movwf	(printf@f+1)& (0+255),b
  9968  002624  EC4C  F014         	call	_printf	;wreg free
  9969                           
  9970                           ;terminal.c: 131: }
  9971  002628  0012               	return	
  9972  00262A                     l7895:
  9973                           
  9974                           ;terminal.c: 132: else if (Index < 0xF){
  9975  00262A  0100               	movlb	0	; () banked
  9976  00262C  51B4               	movf	(TranslateMessage@Index+1)& (0+255),w,b
  9977  00262E  E10E               	bnz	l7899
  9978  002630  0E0F               	movlw	15
  9979  002632  0100               	movlb	0	; () banked
  9980  002634  5DB3               	subwf	TranslateMessage@Index& (0+255),w,b
  9981  002636  B0D8               	btfsc	status,0,c
  9982  002638  D009               	goto	l7899
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;terminal.c: 133: printf("\r\nE#12\r\n");
  9986  00263A  0E2A               	movlw	low STR_4
  9987  00263C  0100               	movlb	0	; () banked
  9988  00263E  6F9B               	movwf	printf@f& (0+255),b
  9989  002640  0E08               	movlw	high STR_4
  9990  002642  0100               	movlb	0	; () banked
  9991  002644  6F9C               	movwf	(printf@f+1)& (0+255),b
  9992  002646  EC4C  F014         	call	_printf	;wreg free
  9993                           
  9994                           ;terminal.c: 134: }
  9995  00264A  0012               	return	
  9996  00264C                     l7899:
  9997                           
  9998                           ;terminal.c: 135: else if (Index > 0x90){
  9999  00264C  0100               	movlb	0	; () banked
 10000  00264E  51B4               	movf	(TranslateMessage@Index+1)& (0+255),w,b
 10001  002650  E105               	bnz	u7850
 10002  002652  0E91               	movlw	145
 10003  002654  0100               	movlb	0	; () banked
 10004  002656  5DB3               	subwf	TranslateMessage@Index& (0+255),w,b
 10005  002658  A0D8               	btfss	status,0,c
 10006  00265A  D009               	goto	l7903
 10007  00265C                     u7850:
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;terminal.c: 136: printf("\r\nE#13\r\n");
 10011  00265C  0E33               	movlw	low STR_5
 10012  00265E  0100               	movlb	0	; () banked
 10013  002660  6F9B               	movwf	printf@f& (0+255),b
 10014  002662  0E08               	movlw	high STR_5
 10015  002664  0100               	movlb	0	; () banked
 10016  002666  6F9C               	movwf	(printf@f+1)& (0+255),b
 10017  002668  EC4C  F014         	call	_printf	;wreg free
 10018                           
 10019                           ;terminal.c: 137: }
 10020  00266C  0012               	return	
 10021  00266E                     l7903:
 10022                           
 10023                           ;terminal.c: 138: else if (Value > 0xFFFE){
 10024  00266E  0100               	movlb	0	; () banked
 10025  002670  29B1               	incf	TranslateMessage@Value& (0+255),w,b
 10026  002672  E10D               	bnz	l7907
 10027  002674  0100               	movlb	0	; () banked
 10028  002676  29B2               	incf	(TranslateMessage@Value+1)& (0+255),w,b
 10029  002678  A4D8               	btfss	status,2,c
 10030  00267A  D009               	goto	l7907
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;terminal.c: 139: printf("\r\nE#14\r\n");
 10034  00267C  0E3C               	movlw	low STR_6
 10035  00267E  0100               	movlb	0	; () banked
 10036  002680  6F9B               	movwf	printf@f& (0+255),b
 10037  002682  0E08               	movlw	high STR_6
 10038  002684  0100               	movlb	0	; () banked
 10039  002686  6F9C               	movwf	(printf@f+1)& (0+255),b
 10040  002688  EC4C  F014         	call	_printf	;wreg free
 10041                           
 10042                           ;terminal.c: 140: }
 10043  00268C  0012               	return	
 10044  00268E                     l7907:
 10045                           
 10046                           ;terminal.c: 141: else{
 10047                           ;terminal.c: 142: SETxAPIxVAL(Index, Value);
 10048  00268E  C0B1  F0AC         	movff	TranslateMessage@Value,SETxAPIxVAL@value
 10049  002692  C0B2  F0AD         	movff	TranslateMessage@Value+1,SETxAPIxVAL@value+1
 10050  002696  0100               	movlb	0	; () banked
 10051  002698  51B3               	movf	TranslateMessage@Index& (0+255),w,b
 10052  00269A  EC5C  F01D         	call	_SETxAPIxVAL
 10053                           
 10054                           ;terminal.c: 143: }
 10055                           ;terminal.c: 144: }
 10056  00269E  0012               	return	
 10057  0026A0                     l7909:
 10058                           
 10059                           ;terminal.c: 146: else if (Data[0] == 'g'){
 10060  0026A0  0E67               	movlw	103
 10061  0026A2  0100               	movlb	0	; () banked
 10062  0026A4  1986               	xorwf	_Data& (0+255),w,b
 10063  0026A6  A4D8               	btfss	status,2,c
 10064  0026A8  0012               	return	
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;terminal.c: 148: pData = &Data[2];
 10068  0026AA  0E88               	movlw	low (_Data+2)
 10069  0026AC  0100               	movlb	0	; () banked
 10070  0026AE  6F76               	movwf	_pData& (0+255),b
 10071  0026B0  0E00               	movlw	high (_Data+2)
 10072  0026B2  0100               	movlb	0	; () banked
 10073  0026B4  6F77               	movwf	(_pData+1)& (0+255),b
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;terminal.c: 149: Index = atoi (pData);
 10077  0026B6  C076  F096         	movff	_pData,atoi@s
 10078  0026BA  C077  F097         	movff	_pData+1,atoi@s+1
 10079  0026BE  EC7B  F01A         	call	_atoi	;wreg free
 10080  0026C2  C096  F0B3         	movff	?_atoi,TranslateMessage@Index
 10081  0026C6  C097  F0B4         	movff	?_atoi+1,TranslateMessage@Index+1
 10082                           
 10083                           ;terminal.c: 151: if (Index < 0xF){
 10084  0026CA  0100               	movlb	0	; () banked
 10085  0026CC  51B4               	movf	(TranslateMessage@Index+1)& (0+255),w,b
 10086  0026CE  E10E               	bnz	l7919
 10087  0026D0  0E0F               	movlw	15
 10088  0026D2  0100               	movlb	0	; () banked
 10089  0026D4  5DB3               	subwf	TranslateMessage@Index& (0+255),w,b
 10090  0026D6  B0D8               	btfsc	status,0,c
 10091  0026D8  D009               	goto	l7919
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;terminal.c: 152: printf("\r\nE#12\r\n");
 10095  0026DA  0E2A               	movlw	low STR_4
 10096  0026DC  0100               	movlb	0	; () banked
 10097  0026DE  6F9B               	movwf	printf@f& (0+255),b
 10098  0026E0  0E08               	movlw	high STR_4
 10099  0026E2  0100               	movlb	0	; () banked
 10100  0026E4  6F9C               	movwf	(printf@f+1)& (0+255),b
 10101  0026E6  EC4C  F014         	call	_printf	;wreg free
 10102                           
 10103                           ;terminal.c: 153: }
 10104  0026EA  0012               	return	
 10105  0026EC                     l7919:
 10106                           
 10107                           ;terminal.c: 154: else if (Index > 0x90){
 10108  0026EC  0100               	movlb	0	; () banked
 10109  0026EE  51B4               	movf	(TranslateMessage@Index+1)& (0+255),w,b
 10110  0026F0  E105               	bnz	u7890
 10111  0026F2  0E91               	movlw	145
 10112  0026F4  0100               	movlb	0	; () banked
 10113  0026F6  5DB3               	subwf	TranslateMessage@Index& (0+255),w,b
 10114  0026F8  A0D8               	btfss	status,0,c
 10115  0026FA  D009               	goto	l7923
 10116  0026FC                     u7890:
 10117                           
 10118                           ; BSR set to: 0
 10119                           ;terminal.c: 155: printf("\r\nE#13\r\n");
 10120  0026FC  0E33               	movlw	low STR_5
 10121  0026FE  0100               	movlb	0	; () banked
 10122  002700  6F9B               	movwf	printf@f& (0+255),b
 10123  002702  0E08               	movlw	high STR_5
 10124  002704  0100               	movlb	0	; () banked
 10125  002706  6F9C               	movwf	(printf@f+1)& (0+255),b
 10126  002708  EC4C  F014         	call	_printf	;wreg free
 10127                           
 10128                           ;terminal.c: 156: }
 10129  00270C  0012               	return	
 10130  00270E                     l7923:
 10131                           
 10132                           ;terminal.c: 157: else{
 10133                           ;terminal.c: 158: Value = GETxAPIxVAL(Index);
 10134  00270E  0100               	movlb	0	; () banked
 10135  002710  51B3               	movf	TranslateMessage@Index& (0+255),w,b
 10136  002712  EC69  F01E         	call	_GETxAPIxVAL
 10137  002716  C090  F0B1         	movff	?_GETxAPIxVAL,TranslateMessage@Value
 10138  00271A  C091  F0B2         	movff	?_GETxAPIxVAL+1,TranslateMessage@Value+1
 10139                           
 10140                           ;terminal.c: 159: SENDxMESSAGE(Index, Value);
 10141  00271E  C0B1  F0A9         	movff	TranslateMessage@Value,SENDxMESSAGE@value
 10142  002722  C0B2  F0AA         	movff	TranslateMessage@Value+1,SENDxMESSAGE@value+1
 10143  002726  0100               	movlb	0	; () banked
 10144  002728  51B3               	movf	TranslateMessage@Index& (0+255),w,b
 10145  00272A  EC44  F01E         	call	_SENDxMESSAGE
 10146  00272E  0012               	return	
 10147  002730                     __end_of_TranslateMessage:
 10148                           	opt stack 0
 10149                           tblptru	equ	0xFF8
 10150                           tblptrh	equ	0xFF7
 10151                           tblptrl	equ	0xFF6
 10152                           tablat	equ	0xFF5
 10153                           intcon	equ	0xFF2
 10154                           postinc0	equ	0xFEE
 10155                           wreg	equ	0xFE8
 10156                           postdec1	equ	0xFE5
 10157                           fsr1h	equ	0xFE2
 10158                           fsr1l	equ	0xFE1
 10159                           indf2	equ	0xFDF
 10160                           fsr2h	equ	0xFDA
 10161                           fsr2l	equ	0xFD9
 10162                           status	equ	0xFD8
 10163                           
 10164 ;; *************** function _atoi *****************
 10165 ;; Defined at:
 10166 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\atoi.c"
 10167 ;; Parameters:    Size  Location     Type
 10168 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 10169 ;;		 -> NULL(0), Data(10), 
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;  a               2   11[BANK0 ] int 
 10172 ;;  sign            1   10[BANK0 ] unsigned char 
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  2    6[BANK0 ] int 
 10175 ;; Registers used:
 10176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10182 ;;      Params:         0       2       0       0       0       0       0       0       0
 10183 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10184 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10185 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10186 ;;Total ram usage:        7 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; Hardware stack levels required when called:    4
 10189 ;; This function calls:
 10190 ;;		___wmul
 10191 ;;		_isdigit
 10192 ;; This function is called by:
 10193 ;;		_TranslateMessage
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           	psect	text20
 10198  0034F6                     __ptext20:
 10199                           	opt stack 0
 10200  0034F6                     _atoi:
 10201                           	opt stack 24
 10202                           
 10203                           ;incstack = 0
 10204  0034F6  D003               	goto	l7251
 10205  0034F8                     l7249:
 10206  0034F8  0100               	movlb	0	; () banked
 10207  0034FA  4B96               	infsnz	atoi@s& (0+255),f,b
 10208  0034FC  2B97               	incf	(atoi@s+1)& (0+255),f,b
 10209  0034FE                     l7251:
 10210  0034FE  C096  FFD9         	movff	atoi@s,fsr2l
 10211  003502  C097  FFDA         	movff	atoi@s+1,fsr2h
 10212  003506  0E20               	movlw	32
 10213  003508  18DE               	xorwf	postinc2,w,c
 10214  00350A  B4D8               	btfsc	status,2,c
 10215  00350C  D7F5               	goto	l7249
 10216  00350E  C096  FFD9         	movff	atoi@s,fsr2l
 10217  003512  C097  FFDA         	movff	atoi@s+1,fsr2h
 10218  003516  0E09               	movlw	9
 10219  003518  18DE               	xorwf	postinc2,w,c
 10220  00351A  B4D8               	btfsc	status,2,c
 10221  00351C  D7ED               	goto	l7249
 10222  00351E  0E00               	movlw	0
 10223  003520  0100               	movlb	0	; () banked
 10224  003522  6F9C               	movwf	(atoi@a+1)& (0+255),b
 10225  003524  0E00               	movlw	0
 10226  003526  6F9B               	movwf	atoi@a& (0+255),b
 10227  003528  0E00               	movlw	0
 10228  00352A  0100               	movlb	0	; () banked
 10229  00352C  6F9A               	movwf	atoi@sign& (0+255),b
 10230                           
 10231                           ; BSR set to: 0
 10232  00352E  C096  FFD9         	movff	atoi@s,fsr2l
 10233  003532  C097  FFDA         	movff	atoi@s+1,fsr2h
 10234  003536  0E2D               	movlw	45
 10235  003538  18DE               	xorwf	postinc2,w,c
 10236  00353A  A4D8               	btfss	status,2,c
 10237  00353C  D003               	goto	l7261
 10238                           
 10239                           ; BSR set to: 0
 10240  00353E  0100               	movlb	0	; () banked
 10241  003540  2B9A               	incf	atoi@sign& (0+255),f,b
 10242  003542  D02E               	goto	l7267
 10243  003544                     l7261:
 10244                           
 10245                           ; BSR set to: 0
 10246  003544  C096  FFD9         	movff	atoi@s,fsr2l
 10247  003548  C097  FFDA         	movff	atoi@s+1,fsr2h
 10248  00354C  0E2B               	movlw	43
 10249  00354E  18DE               	xorwf	postinc2,w,c
 10250  003550  A4D8               	btfss	status,2,c
 10251  003552  D029               	goto	l7269
 10252  003554  D025               	goto	l7267
 10253  003556                     l7265:
 10254  003556  C09B  F090         	movff	atoi@a,___wmul@multiplier
 10255  00355A  C09C  F091         	movff	atoi@a+1,___wmul@multiplier+1
 10256  00355E  0E00               	movlw	0
 10257  003560  0100               	movlb	0	; () banked
 10258  003562  6F93               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10259  003564  0E0A               	movlw	10
 10260  003566  6F92               	movwf	___wmul@multiplicand& (0+255),b
 10261  003568  ECCE  F01D         	call	___wmul	;wreg free
 10262  00356C  C096  FFD9         	movff	atoi@s,fsr2l
 10263  003570  C097  FFDA         	movff	atoi@s+1,fsr2h
 10264  003574  50DF               	movf	indf2,w,c
 10265  003576  0100               	movlb	0	; () banked
 10266  003578  6F98               	movwf	??_atoi& (0+255),b
 10267  00357A  6B99               	clrf	(??_atoi+1)& (0+255),b
 10268  00357C  0100               	movlb	0	; () banked
 10269  00357E  5190               	movf	?___wmul& (0+255),w,b
 10270  003580  0100               	movlb	0	; () banked
 10271  003582  2798               	addwf	??_atoi& (0+255),f,b
 10272  003584  0100               	movlb	0	; () banked
 10273  003586  5191               	movf	(?___wmul+1)& (0+255),w,b
 10274  003588  0100               	movlb	0	; () banked
 10275  00358A  2399               	addwfc	(??_atoi+1)& (0+255),f,b
 10276  00358C  0ED0               	movlw	208
 10277  00358E  0100               	movlb	0	; () banked
 10278  003590  2598               	addwf	??_atoi& (0+255),w,b
 10279  003592  0100               	movlb	0	; () banked
 10280  003594  6F9B               	movwf	atoi@a& (0+255),b
 10281  003596  0EFF               	movlw	255
 10282  003598  0100               	movlb	0	; () banked
 10283  00359A  2199               	addwfc	(??_atoi+1)& (0+255),w,b
 10284  00359C  0100               	movlb	0	; () banked
 10285  00359E  6F9C               	movwf	(atoi@a+1)& (0+255),b
 10286  0035A0                     l7267:
 10287                           
 10288                           ; BSR set to: 0
 10289  0035A0  0100               	movlb	0	; () banked
 10290  0035A2  4B96               	infsnz	atoi@s& (0+255),f,b
 10291  0035A4  2B97               	incf	(atoi@s+1)& (0+255),f,b
 10292  0035A6                     l7269:
 10293                           
 10294                           ; BSR set to: 0
 10295  0035A6  C096  FFD9         	movff	atoi@s,fsr2l
 10296  0035AA  C097  FFDA         	movff	atoi@s+1,fsr2h
 10297  0035AE  50DF               	movf	indf2,w,c
 10298  0035B0  EC30  F01E         	call	_isdigit
 10299  0035B4  B0D8               	btfsc	status,0,c
 10300  0035B6  D7CF               	goto	l7265
 10301  0035B8  0100               	movlb	0	; () banked
 10302  0035BA  519A               	movf	atoi@sign& (0+255),w,b
 10303  0035BC  0100               	movlb	0	; () banked
 10304  0035BE  B4D8               	btfsc	status,2,c
 10305  0035C0  D00E               	goto	l1360
 10306                           
 10307                           ; BSR set to: 0
 10308  0035C2  C09B  F098         	movff	atoi@a,??_atoi
 10309  0035C6  C09C  F099         	movff	atoi@a+1,??_atoi+1
 10310  0035CA  0100               	movlb	0	; () banked
 10311  0035CC  1F98               	comf	??_atoi& (0+255),f,b
 10312  0035CE  1F99               	comf	(??_atoi+1)& (0+255),f,b
 10313  0035D0  4B98               	infsnz	??_atoi& (0+255),f,b
 10314  0035D2  2B99               	incf	(??_atoi+1)& (0+255),f,b
 10315  0035D4  C098  F096         	movff	??_atoi,?_atoi
 10316  0035D8  C099  F097         	movff	??_atoi+1,?_atoi+1
 10317  0035DC  0012               	return	
 10318  0035DE                     l1360:
 10319                           
 10320                           ; BSR set to: 0
 10321  0035DE  C09B  F096         	movff	atoi@a,?_atoi
 10322  0035E2  C09C  F097         	movff	atoi@a+1,?_atoi+1
 10323                           
 10324                           ; BSR set to: 0
 10325  0035E6  0012               	return		;funcret
 10326  0035E8                     __end_of_atoi:
 10327                           	opt stack 0
 10328                           tblptru	equ	0xFF8
 10329                           tblptrh	equ	0xFF7
 10330                           tblptrl	equ	0xFF6
 10331                           tablat	equ	0xFF5
 10332                           intcon	equ	0xFF2
 10333                           postinc0	equ	0xFEE
 10334                           wreg	equ	0xFE8
 10335                           postdec1	equ	0xFE5
 10336                           fsr1h	equ	0xFE2
 10337                           fsr1l	equ	0xFE1
 10338                           indf2	equ	0xFDF
 10339                           postinc2	equ	0xFDE
 10340                           fsr2h	equ	0xFDA
 10341                           fsr2l	equ	0xFD9
 10342                           status	equ	0xFD8
 10343                           
 10344 ;; *************** function _isdigit *****************
 10345 ;; Defined at:
 10346 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  c               1    wreg     unsigned char 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  c               1    1[BANK0 ] unsigned char 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;		None               void
 10353 ;; Registers used:
 10354 ;;		wreg, status,2, status,0
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10360 ;;      Params:         0       0       0       0       0       0       0       0       0
 10361 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10362 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10363 ;;      Totals:         1       2       0       0       0       0       0       0       0
 10364 ;;Total ram usage:        3 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; Hardware stack levels required when called:    3
 10367 ;; This function calls:
 10368 ;;		Nothing
 10369 ;; This function is called by:
 10370 ;;		_atoi
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373                           
 10374                           	psect	text21
 10375  003C60                     __ptext21:
 10376                           	opt stack 0
 10377  003C60                     _isdigit:
 10378                           	opt stack 24
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;incstack = 0
 10382                           ;isdigit@c stored from wreg
 10383  003C60  0100               	movlb	0	; () banked
 10384  003C62  6F91               	movwf	isdigit@c& (0+255),b
 10385  003C64  0E00               	movlw	0
 10386  003C66  0100               	movlb	0	; () banked
 10387  003C68  6F90               	movwf	_isdigit$1860& (0+255),b
 10388                           
 10389                           ; BSR set to: 0
 10390  003C6A  0E3A               	movlw	58
 10391  003C6C  0100               	movlb	0	; () banked
 10392  003C6E  6191               	cpfslt	isdigit@c& (0+255),b
 10393  003C70  D007               	goto	l6735
 10394                           
 10395                           ; BSR set to: 0
 10396  003C72  0E2F               	movlw	47
 10397  003C74  0100               	movlb	0	; () banked
 10398  003C76  6591               	cpfsgt	isdigit@c& (0+255),b
 10399  003C78  D003               	goto	l6735
 10400                           
 10401                           ; BSR set to: 0
 10402  003C7A  0E01               	movlw	1
 10403  003C7C  0100               	movlb	0	; () banked
 10404  003C7E  6F90               	movwf	_isdigit$1860& (0+255),b
 10405  003C80                     l6735:
 10406                           
 10407                           ; BSR set to: 0
 10408  003C80  C090  F020         	movff	_isdigit$1860,??_isdigit
 10409  003C84  3020               	rrcf	??_isdigit,w,c
 10410  003C86  0012               	return	
 10411  003C88                     __end_of_isdigit:
 10412                           	opt stack 0
 10413                           tblptru	equ	0xFF8
 10414                           tblptrh	equ	0xFF7
 10415                           tblptrl	equ	0xFF6
 10416                           tablat	equ	0xFF5
 10417                           intcon	equ	0xFF2
 10418                           postinc0	equ	0xFEE
 10419                           wreg	equ	0xFE8
 10420                           postdec1	equ	0xFE5
 10421                           fsr1h	equ	0xFE2
 10422                           fsr1l	equ	0xFE1
 10423                           indf2	equ	0xFDF
 10424                           postinc2	equ	0xFDE
 10425                           fsr2h	equ	0xFDA
 10426                           fsr2l	equ	0xFD9
 10427                           status	equ	0xFD8
 10428                           
 10429 ;; *************** function ___wmul *****************
 10430 ;; Defined at:
 10431 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10434 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;  product         2    4[BANK0 ] unsigned int 
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  2    0[BANK0 ] unsigned int 
 10439 ;; Registers used:
 10440 ;;		wreg, status,2, status,0, prodl, prodh
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10446 ;;      Params:         0       4       0       0       0       0       0       0       0
 10447 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10448 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10449 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10450 ;;Total ram usage:        6 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; Hardware stack levels required when called:    3
 10453 ;; This function calls:
 10454 ;;		Nothing
 10455 ;; This function is called by:
 10456 ;;		_atoi
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text22
 10461  003B9C                     __ptext22:
 10462                           	opt stack 0
 10463  003B9C                     ___wmul:
 10464                           	opt stack 24
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;incstack = 0
 10468  003B9C  0100               	movlb	0	; () banked
 10469  003B9E  5190               	movf	___wmul@multiplier& (0+255),w,b
 10470  003BA0  0100               	movlb	0	; () banked
 10471  003BA2  0392               	mulwf	___wmul@multiplicand& (0+255),b
 10472  003BA4  CFF3 F094          	movff	prodl,___wmul@product
 10473  003BA8  CFF4 F095          	movff	prodh,___wmul@product+1
 10474  003BAC  0100               	movlb	0	; () banked
 10475  003BAE  5190               	movf	___wmul@multiplier& (0+255),w,b
 10476  003BB0  0100               	movlb	0	; () banked
 10477  003BB2  0393               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10478  003BB4  50F3               	movf	prodl,w,c
 10479  003BB6  0100               	movlb	0	; () banked
 10480  003BB8  2795               	addwf	(___wmul@product+1)& (0+255),f,b
 10481  003BBA  0100               	movlb	0	; () banked
 10482  003BBC  5191               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10483  003BBE  0100               	movlb	0	; () banked
 10484  003BC0  0392               	mulwf	___wmul@multiplicand& (0+255),b
 10485  003BC2  50F3               	movf	prodl,w,c
 10486  003BC4  0100               	movlb	0	; () banked
 10487  003BC6  2795               	addwf	(___wmul@product+1)& (0+255),f,b
 10488                           
 10489                           ; BSR set to: 0
 10490  003BC8  C094  F090         	movff	___wmul@product,?___wmul
 10491  003BCC  C095  F091         	movff	___wmul@product+1,?___wmul+1
 10492  003BD0  0012               	return	
 10493  003BD2                     __end_of___wmul:
 10494                           	opt stack 0
 10495                           tblptru	equ	0xFF8
 10496                           tblptrh	equ	0xFF7
 10497                           tblptrl	equ	0xFF6
 10498                           tablat	equ	0xFF5
 10499                           prodh	equ	0xFF4
 10500                           prodl	equ	0xFF3
 10501                           intcon	equ	0xFF2
 10502                           postinc0	equ	0xFEE
 10503                           wreg	equ	0xFE8
 10504                           postdec1	equ	0xFE5
 10505                           fsr1h	equ	0xFE2
 10506                           fsr1l	equ	0xFE1
 10507                           indf2	equ	0xFDF
 10508                           postinc2	equ	0xFDE
 10509                           fsr2h	equ	0xFDA
 10510                           fsr2l	equ	0xFD9
 10511                           status	equ	0xFD8
 10512                           
 10513 ;; *************** function _GETxAPIxVAL *****************
 10514 ;; Defined at:
 10515 ;;		line 201 in file "../api.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  index           1    wreg     unsigned char 
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;  index           1   31[COMRAM] unsigned char 
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  2    0[BANK0 ] unsigned int 
 10522 ;; Registers used:
 10523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10529 ;;      Params:         0       2       0       0       0       0       0       0       0
 10530 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10532 ;;      Totals:         1       2       0       0       0       0       0       0       0
 10533 ;;Total ram usage:        3 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; Hardware stack levels required when called:    3
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_Update_StateMchn
 10540 ;;		_Train_Path
 10541 ;;		_TranslateMessage
 10542 ;;		_Eeprom_Store
 10543 ;;		_Debounce_Inputs
 10544 ;;		_Junction
 10545 ;;		_Train_Move_Left_Start
 10546 ;;		_Right_Mountain_From_The_Right
 10547 ;;		_Left_Mountain_From_The_Right
 10548 ;;		_Train_Move_Left_Brake
 10549 ;;		_Train_Move_Right_Start
 10550 ;;		_Left_Mountain_From_The_Left
 10551 ;;		_Right_Mountain_From_The_Left
 10552 ;;		_Train_Move_Right_Brake
 10553 ;;		_INCRxAPIxVAL
 10554 ;;		_DECRxAPIxVAL
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           	psect	text23
 10559  003CD2                     __ptext23:
 10560                           	opt stack 0
 10561  003CD2                     _GETxAPIxVAL:
 10562                           	opt stack 24
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;incstack = 0
 10566                           ;GETxAPIxVAL@index stored from wreg
 10567  003CD2  6E20               	movwf	GETxAPIxVAL@index,c
 10568                           
 10569                           ;api.c: 202: return API[index];
 10570  003CD4  5020               	movf	GETxAPIxVAL@index,w,c
 10571  003CD6  0D02               	mullw	2
 10572  003CD8  0EFC               	movlw	low _API
 10573  003CDA  24F3               	addwf	prodl,w,c
 10574  003CDC  6ED9               	movwf	fsr2l,c
 10575  003CDE  0E01               	movlw	high _API
 10576  003CE0  20F4               	addwfc	prodh,w,c
 10577  003CE2  6EDA               	movwf	fsr2h,c
 10578  003CE4  CFDE F090          	movff	postinc2,?_GETxAPIxVAL
 10579  003CE8  CFDD F091          	movff	postdec2,?_GETxAPIxVAL+1
 10580  003CEC  0012               	return	
 10581  003CEE                     __end_of_GETxAPIxVAL:
 10582                           	opt stack 0
 10583                           tblptru	equ	0xFF8
 10584                           tblptrh	equ	0xFF7
 10585                           tblptrl	equ	0xFF6
 10586                           tablat	equ	0xFF5
 10587                           prodh	equ	0xFF4
 10588                           prodl	equ	0xFF3
 10589                           intcon	equ	0xFF2
 10590                           postinc0	equ	0xFEE
 10591                           wreg	equ	0xFE8
 10592                           postdec1	equ	0xFE5
 10593                           fsr1h	equ	0xFE2
 10594                           fsr1l	equ	0xFE1
 10595                           indf2	equ	0xFDF
 10596                           postinc2	equ	0xFDE
 10597                           postdec2	equ	0xFDD
 10598                           fsr2h	equ	0xFDA
 10599                           fsr2l	equ	0xFD9
 10600                           status	equ	0xFD8
 10601                           
 10602 ;; *************** function _GETxAPIxRW *****************
 10603 ;; Defined at:
 10604 ;;		line 191 in file "../api.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;  index           1    wreg     unsigned char 
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;  index           1   31[COMRAM] unsigned char 
 10609 ;; Return value:  Size  Location     Type
 10610 ;;                  2    0[BANK0 ] unsigned int 
 10611 ;; Registers used:
 10612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10618 ;;      Params:         0       2       0       0       0       0       0       0       0
 10619 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10620 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10621 ;;      Totals:         1       2       0       0       0       0       0       0       0
 10622 ;;Total ram usage:        3 bytes
 10623 ;; Hardware stack levels used:    1
 10624 ;; Hardware stack levels required when called:    3
 10625 ;; This function calls:
 10626 ;;		Nothing
 10627 ;; This function is called by:
 10628 ;;		_TranslateMessage
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           	psect	text24
 10633  003CEE                     __ptext24:
 10634                           	opt stack 0
 10635  003CEE                     _GETxAPIxRW:
 10636                           	opt stack 25
 10637                           
 10638                           ;incstack = 0
 10639                           ;GETxAPIxRW@index stored from wreg
 10640  003CEE  6E20               	movwf	GETxAPIxRW@index,c
 10641                           
 10642                           ;api.c: 192: return API_RW[index];
 10643  003CF0  5020               	movf	GETxAPIxRW@index,w,c
 10644  003CF2  0D02               	mullw	2
 10645  003CF4  0E1C               	movlw	low _API_RW
 10646  003CF6  24F3               	addwf	prodl,w,c
 10647  003CF8  6ED9               	movwf	fsr2l,c
 10648  003CFA  0E03               	movlw	high _API_RW
 10649  003CFC  20F4               	addwfc	prodh,w,c
 10650  003CFE  6EDA               	movwf	fsr2h,c
 10651  003D00  CFDE F090          	movff	postinc2,?_GETxAPIxRW
 10652  003D04  CFDD F091          	movff	postdec2,?_GETxAPIxRW+1
 10653  003D08  0012               	return	
 10654  003D0A                     __end_of_GETxAPIxRW:
 10655                           	opt stack 0
 10656                           tblptru	equ	0xFF8
 10657                           tblptrh	equ	0xFF7
 10658                           tblptrl	equ	0xFF6
 10659                           tablat	equ	0xFF5
 10660                           prodh	equ	0xFF4
 10661                           prodl	equ	0xFF3
 10662                           intcon	equ	0xFF2
 10663                           postinc0	equ	0xFEE
 10664                           wreg	equ	0xFE8
 10665                           postdec1	equ	0xFE5
 10666                           fsr1h	equ	0xFE2
 10667                           fsr1l	equ	0xFE1
 10668                           indf2	equ	0xFDF
 10669                           postinc2	equ	0xFDE
 10670                           postdec2	equ	0xFDD
 10671                           fsr2h	equ	0xFDA
 10672                           fsr2l	equ	0xFD9
 10673                           status	equ	0xFD8
 10674                           
 10675 ;; *************** function _EUSART1_Read *****************
 10676 ;; Defined at:
 10677 ;;		line 142 in file "../eusart1.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;		None
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;  readValue       1   31[COMRAM] unsigned char 
 10682 ;; Return value:  Size  Location     Type
 10683 ;;                  1    wreg      unsigned char 
 10684 ;; Registers used:
 10685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10686 ;; Tracked objects:
 10687 ;;		On entry : 0/0
 10688 ;;		On exit  : 0/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10691 ;;      Params:         0       0       0       0       0       0       0       0       0
 10692 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10693 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10694 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10695 ;;Total ram usage:        1 bytes
 10696 ;; Hardware stack levels used:    1
 10697 ;; Hardware stack levels required when called:    3
 10698 ;; This function calls:
 10699 ;;		Nothing
 10700 ;; This function is called by:
 10701 ;;		_READxRECEIVEDxMESSAGE
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           
 10705                           	psect	text25
 10706  003BD2                     __ptext25:
 10707                           	opt stack 0
 10708  003BD2                     _EUSART1_Read:
 10709                           	opt stack 26
 10710                           
 10711                           ;eusart1.c: 143: uint8_t readValue = 0;
 10712                           
 10713                           ;incstack = 0
 10714  003BD2  0E00               	movlw	0
 10715  003BD4  6E20               	movwf	EUSART1_Read@readValue,c
 10716  003BD6                     l5427:
 10717  003BD6  503A               	movf	_eusart1RxCount,w,c	;volatile
 10718  003BD8  B4D8               	btfsc	status,2,c
 10719  003BDA  D7FD               	goto	l5427
 10720                           
 10721                           ;eusart1.c: 146: }
 10722                           ;eusart1.c: 148: PIE1bits.RC1IE = 0;
 10723  003BDC  9A9D               	bcf	3997,5,c	;volatile
 10724                           
 10725                           ;eusart1.c: 150: readValue = eusart1RxBuffer[eusart1RxTail++];
 10726  003BDE  503C               	movf	_eusart1RxTail,w,c
 10727  003BE0  0D01               	mullw	1
 10728  003BE2  0E00               	movlw	low _eusart1RxBuffer
 10729  003BE4  24F3               	addwf	prodl,w,c
 10730  003BE6  6ED9               	movwf	fsr2l,c
 10731  003BE8  0E01               	movlw	high _eusart1RxBuffer
 10732  003BEA  20F4               	addwfc	prodh,w,c
 10733  003BEC  6EDA               	movwf	fsr2h,c
 10734  003BEE  50DF               	movf	indf2,w,c
 10735  003BF0  6E20               	movwf	EUSART1_Read@readValue,c
 10736  003BF2  2A3C               	incf	_eusart1RxTail,f,c
 10737                           
 10738                           ;eusart1.c: 151: if (sizeof (eusart1RxBuffer) <= eusart1RxTail) {
 10739  003BF4  0E7D               	movlw	125
 10740  003BF6  643C               	cpfsgt	_eusart1RxTail,c
 10741  003BF8  D002               	goto	l5437
 10742                           
 10743                           ;eusart1.c: 152: eusart1RxTail = 0;
 10744  003BFA  0E00               	movlw	0
 10745  003BFC  6E3C               	movwf	_eusart1RxTail,c
 10746  003BFE                     l5437:
 10747                           
 10748                           ;eusart1.c: 153: }
 10749                           ;eusart1.c: 154: eusart1RxCount--;
 10750  003BFE  063A               	decf	_eusart1RxCount,f,c	;volatile
 10751                           
 10752                           ;eusart1.c: 155: PIE1bits.RC1IE = 1;
 10753  003C00  8A9D               	bsf	3997,5,c	;volatile
 10754                           
 10755                           ;eusart1.c: 157: return readValue;
 10756  003C02  5020               	movf	EUSART1_Read@readValue,w,c
 10757  003C04  0012               	return	
 10758  003C06                     __end_of_EUSART1_Read:
 10759                           	opt stack 0
 10760                           tblptru	equ	0xFF8
 10761                           tblptrh	equ	0xFF7
 10762                           tblptrl	equ	0xFF6
 10763                           tablat	equ	0xFF5
 10764                           prodh	equ	0xFF4
 10765                           prodl	equ	0xFF3
 10766                           intcon	equ	0xFF2
 10767                           postinc0	equ	0xFEE
 10768                           wreg	equ	0xFE8
 10769                           postdec1	equ	0xFE5
 10770                           fsr1h	equ	0xFE2
 10771                           fsr1l	equ	0xFE1
 10772                           indf2	equ	0xFDF
 10773                           postinc2	equ	0xFDE
 10774                           postdec2	equ	0xFDD
 10775                           fsr2h	equ	0xFDA
 10776                           fsr2l	equ	0xFD9
 10777                           status	equ	0xFD8
 10778                           
 10779 ;; *************** function _Init_Timers *****************
 10780 ;; Defined at:
 10781 ;;		line 181 in file "../Main.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;		None
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;		None
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1    wreg      void 
 10788 ;; Registers used:
 10789 ;;		wreg, status,2
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10795 ;;      Params:         0       0       0       0       0       0       0       0       0
 10796 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10797 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10798 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10799 ;;Total ram usage:        0 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; Hardware stack levels required when called:    3
 10802 ;; This function calls:
 10803 ;;		Nothing
 10804 ;; This function is called by:
 10805 ;;		_main
 10806 ;; This function uses a non-reentrant model
 10807 ;;
 10808                           
 10809                           	psect	text26
 10810  003D0A                     __ptext26:
 10811                           	opt stack 0
 10812  003D0A                     _Init_Timers:
 10813                           	opt stack 27
 10814                           
 10815                           ;Main.c: 183: RCONbits.IPEN = 1;
 10816                           
 10817                           ;incstack = 0
 10818  003D0A  8ED0               	bsf	4048,7,c	;volatile
 10819                           
 10820                           ;Main.c: 184: INTCON = 0xA0;
 10821  003D0C  0EA0               	movlw	160
 10822  003D0E  6EF2               	movwf	intcon,c	;volatile
 10823                           
 10824                           ;Main.c: 185: INTCON2 = 0x84;
 10825  003D10  0E84               	movlw	132
 10826  003D12  6EF1               	movwf	intcon2,c	;volatile
 10827                           
 10828                           ;Main.c: 186: TMR0H = 0x0;
 10829  003D14  0E00               	movlw	0
 10830  003D16  6ED7               	movwf	4055,c	;volatile
 10831                           
 10832                           ;Main.c: 187: TMR0L = 0x0;
 10833  003D18  0E00               	movlw	0
 10834  003D1A  6ED6               	movwf	4054,c	;volatile
 10835                           
 10836                           ;Main.c: 188: T0CON = 0xC3;
 10837  003D1C  0EC3               	movlw	195
 10838  003D1E  6ED5               	movwf	4053,c	;volatile
 10839  003D20  0012               	return		;funcret
 10840  003D22                     __end_of_Init_Timers:
 10841                           	opt stack 0
 10842                           tblptru	equ	0xFF8
 10843                           tblptrh	equ	0xFF7
 10844                           tblptrl	equ	0xFF6
 10845                           tablat	equ	0xFF5
 10846                           prodh	equ	0xFF4
 10847                           prodl	equ	0xFF3
 10848                           intcon	equ	0xFF2
 10849                           intcon2	equ	0xFF1
 10850                           postinc0	equ	0xFEE
 10851                           wreg	equ	0xFE8
 10852                           postdec1	equ	0xFE5
 10853                           fsr1h	equ	0xFE2
 10854                           fsr1l	equ	0xFE1
 10855                           indf2	equ	0xFDF
 10856                           postinc2	equ	0xFDE
 10857                           postdec2	equ	0xFDD
 10858                           fsr2h	equ	0xFDA
 10859                           fsr2l	equ	0xFD9
 10860                           status	equ	0xFD8
 10861                           
 10862 ;; *************** function _Init_Pwm *****************
 10863 ;; Defined at:
 10864 ;;		line 194 in file "../Main.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;		None
 10867 ;; Auto vars:     Size  Location     Type
 10868 ;;		None
 10869 ;; Return value:  Size  Location     Type
 10870 ;;                  1    wreg      void 
 10871 ;; Registers used:
 10872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10878 ;;      Params:         0       0       0       0       0       0       0       0       0
 10879 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10880 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10881 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10882 ;;Total ram usage:        0 bytes
 10883 ;; Hardware stack levels used:    1
 10884 ;; Hardware stack levels required when called:    7
 10885 ;; This function calls:
 10886 ;;		_SETxAPIxVAL
 10887 ;; This function is called by:
 10888 ;;		_main
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892                           	psect	text27
 10893  003CAE                     __ptext27:
 10894                           	opt stack 0
 10895  003CAE                     _Init_Pwm:
 10896                           	opt stack 23
 10897                           
 10898                           ;Main.c: 197: SETxAPIxVAL(69, 1);
 10899                           
 10900                           ;incstack = 0
 10901  003CAE  0E00               	movlw	0
 10902  003CB0  0100               	movlb	0	; () banked
 10903  003CB2  6FAD               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
 10904  003CB4  0E01               	movlw	1
 10905  003CB6  6FAC               	movwf	SETxAPIxVAL@value& (0+255),b
 10906  003CB8  0E45               	movlw	69
 10907  003CBA  EC5C  F01D         	call	_SETxAPIxVAL
 10908                           
 10909                           ;Main.c: 198: PR2=0xFF;
 10910  003CBE  68CB               	setf	4043,c	;volatile
 10911                           
 10912                           ;Main.c: 199: CCPR1L = 0x7F;
 10913  003CC0  0E7F               	movlw	127
 10914  003CC2  6EBE               	movwf	4030,c	;volatile
 10915                           
 10916                           ;Main.c: 200: CCP1CON = 0x0F;
 10917  003CC4  0E0F               	movlw	15
 10918  003CC6  6EBD               	movwf	4029,c	;volatile
 10919                           
 10920                           ;Main.c: 201: T2CON = 0x04;
 10921  003CC8  0E04               	movlw	4
 10922  003CCA  6ECA               	movwf	4042,c	;volatile
 10923                           
 10924                           ;Main.c: 202: TRISCbits.TRISC2=0;TRISCbits.TRISC0=0;;
 10925  003CCC  9494               	bcf	3988,2,c	;volatile
 10926  003CCE  9094               	bcf	3988,0,c	;volatile
 10927  003CD0  0012               	return		;funcret
 10928  003CD2                     __end_of_Init_Pwm:
 10929                           	opt stack 0
 10930                           tblptru	equ	0xFF8
 10931                           tblptrh	equ	0xFF7
 10932                           tblptrl	equ	0xFF6
 10933                           tablat	equ	0xFF5
 10934                           prodh	equ	0xFF4
 10935                           prodl	equ	0xFF3
 10936                           intcon	equ	0xFF2
 10937                           intcon2	equ	0xFF1
 10938                           postinc0	equ	0xFEE
 10939                           wreg	equ	0xFE8
 10940                           postdec1	equ	0xFE5
 10941                           fsr1h	equ	0xFE2
 10942                           fsr1l	equ	0xFE1
 10943                           indf2	equ	0xFDF
 10944                           postinc2	equ	0xFDE
 10945                           postdec2	equ	0xFDD
 10946                           fsr2h	equ	0xFDA
 10947                           fsr2l	equ	0xFD9
 10948                           status	equ	0xFD8
 10949                           
 10950 ;; *************** function _SETxAPIxVAL *****************
 10951 ;; Defined at:
 10952 ;;		line 195 in file "../api.c"
 10953 ;; Parameters:    Size  Location     Type
 10954 ;;  index           1    wreg     unsigned char 
 10955 ;;  value           2   28[BANK0 ] unsigned int 
 10956 ;; Auto vars:     Size  Location     Type
 10957 ;;  index           1   32[BANK0 ] unsigned char 
 10958 ;; Return value:  Size  Location     Type
 10959 ;;                  1    wreg      void 
 10960 ;; Registers used:
 10961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10962 ;; Tracked objects:
 10963 ;;		On entry : 0/0
 10964 ;;		On exit  : 0/0
 10965 ;;		Unchanged: 0/0
 10966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10967 ;;      Params:         0       2       0       0       0       0       0       0       0
 10968 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10969 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10970 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10971 ;;Total ram usage:        5 bytes
 10972 ;; Hardware stack levels used:    1
 10973 ;; Hardware stack levels required when called:    6
 10974 ;; This function calls:
 10975 ;;		_SENDxMESSAGE
 10976 ;; This function is called by:
 10977 ;;		_Init_Pwm
 10978 ;;		_Update_StateMchn
 10979 ;;		_Train_Path
 10980 ;;		_TranslateMessage
 10981 ;;		_Debounce_Inputs
 10982 ;;		_Junction
 10983 ;;		_Train_Move_Left_Start
 10984 ;;		_Train_Move_Left_Brake
 10985 ;;		_Train_Move_Right_Start
 10986 ;;		_Train_Move_Right_Brake
 10987 ;;		_SETxPWM
 10988 ;;		_INCRxAPIxVAL
 10989 ;;		_DECRxAPIxVAL
 10990 ;; This function uses a non-reentrant model
 10991 ;;
 10992                           
 10993                           	psect	text28
 10994  003AB8                     __ptext28:
 10995                           	opt stack 0
 10996  003AB8                     _SETxAPIxVAL:
 10997                           	opt stack 20
 10998                           
 10999                           ;incstack = 0
 11000                           ;SETxAPIxVAL@index stored from wreg
 11001  003AB8  0100               	movlb	0	; () banked
 11002  003ABA  6FB0               	movwf	SETxAPIxVAL@index& (0+255),b
 11003                           
 11004                           ;api.c: 196: if(API[index] != value){
 11005  003ABC  0100               	movlb	0	; () banked
 11006  003ABE  51B0               	movf	SETxAPIxVAL@index& (0+255),w,b
 11007  003AC0  0D02               	mullw	2
 11008  003AC2  0EFC               	movlw	low _API
 11009  003AC4  24F3               	addwf	prodl,w,c
 11010  003AC6  6ED9               	movwf	fsr2l,c
 11011  003AC8  0E01               	movlw	high _API
 11012  003ACA  20F4               	addwfc	prodh,w,c
 11013  003ACC  6EDA               	movwf	fsr2h,c
 11014  003ACE  0100               	movlb	0	; () banked
 11015  003AD0  51AC               	movf	SETxAPIxVAL@value& (0+255),w,b
 11016  003AD2  18DE               	xorwf	postinc2,w,c
 11017  003AD4  E105               	bnz	u6200
 11018  003AD6  0100               	movlb	0	; () banked
 11019  003AD8  51AD               	movf	(SETxAPIxVAL@value+1)& (0+255),w,b
 11020  003ADA  18DE               	xorwf	postinc2,w,c
 11021  003ADC  B4D8               	btfsc	status,2,c
 11022  003ADE  0012               	return	
 11023  003AE0                     u6200:
 11024                           
 11025                           ; BSR set to: 0
 11026                           ;api.c: 197: API[index] = value;
 11027  003AE0  0100               	movlb	0	; () banked
 11028  003AE2  51B0               	movf	SETxAPIxVAL@index& (0+255),w,b
 11029  003AE4  0D02               	mullw	2
 11030  003AE6  0EFC               	movlw	low _API
 11031  003AE8  24F3               	addwf	prodl,w,c
 11032  003AEA  6ED9               	movwf	fsr2l,c
 11033  003AEC  0E01               	movlw	high _API
 11034  003AEE  20F4               	addwfc	prodh,w,c
 11035  003AF0  6EDA               	movwf	fsr2h,c
 11036  003AF2  C0AC  FFDE         	movff	SETxAPIxVAL@value,postinc2
 11037  003AF6  C0AD  FFDD         	movff	SETxAPIxVAL@value+1,postdec2
 11038                           
 11039                           ; BSR set to: 0
 11040                           ;api.c: 198: SENDxMESSAGE(index, value);
 11041  003AFA  C0AC  F0A9         	movff	SETxAPIxVAL@value,SENDxMESSAGE@value
 11042  003AFE  C0AD  F0AA         	movff	SETxAPIxVAL@value+1,SENDxMESSAGE@value+1
 11043  003B02  0100               	movlb	0	; () banked
 11044  003B04  51B0               	movf	SETxAPIxVAL@index& (0+255),w,b
 11045  003B06  EC44  F01E         	call	_SENDxMESSAGE
 11046  003B0A  0012               	return	
 11047  003B0C                     __end_of_SETxAPIxVAL:
 11048                           	opt stack 0
 11049                           tblptru	equ	0xFF8
 11050                           tblptrh	equ	0xFF7
 11051                           tblptrl	equ	0xFF6
 11052                           tablat	equ	0xFF5
 11053                           prodh	equ	0xFF4
 11054                           prodl	equ	0xFF3
 11055                           intcon	equ	0xFF2
 11056                           intcon2	equ	0xFF1
 11057                           postinc0	equ	0xFEE
 11058                           wreg	equ	0xFE8
 11059                           postdec1	equ	0xFE5
 11060                           fsr1h	equ	0xFE2
 11061                           fsr1l	equ	0xFE1
 11062                           indf2	equ	0xFDF
 11063                           postinc2	equ	0xFDE
 11064                           postdec2	equ	0xFDD
 11065                           fsr2h	equ	0xFDA
 11066                           fsr2l	equ	0xFD9
 11067                           status	equ	0xFD8
 11068                           
 11069 ;; *************** function _SENDxMESSAGE *****************
 11070 ;; Defined at:
 11071 ;;		line 178 in file "../terminal.c"
 11072 ;; Parameters:    Size  Location     Type
 11073 ;;  index           1    wreg     unsigned char 
 11074 ;;  value           2   25[BANK0 ] unsigned int 
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;  index           1   27[BANK0 ] unsigned char 
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11086 ;;      Params:         0       2       0       0       0       0       0       0       0
 11087 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11088 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11089 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11090 ;;Total ram usage:        3 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:    5
 11093 ;; This function calls:
 11094 ;;		_printf
 11095 ;; This function is called by:
 11096 ;;		_TranslateMessage
 11097 ;;		_SETxAPIxVAL
 11098 ;;		_INCRxAPIxVAL
 11099 ;;		_DECRxAPIxVAL
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text29
 11104  003C88                     __ptext29:
 11105                           	opt stack 0
 11106  003C88                     _SENDxMESSAGE:
 11107                           	opt stack 20
 11108                           
 11109                           ;incstack = 0
 11110                           ;SENDxMESSAGE@index stored from wreg
 11111  003C88  0100               	movlb	0	; () banked
 11112  003C8A  6FAB               	movwf	SENDxMESSAGE@index& (0+255),b
 11113                           
 11114                           ;terminal.c: 184: printf("\r\nM#%d %d\r\n", index, value);
 11115  003C8C  0E0C               	movlw	low STR_9
 11116  003C8E  0100               	movlb	0	; () banked
 11117  003C90  6F9B               	movwf	printf@f& (0+255),b
 11118  003C92  0E08               	movlw	high STR_9
 11119  003C94  0100               	movlb	0	; () banked
 11120  003C96  6F9C               	movwf	(printf@f+1)& (0+255),b
 11121  003C98  C0AB  F09D         	movff	SENDxMESSAGE@index,?_printf+2
 11122  003C9C  0100               	movlb	0	; () banked
 11123  003C9E  6B9E               	clrf	(?_printf+3)& (0+255),b
 11124  003CA0  C0A9  F09F         	movff	SENDxMESSAGE@value,?_printf+4
 11125  003CA4  C0AA  F0A0         	movff	SENDxMESSAGE@value+1,?_printf+5
 11126  003CA8  EC4C  F014         	call	_printf	;wreg free
 11127  003CAC  0012               	return		;funcret
 11128  003CAE                     __end_of_SENDxMESSAGE:
 11129                           	opt stack 0
 11130                           tblptru	equ	0xFF8
 11131                           tblptrh	equ	0xFF7
 11132                           tblptrl	equ	0xFF6
 11133                           tablat	equ	0xFF5
 11134                           prodh	equ	0xFF4
 11135                           prodl	equ	0xFF3
 11136                           intcon	equ	0xFF2
 11137                           intcon2	equ	0xFF1
 11138                           postinc0	equ	0xFEE
 11139                           wreg	equ	0xFE8
 11140                           postdec1	equ	0xFE5
 11141                           fsr1h	equ	0xFE2
 11142                           fsr1l	equ	0xFE1
 11143                           indf2	equ	0xFDF
 11144                           postinc2	equ	0xFDE
 11145                           postdec2	equ	0xFDD
 11146                           fsr2h	equ	0xFDA
 11147                           fsr2l	equ	0xFD9
 11148                           status	equ	0xFD8
 11149                           
 11150 ;; *************** function _printf *****************
 11151 ;; Defined at:
 11152 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;  f               2   11[BANK0 ] PTR const unsigned char 
 11155 ;;		 -> STR_9(12), STR_8(9), STR_7(9), STR_6(9), 
 11156 ;;		 -> STR_5(9), STR_4(9), STR_3(9), STR_2(9), 
 11157 ;;		 -> STR_1(7), 
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;  tmpval          4    0        struct .
 11160 ;;  cp              3    0        PTR const unsigned char 
 11161 ;;  val             2   22[BANK0 ] unsigned int 
 11162 ;;  ap              2   18[BANK0 ] PTR void [1]
 11163 ;;		 -> ?_printf(2), 
 11164 ;;  len             2    0        unsigned int 
 11165 ;;  c               1   24[BANK0 ] char 
 11166 ;;  prec            1   21[BANK0 ] char 
 11167 ;;  flag            1   20[BANK0 ] unsigned char 
 11168 ;; Return value:  Size  Location     Type
 11169 ;;                  2   11[BANK0 ] int 
 11170 ;; Registers used:
 11171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11172 ;; Tracked objects:
 11173 ;;		On entry : 0/0
 11174 ;;		On exit  : 0/0
 11175 ;;		Unchanged: 0/0
 11176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11177 ;;      Params:         0       6       0       0       0       0       0       0       0
 11178 ;;      Locals:         0       7       0       0       0       0       0       0       0
 11179 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11180 ;;      Totals:         0      14       0       0       0       0       0       0       0
 11181 ;;Total ram usage:       14 bytes
 11182 ;; Hardware stack levels used:    1
 11183 ;; Hardware stack levels required when called:    4
 11184 ;; This function calls:
 11185 ;;		___lwdiv
 11186 ;;		___lwmod
 11187 ;;		_putch
 11188 ;; This function is called by:
 11189 ;;		_READxRECEIVEDxMESSAGE
 11190 ;;		_TranslateMessage
 11191 ;;		_SENDxMESSAGE
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195                           	psect	text30
 11196  002898                     __ptext30:
 11197                           	opt stack 0
 11198  002898                     _printf:
 11199                           	opt stack 20
 11200                           
 11201                           ;doprnt.c: 466: va_list ap;
 11202                           ;doprnt.c: 499: signed char c;
 11203                           ;doprnt.c: 506: signed char prec;
 11204                           ;doprnt.c: 508: unsigned char flag;
 11205                           ;doprnt.c: 523: union {
 11206                           ;doprnt.c: 524: unsigned long vd;
 11207                           ;doprnt.c: 525: double integ;
 11208                           ;doprnt.c: 526: } tmpval;
 11209                           ;doprnt.c: 528: unsigned int val;
 11210                           ;doprnt.c: 529: unsigned len;
 11211                           ;doprnt.c: 530: const char * cp;
 11212                           ;doprnt.c: 533: *ap = __va_start();
 11213                           
 11214                           ;incstack = 0
 11215  002898  0E9D               	movlw	low (?_printf+2)
 11216  00289A  0100               	movlb	0	; () banked
 11217  00289C  6FA2               	movwf	printf@ap& (0+255),b
 11218  00289E  0E00               	movlw	high (?_printf+2)
 11219  0028A0  0100               	movlb	0	; () banked
 11220  0028A2  6FA3               	movwf	(printf@ap+1)& (0+255),b
 11221                           
 11222                           ;doprnt.c: 536: while(c = *f++) {
 11223  0028A4  D094               	goto	l6695
 11224  0028A6                     l6649:
 11225                           
 11226                           ; BSR set to: 0
 11227                           ;doprnt.c: 538: if(c != '%')
 11228  0028A6  0E25               	movlw	37
 11229  0028A8  0100               	movlb	0	; () banked
 11230  0028AA  19A8               	xorwf	printf@c& (0+255),w,b
 11231  0028AC  B4D8               	btfsc	status,2,c
 11232  0028AE  D005               	goto	l6653
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;doprnt.c: 540: {
 11236                           ;doprnt.c: 541: (putch(c) );
 11237  0028B0  0100               	movlb	0	; () banked
 11238  0028B2  51A8               	movf	printf@c& (0+255),w,b
 11239  0028B4  EC91  F01E         	call	_putch
 11240                           
 11241                           ;doprnt.c: 542: continue;
 11242  0028B8  D08A               	goto	l6695
 11243  0028BA                     l6653:
 11244                           
 11245                           ;doprnt.c: 543: }
 11246                           ;doprnt.c: 548: flag = 0;
 11247  0028BA  0E00               	movlw	0
 11248  0028BC  0100               	movlb	0	; () banked
 11249  0028BE  6FA4               	movwf	printf@flag& (0+255),b
 11250                           
 11251                           ; BSR set to: 0
 11252                           
 11253                           ; BSR set to: 0
 11254                           
 11255                           ; BSR set to: 0
 11256                           ;doprnt.c: 822: }
 11257                           
 11258                           ; BSR set to: 0
 11259                           ;doprnt.c: 813: continue;
 11260                           
 11261                           ;doprnt.c: 802: default:
 11262                           
 11263                           ; BSR set to: 0
 11264                           ;doprnt.c: 698: case 'i':
 11265                           ;doprnt.c: 699: break;
 11266                           
 11267                           ; BSR set to: 0
 11268                           
 11269                           ;doprnt.c: 697: case 'd':
 11270                           
 11271                           ; BSR set to: 0
 11272                           ;doprnt.c: 638: goto alldone;
 11273                           
 11274                           ;doprnt.c: 637: case 0:
 11275                           
 11276                           ;doprnt.c: 635: switch(c = *f++) {
 11277  0028C0  C09B  FFF6         	movff	printf@f,tblptrl
 11278  0028C4  C09C  FFF7         	movff	printf@f+1,tblptrh
 11279  0028C8  0100               	movlb	0	; () banked
 11280  0028CA  4B9B               	infsnz	printf@f& (0+255),f,b
 11281  0028CC  2B9C               	incf	(printf@f+1)& (0+255),f,b
 11282  0028CE                     	if	0	;tblptru may be non-zero
 11283  0028CE                     	endif
 11284  0028CE                     	if	0	;tblptru may be non-zero
 11285  0028CE                     	endif
 11286  0028CE  0008               	tblrd		*
 11287  0028D0  CFF5 F0A8          	movff	tablat,printf@c
 11288  0028D4  0100               	movlb	0	; () banked
 11289  0028D6  51A8               	movf	printf@c& (0+255),w,b
 11290                           
 11291                           ; Switch size 1, requested type "space"
 11292                           ; Number of cases is 3, Range of values is 0 to 105
 11293                           ; switch strategies available:
 11294                           ; Name         Instructions Cycles
 11295                           ; simple_byte           10     6 (average)
 11296                           ;	Chosen strategy is simple_byte
 11297  0028D8  0A00               	xorlw	0	; case 0
 11298  0028DA  B4D8               	btfsc	status,2,c
 11299  0028DC  0012               	return	
 11300  0028DE  0A64               	xorlw	100	; case 100
 11301  0028E0  B4D8               	btfsc	status,2,c
 11302  0028E2  D003               	goto	l6659
 11303  0028E4  0A0D               	xorlw	13	; case 105
 11304  0028E6  A4D8               	btfss	status,2,c
 11305  0028E8  D072               	goto	l6695
 11306  0028EA                     l6659:
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;doprnt.c: 1253: {
 11310                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 11311  0028EA  C0A2  FFD9         	movff	printf@ap,fsr2l
 11312  0028EE  C0A3  FFDA         	movff	printf@ap+1,fsr2h
 11313  0028F2  CFDE F0A6          	movff	postinc2,printf@val
 11314  0028F6  CFDD F0A7          	movff	postdec2,printf@val+1
 11315                           
 11316                           ; BSR set to: 0
 11317  0028FA  0E02               	movlw	2
 11318  0028FC  0100               	movlb	0	; () banked
 11319  0028FE  27A2               	addwf	printf@ap& (0+255),f,b
 11320  002900  0E00               	movlw	0
 11321  002902  23A3               	addwfc	(printf@ap+1)& (0+255),f,b
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;doprnt.c: 1261: if((int)val < 0) {
 11325  002904  0100               	movlb	0	; () banked
 11326  002906  AFA7               	btfss	(printf@val+1)& (0+255),7,b
 11327  002908  D008               	goto	l6669
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;doprnt.c: 1262: flag |= 0x03;
 11331  00290A  0E03               	movlw	3
 11332  00290C  0100               	movlb	0	; () banked
 11333  00290E  13A4               	iorwf	printf@flag& (0+255),f,b
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;doprnt.c: 1263: val = -val;
 11337  002910  0100               	movlb	0	; () banked
 11338  002912  6DA6               	negf	printf@val& (0+255),b
 11339  002914  1FA7               	comf	(printf@val+1)& (0+255),f,b
 11340  002916  B0D8               	btfsc	status,0,c
 11341  002918  2BA7               	incf	(printf@val+1)& (0+255),f,b
 11342  00291A                     l6669:
 11343                           
 11344                           ; BSR set to: 0
 11345                           ;doprnt.c: 1264: }
 11346                           ;doprnt.c: 1266: }
 11347                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11348  00291A  0E01               	movlw	1
 11349  00291C  0100               	movlb	0	; () banked
 11350  00291E  6FA8               	movwf	printf@c& (0+255),b
 11351  002920                     l6671:
 11352                           
 11353                           ; BSR set to: 0
 11354  002920  0E05               	movlw	5
 11355  002922  0100               	movlb	0	; () banked
 11356  002924  19A8               	xorwf	printf@c& (0+255),w,b
 11357  002926  B4D8               	btfsc	status,2,c
 11358  002928  D016               	goto	l6683
 11359                           
 11360                           ; BSR set to: 0
 11361                           ;doprnt.c: 1306: if(val < dpowers[c])
 11362                           
 11363                           ; BSR set to: 0
 11364                           
 11365                           ; BSR set to: 0
 11366  00292A  0100               	movlb	0	; () banked
 11367  00292C  51A8               	movf	printf@c& (0+255),w,b
 11368  00292E  0D02               	mullw	2
 11369  002930  0E01               	movlw	low _dpowers
 11370  002932  24F3               	addwf	prodl,w,c
 11371  002934  6EF6               	movwf	tblptrl,c
 11372  002936  0E08               	movlw	high _dpowers
 11373  002938  20F4               	addwfc	prodh,w,c
 11374  00293A  6EF7               	movwf	tblptrh,c
 11375  00293C                     	if	0	;There are less than 3 active tblptr bytes
 11376  00293C                     	endif
 11377  00293C  0009               	tblrd		*+
 11378  00293E  50F5               	movf	tablat,w,c
 11379  002940  0100               	movlb	0	; () banked
 11380  002942  5DA6               	subwf	printf@val& (0+255),w,b
 11381  002944  0009               	tblrd		*+
 11382  002946  50F5               	movf	tablat,w,c
 11383  002948  0100               	movlb	0	; () banked
 11384  00294A  59A7               	subwfb	(printf@val+1)& (0+255),w,b
 11385  00294C  A0D8               	btfss	status,0,c
 11386  00294E  D003               	goto	l6683
 11387                           
 11388                           ; BSR set to: 0
 11389                           
 11390                           ; BSR set to: 0
 11391                           
 11392                           ; BSR set to: 0
 11393                           ;doprnt.c: 1307: break;
 11394  002950  0100               	movlb	0	; () banked
 11395  002952  2BA8               	incf	printf@c& (0+255),f,b
 11396  002954  D7E5               	goto	l6671
 11397  002956                     l6683:
 11398                           
 11399                           ; BSR set to: 0
 11400                           ;doprnt.c: 1422: {
 11401                           ;doprnt.c: 1438: if(flag & 0x03)
 11402  002956  C0A4  F0A1         	movff	printf@flag,??_printf
 11403  00295A  0E03               	movlw	3
 11404  00295C  0100               	movlb	0	; () banked
 11405  00295E  17A1               	andwf	??_printf& (0+255),f,b
 11406  002960  B4D8               	btfsc	status,2,c
 11407  002962  D003               	goto	l6687
 11408                           
 11409                           ; BSR set to: 0
 11410                           ;doprnt.c: 1439: (putch('-') );
 11411  002964  0E2D               	movlw	45
 11412  002966  EC91  F01E         	call	_putch
 11413  00296A                     l6687:
 11414                           
 11415                           ;doprnt.c: 1469: }
 11416                           ;doprnt.c: 1472: prec = c;
 11417  00296A  C0A8  F0A5         	movff	printf@c,printf@prec
 11418                           
 11419                           ;doprnt.c: 1474: while(prec--) {
 11420  00296E  D029               	goto	l6693
 11421  002970                     l6689:
 11422                           
 11423                           ;doprnt.c: 1478: {
 11424                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11425  002970  0100               	movlb	0	; () banked
 11426  002972  51A5               	movf	printf@prec& (0+255),w,b
 11427  002974  0D02               	mullw	2
 11428  002976  0E01               	movlw	low _dpowers
 11429  002978  24F3               	addwf	prodl,w,c
 11430  00297A  6EF6               	movwf	tblptrl,c
 11431  00297C  0E08               	movlw	high _dpowers
 11432  00297E  20F4               	addwfc	prodh,w,c
 11433  002980  6EF7               	movwf	tblptrh,c
 11434  002982                     	if	0	;There are less than 3 active tblptr bytes
 11435  002982                     	endif
 11436  002982  0009               	tblrd		*+
 11437  002984  CFF5 F092          	movff	tablat,___lwdiv@divisor
 11438  002988  000A               	tblrd		*-
 11439  00298A  CFF5 F093          	movff	tablat,___lwdiv@divisor+1
 11440  00298E  C0A6  F090         	movff	printf@val,___lwdiv@dividend
 11441  002992  C0A7  F091         	movff	printf@val+1,___lwdiv@dividend+1
 11442  002996  EC85  F01C         	call	___lwdiv	;wreg free
 11443  00299A  C090  F097         	movff	?___lwdiv,___lwmod@dividend
 11444  00299E  C091  F098         	movff	?___lwdiv+1,___lwmod@dividend+1
 11445  0029A2  0E00               	movlw	0
 11446  0029A4  0100               	movlb	0	; () banked
 11447  0029A6  6F9A               	movwf	(___lwmod@divisor+1)& (0+255),b
 11448  0029A8  0E0A               	movlw	10
 11449  0029AA  6F99               	movwf	___lwmod@divisor& (0+255),b
 11450  0029AC  EC2E  F01D         	call	___lwmod	;wreg free
 11451  0029B0  0100               	movlb	0	; () banked
 11452  0029B2  5197               	movf	?___lwmod& (0+255),w,b
 11453  0029B4  0F30               	addlw	48
 11454  0029B6  0100               	movlb	0	; () banked
 11455  0029B8  6FA8               	movwf	printf@c& (0+255),b
 11456                           
 11457                           ; BSR set to: 0
 11458                           ;doprnt.c: 1523: }
 11459                           ;doprnt.c: 1524: (putch(c) );
 11460  0029BA  0100               	movlb	0	; () banked
 11461  0029BC  51A8               	movf	printf@c& (0+255),w,b
 11462  0029BE  EC91  F01E         	call	_putch
 11463  0029C2                     l6693:
 11464  0029C2  0100               	movlb	0	; () banked
 11465  0029C4  07A5               	decf	printf@prec& (0+255),f,b
 11466  0029C6  0100               	movlb	0	; () banked
 11467  0029C8  29A5               	incf	printf@prec& (0+255),w,b
 11468  0029CA  A4D8               	btfss	status,2,c
 11469  0029CC  D7D1               	goto	l6689
 11470  0029CE                     l6695:
 11471  0029CE  C09B  FFF6         	movff	printf@f,tblptrl
 11472  0029D2  C09C  FFF7         	movff	printf@f+1,tblptrh
 11473  0029D6  0100               	movlb	0	; () banked
 11474  0029D8  4B9B               	infsnz	printf@f& (0+255),f,b
 11475  0029DA  2B9C               	incf	(printf@f+1)& (0+255),f,b
 11476  0029DC                     	if	0	;tblptru may be non-zero
 11477  0029DC                     	endif
 11478  0029DC                     	if	0	;tblptru may be non-zero
 11479  0029DC                     	endif
 11480  0029DC  0008               	tblrd		*
 11481  0029DE  CFF5 F0A8          	movff	tablat,printf@c
 11482  0029E2  0100               	movlb	0	; () banked
 11483  0029E4  51A8               	movf	printf@c& (0+255),w,b
 11484  0029E6  B4D8               	btfsc	status,2,c
 11485  0029E8  0012               	return	
 11486  0029EA  D75D               	goto	l6649
 11487  0029EC                     __end_of_printf:
 11488                           	opt stack 0
 11489                           tblptru	equ	0xFF8
 11490                           tblptrh	equ	0xFF7
 11491                           tblptrl	equ	0xFF6
 11492                           tablat	equ	0xFF5
 11493                           prodh	equ	0xFF4
 11494                           prodl	equ	0xFF3
 11495                           intcon	equ	0xFF2
 11496                           intcon2	equ	0xFF1
 11497                           postinc0	equ	0xFEE
 11498                           wreg	equ	0xFE8
 11499                           postdec1	equ	0xFE5
 11500                           fsr1h	equ	0xFE2
 11501                           fsr1l	equ	0xFE1
 11502                           indf2	equ	0xFDF
 11503                           postinc2	equ	0xFDE
 11504                           postdec2	equ	0xFDD
 11505                           fsr2h	equ	0xFDA
 11506                           fsr2l	equ	0xFD9
 11507                           status	equ	0xFD8
 11508                           
 11509 ;; *************** function _putch *****************
 11510 ;; Defined at:
 11511 ;;		line 177 in file "../eusart1.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  data            1    wreg     unsigned char 
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;  data            1   31[COMRAM] unsigned char 
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  1    wreg      void 
 11518 ;; Registers used:
 11519 ;;		wreg
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11525 ;;      Params:         0       0       0       0       0       0       0       0       0
 11526 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11528 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11529 ;;Total ram usage:        1 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; Hardware stack levels required when called:    3
 11532 ;; This function calls:
 11533 ;;		Nothing
 11534 ;; This function is called by:
 11535 ;;		_printf
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539                           	psect	text31
 11540  003D22                     __ptext31:
 11541                           	opt stack 0
 11542  003D22                     _putch:
 11543                           	opt stack 20
 11544                           
 11545                           ; BSR set to: 0
 11546                           ;incstack = 0
 11547                           ;putch@data stored from wreg
 11548  003D22  6E20               	movwf	putch@data,c
 11549  003D24                     l514:
 11550  003D24  A89E               	btfss	3998,4,c	;volatile
 11551  003D26  D7FE               	goto	l514
 11552                           
 11553                           ;eusart1.c: 180: TXREG1 = data;
 11554  003D28  C020  FFAD         	movff	putch@data,4013	;volatile
 11555  003D2C  0012               	return		;funcret
 11556  003D2E                     __end_of_putch:
 11557                           	opt stack 0
 11558                           tblptru	equ	0xFF8
 11559                           tblptrh	equ	0xFF7
 11560                           tblptrl	equ	0xFF6
 11561                           tablat	equ	0xFF5
 11562                           prodh	equ	0xFF4
 11563                           prodl	equ	0xFF3
 11564                           intcon	equ	0xFF2
 11565                           intcon2	equ	0xFF1
 11566                           postinc0	equ	0xFEE
 11567                           wreg	equ	0xFE8
 11568                           postdec1	equ	0xFE5
 11569                           fsr1h	equ	0xFE2
 11570                           fsr1l	equ	0xFE1
 11571                           indf2	equ	0xFDF
 11572                           postinc2	equ	0xFDE
 11573                           postdec2	equ	0xFDD
 11574                           fsr2h	equ	0xFDA
 11575                           fsr2l	equ	0xFD9
 11576                           status	equ	0xFD8
 11577                           
 11578 ;; *************** function ___lwmod *****************
 11579 ;; Defined at:
 11580 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;  dividend        2    7[BANK0 ] unsigned int 
 11583 ;;  divisor         2    9[BANK0 ] unsigned int 
 11584 ;; Auto vars:     Size  Location     Type
 11585 ;;  counter         1   31[COMRAM] unsigned char 
 11586 ;; Return value:  Size  Location     Type
 11587 ;;                  2    7[BANK0 ] unsigned int 
 11588 ;; Registers used:
 11589 ;;		wreg, status,2, status,0
 11590 ;; Tracked objects:
 11591 ;;		On entry : 0/0
 11592 ;;		On exit  : 0/0
 11593 ;;		Unchanged: 0/0
 11594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11595 ;;      Params:         0       4       0       0       0       0       0       0       0
 11596 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11597 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11598 ;;      Totals:         1       4       0       0       0       0       0       0       0
 11599 ;;Total ram usage:        5 bytes
 11600 ;; Hardware stack levels used:    1
 11601 ;; Hardware stack levels required when called:    3
 11602 ;; This function calls:
 11603 ;;		Nothing
 11604 ;; This function is called by:
 11605 ;;		_printf
 11606 ;; This function uses a non-reentrant model
 11607 ;;
 11608                           
 11609                           	psect	text32
 11610  003A5C                     __ptext32:
 11611                           	opt stack 0
 11612  003A5C                     ___lwmod:
 11613                           	opt stack 20
 11614                           
 11615                           ;incstack = 0
 11616  003A5C  0100               	movlb	0	; () banked
 11617  003A5E  5199               	movf	___lwmod@divisor& (0+255),w,b
 11618  003A60  0100               	movlb	0	; () banked
 11619  003A62  119A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 11620  003A64  B4D8               	btfsc	status,2,c
 11621  003A66  D023               	goto	l1620
 11622                           
 11623                           ; BSR set to: 0
 11624  003A68  0E01               	movlw	1
 11625  003A6A  6E20               	movwf	___lwmod@counter,c
 11626  003A6C  D005               	goto	l6637
 11627  003A6E                     l6635:
 11628                           
 11629                           ; BSR set to: 0
 11630  003A6E  0100               	movlb	0	; () banked
 11631  003A70  90D8               	bcf	status,0,c
 11632  003A72  3799               	rlcf	___lwmod@divisor& (0+255),f,b
 11633  003A74  379A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 11634  003A76  2A20               	incf	___lwmod@counter,f,c
 11635  003A78                     l6637:
 11636                           
 11637                           ; BSR set to: 0
 11638  003A78  0100               	movlb	0	; () banked
 11639  003A7A  AF9A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 11640  003A7C  D7F8               	goto	l6635
 11641  003A7E                     l6639:
 11642                           
 11643                           ; BSR set to: 0
 11644  003A7E  0100               	movlb	0	; () banked
 11645  003A80  5199               	movf	___lwmod@divisor& (0+255),w,b
 11646  003A82  0100               	movlb	0	; () banked
 11647  003A84  5D97               	subwf	___lwmod@dividend& (0+255),w,b
 11648  003A86  0100               	movlb	0	; () banked
 11649  003A88  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11650  003A8A  0100               	movlb	0	; () banked
 11651  003A8C  5998               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 11652  003A8E  A0D8               	btfss	status,0,c
 11653  003A90  D008               	goto	l6643
 11654                           
 11655                           ; BSR set to: 0
 11656  003A92  0100               	movlb	0	; () banked
 11657  003A94  5199               	movf	___lwmod@divisor& (0+255),w,b
 11658  003A96  0100               	movlb	0	; () banked
 11659  003A98  5F97               	subwf	___lwmod@dividend& (0+255),f,b
 11660  003A9A  0100               	movlb	0	; () banked
 11661  003A9C  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11662  003A9E  0100               	movlb	0	; () banked
 11663  003AA0  5B98               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 11664  003AA2                     l6643:
 11665                           
 11666                           ; BSR set to: 0
 11667  003AA2  0100               	movlb	0	; () banked
 11668  003AA4  90D8               	bcf	status,0,c
 11669  003AA6  339A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 11670  003AA8  3399               	rrcf	___lwmod@divisor& (0+255),f,b
 11671                           
 11672                           ; BSR set to: 0
 11673  003AAA  2E20               	decfsz	___lwmod@counter,f,c
 11674  003AAC  D7E8               	goto	l6639
 11675  003AAE                     l1620:
 11676                           
 11677                           ; BSR set to: 0
 11678  003AAE  C097  F097         	movff	___lwmod@dividend,?___lwmod
 11679  003AB2  C098  F098         	movff	___lwmod@dividend+1,?___lwmod+1
 11680                           
 11681                           ; BSR set to: 0
 11682  003AB6  0012               	return		;funcret
 11683  003AB8                     __end_of___lwmod:
 11684                           	opt stack 0
 11685                           tblptru	equ	0xFF8
 11686                           tblptrh	equ	0xFF7
 11687                           tblptrl	equ	0xFF6
 11688                           tablat	equ	0xFF5
 11689                           prodh	equ	0xFF4
 11690                           prodl	equ	0xFF3
 11691                           intcon	equ	0xFF2
 11692                           intcon2	equ	0xFF1
 11693                           postinc0	equ	0xFEE
 11694                           wreg	equ	0xFE8
 11695                           postdec1	equ	0xFE5
 11696                           fsr1h	equ	0xFE2
 11697                           fsr1l	equ	0xFE1
 11698                           indf2	equ	0xFDF
 11699                           postinc2	equ	0xFDE
 11700                           postdec2	equ	0xFDD
 11701                           fsr2h	equ	0xFDA
 11702                           fsr2l	equ	0xFD9
 11703                           status	equ	0xFD8
 11704                           
 11705 ;; *************** function ___lwdiv *****************
 11706 ;; Defined at:
 11707 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 11708 ;; Parameters:    Size  Location     Type
 11709 ;;  dividend        2    0[BANK0 ] unsigned int 
 11710 ;;  divisor         2    2[BANK0 ] unsigned int 
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;  quotient        2    5[BANK0 ] unsigned int 
 11713 ;;  counter         1    4[BANK0 ] unsigned char 
 11714 ;; Return value:  Size  Location     Type
 11715 ;;                  2    0[BANK0 ] unsigned int 
 11716 ;; Registers used:
 11717 ;;		wreg, status,2, status,0
 11718 ;; Tracked objects:
 11719 ;;		On entry : 0/0
 11720 ;;		On exit  : 0/0
 11721 ;;		Unchanged: 0/0
 11722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11723 ;;      Params:         0       4       0       0       0       0       0       0       0
 11724 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11725 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11726 ;;      Totals:         0       7       0       0       0       0       0       0       0
 11727 ;;Total ram usage:        7 bytes
 11728 ;; Hardware stack levels used:    1
 11729 ;; Hardware stack levels required when called:    3
 11730 ;; This function calls:
 11731 ;;		Nothing
 11732 ;; This function is called by:
 11733 ;;		_printf
 11734 ;; This function uses a non-reentrant model
 11735 ;;
 11736                           
 11737                           	psect	text33
 11738  00390A                     __ptext33:
 11739                           	opt stack 0
 11740  00390A                     ___lwdiv:
 11741                           	opt stack 20
 11742                           
 11743                           ; BSR set to: 0
 11744                           ;incstack = 0
 11745  00390A  0E00               	movlw	0
 11746  00390C  0100               	movlb	0	; () banked
 11747  00390E  6F96               	movwf	(___lwdiv@quotient+1)& (0+255),b
 11748  003910  0E00               	movlw	0
 11749  003912  6F95               	movwf	___lwdiv@quotient& (0+255),b
 11750                           
 11751                           ; BSR set to: 0
 11752  003914  0100               	movlb	0	; () banked
 11753  003916  5192               	movf	___lwdiv@divisor& (0+255),w,b
 11754  003918  0100               	movlb	0	; () banked
 11755  00391A  1193               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 11756  00391C  B4D8               	btfsc	status,2,c
 11757  00391E  D02C               	goto	l1610
 11758                           
 11759                           ; BSR set to: 0
 11760  003920  0E01               	movlw	1
 11761  003922  0100               	movlb	0	; () banked
 11762  003924  6F94               	movwf	___lwdiv@counter& (0+255),b
 11763  003926  D006               	goto	l6617
 11764  003928                     l6615:
 11765                           
 11766                           ; BSR set to: 0
 11767  003928  0100               	movlb	0	; () banked
 11768  00392A  90D8               	bcf	status,0,c
 11769  00392C  3792               	rlcf	___lwdiv@divisor& (0+255),f,b
 11770  00392E  3793               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 11771  003930  0100               	movlb	0	; () banked
 11772  003932  2B94               	incf	___lwdiv@counter& (0+255),f,b
 11773  003934                     l6617:
 11774                           
 11775                           ; BSR set to: 0
 11776  003934  0100               	movlb	0	; () banked
 11777  003936  AF93               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 11778  003938  D7F7               	goto	l6615
 11779  00393A                     l6619:
 11780                           
 11781                           ; BSR set to: 0
 11782  00393A  0100               	movlb	0	; () banked
 11783  00393C  90D8               	bcf	status,0,c
 11784  00393E  3795               	rlcf	___lwdiv@quotient& (0+255),f,b
 11785  003940  3796               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 11786                           
 11787                           ; BSR set to: 0
 11788  003942  0100               	movlb	0	; () banked
 11789  003944  5192               	movf	___lwdiv@divisor& (0+255),w,b
 11790  003946  0100               	movlb	0	; () banked
 11791  003948  5D90               	subwf	___lwdiv@dividend& (0+255),w,b
 11792  00394A  0100               	movlb	0	; () banked
 11793  00394C  5193               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11794  00394E  0100               	movlb	0	; () banked
 11795  003950  5991               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 11796  003952  A0D8               	btfss	status,0,c
 11797  003954  D00A               	goto	l6627
 11798                           
 11799                           ; BSR set to: 0
 11800  003956  0100               	movlb	0	; () banked
 11801  003958  5192               	movf	___lwdiv@divisor& (0+255),w,b
 11802  00395A  0100               	movlb	0	; () banked
 11803  00395C  5F90               	subwf	___lwdiv@dividend& (0+255),f,b
 11804  00395E  0100               	movlb	0	; () banked
 11805  003960  5193               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11806  003962  0100               	movlb	0	; () banked
 11807  003964  5B91               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 11808                           
 11809                           ; BSR set to: 0
 11810  003966  0100               	movlb	0	; () banked
 11811  003968  8195               	bsf	___lwdiv@quotient& (0+255),0,b
 11812  00396A                     l6627:
 11813                           
 11814                           ; BSR set to: 0
 11815  00396A  0100               	movlb	0	; () banked
 11816  00396C  90D8               	bcf	status,0,c
 11817  00396E  3393               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 11818  003970  3392               	rrcf	___lwdiv@divisor& (0+255),f,b
 11819                           
 11820                           ; BSR set to: 0
 11821  003972  0100               	movlb	0	; () banked
 11822  003974  2F94               	decfsz	___lwdiv@counter& (0+255),f,b
 11823  003976  D7E1               	goto	l6619
 11824  003978                     l1610:
 11825                           
 11826                           ; BSR set to: 0
 11827  003978  C095  F090         	movff	___lwdiv@quotient,?___lwdiv
 11828  00397C  C096  F091         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11829                           
 11830                           ; BSR set to: 0
 11831  003980  0012               	return		;funcret
 11832  003982                     __end_of___lwdiv:
 11833                           	opt stack 0
 11834                           tblptru	equ	0xFF8
 11835                           tblptrh	equ	0xFF7
 11836                           tblptrl	equ	0xFF6
 11837                           tablat	equ	0xFF5
 11838                           prodh	equ	0xFF4
 11839                           prodl	equ	0xFF3
 11840                           intcon	equ	0xFF2
 11841                           intcon2	equ	0xFF1
 11842                           postinc0	equ	0xFEE
 11843                           wreg	equ	0xFE8
 11844                           postdec1	equ	0xFE5
 11845                           fsr1h	equ	0xFE2
 11846                           fsr1l	equ	0xFE1
 11847                           indf2	equ	0xFDF
 11848                           postinc2	equ	0xFDE
 11849                           postdec2	equ	0xFDD
 11850                           fsr2h	equ	0xFDA
 11851                           fsr2l	equ	0xFD9
 11852                           status	equ	0xFD8
 11853                           
 11854 ;; *************** function _EUSART1_Initialize *****************
 11855 ;; Defined at:
 11856 ;;		line 77 in file "../eusart1.c"
 11857 ;; Parameters:    Size  Location     Type
 11858 ;;		None
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;  baud_rate       2    0[BANK0 ] unsigned int 
 11861 ;; Return value:  Size  Location     Type
 11862 ;;                  1    wreg      void 
 11863 ;; Registers used:
 11864 ;;		wreg, status,2
 11865 ;; Tracked objects:
 11866 ;;		On entry : 0/0
 11867 ;;		On exit  : 0/0
 11868 ;;		Unchanged: 0/0
 11869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11870 ;;      Params:         0       0       0       0       0       0       0       0       0
 11871 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11872 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11873 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11874 ;;Total ram usage:        2 bytes
 11875 ;; Hardware stack levels used:    1
 11876 ;; Hardware stack levels required when called:    3
 11877 ;; This function calls:
 11878 ;;		Nothing
 11879 ;; This function is called by:
 11880 ;;		_main
 11881 ;; This function uses a non-reentrant model
 11882 ;;
 11883                           
 11884                           	psect	text34
 11885  003B0C                     __ptext34:
 11886                           	opt stack 0
 11887  003B0C                     _EUSART1_Initialize:
 11888                           	opt stack 27
 11889                           
 11890                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
 11891                           
 11892                           ; BSR set to: 0
 11893                           ;incstack = 0
 11894  003B0C  9A9D               	bcf	3997,5,c	;volatile
 11895                           
 11896                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
 11897  003B0E  989D               	bcf	3997,4,c	;volatile
 11898                           
 11899                           ;eusart1.c: 84: BAUDCONbits.BRG16 = 1;
 11900  003B10  86B8               	bsf	4024,3,c	;volatile
 11901                           
 11902                           ;eusart1.c: 86: RCSTAbits.SPEN = 1;
 11903  003B12  8EAB               	bsf	4011,7,c	;volatile
 11904                           
 11905                           ;eusart1.c: 87: RCSTAbits.RX9 = 0;
 11906  003B14  9CAB               	bcf	4011,6,c	;volatile
 11907                           
 11908                           ;eusart1.c: 88: RCSTAbits.CREN = 1;
 11909  003B16  88AB               	bsf	4011,4,c	;volatile
 11910                           
 11911                           ;eusart1.c: 89: RCSTAbits.ADDEN = 0;
 11912  003B18  96AB               	bcf	4011,3,c	;volatile
 11913                           
 11914                           ;eusart1.c: 91: TXSTAbits.TX9 = 0;
 11915  003B1A  9CAC               	bcf	4012,6,c	;volatile
 11916                           
 11917                           ;eusart1.c: 92: TXSTAbits.TXEN = 1;
 11918  003B1C  8AAC               	bsf	4012,5,c	;volatile
 11919                           
 11920                           ;eusart1.c: 93: TXSTAbits.SYNC = 0;
 11921  003B1E  98AC               	bcf	4012,4,c	;volatile
 11922                           
 11923                           ;eusart1.c: 94: TXSTAbits.SENDB = 0;
 11924  003B20  96AC               	bcf	4012,3,c	;volatile
 11925                           
 11926                           ;eusart1.c: 95: TXSTAbits.BRGH = 1;
 11927  003B22  84AC               	bsf	4012,2,c	;volatile
 11928                           
 11929                           ;eusart1.c: 96: TXSTAbits.TRMT = 1;
 11930  003B24  82AC               	bsf	4012,1,c	;volatile
 11931                           
 11932                           ;eusart1.c: 97: TXSTAbits.TX9D = 0;
 11933  003B26  90AC               	bcf	4012,0,c	;volatile
 11934                           
 11935                           ;eusart1.c: 99: unsigned int baud_rate;
 11936                           ;eusart1.c: 101: baud_rate = 417;
 11937  003B28  0E01               	movlw	1
 11938  003B2A  0100               	movlb	0	; () banked
 11939  003B2C  6F91               	movwf	(EUSART1_Initialize@baud_rate+1)& (0+255),b
 11940  003B2E  0EA1               	movlw	161
 11941  003B30  6F90               	movwf	EUSART1_Initialize@baud_rate& (0+255),b
 11942                           
 11943                           ;eusart1.c: 103: SPBRGH = baud_rate >> 8;
 11944  003B32  0100               	movlb	0	; () banked
 11945  003B34  5191               	movf	(EUSART1_Initialize@baud_rate+1)& (0+255),w,b
 11946  003B36  6EB0               	movwf	4016,c	;volatile
 11947                           
 11948                           ; BSR set to: 0
 11949                           ;eusart1.c: 104: SPBRG = baud_rate;
 11950  003B38  C090  FFAF         	movff	EUSART1_Initialize@baud_rate,4015	;volatile
 11951                           
 11952                           ;eusart1.c: 108: eusart1TxHead = 0;
 11953  003B3C  0E00               	movlw	0
 11954  003B3E  6E3E               	movwf	_eusart1TxHead,c
 11955                           
 11956                           ;eusart1.c: 109: eusart1TxTail = 0;
 11957  003B40  0E00               	movlw	0
 11958  003B42  6E3F               	movwf	_eusart1TxTail,c
 11959                           
 11960                           ;eusart1.c: 110: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
 11961  003B44  0E7E               	movlw	126
 11962  003B46  6E3D               	movwf	_eusart1TxBufferRemaining,c	;volatile
 11963                           
 11964                           ;eusart1.c: 112: eusart1RxHead = 0;
 11965  003B48  0E00               	movlw	0
 11966  003B4A  6E3B               	movwf	_eusart1RxHead,c
 11967                           
 11968                           ;eusart1.c: 113: eusart1RxTail = 0;
 11969  003B4C  0E00               	movlw	0
 11970  003B4E  6E3C               	movwf	_eusart1RxTail,c
 11971                           
 11972                           ;eusart1.c: 114: eusart1RxCount = 0;
 11973  003B50  0E00               	movlw	0
 11974  003B52  6E3A               	movwf	_eusart1RxCount,c	;volatile
 11975                           
 11976                           ; BSR set to: 0
 11977                           ;eusart1.c: 117: PIE1bits.RC1IE = 1;
 11978  003B54  8A9D               	bsf	3997,5,c	;volatile
 11979                           
 11980                           ; BSR set to: 0
 11981  003B56  0012               	return		;funcret
 11982  003B58                     __end_of_EUSART1_Initialize:
 11983                           	opt stack 0
 11984                           tblptru	equ	0xFF8
 11985                           tblptrh	equ	0xFF7
 11986                           tblptrl	equ	0xFF6
 11987                           tablat	equ	0xFF5
 11988                           prodh	equ	0xFF4
 11989                           prodl	equ	0xFF3
 11990                           intcon	equ	0xFF2
 11991                           intcon2	equ	0xFF1
 11992                           postinc0	equ	0xFEE
 11993                           wreg	equ	0xFE8
 11994                           postdec1	equ	0xFE5
 11995                           fsr1h	equ	0xFE2
 11996                           fsr1l	equ	0xFE1
 11997                           indf2	equ	0xFDF
 11998                           postinc2	equ	0xFDE
 11999                           postdec2	equ	0xFDD
 12000                           fsr2h	equ	0xFDA
 12001                           fsr2l	equ	0xFD9
 12002                           status	equ	0xFD8
 12003                           
 12004 ;; *************** function _APIxInitialize *****************
 12005 ;; Defined at:
 12006 ;;		line 32 in file "../api.c"
 12007 ;; Parameters:    Size  Location     Type
 12008 ;;		None
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;  i               2    0[BANK0 ] unsigned int 
 12011 ;; Return value:  Size  Location     Type
 12012 ;;                  1    wreg      void 
 12013 ;; Registers used:
 12014 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12015 ;; Tracked objects:
 12016 ;;		On entry : 0/0
 12017 ;;		On exit  : 0/0
 12018 ;;		Unchanged: 0/0
 12019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12020 ;;      Params:         0       0       0       0       0       0       0       0       0
 12021 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12022 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12023 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12024 ;;Total ram usage:        2 bytes
 12025 ;; Hardware stack levels used:    1
 12026 ;; Hardware stack levels required when called:    3
 12027 ;; This function calls:
 12028 ;;		Nothing
 12029 ;; This function is called by:
 12030 ;;		_main
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           	psect	text35
 12035  001B96                     __ptext35:
 12036                           	opt stack 0
 12037  001B96                     _APIxInitialize:
 12038                           	opt stack 27
 12039                           
 12040                           ;api.c: 34: unsigned int i;
 12041                           ;api.c: 35: for(i = 0; i < (0x90 + 1); i++ )
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;incstack = 0
 12045  001B96  0E00               	movlw	0
 12046  001B98  0100               	movlb	0	; () banked
 12047  001B9A  6F91               	movwf	(APIxInitialize@i+1)& (0+255),b
 12048  001B9C  0E00               	movlw	0
 12049  001B9E  6F90               	movwf	APIxInitialize@i& (0+255),b
 12050                           
 12051                           ; BSR set to: 0
 12052  001BA0  0100               	movlb	0	; () banked
 12053  001BA2  5191               	movf	(APIxInitialize@i+1)& (0+255),w,b
 12054  001BA4  E12A               	bnz	l622
 12055  001BA6  0E91               	movlw	145
 12056  001BA8  0100               	movlb	0	; () banked
 12057  001BAA  5D90               	subwf	APIxInitialize@i& (0+255),w,b
 12058  001BAC  B0D8               	btfsc	status,0,c
 12059  001BAE  D025               	goto	l622
 12060                           
 12061                           ; BSR set to: 0
 12062                           ;api.c: 36: {
 12063                           ;api.c: 37: API_RW[i] = 0;
 12064                           
 12065                           ; BSR set to: 0
 12066                           
 12067                           ; BSR set to: 0
 12068  001BB0  90D8               	bcf	status,0,c
 12069  001BB2  0100               	movlb	0	; () banked
 12070  001BB4  3590               	rlcf	APIxInitialize@i& (0+255),w,b
 12071  001BB6  6ED9               	movwf	fsr2l,c
 12072  001BB8  0100               	movlb	0	; () banked
 12073  001BBA  3591               	rlcf	(APIxInitialize@i+1)& (0+255),w,b
 12074  001BBC  6EDA               	movwf	fsr2h,c
 12075  001BBE  0E1C               	movlw	low _API_RW
 12076  001BC0  26D9               	addwf	fsr2l,f,c
 12077  001BC2  0E03               	movlw	high _API_RW
 12078  001BC4  22DA               	addwfc	fsr2h,f,c
 12079  001BC6  0E00               	movlw	0
 12080  001BC8  6EDE               	movwf	postinc2,c
 12081  001BCA  0E00               	movlw	0
 12082  001BCC  6EDD               	movwf	postdec2,c
 12083                           
 12084                           ;api.c: 38: API[i] = 0;
 12085  001BCE  90D8               	bcf	status,0,c
 12086  001BD0  0100               	movlb	0	; () banked
 12087  001BD2  3590               	rlcf	APIxInitialize@i& (0+255),w,b
 12088  001BD4  6ED9               	movwf	fsr2l,c
 12089  001BD6  0100               	movlb	0	; () banked
 12090  001BD8  3591               	rlcf	(APIxInitialize@i+1)& (0+255),w,b
 12091  001BDA  6EDA               	movwf	fsr2h,c
 12092  001BDC  0EFC               	movlw	low _API
 12093  001BDE  26D9               	addwf	fsr2l,f,c
 12094  001BE0  0E01               	movlw	high _API
 12095  001BE2  22DA               	addwfc	fsr2h,f,c
 12096  001BE4  0E00               	movlw	0
 12097  001BE6  6EDE               	movwf	postinc2,c
 12098  001BE8  0E00               	movlw	0
 12099  001BEA  6EDD               	movwf	postdec2,c
 12100                           
 12101                           ; BSR set to: 0
 12102  001BEC  0100               	movlb	0	; () banked
 12103  001BEE  4B90               	infsnz	APIxInitialize@i& (0+255),f,b
 12104  001BF0  2B91               	incf	(APIxInitialize@i+1)& (0+255),f,b
 12105                           
 12106                           ; BSR set to: 0
 12107  001BF2  0100               	movlb	0	; () banked
 12108  001BF4  5191               	movf	(APIxInitialize@i+1)& (0+255),w,b
 12109  001BF6  E101               	bnz	u7910
 12110  001BF8  D7D6               	goto	L92
 12111  001BFA                     u7910:
 12112  001BFA                     l622:
 12113                           
 12114                           ; BSR set to: 0
 12115                           ;api.c: 39: }
 12116                           ;api.c: 42: API_RW[16] = 0;
 12117  001BFA  0E00               	movlw	0
 12118  001BFC  CFE8 F33C          	movff	wreg,_API_RW+32
 12119  001C00  0E00               	movlw	0
 12120  001C02  CFE8 F33D          	movff	wreg,_API_RW+33
 12121                           
 12122                           ;api.c: 43: API_RW[18] = 1;
 12123  001C06  0E01               	movlw	1
 12124  001C08  CFE8 F340          	movff	wreg,_API_RW+36
 12125  001C0C  0E00               	movlw	0
 12126  001C0E  CFE8 F341          	movff	wreg,_API_RW+37
 12127                           
 12128                           ;api.c: 44: API_RW[19] = 1;
 12129  001C12  0E01               	movlw	1
 12130  001C14  CFE8 F342          	movff	wreg,_API_RW+38
 12131  001C18  0E00               	movlw	0
 12132  001C1A  CFE8 F343          	movff	wreg,_API_RW+39
 12133                           
 12134                           ;api.c: 45: API_RW[20] = 1;
 12135  001C1E  0E01               	movlw	1
 12136  001C20  CFE8 F344          	movff	wreg,_API_RW+40
 12137  001C24  0E00               	movlw	0
 12138  001C26  CFE8 F345          	movff	wreg,_API_RW+41
 12139                           
 12140                           ;api.c: 46: API_RW[21] = 1;
 12141  001C2A  0E01               	movlw	1
 12142  001C2C  CFE8 F346          	movff	wreg,_API_RW+42
 12143  001C30  0E00               	movlw	0
 12144  001C32  CFE8 F347          	movff	wreg,_API_RW+43
 12145                           
 12146                           ;api.c: 47: API_RW[22] = 1;
 12147  001C36  0E01               	movlw	1
 12148  001C38  CFE8 F348          	movff	wreg,_API_RW+44
 12149  001C3C  0E00               	movlw	0
 12150  001C3E  CFE8 F349          	movff	wreg,_API_RW+45
 12151                           
 12152                           ;api.c: 48: API_RW[23] = 1;
 12153  001C42  0E01               	movlw	1
 12154  001C44  CFE8 F34A          	movff	wreg,_API_RW+46
 12155  001C48  0E00               	movlw	0
 12156  001C4A  CFE8 F34B          	movff	wreg,_API_RW+47
 12157                           
 12158                           ;api.c: 49: API_RW[24] = 1;
 12159  001C4E  0E01               	movlw	1
 12160  001C50  CFE8 F34C          	movff	wreg,_API_RW+48
 12161  001C54  0E00               	movlw	0
 12162  001C56  CFE8 F34D          	movff	wreg,_API_RW+49
 12163                           
 12164                           ;api.c: 50: API_RW[25] = 1;
 12165  001C5A  0E01               	movlw	1
 12166  001C5C  CFE8 F34E          	movff	wreg,_API_RW+50
 12167  001C60  0E00               	movlw	0
 12168  001C62  CFE8 F34F          	movff	wreg,_API_RW+51
 12169                           
 12170                           ;api.c: 51: API_RW[26] = 1;
 12171  001C66  0E01               	movlw	1
 12172  001C68  CFE8 F350          	movff	wreg,_API_RW+52
 12173  001C6C  0E00               	movlw	0
 12174  001C6E  CFE8 F351          	movff	wreg,_API_RW+53
 12175                           
 12176                           ;api.c: 52: API_RW[27] = 1;
 12177  001C72  0E01               	movlw	1
 12178  001C74  CFE8 F352          	movff	wreg,_API_RW+54
 12179  001C78  0E00               	movlw	0
 12180  001C7A  CFE8 F353          	movff	wreg,_API_RW+55
 12181                           
 12182                           ;api.c: 53: API_RW[28] = 0;
 12183  001C7E  0E00               	movlw	0
 12184  001C80  CFE8 F354          	movff	wreg,_API_RW+56
 12185  001C84  0E00               	movlw	0
 12186  001C86  CFE8 F355          	movff	wreg,_API_RW+57
 12187                           
 12188                           ;api.c: 54: API_RW[29] = 0;
 12189  001C8A  0E00               	movlw	0
 12190  001C8C  CFE8 F356          	movff	wreg,_API_RW+58
 12191  001C90  0E00               	movlw	0
 12192  001C92  CFE8 F357          	movff	wreg,_API_RW+59
 12193                           
 12194                           ;api.c: 55: API_RW[30] = 0;
 12195  001C96  0E00               	movlw	0
 12196  001C98  CFE8 F358          	movff	wreg,_API_RW+60
 12197  001C9C  0E00               	movlw	0
 12198  001C9E  CFE8 F359          	movff	wreg,_API_RW+61
 12199                           
 12200                           ;api.c: 56: API_RW[31] = 0;
 12201  001CA2  0E00               	movlw	0
 12202  001CA4  CFE8 F35A          	movff	wreg,_API_RW+62
 12203  001CA8  0E00               	movlw	0
 12204  001CAA  CFE8 F35B          	movff	wreg,_API_RW+63
 12205                           
 12206                           ;api.c: 57: API_RW[32] = 0;
 12207  001CAE  0E00               	movlw	0
 12208  001CB0  CFE8 F35C          	movff	wreg,_API_RW+64
 12209  001CB4  0E00               	movlw	0
 12210  001CB6  CFE8 F35D          	movff	wreg,_API_RW+65
 12211                           
 12212                           ;api.c: 58: API_RW[33] = 0;
 12213  001CBA  0E00               	movlw	0
 12214  001CBC  CFE8 F35E          	movff	wreg,_API_RW+66
 12215  001CC0  0E00               	movlw	0
 12216  001CC2  CFE8 F35F          	movff	wreg,_API_RW+67
 12217                           
 12218                           ;api.c: 59: API_RW[34] = 0;
 12219  001CC6  0E00               	movlw	0
 12220  001CC8  CFE8 F360          	movff	wreg,_API_RW+68
 12221  001CCC  0E00               	movlw	0
 12222  001CCE  CFE8 F361          	movff	wreg,_API_RW+69
 12223                           
 12224                           ;api.c: 60: API_RW[35] = 0;
 12225  001CD2  0E00               	movlw	0
 12226  001CD4  CFE8 F362          	movff	wreg,_API_RW+70
 12227  001CD8  0E00               	movlw	0
 12228  001CDA  CFE8 F363          	movff	wreg,_API_RW+71
 12229                           
 12230                           ;api.c: 61: API_RW[36] = 0;
 12231  001CDE  0E00               	movlw	0
 12232  001CE0  CFE8 F364          	movff	wreg,_API_RW+72
 12233  001CE4  0E00               	movlw	0
 12234  001CE6  CFE8 F365          	movff	wreg,_API_RW+73
 12235                           
 12236                           ;api.c: 62: API_RW[37] = 0;
 12237  001CEA  0E00               	movlw	0
 12238  001CEC  CFE8 F366          	movff	wreg,_API_RW+74
 12239  001CF0  0E00               	movlw	0
 12240  001CF2  CFE8 F367          	movff	wreg,_API_RW+75
 12241                           
 12242                           ;api.c: 63: API_RW[38] = 0;
 12243  001CF6  0E00               	movlw	0
 12244  001CF8  CFE8 F368          	movff	wreg,_API_RW+76
 12245  001CFC  0E00               	movlw	0
 12246  001CFE  CFE8 F369          	movff	wreg,_API_RW+77
 12247                           
 12248                           ;api.c: 64: API_RW[39] = 1;
 12249  001D02  0E01               	movlw	1
 12250  001D04  CFE8 F36A          	movff	wreg,_API_RW+78
 12251  001D08  0E00               	movlw	0
 12252  001D0A  CFE8 F36B          	movff	wreg,_API_RW+79
 12253                           
 12254                           ;api.c: 65: API_RW[40] = 1;
 12255  001D0E  0E01               	movlw	1
 12256  001D10  CFE8 F36C          	movff	wreg,_API_RW+80
 12257  001D14  0E00               	movlw	0
 12258  001D16  CFE8 F36D          	movff	wreg,_API_RW+81
 12259                           
 12260                           ;api.c: 66: API_RW[41] = 0;
 12261  001D1A  0E00               	movlw	0
 12262  001D1C  CFE8 F36E          	movff	wreg,_API_RW+82
 12263  001D20  0E00               	movlw	0
 12264  001D22  CFE8 F36F          	movff	wreg,_API_RW+83
 12265                           
 12266                           ;api.c: 67: API_RW[42] = 0;
 12267  001D26  0E00               	movlw	0
 12268  001D28  CFE8 F370          	movff	wreg,_API_RW+84
 12269  001D2C  0E00               	movlw	0
 12270  001D2E  CFE8 F371          	movff	wreg,_API_RW+85
 12271                           
 12272                           ;api.c: 68: API_RW[43] = 0;
 12273  001D32  0E00               	movlw	0
 12274  001D34  CFE8 F372          	movff	wreg,_API_RW+86
 12275  001D38  0E00               	movlw	0
 12276  001D3A  CFE8 F373          	movff	wreg,_API_RW+87
 12277                           
 12278                           ;api.c: 69: API_RW[44] = 0;
 12279  001D3E  0E00               	movlw	0
 12280  001D40  CFE8 F374          	movff	wreg,_API_RW+88
 12281  001D44  0E00               	movlw	0
 12282  001D46  CFE8 F375          	movff	wreg,_API_RW+89
 12283                           
 12284                           ;api.c: 70: API_RW[45] = 1;
 12285  001D4A  0E01               	movlw	1
 12286  001D4C  CFE8 F376          	movff	wreg,_API_RW+90
 12287  001D50  0E00               	movlw	0
 12288  001D52  CFE8 F377          	movff	wreg,_API_RW+91
 12289                           
 12290                           ;api.c: 71: API_RW[46] = 1;
 12291  001D56  0E01               	movlw	1
 12292  001D58  CFE8 F378          	movff	wreg,_API_RW+92
 12293  001D5C  0E00               	movlw	0
 12294  001D5E  CFE8 F379          	movff	wreg,_API_RW+93
 12295                           
 12296                           ;api.c: 72: API_RW[47] = 1;
 12297  001D62  0E01               	movlw	1
 12298  001D64  CFE8 F37A          	movff	wreg,_API_RW+94
 12299  001D68  0E00               	movlw	0
 12300  001D6A  CFE8 F37B          	movff	wreg,_API_RW+95
 12301                           
 12302                           ;api.c: 73: API_RW[48] = 1;
 12303  001D6E  0E01               	movlw	1
 12304  001D70  CFE8 F37C          	movff	wreg,_API_RW+96
 12305  001D74  0E00               	movlw	0
 12306  001D76  CFE8 F37D          	movff	wreg,_API_RW+97
 12307                           
 12308                           ;api.c: 74: API_RW[49] = 1;
 12309  001D7A  0E01               	movlw	1
 12310  001D7C  CFE8 F37E          	movff	wreg,_API_RW+98
 12311  001D80  0E00               	movlw	0
 12312  001D82  CFE8 F37F          	movff	wreg,_API_RW+99
 12313                           
 12314                           ;api.c: 75: API_RW[50] = 1;
 12315  001D86  0E01               	movlw	1
 12316  001D88  CFE8 F380          	movff	wreg,_API_RW+100
 12317  001D8C  0E00               	movlw	0
 12318  001D8E  CFE8 F381          	movff	wreg,_API_RW+101
 12319                           
 12320                           ;api.c: 76: API_RW[51] = 1;
 12321  001D92  0E01               	movlw	1
 12322  001D94  CFE8 F382          	movff	wreg,_API_RW+102
 12323  001D98  0E00               	movlw	0
 12324  001D9A  CFE8 F383          	movff	wreg,_API_RW+103
 12325                           
 12326                           ;api.c: 77: API_RW[52] = 1;
 12327  001D9E  0E01               	movlw	1
 12328  001DA0  CFE8 F384          	movff	wreg,_API_RW+104
 12329  001DA4  0E00               	movlw	0
 12330  001DA6  CFE8 F385          	movff	wreg,_API_RW+105
 12331                           
 12332                           ;api.c: 78: API_RW[53] = 1;
 12333  001DAA  0E01               	movlw	1
 12334  001DAC  CFE8 F386          	movff	wreg,_API_RW+106
 12335  001DB0  0E00               	movlw	0
 12336  001DB2  CFE8 F387          	movff	wreg,_API_RW+107
 12337                           
 12338                           ;api.c: 79: API_RW[54] = 1;
 12339  001DB6  0E01               	movlw	1
 12340  001DB8  CFE8 F388          	movff	wreg,_API_RW+108
 12341  001DBC  0E00               	movlw	0
 12342  001DBE  CFE8 F389          	movff	wreg,_API_RW+109
 12343                           
 12344                           ;api.c: 80: API_RW[55] = 1;
 12345  001DC2  0E01               	movlw	1
 12346  001DC4  CFE8 F38A          	movff	wreg,_API_RW+110
 12347  001DC8  0E00               	movlw	0
 12348  001DCA  CFE8 F38B          	movff	wreg,_API_RW+111
 12349                           
 12350                           ;api.c: 81: API_RW[56] = 1;
 12351  001DCE  0E01               	movlw	1
 12352  001DD0  CFE8 F38C          	movff	wreg,_API_RW+112
 12353  001DD4  0E00               	movlw	0
 12354  001DD6  CFE8 F38D          	movff	wreg,_API_RW+113
 12355                           
 12356                           ;api.c: 82: API_RW[57] = 1;
 12357  001DDA  0E01               	movlw	1
 12358  001DDC  CFE8 F38E          	movff	wreg,_API_RW+114
 12359  001DE0  0E00               	movlw	0
 12360  001DE2  CFE8 F38F          	movff	wreg,_API_RW+115
 12361                           
 12362                           ;api.c: 83: API_RW[58] = 1;
 12363  001DE6  0E01               	movlw	1
 12364  001DE8  CFE8 F390          	movff	wreg,_API_RW+116
 12365  001DEC  0E00               	movlw	0
 12366  001DEE  CFE8 F391          	movff	wreg,_API_RW+117
 12367                           
 12368                           ;api.c: 84: API_RW[59] = 1;
 12369  001DF2  0E01               	movlw	1
 12370  001DF4  CFE8 F392          	movff	wreg,_API_RW+118
 12371  001DF8  0E00               	movlw	0
 12372  001DFA  CFE8 F393          	movff	wreg,_API_RW+119
 12373                           
 12374                           ;api.c: 85: API_RW[60] = 1;
 12375  001DFE  0E01               	movlw	1
 12376  001E00  CFE8 F394          	movff	wreg,_API_RW+120
 12377  001E04  0E00               	movlw	0
 12378  001E06  CFE8 F395          	movff	wreg,_API_RW+121
 12379                           
 12380                           ;api.c: 86: API_RW[61] = 0;
 12381  001E0A  0E00               	movlw	0
 12382  001E0C  CFE8 F396          	movff	wreg,_API_RW+122
 12383  001E10  0E00               	movlw	0
 12384  001E12  CFE8 F397          	movff	wreg,_API_RW+123
 12385                           
 12386                           ;api.c: 87: API_RW[62] = 0;
 12387  001E16  0E00               	movlw	0
 12388  001E18  CFE8 F398          	movff	wreg,_API_RW+124
 12389  001E1C  0E00               	movlw	0
 12390  001E1E  CFE8 F399          	movff	wreg,_API_RW+125
 12391                           
 12392                           ;api.c: 88: API_RW[63] = 0;
 12393  001E22  0E00               	movlw	0
 12394  001E24  CFE8 F39A          	movff	wreg,_API_RW+126
 12395  001E28  0E00               	movlw	0
 12396  001E2A  CFE8 F39B          	movff	wreg,_API_RW+127
 12397                           
 12398                           ;api.c: 89: API_RW[64] = 0;
 12399  001E2E  0E00               	movlw	0
 12400  001E30  CFE8 F39C          	movff	wreg,_API_RW+128
 12401  001E34  0E00               	movlw	0
 12402  001E36  CFE8 F39D          	movff	wreg,_API_RW+129
 12403                           
 12404                           ;api.c: 90: API_RW[65] = 0;
 12405  001E3A  0E00               	movlw	0
 12406  001E3C  CFE8 F39E          	movff	wreg,_API_RW+130
 12407  001E40  0E00               	movlw	0
 12408  001E42  CFE8 F39F          	movff	wreg,_API_RW+131
 12409                           
 12410                           ;api.c: 91: API_RW[66] = 0;
 12411  001E46  0E00               	movlw	0
 12412  001E48  CFE8 F3A0          	movff	wreg,_API_RW+132
 12413  001E4C  0E00               	movlw	0
 12414  001E4E  CFE8 F3A1          	movff	wreg,_API_RW+133
 12415                           
 12416                           ;api.c: 92: API_RW[67] = 0;
 12417  001E52  0E00               	movlw	0
 12418  001E54  CFE8 F3A2          	movff	wreg,_API_RW+134
 12419  001E58  0E00               	movlw	0
 12420  001E5A  CFE8 F3A3          	movff	wreg,_API_RW+135
 12421                           
 12422                           ;api.c: 93: API_RW[68] = 0;
 12423  001E5E  0E00               	movlw	0
 12424  001E60  CFE8 F3A4          	movff	wreg,_API_RW+136
 12425  001E64  0E00               	movlw	0
 12426  001E66  CFE8 F3A5          	movff	wreg,_API_RW+137
 12427                           
 12428                           ;api.c: 94: API_RW[69] = 0;
 12429  001E6A  0E00               	movlw	0
 12430  001E6C  CFE8 F3A6          	movff	wreg,_API_RW+138
 12431  001E70  0E00               	movlw	0
 12432  001E72  CFE8 F3A7          	movff	wreg,_API_RW+139
 12433                           
 12434                           ;api.c: 95: API_RW[70] = 1;
 12435  001E76  0E01               	movlw	1
 12436  001E78  CFE8 F3A8          	movff	wreg,_API_RW+140
 12437  001E7C  0E00               	movlw	0
 12438  001E7E  CFE8 F3A9          	movff	wreg,_API_RW+141
 12439                           
 12440                           ;api.c: 96: API_RW[71] = 1;
 12441  001E82  0E01               	movlw	1
 12442  001E84  CFE8 F3AA          	movff	wreg,_API_RW+142
 12443  001E88  0E00               	movlw	0
 12444  001E8A  CFE8 F3AB          	movff	wreg,_API_RW+143
 12445                           
 12446                           ;api.c: 97: API_RW[72] = 1;
 12447  001E8E  0E01               	movlw	1
 12448  001E90  CFE8 F3AC          	movff	wreg,_API_RW+144
 12449  001E94  0E00               	movlw	0
 12450  001E96  CFE8 F3AD          	movff	wreg,_API_RW+145
 12451                           
 12452                           ;api.c: 98: API_RW[73] = 1;
 12453  001E9A  0E01               	movlw	1
 12454  001E9C  CFE8 F3AE          	movff	wreg,_API_RW+146
 12455  001EA0  0E00               	movlw	0
 12456  001EA2  CFE8 F3AF          	movff	wreg,_API_RW+147
 12457                           
 12458                           ;api.c: 99: API_RW[74] = 1;
 12459  001EA6  0E01               	movlw	1
 12460  001EA8  CFE8 F3B0          	movff	wreg,_API_RW+148
 12461  001EAC  0E00               	movlw	0
 12462  001EAE  CFE8 F3B1          	movff	wreg,_API_RW+149
 12463                           
 12464                           ;api.c: 100: API_RW[75] = 1;
 12465  001EB2  0E01               	movlw	1
 12466  001EB4  CFE8 F3B2          	movff	wreg,_API_RW+150
 12467  001EB8  0E00               	movlw	0
 12468  001EBA  CFE8 F3B3          	movff	wreg,_API_RW+151
 12469                           
 12470                           ;api.c: 101: API_RW[76] = 1;
 12471  001EBE  0E01               	movlw	1
 12472  001EC0  CFE8 F3B4          	movff	wreg,_API_RW+152
 12473  001EC4  0E00               	movlw	0
 12474  001EC6  CFE8 F3B5          	movff	wreg,_API_RW+153
 12475                           
 12476                           ;api.c: 102: API_RW[77] = 1;
 12477  001ECA  0E01               	movlw	1
 12478  001ECC  CFE8 F3B6          	movff	wreg,_API_RW+154
 12479  001ED0  0E00               	movlw	0
 12480  001ED2  CFE8 F3B7          	movff	wreg,_API_RW+155
 12481                           
 12482                           ;api.c: 103: API_RW[78] = 1;
 12483  001ED6  0E01               	movlw	1
 12484  001ED8  CFE8 F3B8          	movff	wreg,_API_RW+156
 12485  001EDC  0E00               	movlw	0
 12486  001EDE  CFE8 F3B9          	movff	wreg,_API_RW+157
 12487                           
 12488                           ;api.c: 104: API_RW[79] = 1;
 12489  001EE2  0E01               	movlw	1
 12490  001EE4  CFE8 F3BA          	movff	wreg,_API_RW+158
 12491  001EE8  0E00               	movlw	0
 12492  001EEA  CFE8 F3BB          	movff	wreg,_API_RW+159
 12493                           
 12494                           ;api.c: 105: API_RW[80] = 0;
 12495  001EEE  0E00               	movlw	0
 12496  001EF0  CFE8 F3BC          	movff	wreg,_API_RW+160
 12497  001EF4  0E00               	movlw	0
 12498  001EF6  CFE8 F3BD          	movff	wreg,_API_RW+161
 12499                           
 12500                           ;api.c: 109: API[16] = 0x90;
 12501  001EFA  0E90               	movlw	144
 12502  001EFC  CFE8 F21C          	movff	wreg,_API+32
 12503  001F00  0E00               	movlw	0
 12504  001F02  CFE8 F21D          	movff	wreg,_API+33
 12505                           
 12506                           ;api.c: 110: API[18] = 10000;
 12507  001F06  0E10               	movlw	16
 12508  001F08  CFE8 F220          	movff	wreg,_API+36
 12509  001F0C  0E27               	movlw	39
 12510  001F0E  CFE8 F221          	movff	wreg,_API+37
 12511                           
 12512                           ;api.c: 111: API[19] = 800;
 12513  001F12  0E20               	movlw	32
 12514  001F14  CFE8 F222          	movff	wreg,_API+38
 12515  001F18  0E03               	movlw	3
 12516  001F1A  CFE8 F223          	movff	wreg,_API+39
 12517                           
 12518                           ;api.c: 112: API[20] = 5000;
 12519  001F1E  0E88               	movlw	136
 12520  001F20  CFE8 F224          	movff	wreg,_API+40
 12521  001F24  0E13               	movlw	19
 12522  001F26  CFE8 F225          	movff	wreg,_API+41
 12523                           
 12524                           ;api.c: 113: API[21] = 20;
 12525  001F2A  0E14               	movlw	20
 12526  001F2C  CFE8 F226          	movff	wreg,_API+42
 12527  001F30  0E00               	movlw	0
 12528  001F32  CFE8 F227          	movff	wreg,_API+43
 12529                           
 12530                           ;api.c: 114: API[22] = 20;
 12531  001F36  0E14               	movlw	20
 12532  001F38  CFE8 F228          	movff	wreg,_API+44
 12533  001F3C  0E00               	movlw	0
 12534  001F3E  CFE8 F229          	movff	wreg,_API+45
 12535                           
 12536                           ;api.c: 115: API[23] = 107;
 12537  001F42  0E6B               	movlw	107
 12538  001F44  CFE8 F22A          	movff	wreg,_API+46
 12539  001F48  0E00               	movlw	0
 12540  001F4A  CFE8 F22B          	movff	wreg,_API+47
 12541                           
 12542                           ;api.c: 116: API[24] = 107;
 12543  001F4E  0E6B               	movlw	107
 12544  001F50  CFE8 F22C          	movff	wreg,_API+48
 12545  001F54  0E00               	movlw	0
 12546  001F56  CFE8 F22D          	movff	wreg,_API+49
 12547                           
 12548                           ;api.c: 117: API[25] = 80;
 12549  001F5A  0E50               	movlw	80
 12550  001F5C  CFE8 F22E          	movff	wreg,_API+50
 12551  001F60  0E00               	movlw	0
 12552  001F62  CFE8 F22F          	movff	wreg,_API+51
 12553                           
 12554                           ;api.c: 118: API[26] = 45;
 12555  001F66  0E2D               	movlw	45
 12556  001F68  CFE8 F230          	movff	wreg,_API+52
 12557  001F6C  0E00               	movlw	0
 12558  001F6E  CFE8 F231          	movff	wreg,_API+53
 12559                           
 12560                           ;api.c: 119: API[27] = 20;
 12561  001F72  0E14               	movlw	20
 12562  001F74  CFE8 F232          	movff	wreg,_API+54
 12563  001F78  0E00               	movlw	0
 12564  001F7A  CFE8 F233          	movff	wreg,_API+55
 12565                           
 12566                           ;api.c: 120: API[28] = 0;
 12567  001F7E  0E00               	movlw	0
 12568  001F80  CFE8 F234          	movff	wreg,_API+56
 12569  001F84  0E00               	movlw	0
 12570  001F86  CFE8 F235          	movff	wreg,_API+57
 12571                           
 12572                           ;api.c: 121: API[29] = 0;
 12573  001F8A  0E00               	movlw	0
 12574  001F8C  CFE8 F236          	movff	wreg,_API+58
 12575  001F90  0E00               	movlw	0
 12576  001F92  CFE8 F237          	movff	wreg,_API+59
 12577                           
 12578                           ;api.c: 122: API[30] = 0;
 12579  001F96  0E00               	movlw	0
 12580  001F98  CFE8 F238          	movff	wreg,_API+60
 12581  001F9C  0E00               	movlw	0
 12582  001F9E  CFE8 F239          	movff	wreg,_API+61
 12583                           
 12584                           ;api.c: 123: API[31] = 0;
 12585  001FA2  0E00               	movlw	0
 12586  001FA4  CFE8 F23A          	movff	wreg,_API+62
 12587  001FA8  0E00               	movlw	0
 12588  001FAA  CFE8 F23B          	movff	wreg,_API+63
 12589                           
 12590                           ;api.c: 124: API[32] = 0;
 12591  001FAE  0E00               	movlw	0
 12592  001FB0  CFE8 F23C          	movff	wreg,_API+64
 12593  001FB4  0E00               	movlw	0
 12594  001FB6  CFE8 F23D          	movff	wreg,_API+65
 12595                           
 12596                           ;api.c: 125: API[33] = 0;
 12597  001FBA  0E00               	movlw	0
 12598  001FBC  CFE8 F23E          	movff	wreg,_API+66
 12599  001FC0  0E00               	movlw	0
 12600  001FC2  CFE8 F23F          	movff	wreg,_API+67
 12601                           
 12602                           ;api.c: 126: API[34] = 0;
 12603  001FC6  0E00               	movlw	0
 12604  001FC8  CFE8 F240          	movff	wreg,_API+68
 12605  001FCC  0E00               	movlw	0
 12606  001FCE  CFE8 F241          	movff	wreg,_API+69
 12607                           
 12608                           ;api.c: 127: API[35] = 0;
 12609  001FD2  0E00               	movlw	0
 12610  001FD4  CFE8 F242          	movff	wreg,_API+70
 12611  001FD8  0E00               	movlw	0
 12612  001FDA  CFE8 F243          	movff	wreg,_API+71
 12613                           
 12614                           ;api.c: 128: API[36] = 0;
 12615  001FDE  0E00               	movlw	0
 12616  001FE0  CFE8 F244          	movff	wreg,_API+72
 12617  001FE4  0E00               	movlw	0
 12618  001FE6  CFE8 F245          	movff	wreg,_API+73
 12619                           
 12620                           ;api.c: 129: API[37] = 0;
 12621  001FEA  0E00               	movlw	0
 12622  001FEC  CFE8 F246          	movff	wreg,_API+74
 12623  001FF0  0E00               	movlw	0
 12624  001FF2  CFE8 F247          	movff	wreg,_API+75
 12625                           
 12626                           ;api.c: 130: API[38] = 0;
 12627  001FF6  0E00               	movlw	0
 12628  001FF8  CFE8 F248          	movff	wreg,_API+76
 12629  001FFC  0E00               	movlw	0
 12630  001FFE  CFE8 F249          	movff	wreg,_API+77
 12631                           
 12632                           ;api.c: 131: API[39] = 0;
 12633  002002  0E00               	movlw	0
 12634  002004  CFE8 F24A          	movff	wreg,_API+78
 12635  002008  0E00               	movlw	0
 12636  00200A  CFE8 F24B          	movff	wreg,_API+79
 12637                           
 12638                           ;api.c: 132: API[40] = 0;
 12639  00200E  0E00               	movlw	0
 12640  002010  CFE8 F24C          	movff	wreg,_API+80
 12641  002014  0E00               	movlw	0
 12642  002016  CFE8 F24D          	movff	wreg,_API+81
 12643                           
 12644                           ;api.c: 133: API[41] = 0;
 12645  00201A  0E00               	movlw	0
 12646  00201C  CFE8 F24E          	movff	wreg,_API+82
 12647  002020  0E00               	movlw	0
 12648  002022  CFE8 F24F          	movff	wreg,_API+83
 12649                           
 12650                           ;api.c: 134: API[42] = 0;
 12651  002026  0E00               	movlw	0
 12652  002028  CFE8 F250          	movff	wreg,_API+84
 12653  00202C  0E00               	movlw	0
 12654  00202E  CFE8 F251          	movff	wreg,_API+85
 12655                           
 12656                           ;api.c: 135: API[43] = 0;
 12657  002032  0E00               	movlw	0
 12658  002034  CFE8 F252          	movff	wreg,_API+86
 12659  002038  0E00               	movlw	0
 12660  00203A  CFE8 F253          	movff	wreg,_API+87
 12661                           
 12662                           ;api.c: 136: API[44] = 0;
 12663  00203E  0E00               	movlw	0
 12664  002040  CFE8 F254          	movff	wreg,_API+88
 12665  002044  0E00               	movlw	0
 12666  002046  CFE8 F255          	movff	wreg,_API+89
 12667                           
 12668                           ;api.c: 137: API[45] = 0;
 12669  00204A  0E00               	movlw	0
 12670  00204C  CFE8 F256          	movff	wreg,_API+90
 12671  002050  0E00               	movlw	0
 12672  002052  CFE8 F257          	movff	wreg,_API+91
 12673                           
 12674                           ;api.c: 138: API[46] = 80;
 12675  002056  0E50               	movlw	80
 12676  002058  CFE8 F258          	movff	wreg,_API+92
 12677  00205C  0E00               	movlw	0
 12678  00205E  CFE8 F259          	movff	wreg,_API+93
 12679                           
 12680                           ;api.c: 139: API[47] = 120;
 12681  002062  0E78               	movlw	120
 12682  002064  CFE8 F25A          	movff	wreg,_API+94
 12683  002068  0E00               	movlw	0
 12684  00206A  CFE8 F25B          	movff	wreg,_API+95
 12685                           
 12686                           ;api.c: 140: API[48] = 0;
 12687  00206E  0E00               	movlw	0
 12688  002070  CFE8 F25C          	movff	wreg,_API+96
 12689  002074  0E00               	movlw	0
 12690  002076  CFE8 F25D          	movff	wreg,_API+97
 12691                           
 12692                           ;api.c: 141: API[49] = 80;
 12693  00207A  0E50               	movlw	80
 12694  00207C  CFE8 F25E          	movff	wreg,_API+98
 12695  002080  0E00               	movlw	0
 12696  002082  CFE8 F25F          	movff	wreg,_API+99
 12697                           
 12698                           ;api.c: 142: API[50] = 0;
 12699  002086  0E00               	movlw	0
 12700  002088  CFE8 F260          	movff	wreg,_API+100
 12701  00208C  0E00               	movlw	0
 12702  00208E  CFE8 F261          	movff	wreg,_API+101
 12703                           
 12704                           ;api.c: 143: API[51] = 0;
 12705  002092  0E00               	movlw	0
 12706  002094  CFE8 F262          	movff	wreg,_API+102
 12707  002098  0E00               	movlw	0
 12708  00209A  CFE8 F263          	movff	wreg,_API+103
 12709                           
 12710                           ;api.c: 144: API[52] = 120;
 12711  00209E  0E78               	movlw	120
 12712  0020A0  CFE8 F264          	movff	wreg,_API+104
 12713  0020A4  0E00               	movlw	0
 12714  0020A6  CFE8 F265          	movff	wreg,_API+105
 12715                           
 12716                           ;api.c: 145: API[53] = 100;
 12717  0020AA  0E64               	movlw	100
 12718  0020AC  CFE8 F266          	movff	wreg,_API+106
 12719  0020B0  0E00               	movlw	0
 12720  0020B2  CFE8 F267          	movff	wreg,_API+107
 12721                           
 12722                           ;api.c: 146: API[54] = 100;
 12723  0020B6  0E64               	movlw	100
 12724  0020B8  CFE8 F268          	movff	wreg,_API+108
 12725  0020BC  0E00               	movlw	0
 12726  0020BE  CFE8 F269          	movff	wreg,_API+109
 12727                           
 12728                           ;api.c: 147: API[55] = 100;
 12729  0020C2  0E64               	movlw	100
 12730  0020C4  CFE8 F26A          	movff	wreg,_API+110
 12731  0020C8  0E00               	movlw	0
 12732  0020CA  CFE8 F26B          	movff	wreg,_API+111
 12733                           
 12734                           ;api.c: 148: API[56] = 100;
 12735  0020CE  0E64               	movlw	100
 12736  0020D0  CFE8 F26C          	movff	wreg,_API+112
 12737  0020D4  0E00               	movlw	0
 12738  0020D6  CFE8 F26D          	movff	wreg,_API+113
 12739                           
 12740                           ;api.c: 149: API[57] = 100;
 12741  0020DA  0E64               	movlw	100
 12742  0020DC  CFE8 F26E          	movff	wreg,_API+114
 12743  0020E0  0E00               	movlw	0
 12744  0020E2  CFE8 F26F          	movff	wreg,_API+115
 12745                           
 12746                           ;api.c: 150: API[58] = 100;
 12747  0020E6  0E64               	movlw	100
 12748  0020E8  CFE8 F270          	movff	wreg,_API+116
 12749  0020EC  0E00               	movlw	0
 12750  0020EE  CFE8 F271          	movff	wreg,_API+117
 12751                           
 12752                           ;api.c: 151: API[59] = 100;
 12753  0020F2  0E64               	movlw	100
 12754  0020F4  CFE8 F272          	movff	wreg,_API+118
 12755  0020F8  0E00               	movlw	0
 12756  0020FA  CFE8 F273          	movff	wreg,_API+119
 12757                           
 12758                           ;api.c: 152: API[60] = 100;
 12759  0020FE  0E64               	movlw	100
 12760  002100  CFE8 F274          	movff	wreg,_API+120
 12761  002104  0E00               	movlw	0
 12762  002106  CFE8 F275          	movff	wreg,_API+121
 12763                           
 12764                           ;api.c: 153: API[61] = 0;
 12765  00210A  0E00               	movlw	0
 12766  00210C  CFE8 F276          	movff	wreg,_API+122
 12767  002110  0E00               	movlw	0
 12768  002112  CFE8 F277          	movff	wreg,_API+123
 12769                           
 12770                           ;api.c: 154: API[62] = 0;
 12771  002116  0E00               	movlw	0
 12772  002118  CFE8 F278          	movff	wreg,_API+124
 12773  00211C  0E00               	movlw	0
 12774  00211E  CFE8 F279          	movff	wreg,_API+125
 12775                           
 12776                           ;api.c: 155: API[63] = 0;
 12777  002122  0E00               	movlw	0
 12778  002124  CFE8 F27A          	movff	wreg,_API+126
 12779  002128  0E00               	movlw	0
 12780  00212A  CFE8 F27B          	movff	wreg,_API+127
 12781                           
 12782                           ;api.c: 156: API[64] = 0;
 12783  00212E  0E00               	movlw	0
 12784  002130  CFE8 F27C          	movff	wreg,_API+128
 12785  002134  0E00               	movlw	0
 12786  002136  CFE8 F27D          	movff	wreg,_API+129
 12787                           
 12788                           ;api.c: 157: API[65] = 0;
 12789  00213A  0E00               	movlw	0
 12790  00213C  CFE8 F27E          	movff	wreg,_API+130
 12791  002140  0E00               	movlw	0
 12792  002142  CFE8 F27F          	movff	wreg,_API+131
 12793                           
 12794                           ;api.c: 158: API[66] = 0;
 12795  002146  0E00               	movlw	0
 12796  002148  CFE8 F280          	movff	wreg,_API+132
 12797  00214C  0E00               	movlw	0
 12798  00214E  CFE8 F281          	movff	wreg,_API+133
 12799                           
 12800                           ;api.c: 159: API[67] = 0;
 12801  002152  0E00               	movlw	0
 12802  002154  CFE8 F282          	movff	wreg,_API+134
 12803  002158  0E00               	movlw	0
 12804  00215A  CFE8 F283          	movff	wreg,_API+135
 12805                           
 12806                           ;api.c: 160: API[68] = 511;
 12807  00215E  0EFF               	movlw	255
 12808  002160  CFE8 F284          	movff	wreg,_API+136
 12809  002164  0E01               	movlw	1
 12810  002166  CFE8 F285          	movff	wreg,_API+137
 12811                           
 12812                           ;api.c: 161: API[69] = 1;
 12813  00216A  0E01               	movlw	1
 12814  00216C  CFE8 F286          	movff	wreg,_API+138
 12815  002170  0E00               	movlw	0
 12816  002172  CFE8 F287          	movff	wreg,_API+139
 12817                           
 12818                           ;api.c: 162: API[70] = 0;
 12819  002176  0E00               	movlw	0
 12820  002178  CFE8 F288          	movff	wreg,_API+140
 12821  00217C  0E00               	movlw	0
 12822  00217E  CFE8 F289          	movff	wreg,_API+141
 12823                           
 12824                           ;api.c: 163: API[71] = 0;
 12825  002182  0E00               	movlw	0
 12826  002184  CFE8 F28A          	movff	wreg,_API+142
 12827  002188  0E00               	movlw	0
 12828  00218A  CFE8 F28B          	movff	wreg,_API+143
 12829                           
 12830                           ;api.c: 164: API[72] = 0;
 12831  00218E  0E00               	movlw	0
 12832  002190  CFE8 F28C          	movff	wreg,_API+144
 12833  002194  0E00               	movlw	0
 12834  002196  CFE8 F28D          	movff	wreg,_API+145
 12835                           
 12836                           ;api.c: 165: API[73] = 0;
 12837  00219A  0E00               	movlw	0
 12838  00219C  CFE8 F28E          	movff	wreg,_API+146
 12839  0021A0  0E00               	movlw	0
 12840  0021A2  CFE8 F28F          	movff	wreg,_API+147
 12841                           
 12842                           ;api.c: 166: API[74] = 0;
 12843  0021A6  0E00               	movlw	0
 12844  0021A8  CFE8 F290          	movff	wreg,_API+148
 12845  0021AC  0E00               	movlw	0
 12846  0021AE  CFE8 F291          	movff	wreg,_API+149
 12847                           
 12848                           ;api.c: 167: API[75] = 0;
 12849  0021B2  0E00               	movlw	0
 12850  0021B4  CFE8 F292          	movff	wreg,_API+150
 12851  0021B8  0E00               	movlw	0
 12852  0021BA  CFE8 F293          	movff	wreg,_API+151
 12853                           
 12854                           ;api.c: 168: API[76] = 0;
 12855  0021BE  0E00               	movlw	0
 12856  0021C0  CFE8 F294          	movff	wreg,_API+152
 12857  0021C4  0E00               	movlw	0
 12858  0021C6  CFE8 F295          	movff	wreg,_API+153
 12859                           
 12860                           ;api.c: 169: API[77] = 0;
 12861  0021CA  0E00               	movlw	0
 12862  0021CC  CFE8 F296          	movff	wreg,_API+154
 12863  0021D0  0E00               	movlw	0
 12864  0021D2  CFE8 F297          	movff	wreg,_API+155
 12865                           
 12866                           ;api.c: 170: API[78] = 0;
 12867  0021D6  0E00               	movlw	0
 12868  0021D8  CFE8 F298          	movff	wreg,_API+156
 12869  0021DC  0E00               	movlw	0
 12870  0021DE  CFE8 F299          	movff	wreg,_API+157
 12871                           
 12872                           ;api.c: 171: API[79] = 511;
 12873  0021E2  0EFF               	movlw	255
 12874  0021E4  CFE8 F29A          	movff	wreg,_API+158
 12875  0021E8  0E01               	movlw	1
 12876  0021EA  CFE8 F29B          	movff	wreg,_API+159
 12877                           
 12878                           ;api.c: 172: API[80] = 0;
 12879  0021EE  0E00               	movlw	0
 12880  0021F0  CFE8 F29C          	movff	wreg,_API+160
 12881  0021F4  0E00               	movlw	0
 12882  0021F6  CFE8 F29D          	movff	wreg,_API+161
 12883                           
 12884                           ; BSR set to: 0
 12885  0021FA  0012               	return		;funcret
 12886  0021FC                     __end_of_APIxInitialize:
 12887                           	opt stack 0
 12888                           tblptru	equ	0xFF8
 12889                           tblptrh	equ	0xFF7
 12890                           tblptrl	equ	0xFF6
 12891                           tablat	equ	0xFF5
 12892                           prodh	equ	0xFF4
 12893                           prodl	equ	0xFF3
 12894                           intcon	equ	0xFF2
 12895                           intcon2	equ	0xFF1
 12896                           postinc0	equ	0xFEE
 12897                           wreg	equ	0xFE8
 12898                           postdec1	equ	0xFE5
 12899                           fsr1h	equ	0xFE2
 12900                           fsr1l	equ	0xFE1
 12901                           indf2	equ	0xFDF
 12902                           postinc2	equ	0xFDE
 12903                           postdec2	equ	0xFDD
 12904                           fsr2h	equ	0xFDA
 12905                           fsr2l	equ	0xFD9
 12906                           status	equ	0xFD8
 12907                           
 12908 ;; *************** function _tc_low *****************
 12909 ;; Defined at:
 12910 ;;		line 146 in file "../Main.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;		None
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;		None
 12915 ;; Return value:  Size  Location     Type
 12916 ;;                  1    wreg      void 
 12917 ;; Registers used:
 12918 ;;		None
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 0/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12924 ;;      Params:         0       0       0       0       0       0       0       0       0
 12925 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12926 ;;      Temps:         17       0       0       0       0       0       0       0       0
 12927 ;;      Totals:        17       0       0       0       0       0       0       0       0
 12928 ;;Total ram usage:       17 bytes
 12929 ;; Hardware stack levels used:    1
 12930 ;; Hardware stack levels required when called:    2
 12931 ;; This function calls:
 12932 ;;		Nothing
 12933 ;; This function is called by:
 12934 ;;		Interrupt level 1
 12935 ;; This function uses a non-reentrant model
 12936 ;;
 12937                           
 12938                           	psect	intcodelo
 12939  000018                     __pintcodelo:
 12940                           	opt stack 0
 12941  000018                     _tc_low:
 12942                           	opt stack 20
 12943                           
 12944                           ; BSR set to: 0
 12945                           ;incstack = 0
 12946  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 12947  00001A  CFD8 F00F          	movff	status,??_tc_low
 12948  00001E  CFE8 F010          	movff	wreg,??_tc_low+1
 12949  000022  CFE0 F011          	movff	bsr,??_tc_low+2
 12950  000026  CFFA F012          	movff	pclath,??_tc_low+3
 12951  00002A  CFFB F013          	movff	pclatu,??_tc_low+4
 12952  00002E  CFE9 F014          	movff	fsr0l,??_tc_low+5
 12953  000032  CFEA F015          	movff	fsr0h,??_tc_low+6
 12954  000036  CFE1 F016          	movff	fsr1l,??_tc_low+7
 12955  00003A  CFE2 F017          	movff	fsr1h,??_tc_low+8
 12956  00003E  CFD9 F018          	movff	fsr2l,??_tc_low+9
 12957  000042  CFDA F019          	movff	fsr2h,??_tc_low+10
 12958  000046  CFF3 F01A          	movff	prodl,??_tc_low+11
 12959  00004A  CFF4 F01B          	movff	prodh,??_tc_low+12
 12960  00004E  CFF6 F01C          	movff	tblptrl,??_tc_low+13
 12961  000052  CFF7 F01D          	movff	tblptrh,??_tc_low+14
 12962  000056  CFF8 F01E          	movff	tblptru,??_tc_low+15
 12963  00005A  CFF5 F01F          	movff	tablat,??_tc_low+16
 12964  00005E  C01F  FFF5         	movff	??_tc_low+16,tablat
 12965  000062  C01E  FFF8         	movff	??_tc_low+15,tblptru
 12966  000066  C01D  FFF7         	movff	??_tc_low+14,tblptrh
 12967  00006A  C01C  FFF6         	movff	??_tc_low+13,tblptrl
 12968  00006E  C01B  FFF4         	movff	??_tc_low+12,prodh
 12969  000072  C01A  FFF3         	movff	??_tc_low+11,prodl
 12970  000076  C019  FFDA         	movff	??_tc_low+10,fsr2h
 12971  00007A  C018  FFD9         	movff	??_tc_low+9,fsr2l
 12972  00007E  C017  FFE2         	movff	??_tc_low+8,fsr1h
 12973  000082  C016  FFE1         	movff	??_tc_low+7,fsr1l
 12974  000086  C015  FFEA         	movff	??_tc_low+6,fsr0h
 12975  00008A  C014  FFE9         	movff	??_tc_low+5,fsr0l
 12976  00008E  C013  FFFB         	movff	??_tc_low+4,pclatu
 12977  000092  C012  FFFA         	movff	??_tc_low+3,pclath
 12978  000096  C011  FFE0         	movff	??_tc_low+2,bsr
 12979  00009A  C010  FFE8         	movff	??_tc_low+1,wreg
 12980  00009E  C00F  FFD8         	movff	??_tc_low,status
 12981  0000A2  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 12982  0000A4  0010               	retfie	
 12983  0000A6                     __end_of_tc_low:
 12984                           	opt stack 0
 12985                           pclatu	equ	0xFFB
 12986                           pclath	equ	0xFFA
 12987                           tblptru	equ	0xFF8
 12988                           tblptrh	equ	0xFF7
 12989                           tblptrl	equ	0xFF6
 12990                           tablat	equ	0xFF5
 12991                           prodh	equ	0xFF4
 12992                           prodl	equ	0xFF3
 12993                           intcon	equ	0xFF2
 12994                           intcon2	equ	0xFF1
 12995                           postinc0	equ	0xFEE
 12996                           fsr0h	equ	0xFEA
 12997                           fsr0l	equ	0xFE9
 12998                           wreg	equ	0xFE8
 12999                           postdec1	equ	0xFE5
 13000                           fsr1h	equ	0xFE2
 13001                           fsr1l	equ	0xFE1
 13002                           bsr	equ	0xFE0
 13003                           indf2	equ	0xFDF
 13004                           postinc2	equ	0xFDE
 13005                           postdec2	equ	0xFDD
 13006                           fsr2h	equ	0xFDA
 13007                           fsr2l	equ	0xFD9
 13008                           status	equ	0xFD8
 13009                           
 13010 ;; *************** function _tc_high *****************
 13011 ;; Defined at:
 13012 ;;		line 150 in file "../Main.c"
 13013 ;; Parameters:    Size  Location     Type
 13014 ;;		None
 13015 ;; Auto vars:     Size  Location     Type
 13016 ;;		None
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  1    wreg      void 
 13019 ;; Registers used:
 13020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13026 ;;      Params:         0       0       0       0       0       0       0       0       0
 13027 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13028 ;;      Temps:         14       0       0       0       0       0       0       0       0
 13029 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13030 ;;Total ram usage:       14 bytes
 13031 ;; Hardware stack levels used:    1
 13032 ;; Hardware stack levels required when called:    1
 13033 ;; This function calls:
 13034 ;;		_EUSART1_Receive_ISR
 13035 ;;		_EUSART1_Transmit_ISR
 13036 ;; This function is called by:
 13037 ;;		Interrupt level 2
 13038 ;; This function uses a non-reentrant model
 13039 ;;
 13040                           
 13041                           	psect	intcode
 13042  000008                     __pintcode:
 13043                           	opt stack 0
 13044  000008                     _tc_high:
 13045                           	opt stack 20
 13046                           
 13047                           ;incstack = 0
 13048  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13049  00000A  CFFA F001          	movff	pclath,??_tc_high
 13050  00000E  CFFB F002          	movff	pclatu,??_tc_high+1
 13051  000012  ED5D  F01B         	call	int_func,f	;refresh shadow registers
 13052                           pclatu	equ	0xFFB
 13053                           pclath	equ	0xFFA
 13054                           tblptru	equ	0xFF8
 13055                           tblptrh	equ	0xFF7
 13056                           tblptrl	equ	0xFF6
 13057                           tablat	equ	0xFF5
 13058                           prodh	equ	0xFF4
 13059                           prodl	equ	0xFF3
 13060                           intcon	equ	0xFF2
 13061                           intcon2	equ	0xFF1
 13062                           postinc0	equ	0xFEE
 13063                           fsr0h	equ	0xFEA
 13064                           fsr0l	equ	0xFE9
 13065                           wreg	equ	0xFE8
 13066                           postdec1	equ	0xFE5
 13067                           fsr1h	equ	0xFE2
 13068                           fsr1l	equ	0xFE1
 13069                           bsr	equ	0xFE0
 13070                           indf2	equ	0xFDF
 13071                           postinc2	equ	0xFDE
 13072                           postdec2	equ	0xFDD
 13073                           fsr2h	equ	0xFDA
 13074                           fsr2l	equ	0xFD9
 13075                           status	equ	0xFD8
 13076                           
 13077                           	psect	intcode_body
 13078  0036BA                     __pintcode_body:
 13079                           	opt stack 20
 13080  0036BA                     int_func:
 13081                           	opt stack 20
 13082  0036BA  0006               	pop		; remove dummy address from shadow register refresh
 13083  0036BC  CFE9 F003          	movff	fsr0l,??_tc_high+2
 13084  0036C0  CFEA F004          	movff	fsr0h,??_tc_high+3
 13085  0036C4  CFE1 F005          	movff	fsr1l,??_tc_high+4
 13086  0036C8  CFE2 F006          	movff	fsr1h,??_tc_high+5
 13087  0036CC  CFD9 F007          	movff	fsr2l,??_tc_high+6
 13088  0036D0  CFDA F008          	movff	fsr2h,??_tc_high+7
 13089  0036D4  CFF3 F009          	movff	prodl,??_tc_high+8
 13090  0036D8  CFF4 F00A          	movff	prodh,??_tc_high+9
 13091  0036DC  CFF6 F00B          	movff	tblptrl,??_tc_high+10
 13092  0036E0  CFF7 F00C          	movff	tblptrh,??_tc_high+11
 13093  0036E4  CFF8 F00D          	movff	tblptru,??_tc_high+12
 13094  0036E8  CFF5 F00E          	movff	tablat,??_tc_high+13
 13095                           
 13096                           ;Main.c: 152: if (INTCONbits.TMR0IF)
 13097  0036EC  A4F2               	btfss	intcon,2,c	;volatile
 13098  0036EE  D01F               	goto	i2l6259
 13099                           
 13100                           ;Main.c: 153: {
 13101                           ;Main.c: 154: if(Led1_Counter <= 100)
 13102  0036F0  0100               	movlb	0	; () banked
 13103  0036F2  516F               	movf	(_Led1_Counter+1)& (0+255),w,b
 13104  0036F4  E107               	bnz	i2l92
 13105  0036F6  0E65               	movlw	101
 13106  0036F8  0100               	movlb	0	; () banked
 13107  0036FA  5D6E               	subwf	_Led1_Counter& (0+255),w,b
 13108  0036FC  B0D8               	btfsc	status,0,c
 13109  0036FE  D002               	goto	i2l92
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;Main.c: 155: {
 13113                           ;Main.c: 156: PORTAbits.RA4 = 1;
 13114  003700  8880               	bsf	3968,4,c	;volatile
 13115                           
 13116                           ;Main.c: 157: }
 13117  003702  D001               	goto	i2l6249
 13118  003704                     i2l92:
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;Main.c: 158: else
 13122                           ;Main.c: 159: {
 13123                           ;Main.c: 160: PORTAbits.RA4 = 0;
 13124  003704  9880               	bcf	3968,4,c	;volatile
 13125  003706                     i2l6249:
 13126                           
 13127                           ; BSR set to: 0
 13128                           ;Main.c: 161: }
 13129                           ;Main.c: 162: if(Led1_Counter >= 700)
 13130  003706  0EBC               	movlw	188
 13131  003708  0100               	movlb	0	; () banked
 13132  00370A  5D6E               	subwf	_Led1_Counter& (0+255),w,b
 13133  00370C  0E02               	movlw	2
 13134  00370E  0100               	movlb	0	; () banked
 13135  003710  596F               	subwfb	(_Led1_Counter+1)& (0+255),w,b
 13136  003712  A0D8               	btfss	status,0,c
 13137  003714  D005               	goto	i2l6253
 13138                           
 13139                           ; BSR set to: 0
 13140                           ;Main.c: 163: {
 13141                           ;Main.c: 164: Led1_Counter = 0;
 13142  003716  0E00               	movlw	0
 13143  003718  0100               	movlb	0	; () banked
 13144  00371A  6F6F               	movwf	(_Led1_Counter+1)& (0+255),b
 13145  00371C  0E00               	movlw	0
 13146  00371E  6F6E               	movwf	_Led1_Counter& (0+255),b
 13147  003720                     i2l6253:
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;Main.c: 165: }
 13151                           ;Main.c: 166: Led1_Counter++;
 13152  003720  0100               	movlb	0	; () banked
 13153  003722  4B6E               	infsnz	_Led1_Counter& (0+255),f,b
 13154  003724  2B6F               	incf	(_Led1_Counter+1)& (0+255),f,b
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;Main.c: 167: Update_State_Machine = 1;
 13158  003726  0E01               	movlw	1
 13159  003728  0100               	movlb	0	; () banked
 13160  00372A  6F85               	movwf	_Update_State_Machine& (0+255),b
 13161                           
 13162                           ; BSR set to: 0
 13163                           ;Main.c: 168: INTCONbits.TMR0IF = 0;
 13164  00372C  94F2               	bcf	intcon,2,c	;volatile
 13165  00372E                     i2l6259:
 13166                           
 13167                           ;Main.c: 169: }
 13168                           ;Main.c: 171: if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
 13169  00372E  BA9D               	btfsc	3997,5,c	;volatile
 13170  003730  AA9E               	btfss	3998,5,c	;volatile
 13171  003732  D002               	goto	i2l6265
 13172                           
 13173                           ;Main.c: 172: EUSART1_Receive_ISR();
 13174  003734  EC1A  F01E         	call	_EUSART1_Receive_ISR	;wreg free
 13175  003738                     i2l6265:
 13176                           
 13177                           ;Main.c: 173: }
 13178                           ;Main.c: 174: if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
 13179  003738  B89D               	btfsc	3997,4,c	;volatile
 13180  00373A  A89E               	btfss	3998,4,c	;volatile
 13181  00373C  D002               	goto	i2l97
 13182                           
 13183                           ;Main.c: 175: EUSART1_Transmit_ISR();
 13184  00373E  EC03  F01E         	call	_EUSART1_Transmit_ISR	;wreg free
 13185  003742                     i2l97:
 13186  003742  C00E  FFF5         	movff	??_tc_high+13,tablat
 13187  003746  C00D  FFF8         	movff	??_tc_high+12,tblptru
 13188  00374A  C00C  FFF7         	movff	??_tc_high+11,tblptrh
 13189  00374E  C00B  FFF6         	movff	??_tc_high+10,tblptrl
 13190  003752  C00A  FFF4         	movff	??_tc_high+9,prodh
 13191  003756  C009  FFF3         	movff	??_tc_high+8,prodl
 13192  00375A  C008  FFDA         	movff	??_tc_high+7,fsr2h
 13193  00375E  C007  FFD9         	movff	??_tc_high+6,fsr2l
 13194  003762  C006  FFE2         	movff	??_tc_high+5,fsr1h
 13195  003766  C005  FFE1         	movff	??_tc_high+4,fsr1l
 13196  00376A  C004  FFEA         	movff	??_tc_high+3,fsr0h
 13197  00376E  C003  FFE9         	movff	??_tc_high+2,fsr0l
 13198  003772  C002  FFFB         	movff	??_tc_high+1,pclatu
 13199  003776  C001  FFFA         	movff	??_tc_high,pclath
 13200  00377A  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13201  00377C  0011               	retfie		f
 13202  00377E                     __end_of_tc_high:
 13203                           	opt stack 0
 13204                           pclatu	equ	0xFFB
 13205                           pclath	equ	0xFFA
 13206                           tblptru	equ	0xFF8
 13207                           tblptrh	equ	0xFF7
 13208                           tblptrl	equ	0xFF6
 13209                           tablat	equ	0xFF5
 13210                           prodh	equ	0xFF4
 13211                           prodl	equ	0xFF3
 13212                           intcon	equ	0xFF2
 13213                           intcon2	equ	0xFF1
 13214                           postinc0	equ	0xFEE
 13215                           fsr0h	equ	0xFEA
 13216                           fsr0l	equ	0xFE9
 13217                           wreg	equ	0xFE8
 13218                           postdec1	equ	0xFE5
 13219                           fsr1h	equ	0xFE2
 13220                           fsr1l	equ	0xFE1
 13221                           bsr	equ	0xFE0
 13222                           indf2	equ	0xFDF
 13223                           postinc2	equ	0xFDE
 13224                           postdec2	equ	0xFDD
 13225                           fsr2h	equ	0xFDA
 13226                           fsr2l	equ	0xFD9
 13227                           status	equ	0xFD8
 13228                           
 13229 ;; *************** function _EUSART1_Transmit_ISR *****************
 13230 ;; Defined at:
 13231 ;;		line 183 in file "../eusart1.c"
 13232 ;; Parameters:    Size  Location     Type
 13233 ;;		None
 13234 ;; Auto vars:     Size  Location     Type
 13235 ;;		None
 13236 ;; Return value:  Size  Location     Type
 13237 ;;                  1    wreg      void 
 13238 ;; Registers used:
 13239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13240 ;; Tracked objects:
 13241 ;;		On entry : 0/0
 13242 ;;		On exit  : 0/0
 13243 ;;		Unchanged: 0/0
 13244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13245 ;;      Params:         0       0       0       0       0       0       0       0       0
 13246 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13247 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13248 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13249 ;;Total ram usage:        0 bytes
 13250 ;; Hardware stack levels used:    1
 13251 ;; This function calls:
 13252 ;;		Nothing
 13253 ;; This function is called by:
 13254 ;;		_tc_high
 13255 ;; This function uses a non-reentrant model
 13256 ;;
 13257                           
 13258                           	psect	text38
 13259  003C06                     __ptext38:
 13260                           	opt stack 0
 13261  003C06                     _EUSART1_Transmit_ISR:
 13262                           	opt stack 20
 13263                           
 13264                           ;eusart1.c: 186: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
 13265                           
 13266                           ;incstack = 0
 13267  003C06  0E7E               	movlw	126
 13268  003C08  603D               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
 13269  003C0A  D012               	goto	i2l520
 13270                           
 13271                           ;eusart1.c: 187: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
 13272  003C0C  503F               	movf	_eusart1TxTail,w,c
 13273  003C0E  0D01               	mullw	1
 13274  003C10  0E7E               	movlw	low _eusart1TxBuffer
 13275  003C12  24F3               	addwf	prodl,w,c
 13276  003C14  6ED9               	movwf	fsr2l,c
 13277  003C16  0E01               	movlw	high _eusart1TxBuffer
 13278  003C18  20F4               	addwfc	prodh,w,c
 13279  003C1A  6EDA               	movwf	fsr2h,c
 13280  003C1C  50DF               	movf	indf2,w,c
 13281  003C1E  6EAD               	movwf	4013,c	;volatile
 13282  003C20  2A3F               	incf	_eusart1TxTail,f,c
 13283                           
 13284                           ;eusart1.c: 188: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
 13285  003C22  0E7D               	movlw	125
 13286  003C24  643F               	cpfsgt	_eusart1TxTail,c
 13287  003C26  D002               	goto	i2l6163
 13288                           
 13289                           ;eusart1.c: 189: eusart1TxTail = 0;
 13290  003C28  0E00               	movlw	0
 13291  003C2A  6E3F               	movwf	_eusart1TxTail,c
 13292  003C2C                     i2l6163:
 13293                           
 13294                           ;eusart1.c: 190: }
 13295                           ;eusart1.c: 191: eusart1TxBufferRemaining++;
 13296  003C2C  2A3D               	incf	_eusart1TxBufferRemaining,f,c	;volatile
 13297                           
 13298                           ;eusart1.c: 192: } else {
 13299  003C2E  0012               	return	
 13300  003C30                     i2l520:
 13301                           
 13302                           ;eusart1.c: 193: PIE1bits.TX1IE = 0;
 13303  003C30  989D               	bcf	3997,4,c	;volatile
 13304  003C32  0012               	return	
 13305  003C34                     __end_of_EUSART1_Transmit_ISR:
 13306                           	opt stack 0
 13307                           pclatu	equ	0xFFB
 13308                           pclath	equ	0xFFA
 13309                           tblptru	equ	0xFF8
 13310                           tblptrh	equ	0xFF7
 13311                           tblptrl	equ	0xFF6
 13312                           tablat	equ	0xFF5
 13313                           prodh	equ	0xFF4
 13314                           prodl	equ	0xFF3
 13315                           intcon	equ	0xFF2
 13316                           intcon2	equ	0xFF1
 13317                           postinc0	equ	0xFEE
 13318                           fsr0h	equ	0xFEA
 13319                           fsr0l	equ	0xFE9
 13320                           wreg	equ	0xFE8
 13321                           postdec1	equ	0xFE5
 13322                           fsr1h	equ	0xFE2
 13323                           fsr1l	equ	0xFE1
 13324                           bsr	equ	0xFE0
 13325                           indf2	equ	0xFDF
 13326                           postinc2	equ	0xFDE
 13327                           postdec2	equ	0xFDD
 13328                           fsr2h	equ	0xFDA
 13329                           fsr2l	equ	0xFD9
 13330                           status	equ	0xFD8
 13331                           
 13332 ;; *************** function _EUSART1_Receive_ISR *****************
 13333 ;; Defined at:
 13334 ;;		line 197 in file "../eusart1.c"
 13335 ;; Parameters:    Size  Location     Type
 13336 ;;		None
 13337 ;; Auto vars:     Size  Location     Type
 13338 ;;		None
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  1    wreg      void 
 13341 ;; Registers used:
 13342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13343 ;; Tracked objects:
 13344 ;;		On entry : 0/0
 13345 ;;		On exit  : 0/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13348 ;;      Params:         0       0       0       0       0       0       0       0       0
 13349 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13350 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13351 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13352 ;;Total ram usage:        0 bytes
 13353 ;; Hardware stack levels used:    1
 13354 ;; This function calls:
 13355 ;;		Nothing
 13356 ;; This function is called by:
 13357 ;;		_tc_high
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text39
 13362  003C34                     __ptext39:
 13363                           	opt stack 0
 13364  003C34                     _EUSART1_Receive_ISR:
 13365                           	opt stack 20
 13366                           
 13367                           ;eusart1.c: 198: if (1 == RCSTA1bits.OERR) {
 13368                           
 13369                           ;incstack = 0
 13370  003C34  A2AB               	btfss	4011,1,c	;volatile
 13371  003C36  D002               	goto	i2l6143
 13372                           
 13373                           ;eusart1.c: 201: RCSTA1bits.CREN = 0;
 13374  003C38  98AB               	bcf	4011,4,c	;volatile
 13375                           
 13376                           ;eusart1.c: 202: RCSTA1bits.CREN = 1;
 13377  003C3A  88AB               	bsf	4011,4,c	;volatile
 13378  003C3C                     i2l6143:
 13379                           
 13380                           ;eusart1.c: 203: }
 13381                           ;eusart1.c: 206: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 13382  003C3C  503B               	movf	_eusart1RxHead,w,c
 13383  003C3E  0D01               	mullw	1
 13384  003C40  0E00               	movlw	low _eusart1RxBuffer
 13385  003C42  24F3               	addwf	prodl,w,c
 13386  003C44  6ED9               	movwf	fsr2l,c
 13387  003C46  0E01               	movlw	high _eusart1RxBuffer
 13388  003C48  20F4               	addwfc	prodh,w,c
 13389  003C4A  6EDA               	movwf	fsr2h,c
 13390  003C4C  CFAE FFDF          	movff	4014,indf2	;volatile
 13391  003C50  2A3B               	incf	_eusart1RxHead,f,c
 13392                           
 13393                           ;eusart1.c: 207: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
 13394  003C52  0E7D               	movlw	125
 13395  003C54  643B               	cpfsgt	_eusart1RxHead,c
 13396  003C56  D002               	goto	i2l6151
 13397                           
 13398                           ;eusart1.c: 208: eusart1RxHead = 0;
 13399  003C58  0E00               	movlw	0
 13400  003C5A  6E3B               	movwf	_eusart1RxHead,c
 13401  003C5C                     i2l6151:
 13402                           
 13403                           ;eusart1.c: 209: }
 13404                           ;eusart1.c: 210: eusart1RxCount++;
 13405  003C5C  2A3A               	incf	_eusart1RxCount,f,c	;volatile
 13406  003C5E  0012               	return		;funcret
 13407  003C60                     __end_of_EUSART1_Receive_ISR:
 13408                           	opt stack 0
 13409                           pclatu	equ	0xFFB
 13410                           pclath	equ	0xFFA
 13411                           tblptru	equ	0xFF8
 13412                           tblptrh	equ	0xFF7
 13413                           tblptrl	equ	0xFF6
 13414                           tablat	equ	0xFF5
 13415                           prodh	equ	0xFF4
 13416                           prodl	equ	0xFF3
 13417                           intcon	equ	0xFF2
 13418                           intcon2	equ	0xFF1
 13419                           postinc0	equ	0xFEE
 13420                           fsr0h	equ	0xFEA
 13421                           fsr0l	equ	0xFE9
 13422                           wreg	equ	0xFE8
 13423                           postdec1	equ	0xFE5
 13424                           fsr1h	equ	0xFE2
 13425                           fsr1l	equ	0xFE1
 13426                           bsr	equ	0xFE0
 13427                           indf2	equ	0xFDF
 13428                           postinc2	equ	0xFDE
 13429                           postdec2	equ	0xFDD
 13430                           fsr2h	equ	0xFDA
 13431                           fsr2l	equ	0xFD9
 13432                           status	equ	0xFD8
 13433                           pclatu	equ	0xFFB
 13434                           pclath	equ	0xFFA
 13435                           tblptru	equ	0xFF8
 13436                           tblptrh	equ	0xFF7
 13437                           tblptrl	equ	0xFF6
 13438                           tablat	equ	0xFF5
 13439                           prodh	equ	0xFF4
 13440                           prodl	equ	0xFF3
 13441                           intcon	equ	0xFF2
 13442                           intcon2	equ	0xFF1
 13443                           postinc0	equ	0xFEE
 13444                           fsr0h	equ	0xFEA
 13445                           fsr0l	equ	0xFE9
 13446                           wreg	equ	0xFE8
 13447                           postdec1	equ	0xFE5
 13448                           fsr1h	equ	0xFE2
 13449                           fsr1l	equ	0xFE1
 13450                           bsr	equ	0xFE0
 13451                           indf2	equ	0xFDF
 13452                           postinc2	equ	0xFDE
 13453                           postdec2	equ	0xFDD
 13454                           fsr2h	equ	0xFDA
 13455                           fsr2l	equ	0xFD9
 13456                           status	equ	0xFD8
 13457                           
 13458                           	psect	rparam
 13459  0000                     pclatu	equ	0xFFB
 13460                           pclath	equ	0xFFA
 13461                           tblptru	equ	0xFF8
 13462                           tblptrh	equ	0xFF7
 13463                           tblptrl	equ	0xFF6
 13464                           tablat	equ	0xFF5
 13465                           prodh	equ	0xFF4
 13466                           prodl	equ	0xFF3
 13467                           intcon	equ	0xFF2
 13468                           intcon2	equ	0xFF1
 13469                           postinc0	equ	0xFEE
 13470                           fsr0h	equ	0xFEA
 13471                           fsr0l	equ	0xFE9
 13472                           wreg	equ	0xFE8
 13473                           postdec1	equ	0xFE5
 13474                           fsr1h	equ	0xFE2
 13475                           fsr1l	equ	0xFE1
 13476                           bsr	equ	0xFE0
 13477                           indf2	equ	0xFDF
 13478                           postinc2	equ	0xFDE
 13479                           postdec2	equ	0xFDD
 13480                           fsr2h	equ	0xFDA
 13481                           fsr2l	equ	0xFD9
 13482                           status	equ	0xFD8
 13483                           
 13484                           	psect	temp
 13485  000040                     btemp:
 13486                           	opt stack 0
 13487  000040                     	ds	1
 13488  0000                     int$flags	set	btemp
 13489                           pclatu	equ	0xFFB
 13490                           pclath	equ	0xFFA
 13491                           tblptru	equ	0xFF8
 13492                           tblptrh	equ	0xFF7
 13493                           tblptrl	equ	0xFF6
 13494                           tablat	equ	0xFF5
 13495                           prodh	equ	0xFF4
 13496                           prodl	equ	0xFF3
 13497                           intcon	equ	0xFF2
 13498                           intcon2	equ	0xFF1
 13499                           postinc0	equ	0xFEE
 13500                           fsr0h	equ	0xFEA
 13501                           fsr0l	equ	0xFE9
 13502                           wreg	equ	0xFE8
 13503                           postdec1	equ	0xFE5
 13504                           fsr1h	equ	0xFE2
 13505                           fsr1l	equ	0xFE1
 13506                           bsr	equ	0xFE0
 13507                           indf2	equ	0xFDF
 13508                           postinc2	equ	0xFDE
 13509                           postdec2	equ	0xFDD
 13510                           fsr2h	equ	0xFDA
 13511                           fsr2l	equ	0xFD9
 13512                           status	equ	0xFD8


Data Sizes:
    Strings     64
    Constant    11
    Data        10
    BSS         907
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160     45     103
    BANK1           256      0     252
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), Data(BANK0[10]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[12]), STR_8(CODE[9]), STR_7(CODE[9]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[9]), 
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    pLen	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), Data(BANK0[10]), 

    pData	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), Data(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Update_StateMchn->_GETxAPIxVAL
    _Update_StateMchn->_Green_Led
    _Update_StateMchn->_Red_Led
    _Train_Path->_GETxAPIxVAL
    _Train_Move_Right_Start->_GETxAPIxVAL
    _Train_Move_Right_Brake->_GETxAPIxVAL
    _Train_Move_Left_Start->_GETxAPIxVAL
    _Train_Move_Left_Brake->_GETxAPIxVAL
    _Right_Mountain_From_The_Right->_GETxAPIxVAL
    _Right_Mountain_From_The_Left->_GETxAPIxVAL
    _Left_Mountain_From_The_Right->_GETxAPIxVAL
    _Left_Mountain_From_The_Left->_GETxAPIxVAL
    _SETxPWM->_GETxAPIxVAL
    _Junction->_GETxAPIxVAL
    _Eeprom_Store->_GETxAPIxVAL
    _Debounce_Inputs->_GETxAPIxVAL
    _SetDCPWM1->_GETxAPIxVAL
    _READxRECEIVEDxMESSAGE->_EUSART1_Read
    _TranslateMessage->_GETxAPIxRW
    _TranslateMessage->_GETxAPIxVAL
    _atoi->_isdigit
    _SETxAPIxVAL->_GETxAPIxVAL
    _printf->___lwmod
    _printf->_putch

Critical Paths under _tc_low in COMRAM

    None.

Critical Paths under _tc_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Update_StateMchn
    _Update_StateMchn->_Train_Path
    _Train_Path->_Left_Mountain_From_The_Left
    _Train_Path->_Left_Mountain_From_The_Right
    _Train_Path->_Right_Mountain_From_The_Left
    _Train_Path->_Right_Mountain_From_The_Right
    _Train_Move_Right_Start->_SETxPWM
    _Train_Move_Right_Brake->_SETxPWM
    _Train_Move_Left_Start->_SETxPWM
    _Train_Move_Left_Brake->_SETxPWM
    _Right_Mountain_From_The_Right->_SETxPWM
    _Right_Mountain_From_The_Left->_SETxPWM
    _Left_Mountain_From_The_Right->_SETxPWM
    _Left_Mountain_From_The_Left->_SETxPWM
    _SETxPWM->_SETxAPIxVAL
    _Junction->_SETxAPIxVAL
    _Eeprom_Store->_GETxAPIxVAL
    _Debounce_Inputs->_SETxAPIxVAL
    _SetDCPWM1->_GETxAPIxVAL
    _READxRECEIVEDxMESSAGE->_TranslateMessage
    _TranslateMessage->_SETxAPIxVAL
    _atoi->___wmul
    _Init_Pwm->_SETxAPIxVAL
    _SETxAPIxVAL->_SENDxMESSAGE
    _SENDxMESSAGE->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _tc_low in BANK0

    None.

Critical Paths under _tc_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_low in BANK1

    None.

Critical Paths under _tc_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_low in BANK2

    None.

Critical Paths under _tc_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_low in BANK3

    None.

Critical Paths under _tc_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_low in BANK4

    None.

Critical Paths under _tc_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_low in BANK5

    None.

Critical Paths under _tc_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tc_low in BANK6

    None.

Critical Paths under _tc_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tc_low in BANK7

    None.

Critical Paths under _tc_high in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  197701
                     _APIxInitialize
                 _EUSART1_Initialize
                           _Init_Pwm
                        _Init_Timers
              _READxRECEIVEDxMESSAGE
                   _Update_StateMchn
 ---------------------------------------------------------------------------------
 (1) _Update_StateMchn                                     2     2      0  172183
                                             43 BANK0      2     2      0
                    _Debounce_Inputs
                       _Eeprom_Store
                        _GETxAPIxVAL
                          _Green_Led
                           _Junction
                            _Red_Led
                        _SETxAPIxVAL
                         _Train_Path
 ---------------------------------------------------------------------------------
 (2) _Train_Path                                           2     1      1  144932
                                             41 BANK0      2     1      1
                        _GETxAPIxVAL
                           _Junction
        _Left_Mountain_From_The_Left
       _Left_Mountain_From_The_Right
       _Right_Mountain_From_The_Left
      _Right_Mountain_From_The_Right
                        _SETxAPIxVAL
              _Train_Move_Left_Brake
              _Train_Move_Left_Start
             _Train_Move_Right_Brake
             _Train_Move_Right_Start
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Right_Start                               0     0      0   19950
                        _GETxAPIxVAL
                        _SETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Right_Brake                               0     0      0   19950
                        _GETxAPIxVAL
                        _SETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Left_Start                                0     0      0   19950
                        _GETxAPIxVAL
                        _SETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Left_Brake                                0     0      0   19950
                        _GETxAPIxVAL
                        _SETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Right_Mountain_From_The_Right                        1     1      0   11413
                                             40 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Right_Mountain_From_The_Left                         1     1      0   11413
                                             40 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Left_Mountain_From_The_Right                         1     1      0   11413
                                             40 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Left_Mountain_From_The_Left                          1     1      0   11413
                                             40 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (4) _SETxPWM                                              7     4      3   11289
                                             33 BANK0      7     4      3
                        _GETxAPIxVAL (ARG)
                        _SETxAPIxVAL
 ---------------------------------------------------------------------------------
 (3) _Junction                                             2     1      1    9678
                                             33 BANK0      2     1      1
                        _GETxAPIxVAL
                        _SETxAPIxVAL
 ---------------------------------------------------------------------------------
 (2) _Red_Led                                              1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Green_Led                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Eeprom_Store                                         0     0      0      31
                        _GETxAPIxVAL
 ---------------------------------------------------------------------------------
 (2) _Debounce_Inputs                                      2     2      0    8837
                                             33 BANK0      2     2      0
                        _GETxAPIxVAL
                        _SETxAPIxVAL
                          _SetDCPWM1
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM1                                            6     4      2     176
                                              2 BANK0      6     4      2
                        _GETxAPIxVAL (ARG)
 ---------------------------------------------------------------------------------
 (1) _READxRECEIVEDxMESSAGE                                4     4      0   16693
                                             37 BANK0      4     4      0
                       _EUSART1_Read
                   _TranslateMessage
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TranslateMessage                                     4     4      0   14601
                                             33 BANK0      4     4      0
                         _GETxAPIxRW
                        _GETxAPIxVAL
                       _SENDxMESSAGE
                        _SETxAPIxVAL
                               _atoi
                             _printf
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1050
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _GETxAPIxVAL                                          3     1      2      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _GETxAPIxRW                                           3     1      2      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Pwm                                             0     0      0    8630
                        _SETxAPIxVAL
 ---------------------------------------------------------------------------------
 (5) _SETxAPIxVAL                                          5     3      2    8630
                                             28 BANK0      5     3      2
                        _GETxAPIxVAL (ARG)
                       _SENDxMESSAGE
 ---------------------------------------------------------------------------------
 (6) _SENDxMESSAGE                                         3     1      2    2438
                                             25 BANK0      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (7) _printf                                              23    17      6    2068
                                             11 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     386
                                             31 COMRAM     1     1      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Initialize                                   2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _APIxInitialize                                       2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _tc_low                                              17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _tc_high                                            14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Receive_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APIxInitialize
   _EUSART1_Initialize
   _Init_Pwm
     _SETxAPIxVAL
       _GETxAPIxVAL (ARG)
       _SENDxMESSAGE (ARG)
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _putch
   _Init_Timers
   _READxRECEIVEDxMESSAGE
     _EUSART1_Read
     _TranslateMessage
       _GETxAPIxRW
       _GETxAPIxVAL
       _SENDxMESSAGE
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _putch
       _SETxAPIxVAL
         _GETxAPIxVAL (ARG)
         _SENDxMESSAGE (ARG)
           _printf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _putch
       _atoi
         ___wmul
         _isdigit
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _Update_StateMchn
     _Debounce_Inputs
       _GETxAPIxVAL
       _SETxAPIxVAL
         _GETxAPIxVAL (ARG)
         _SENDxMESSAGE (ARG)
           _printf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _putch
       _SetDCPWM1
         _GETxAPIxVAL (ARG)
     _Eeprom_Store
       _GETxAPIxVAL
     _GETxAPIxVAL
     _Green_Led
     _Junction
       _GETxAPIxVAL
       _SETxAPIxVAL
         _GETxAPIxVAL (ARG)
         _SENDxMESSAGE (ARG)
           _printf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _putch
     _Red_Led
     _SETxAPIxVAL
       _GETxAPIxVAL (ARG)
       _SENDxMESSAGE (ARG)
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _putch
     _Train_Path
       _GETxAPIxVAL
       _Junction
         _GETxAPIxVAL
         _SETxAPIxVAL
           _GETxAPIxVAL (ARG)
           _SENDxMESSAGE (ARG)
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
       _Left_Mountain_From_The_Left
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _GETxAPIxVAL (ARG)
             _SENDxMESSAGE (ARG)
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 _putch
       _Left_Mountain_From_The_Right
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _GETxAPIxVAL (ARG)
             _SENDxMESSAGE (ARG)
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 _putch
       _Right_Mountain_From_The_Left
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _GETxAPIxVAL (ARG)
             _SENDxMESSAGE (ARG)
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 _putch
       _Right_Mountain_From_The_Right
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _GETxAPIxVAL (ARG)
             _SENDxMESSAGE (ARG)
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 _putch
       _SETxAPIxVAL
         _GETxAPIxVAL (ARG)
         _SENDxMESSAGE (ARG)
           _printf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _putch
       _Train_Move_Left_Brake
         _GETxAPIxVAL
         _SETxAPIxVAL
           _GETxAPIxVAL (ARG)
           _SENDxMESSAGE (ARG)
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _GETxAPIxVAL (ARG)
             _SENDxMESSAGE (ARG)
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 _putch
       _Train_Move_Left_Start
         _GETxAPIxVAL
         _SETxAPIxVAL
           _GETxAPIxVAL (ARG)
           _SENDxMESSAGE (ARG)
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _GETxAPIxVAL (ARG)
             _SENDxMESSAGE (ARG)
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 _putch
       _Train_Move_Right_Brake
         _GETxAPIxVAL
         _SETxAPIxVAL
           _GETxAPIxVAL (ARG)
           _SENDxMESSAGE (ARG)
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _GETxAPIxVAL (ARG)
             _SENDxMESSAGE (ARG)
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 _putch
       _Train_Move_Right_Start
         _GETxAPIxVAL
         _SETxAPIxVAL
           _GETxAPIxVAL (ARG)
           _SENDxMESSAGE (ARG)
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _GETxAPIxVAL (ARG)
             _SENDxMESSAGE (ARG)
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 _putch

 _tc_low (ROOT)

 _tc_high (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     240      21       28.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FC       7       98.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      67       5       64.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A2      20        0.0%
DATA                 0      0     3E2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Nov 06 19:39:20 2017

                  _eusart1TxBufferRemaining 003D                                          bsr 000FE0  
                       ___wmul@multiplicand 0092                                 __CFG_BORV$3 000000  
                               ?_GETxAPIxRW 0090                                __CFG_CP0$OFF 000000  
                              __CFG_CP1$OFF 000000                                __CFG_CP2$OFF 000000  
                              __CFG_CP3$OFF 000000                                         l164 0872  
                                       l318 12F6                                         l514 3D24  
                                       l338 13E8                                         l349 2230  
                                       l622 1BFA                                         l731 3892  
                                       l661 3638                                         l670 36AE  
                                       l734 38BE                                         l750 383E  
                                       l664 365C                                         l729 388E  
                                       l745 380E                                         l658 360A  
                                       l738 38EA                                         l754 386A  
                                       l667 368A                                         l747 3812  
                                       _API 01FC                                __CFG_CPB$OFF 000000  
                              _Stop_Program 007D                                         _PR2 000FCB  
                              __CFG_CPD$OFF 000000                                __CFG_BOR$OFF 000000  
                                       prod 000FF3                                         wreg 000FE8  
                    ?_READxRECEIVEDxMESSAGE 0001            Train_Move_Right_Start@Return_Val 00C5  
                              ?_GETxAPIxVAL 0090                             APIxInitialize@i 0090  
                              __CFG_LVP$OFF 000000         __end_of_Left_Mountain_From_The_Left 33C6  
               _Left_Mountain_From_The_Left 3294                                __CFG_WDT$OFF 000000  
     __end_of_Right_Mountain_From_The_Right 3160      __size_of_Right_Mountain_From_The_Right 0134  
             _Right_Mountain_From_The_Right 302C                                        l1360 35DE  
                                      l1610 3978                                        l1620 3AAE  
                                      l5103 3896                                        l5113 38C2  
                                      l5109 38AE                                        l5125 38EE  
                                      l5119 38DA                                        l5135 382E  
                                      l5151 386E                                        l5145 385A  
                                      l5129 3816                                        l7001 2B14  
                                      l5139 3842                                        l7003 2B30  
                                      l7021 32D8                                        l7015 32BE  
                                      l7017 32D0                                        l7009 329A  
                                      l7201 3408                                        l7113 3264  
                                      l7105 3232                                        l7121 327E  
                                      l8001 0A10                                        l5427 3BD6  
                                      l7115 3270                                        l7123 328E  
                                      l8011 0A4C                                        l5437 3BFE  
                                      l7053 3396                                        l7045 3366  
                                      l7061 33B0                                        l7109 3242  
                                      l7117 3276                                        l7141 3070  
                                      l8005 0A20                                        l7311 152C  
                                      l7303 150A                                        l7055 33A2  
                                      l7039 3330                                        l7063 33C0  
                                      l7135 3056                                        l8103 0C90  
                                      l8023 0A94                                        l7313 153E  
                                      l7305 1522                                        l7049 3376  
                                      l7057 33A8                                        l7233 34C6  
                                      l7225 3494                                        l7241 34E0  
                                      l7081 31A4                                        l7137 3068  
                                      l7129 3032                                        l8105 0C94  
                                      l8041 0B02                                        l8033 0ADA  
                                      l8017 0A70                                        l7251 34FE  
                                      l7411 178C                                        l7403 173A  
                                      l7331 1598                                        l7323 1576  
                                      l7235 34D2                                        l7219 3460  
                                      l7243 34F0                                        l7075 318A  
                                      l8211 0F30                                        l8035 0ADE  
                                      l7261 3544                                        l7413 179E  
                                      l7405 1766                                        l7333 15AA  
                                      l7325 158E                                        l7229 34A4  
                                      l7237 34D8                                        l7077 319C  
                                      l7069 3166                                        l7173 3130  
                                      l7165 3100                                        l7181 314A  
                                      l8205 0F24                                        l8133 0D90  
                                      l8109 0C9E                                        l8045 0B12  
                                      l8029 0AB8                                        l6615 3928  
                                      l7511 1A0C                                        l7503 19BA  
                                      l7431 180C                                        l7423 17BA  
                                      l7351 1604                                        l7319 1564  
                                      l7343 15E2                                        l7175 313C  
                                      l7159 30CA                                        l7183 315A  
                                      l8223 0F6C                                        l8207 0F28  
                                      l8143 0DCA                                        l8135 0D98  
                                      l8063 0B94                                        l6617 3934  
                                      l7265 3556                                        l7249 34F8  
                                      l7513 1A1E                                        l7505 19E6  
                                      l7433 181E                                        l7425 17E6  
                                      l7353 1616                                        l7345 15FA  
                                      l7169 3110                                        l7177 3142  
                                      l8321 1198                                        l8305 10F2  
                                      l8233 0F7E                                        l8209 0F2C  
                                      l8217 0F3E                                        l8161 0E38  
                                      l8153 0E14                                        l8145 0DCE  
                                      l8129 0D60                                        l8081 0C00  
                                      l8313 112E                                        l6627 396A  
                                      l6619 393A                                        l6643 3AA2  
                                      l6635 3A6E                                        l7267 35A0  
                                      l7531 1A78                                        l7523 1A3A  
                                      l7451 188C                                        l7419 17A8  
                                      l7443 183A                                        l7371 168C  
                                      l7339 15D0                                        l7363 164E  
                                      l7291 14C0                                        l6715 37CE  
                                      l7195 33EE                                        l7099 31FC  
                                      l8411 12FE                                        l8403 12D2  
                                      l8315 117C                                        l8307 1120  
                                      l8243 0FAC                                        l8227 0F70  
                                      l8163 0E3C                                        l8139 0DB2  
                                      l8075 0BDC                                        l8059 0B84  
                                      l6637 3A78                                        l6653 28BA  
                                      l7269 35A6                                        l7533 1A8A  
                                      l7525 1A52                                        l7453 189E  
                                      l7445 1866                                        l7373 169E  
                                      l7365 1666                                        l7293 14D2  
                                      l7285 14B6                                        l6741 2C80  
                                      l7197 3400                                        l7189 33CC  
                                      l6901 2B38                                        l6813 2E50  
                                      l8421 132A                                        l8325 11A8  
                                      l8253 0FE8                                        l8181 0EA4  
                                      l8165 0E40                                        l8157 0E22  
                                      l8149 0DF2                                        l8093 0C48  
                                      l8069 0BB8                                        l6639 3A7E  
                                      l6671 2920                                        l6735 3C80  
                                      l7551 1AE4                                        l7519 1A28  
                                      l7543 1AA6                                        l7471 190C  
                                      l7439 1828                                        l7463 18BA  
                                      l7391 170C                                        l7359 163C  
                                      l7383 16BA                                        l6751 2CBE  
                                      l6743 2C88                                        l6831 2EC4  
                                      l7623 2246                                        l7615 221E  
                                      l8431 1348                                        l8407 12E8  
                                      l8335 11C6                                        l8255 0FEC  
                                      l8183 0EA8                                        l8167 0E44  
                                      l8175 0E60                                        l8087 0C24  
                                      l6649 28A6                                        l7553 1AF6  
                                      l7545 1ABE                                        l7473 191E  
                                      l7465 18E6                                        l7393 171E  
                                      l7385 16E6                                        l6753 2CD0  
                                      l6745 2C9A                                        l6761 2CF4  
                                      l6921 2BCA                                        l6913 2B96  
                                      l6825 2E9A                                        l6817 2E5C  
                                      l6809 2E24                                        l7633 226A  
                                      l8441 1366                                        l8417 131A  
                                      l8345 11E4                                        l8281 109A  
                                      l8257 0FF6                                        l8265 1008  
                                      l8249 0FBA                                        l8273 1044  
                                      l8185 0EAC                                        l8169 0E52  
                                      l8177 0E8E                                        l6683 2956  
                                      l6659 28EA                                        l8531 27D4  
                                      l8523 27B8                                        l7571 1B50  
                                      l7539 1A94                                        l7563 1B12  
                                      l7491 198C                                        l7459 18A8  
                                      l7483 193A                                        l7379 16A8  
                                      l7299 14F8                                        l6763 2D04  
                                      l6851 2F1E                                        l6843 2EF6  
                                      l6907 2B68                                        l6819 2E64  
                                      l6835 2ED2                                        l7811 2540  
                                      l7803 2530                                        l7715 23F0  
                                      l7643 22B0                                        l7635 2288  
                                      l7627 2254                                        l7619 2238  
                                      l8355 1202                                        l8291 10D2  
                                      l8283 10AC                                        l8275 1072  
                                      l8267 1036                                        l8259 0FFA  
                                      l8187 0EB0                                        l8195 0ECC  
                                      l8099 0C6C                                        l6693 29C2  
                                      l6669 291A                                        l8525 27BC  
                                      l8517 27A2                                        l8509 2740  
                                      l7573 1B62                                        l7565 1B2A  
                                      l7493 199E                                        l7485 1966  
                                      l6773 2D4E                                        l6765 2D0C  
                                      l6757 2CE2                                        l6749 2CAC  
                                      l6781 2D9C                                        l6853 2F26  
                                      l6941 2C4A                                        l6917 2B9E  
                                      l6837 2EEE                                        l7741 2468  
                                      l7653 22D4                                        l7629 2266  
                                      l8453 1384                                        l8365 1220  
                                      l8293 10D6                                        l8277 1076  
                                      l8189 0EBE                                        l8197 0EFA  
                                      l6687 296A                                        l6695 29CE  
                                      l7903 266E                                        l8543 27FA  
                                      l8551 282C                                        l8535 27DC  
                                      l7559 1B00                                        l7583 1B7E  
                                      l7479 1928                                        l7399 1728  
                                      l6783 2DB2                                        l6863 2F64  
                                      l6847 2F14                                        l6943 2C50  
                                      l6935 2C16                                        l6927 2BDE  
                                      l7815 2548                                        l7807 2538  
                                      l7751 2498                                        l7743 246C  
                                      l7735 2440                                        l7663 22FE  
                                      l7655 22F2                                        l7647 22BE  
                                      l7639 22A2                                        l7823 2560  
                                      l8463 13DA                                        l8455 13A0  
                                      l8375 123E                                        l8287 10BA  
                                      l8471 1408                                        l6689 2970  
                                      l6769 2D3A                                        l6873 2F9A  
                                      l6793 2DD8                                        l7745 247E  
                                      l7737 2452                                        l7673 2312  
                                      l7825 25B4                                        l8385 125C  
                                      l8297 10DA                                        l8289 10CE  
                                      l7923 270E                                        l7907 268E  
                                      l8539 27E8                                        l7579 1B6C  
                                      l7499 19A8                                        l6971 2A5A  
                                      l6963 2A24                                        l6955 29EE  
                                      l6883 2FD6                                        l6867 2F90  
                                      l6939 2C44                                        l6947 2C58  
                                      l7819 2558                                        l7771 24D8  
                                      l7747 2482                                        l7739 2456  
                                      l7691 2384                                        l7683 2358  
                                      l7675 2330                                        l7667 2304  
                                      l7659 22F8                                        l8459 13C4  
                                      l8299 10E4                                        l8651 39F0  
                                      l7909 26A0                                        l8565 2866  
                                      l6981 2A9A                                        l6869 2F96  
                                      l6893 300A                                        l6949 2C74  
                                      l6789 2DBA                                        l7765 24D2  
                                      l7749 2494                                        l7757 24AE  
                                      l8397 127A                                        l8469 13F0  
                                      l8645 39DE                                        l7919 26EC  
                                      l8559 285E                                        l8567 287E  
                                      l6975 2A86                                        l6895 3026  
                                      l6799 2DE6                                        l7791 2518  
                                      l7759 24CC                                        l7695 239A  
                                      l7687 236E                                        l8399 12AE  
                                      l6993 2B00                                        l6969 2A52  
                                      l6889 3002                                        l7777 24DE  
                                      l7785 24F2                                        l7795 2520  
                                      l7787 2510                                        l7971 08B4  
                                      l6997 2B0C                                        l6989 2AD2  
                                      l7965 087A                                        l7895 262A  
                                      l7799 2528                                        l7983 0928  
                                      l7993 0998                                        l7977 08EE  
                                      l7899 264C                                        l7997 09CE  
                                      l7989 0962                                        STR_1 0845  
                                      STR_2 0818                                        STR_3 0821  
                                      STR_4 082A                                        STR_5 0833  
                                      STR_6 083C                                        STR_7 082A  
                                      STR_8 0833                                        STR_9 080C  
            Right_Mountain_From_The_Left@rc 00B8                                        u6200 3AE0  
                                      u7000 1744                                        u7110 18C2  
                                      u7030 17C2                                        u7200 19C4  
                                      u7120 18C4                                        u7040 17C4  
                                      u7230 1A42                                        u7150 1942  
                                      u7070 1842                                        u8030 09F8  
                                      u7320 1B86                                        u7160 1944  
                                      u7080 1844                                        u7260 1AAE  
                                      u7236 1A44                                        u7326 1B88  
                                      u7190 19C2                                        u8320 0D8A  
                                      u7290 1B1A                                        u7266 1AB0  
                                      i2l92 3704                                        u6805 3B62  
                                      u6830 1512                                        u7296 1B1C  
                                      u6920 1656                                        i2l97 3742  
                                      u6860 157E                                        u6836 1514  
                                      u7910 1BFA                                        u6950 16C2  
                                      u6926 1658                                        u6960 16C4  
                                      u7850 265C                                        u6890 15EA  
                                      u6866 1580                                        u6990 1742  
                                      u6896 15EC                                        u7890 26FC  
                              __CFG_WDTPS$1 000000                                        _TXIF 007CF4  
                                      _Data 0086                                __CFG_PWRT$ON 000000  
                    __end_of_APIxInitialize 21FC              __size_of_Train_Move_Left_Brake 014A  
             __end_of_Train_Move_Left_Brake 2B36                                        _pLen 0078  
                                      _atoi 34F6                                        _main 3982  
                             ?_EUSART1_Read 0001              __size_of_Train_Move_Left_Start 0138  
                           __end_of_SETxPWM 380A                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        fsr0l 000FE9  
                                      fsr2h 000FDA                                        fsr1l 000FE1  
                                      indf2 000FDF                                        fsr2l 000FD9  
                                      btemp 0040               __end_of_Train_Move_Left_Start 302C  
                                      pclat 000FFA                                        prodh 000FF4  
                                      prodl 000FF3                                        start 00A6  
                           __end_of_DataLen 080C                               __CFG_IESO$OFF 000000  
               EUSART1_Initialize@baud_rate 0090                          Green_Led@Operation 0020  
                             __CFG_MCLRE$ON 000000                                ___param_bank 000010  
                             ??_Init_Timers 0020                             __end_of_Red_Led 388A  
                             __CFG_PLLDIV$5 000000                              __CFG_CCP2MX$ON 000000  
                                     ?_atoi 0096                                       ?_main 0001  
                                     _EEADR 000FA9                                       _CMCON 000FB4  
                          Red_Led@Operation 0020                                       _T0CON 000FD5  
                                     _T2CON 000FCA                             __end_of___lwdiv 3982  
                              SETxPWM@speed 00B1                             __end_of___lwmod 3AB8  
                                     i2l520 3C30                                       _TMR0H 000FD7  
                                     _TMR0L 000FD6                                       _SPBRG 000FAF  
                             __CFG_USBDIV$2 000000                                       _TRISA 000F92  
                                     _TRISB 000F93                                       _TRISC 000F94  
                                     _TRISD 000F95                                       _TRISE 000F96  
                             __CFG_WRT0$OFF 000000                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                               __CFG_WRT3$OFF 000000  
                      _EUSART1_Transmit_ISR 3C06                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
                             __CFG_WRTB$OFF 000000                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                                       _pData 0076  
                            __CFG_EBTRB$OFF 000000                             __end_of_dpowers 080B  
                           __end_of_isdigit 3C88                             __end_of_tc_high 377E  
                                     atoi@a 009B                                       atoi@s 0096  
                                     _putch 3D22                                       tablat 000FF5  
                           ?_APIxInitialize 0001                              ??_EUSART1_Read 0020  
                                     status 000FD8   Train_Move_Left_Brake@Train_Move_Wait_Time 0062  
                 __size_of_TranslateMessage 0176                         __size_of_GETxAPIxRW 001C  
                            __CFG_ICPRT$OFF 000000                        __end_of_Eeprom_Store 36BA  
                           __initialization 39F6                                __end_of_atoi 35E8  
                __end_of_EUSART1_Initialize 3B58                                __end_of_main 39F6  
                          __end_of_Init_Pwm 3CD2                                      ??_atoi 0098  
                                    ??_main 0021                         __end_of_Init_Timers 3D22  
                             __activetblptr 000002                            __end_of_Junction 2DB8  
                              _Led1_Counter 006E                           _Green_Led_Counter 0021  
                     ?_EUSART1_Transmit_ISR 0001                           ?_Update_StateMchn 0001  
                        ??_Update_StateMchn 00BB                                      _ADCON1 000FC1  
                                    _EEDATA 000FA8                                      _CCPR1L 000FBE  
                                 ??_SETxPWM 00B4                                      _EECON2 000FA7  
                                    ?_putch 0001                                      _API_RW 031C  
                        __size_of_Green_Led 0080                                      i2l6151 3C5C  
                                    i2l6143 3C3C                                      i2l6163 3C2C  
                                    i2l6253 3720                                      _INTCON 000FF2  
                                    i2l6265 3738                                      i2l6249 3706  
                                    i2l6259 372E                     ?_Train_Move_Right_Brake 0001  
                                    _RCREG1 000FAE                                      _SPBRGH 000FB0  
                        __size_of_SetDCPWM1 0044                     ?_Train_Move_Right_Start 0001  
                                    _TXREG1 000FAD              ?_Right_Mountain_From_The_Right 0001  
                                 ??_Red_Led 0020                              __CFG_XINST$OFF 000000  
           Train_Move_Left_Brake@Return_Val 00C2                                      ___wmul 3B9C  
                            __CFG_STVREN$ON 000000                                   ??___lwdiv 0020  
                                 ??___lwmod 0020                                      clear_0 39FE  
                                    clear_1 3A10                                      clear_2 3A1C  
                                    clear_3 3A28                                      _tc_low 0018  
                                    _printf 2898                              _Switch_Moutain 0081  
                                _Train_Path 21FC     Right_Mountain_From_The_Right@Return_Val 00C1  
    Left_Mountain_From_The_Right@Return_Val 00BF                              _Switch_Program 0082  
                                 ??_isdigit 0020                                   ??_tc_high 0001  
                 _Activate_Controls_Counter 006A                                __mediumconst 0000  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                                ?_SETxAPIxVAL 00AC  
                 _Button_Contact_Counter_LB 0025                   _Button_Contact_Counter_LF 0026  
                 _Button_Contact_Counter_RB 0028                   _Button_Contact_Counter_RF 0029  
            __end_of_Train_Move_Right_Brake 2C7A                             _eusart1RxBuffer 0100  
                      __size_of_GETxAPIxVAL 001C                             _eusart1TxBuffer 017E  
            __end_of_Train_Move_Right_Start 2EF4                        _Train_Move_Pwm_Count 0072  
                                __accesstop 0060                     __end_of__initialization 3A4E  
                           __CFG_PBADEN$OFF 000000                               ___rparam_used 000001  
                             _Received_Data 007B                              __pcstackCOMRAM 0001  
                              __pidataBANK0 3D2E                                 _Init_Timers 3D0A  
                             __end_of_putch 3D2E                           __end_of_Green_Led 390A  
                              ??_GETxAPIxRW 0020                     ??_READxRECEIVEDxMESSAGE 00B5  
                      __end_of_EUSART1_Read 3C06                           __end_of_SetDCPWM1 3B9C  
                           _Red_Led_Counter 0023                      ??_EUSART1_Transmit_ISR 0001  
Train_Move_Right_Start@Train_Move_Wait_Time 0068                    __size_of_Debounce_Inputs 0770  
               __end_of_EUSART1_Receive_ISR 3C60            Train_Move_Right_Brake@Return_Val 00C4  
                             ?_SENDxMESSAGE 00A9                                     ??_putch 0020  
                             _eusart1RxHead 003B                               _eusart1TxHead 003E  
                     __size_of_Eeprom_Store 00D2                 Junction@Junction_Left_Right 00B2  
                             _eusart1RxTail 003C                                  __pbssBANK0 0060  
                                __pbssBANK1 0100                               _eusart1TxTail 003F  
                                 ?_Init_Pwm 0001                            _TranslateMessage 25BA  
                        __end_of_GETxAPIxRW 3D0A                            GETxAPIxVAL@index 0020  
                          SETxAPIxVAL@index 00B0                                   ?_Junction 00B1  
                          SETxAPIxVAL@value 00AC        __size_of_Left_Mountain_From_The_Left 0132  
                                   ?___wmul 0090                                     _CCP1CON 000FBD  
                                   ?_tc_low 0001                                     ?_printf 009B  
                               ?_Train_Path 00B9                                _Eeprom_Store 35E8  
                                   _INTCON2 000FF1   Train_Move_Left_Start@Train_Move_Wait_Time 0064  
                            ??_SENDxMESSAGE 0021                            ??_APIxInitialize 0020  
                                   _SETxPWM 377E                            SETxPWM@direction 00B3  
                                   _DataLen 080B                             __CFG_VREGEN$OFF 000000  
                                ??_Init_Pwm 0021                                     _Red_Led 380A  
                     _Train_Move_Left_Brake 29EC                                  ??_Junction 0021  
                                   __Hparam 0000                       _Train_Move_Left_Start 2EF4  
                                   __Lparam 0000                        _Message_To_Translate 007A  
                           __size_of___wmul 0036                                     ___lwdiv 390A  
                                   ___lwmod 3A5C                                __psmallconst 0800  
                                   __pcinit 39F6                                     __ramtop 0800  
                           __size_of_tc_low 008E                                     __ptext0 3982  
                                   __ptext1 084E                                     __ptext2 21FC  
                                   __ptext3 2DB8                                     __ptext4 2B36  
                                   __ptext5 2EF4                                     __ptext6 29EC  
                                   __ptext7 302C                                     __ptext8 3160  
                                   __ptext9 33C6                        Train_Path@Return_Val 00C6  
                           __size_of_printf 0154                                     _dpowers 0801  
                                   _isdigit 3C60                                     _tc_high 0008  
                        _EUSART1_Initialize 3B0C                   _Train_Move_Pwm_Fast_Count 0074  
                            __pintcode_body 36BA                        end_of_initialization 3A4E  
                           _Switch_Junction 007F                           ??_Debounce_Inputs 00B1  
                       ?_EUSART1_Initialize 0001                        __size_of_SETxAPIxVAL 0054  
                             __Lmediumconst 0000                                     int_func 36BA  
                          SETxPWM@pwm_speed 00B6                   __size_of_Update_StateMchn 0BD8  
                       __size_of_Train_Path 03BE                                   _RCSTAbits 000FAB  
                                   printf@c 00A8                                     printf@f 009B  
                                   postdec1 000FE5                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc2 000FDE  
                     __size_of_EUSART1_Read 0034              Left_Mountain_From_The_Right@rc 00B8  
                      ??_EUSART1_Initialize 0020                                   _PORTAbits 000F80  
                                 _PORTBbits 000F81                                   _PORTCbits 000F82  
                                 _PORTDbits 000F83                                   _PORTEbits 000F84  
                                 _TRISAbits 000F92                                   _TRISBbits 000F93  
                                 _TRISCbits 000F94                                   _TRISDbits 000F95  
                                 _TRISEbits 000F96                Junction@Junction_Switch_Time 0060  
                    ?_Train_Move_Left_Brake 0001                                _EUSART1_Read 3BD2  
                                 _TXSTAbits 000FAC                      ?_Train_Move_Left_Start 0001  
                               _Switch_Main 0080                                 _Switch_Init 007E  
                      __end_of_SENDxMESSAGE 3CAE                                ?_Init_Timers 0001  
                        Junction@Return_Val 00BD                              __end_of___wmul 3BD2  
                               _BAUDCONbits 000FB8                        _Update_State_Machine 0085  
                            __end_of_tc_low 00A6                    __end_of_TranslateMessage 2730  
               _Button_Contact_Counter_Stop 002B                              __end_of_printf 29EC  
            __size_of_READxRECEIVEDxMESSAGE 0168                                   _Green_Led 388A  
             __end_of_READxRECEIVEDxMESSAGE 2898                         start_initialization 39F6  
                             ??_GETxAPIxVAL 0020                                   _SetDCPWM1 3B58  
                           SetDCPWM1@DCycle 0096                      _Mountain_Delay_Counter 0070  
              ?_Left_Mountain_From_The_Left 0001                           __size_of_Init_Pwm 0024  
                         __size_of_Junction 013E                                    ??___wmul 0020  
                               __pdataBANK0 00BD                            __CFG_LPT1OSC$OFF 000000  
                                  ??_tc_low 000F                                    ??_printf 00A1  
                            _eusart1RxCount 003A                                ??_Train_Path 0021  
                                ?_Green_Led 0001                                 __pbssBIGRAM 01FC  
                               __pbssCOMRAM 0021               __size_of_EUSART1_Transmit_ISR 002E  
                             __pcstackBANK0 0090                                  ?_SetDCPWM1 0092  
Train_Move_Right_Brake@Train_Move_Wait_Time 0066                                _isdigit$1860 0090  
                                  ?_SETxPWM 00B1                __size_of_EUSART1_Receive_ISR 002C  
                       __end_of_GETxAPIxVAL 3CEE               ??_Left_Mountain_From_The_Left 0021  
                                  ?_Red_Led 0001                            _Update_StateMchn 084E  
                          ___lwdiv@dividend 0090      Right_Mountain_From_The_Left@Return_Val 00C0  
     Left_Mountain_From_The_Left@Return_Val 00BE                          __end_of_Train_Path 25BA  
                                 __pintcode 0008                                    ?___lwdiv 0090  
      __end_of_Left_Mountain_From_The_Right 34F6       __size_of_Left_Mountain_From_The_Right 0130  
              _Left_Mountain_From_The_Right 33C6                                    ?___lwmod 0097  
                               __pintcodelo 0018                             GETxAPIxRW@index 0020  
                           _Debounce_Inputs 1426                                 __smallconst 0800  
                  ??_Train_Move_Right_Brake 0021                                    ?_isdigit 0001  
                                  ?_tc_high 0001             Right_Mountain_From_The_Right@rc 00B8  
                  ??_Train_Move_Right_Start 0021                       TranslateMessage@Index 00B3  
                     Junction@Straight_Bend 00B1                       TranslateMessage@Value 00B1  
              _Button_Contact_Counter_Start 002A                    _Reed_Contact_LMD_Counter 002E  
                          ___lwdiv@quotient 0095                              __size_of_putch 000C  
                            ___wmul@product 0094                       __size_of_SENDxMESSAGE 0026  
      __end_of_Right_Mountain_From_The_Left 3294       __size_of_Right_Mountain_From_The_Left 0134  
              _Right_Mountain_From_The_Left 3160                                    _PIE1bits 000F9D  
                            _Adjust_Counter 006C               Left_Mountain_From_The_Left@rc 00B8  
                                  _PIR1bits 000F9E                                    _PIR2bits 000FA1  
                                  _RCONbits 000FD0                              Train_Path@From 00BA  
                      __size_of_Init_Timers 0018               ?_Left_Mountain_From_The_Right 0001  
                         ___wmul@multiplier 0090                           SENDxMESSAGE@index 00AB  
                         SENDxMESSAGE@value 00A9                                 ??_Green_Led 0020  
                                printf@flag 00A4                                  printf@prec 00A5  
                               ??_SetDCPWM1 0094                                 _GETxAPIxVAL 3CD2  
                             ??_SETxAPIxVAL 00AE                                _SENDxMESSAGE 3C88  
                                 copy_data0 3A42                     ??_Train_Move_Left_Brake 0021  
                  _Reed_Contact_LMU_Counter 002F                            __size_of_SETxPWM 008C  
                   ??_Train_Move_Left_Start 0021                          SetDCPWM1@dutycycle 0092  
                                  _Init_Pwm 3CAE                       EUSART1_Read@readValue 0020  
                                _EECON1bits 000FA6                     __size_of_APIxInitialize 0666  
                                  __Hrparam 0000                                    _Junction 2C7A  
                          __size_of_Red_Led 0080               ?_Right_Mountain_From_The_Left 0001  
                                  __Lrparam 0000                                    _TrSwitch 0039  
                                  _RxSwitch 007C                    _Reed_Contact_RMD_Counter 0032  
                   __end_of_Debounce_Inputs 1B96                 __size_of_EUSART1_Initialize 004C  
                          __size_of___lwdiv 0078                            __size_of___lwmod 005C  
                         _Switch_Train_Path 0084                           _Switch_Train_Move 0083  
                          _Switch_Adjust_LB 0035                            _Switch_Adjust_LF 0036  
                          _Switch_Adjust_RB 0037                            _Switch_Adjust_RF 0038  
                         ?_TranslateMessage 0001             __size_of_Train_Move_Right_Brake 0144  
                          __size_of_isdigit 0028                            __size_of_tc_high 3776  
                        ??_TranslateMessage 0021                             ___lwdiv@divisor 0092  
           __size_of_Train_Move_Right_Start 013C                             ___lwdiv@counter 0094  
                                  __ptext10 3294                                    __ptext11 377E  
                                  __ptext20 34F6                                    __ptext12 2C7A  
                                  __ptext21 3C60                                    __ptext13 380A  
                                  __ptext30 2898                                    __ptext22 3B9C  
                                  __ptext14 388A                                    __ptext31 3D22  
                                  __ptext23 3CD2                                    __ptext15 35E8  
                                  __ptext32 3A5C                                    __ptext24 3CEE  
                                  __ptext16 1426                                    __ptext33 390A  
                                  __ptext25 3BD2                                    __ptext17 3B58  
                                  __ptext34 3B0C                                    __ptext26 3D0A  
                                  __ptext18 2730                                    __ptext35 1B96  
                                  __ptext27 3CAE                                    __ptext19 25BA  
                                  __ptext28 3AB8                                    __ptext29 3C88  
                                  __ptext38 3C06                                    __ptext39 3C34  
                             __size_of_atoi 00F2                               __size_of_main 0074  
                       __end_of_SETxAPIxVAL 3B0C                     _Reed_Contact_LB_Counter 002C  
                                  int$flags 0040                     _Reed_Contact_LF_Counter 002D  
                                  atoi@sign 009A                    _Reed_Contact_RMU_Counter 0033  
                                 printf@val 00A6                         _EUSART1_Receive_ISR 3C34  
                                _GETxAPIxRW 3CEE                       __CFG_CPUDIV$OSC2_PLL3 000000  
                                 putch@data 0020                               ?_Eeprom_Store 0001  
                  __end_of_Update_StateMchn 1426                                  _INTCONbits 000FF2  
           ??_Right_Mountain_From_The_Right 0021              ??_Left_Mountain_From_The_Right 0021  
                     _READxRECEIVEDxMESSAGE 2730                                    isdigit@c 0091  
                   _Reed_Contact_RB_Counter 0030                                    intlevel1 0000  
                                  intlevel2 0000                        ?_EUSART1_Receive_ISR 0001  
                          ___lwmod@dividend 0097                                  _RCSTA1bits 000FAB  
                   _Reed_Contact_RF_Counter 0031                      _Train_Move_Right_Brake 2B36  
              __end_of_EUSART1_Transmit_ISR 3C34                      _Train_Move_Right_Start 2DB8  
           Train_Move_Left_Start@Return_Val 00C3                                Train_Path@To 00B9  
                                  printf@ap 00A2                            ?_Debounce_Inputs 0001  
                  _Switch_Activate_Controls 0034              ??_Right_Mountain_From_The_Left 0021  
                            ??_Eeprom_Store 0021                             ___lwmod@divisor 0099  
                           ___lwmod@counter 0020                                 _SETxAPIxVAL 3AB8  
                        __CFG_FOSC$HSPLL_HS 000000                       ??_EUSART1_Receive_ISR 0001  
                            _APIxInitialize 1B96               _Button_Contact_Counter_Middle 0027  
