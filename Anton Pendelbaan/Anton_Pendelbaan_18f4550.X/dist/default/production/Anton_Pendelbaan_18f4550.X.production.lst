

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Oct 10 20:12:02 2017

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	idataCOMRAM
    57  002DAA                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for Train_Path@Return_Val
    61  002DAA  01                 	db	1
    62                           
    63                           	psect	idataBANK0
    64  002D98                     __pidataBANK0:
    65                           	opt stack 0
    66                           
    67                           ;initializer for Junction@Return_Val
    68  002D98  01                 	db	1
    69                           
    70                           ;initializer for Left_Mountain_From_The_Left@Return_Val
    71  002D99  01                 	db	1
    72                           
    73                           ;initializer for Left_Mountain_From_The_Right@Return_Val
    74  002D9A  01                 	db	1
    75                           
    76                           ;initializer for Right_Mountain_From_The_Left@Return_Val
    77  002D9B  01                 	db	1
    78                           
    79                           ;initializer for Right_Mountain_From_The_Right@Return_Val
    80  002D9C  01                 	db	1
    81                           
    82                           ;initializer for Train_Move_Left_Brake@Return_Val
    83  002D9D  01                 	db	1
    84                           
    85                           ;initializer for Train_Move_Left_Start@Return_Val
    86  002D9E  01                 	db	1
    87                           
    88                           ;initializer for Train_Move_Right_Brake@Return_Val
    89  002D9F  01                 	db	1
    90                           
    91                           ;initializer for Train_Move_Right_Start@Return_Val
    92  002DA0  01                 	db	1
    93  0000                     _ADCON1	set	4033
    94  0000                     _BAUDCONbits	set	4024
    95  0000                     _CCP1CON	set	4029
    96  0000                     _CCPR1L	set	4030
    97  0000                     _CMCON	set	4020
    98  0000                     _EEADR	set	4009
    99  0000                     _EECON1bits	set	4006
   100  0000                     _EECON2	set	4007
   101  0000                     _EEDATA	set	4008
   102  0000                     _INTCON	set	4082
   103  0000                     _INTCON2	set	4081
   104  0000                     _INTCONbits	set	4082
   105  0000                     _PIE1bits	set	3997
   106  0000                     _PIR1bits	set	3998
   107  0000                     _PIR2bits	set	4001
   108  0000                     _PORTAbits	set	3968
   109  0000                     _PORTBbits	set	3969
   110  0000                     _PORTCbits	set	3970
   111  0000                     _PORTDbits	set	3971
   112  0000                     _PR2	set	4043
   113  0000                     _RCONbits	set	4048
   114  0000                     _RCREG1	set	4014
   115  0000                     _RCSTA1bits	set	4011
   116  0000                     _RCSTAbits	set	4011
   117  0000                     _SPBRG	set	4015
   118  0000                     _SPBRGH	set	4016
   119  0000                     _T0CON	set	4053
   120  0000                     _T2CON	set	4042
   121  0000                     _TMR0H	set	4055
   122  0000                     _TMR0L	set	4054
   123  0000                     _TRISA	set	3986
   124  0000                     _TRISAbits	set	3986
   125  0000                     _TRISB	set	3987
   126  0000                     _TRISBbits	set	3987
   127  0000                     _TRISC	set	3988
   128  0000                     _TRISCbits	set	3988
   129  0000                     _TRISD	set	3989
   130  0000                     _TRISDbits	set	3989
   131  0000                     _TRISE	set	3990
   132  0000                     _TXREG1	set	4013
   133  0000                     _TXSTAbits	set	4012
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  002AA0                     __pcinit:
   139                           	opt stack 0
   140  002AA0                     start_initialization:
   141                           	opt stack 0
   142  002AA0                     __initialization:
   143                           	opt stack 0
   144                           
   145                           ; Clear objects allocated to BANK2 (126 bytes)
   146  002AA0  EE02  F000         	lfsr	0,__pbssBANK2
   147  002AA4  0E7E               	movlw	126
   148  002AA6                     clear_0:
   149  002AA6  6AEE               	clrf	postinc0,c
   150  002AA8  06E8               	decf	wreg,f,c
   151  002AAA  E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK1 (252 bytes)
   154  002AAC  EE01  F000         	lfsr	0,__pbssBANK1
   155  002AB0  0EFC               	movlw	252
   156  002AB2                     clear_1:
   157  002AB2  6AEE               	clrf	postinc0,c
   158  002AB4  06E8               	decf	wreg,f,c
   159  002AB6  E1FD               	bnz	clear_1
   160                           
   161                           ; Clear objects allocated to BANK0 (144 bytes)
   162  002AB8  EE00  F060         	lfsr	0,__pbssBANK0
   163  002ABC  0E90               	movlw	144
   164  002ABE                     clear_2:
   165  002ABE  6AEE               	clrf	postinc0,c
   166  002AC0  06E8               	decf	wreg,f,c
   167  002AC2  E1FD               	bnz	clear_2
   168                           
   169                           ; Clear objects allocated to COMRAM (43 bytes)
   170  002AC4  EE00  F001         	lfsr	0,__pbssCOMRAM
   171  002AC8  0E2B               	movlw	43
   172  002ACA                     clear_3:
   173  002ACA  6AEE               	clrf	postinc0,c
   174  002ACC  06E8               	decf	wreg,f,c
   175  002ACE  E1FD               	bnz	clear_3
   176                           
   177                           ; Initialize objects allocated to BANK0 (9 bytes)
   178                           ; load TBLPTR registers with __pidataBANK0
   179  002AD0  0E98               	movlw	low __pidataBANK0
   180  002AD2  6EF6               	movwf	tblptrl,c
   181  002AD4  0E2D               	movlw	high __pidataBANK0
   182  002AD6  6EF7               	movwf	tblptrh,c
   183  002AD8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   184  002ADA  6EF8               	movwf	tblptru,c
   185  002ADC  EE00  F0F0         	lfsr	0,__pdataBANK0
   186  002AE0  EE10 F009          	lfsr	1,9
   187  002AE4                     copy_data0:
   188  002AE4  0009               	tblrd		*+
   189  002AE6  CFF5 FFEE          	movff	tablat,postinc0
   190  002AEA  50E5               	movf	postdec1,w,c
   191  002AEC  50E1               	movf	fsr1l,w,c
   192  002AEE  E1FA               	bnz	copy_data0
   193                           
   194                           ; Initialize objects allocated to COMRAM (1 bytes)
   195                           ; load TBLPTR registers with __pidataCOMRAM
   196  002AF0  0EAA               	movlw	low __pidataCOMRAM
   197  002AF2  6EF6               	movwf	tblptrl,c
   198  002AF4  0E2D               	movlw	high __pidataCOMRAM
   199  002AF6  6EF7               	movwf	tblptrh,c
   200  002AF8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   201  002AFA  6EF8               	movwf	tblptru,c
   202  002AFC  0009               	tblrd		*+	;fetch initializer
   203  002AFE  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   204  002B02                     end_of_initialization:
   205                           	opt stack 0
   206  002B02                     __end_of__initialization:
   207                           	opt stack 0
   208  002B02  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209  002B04  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210  002B06  0E00               	movlw	low (__Lmediumconst shr (0+16))
   211  002B08  6EF8               	movwf	tblptru,c
   212  002B0A  0100               	movlb	0
   213  002B0C  EF88  F015         	goto	_main	;jump to C main() function
   214                           tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           tblptrl	equ	0xFF6
   217                           tablat	equ	0xFF5
   218                           postinc0	equ	0xFEE
   219                           wreg	equ	0xFE8
   220                           postdec1	equ	0xFE5
   221                           fsr1l	equ	0xFE1
   222                           
   223                           	psect	bssCOMRAM
   224  000001                     __pbssCOMRAM:
   225                           	opt stack 0
   226  000001                     _Adjust_Counter:
   227                           	opt stack 0
   228  000001                     	ds	2
   229  000003                     _Green_Led_Counter:
   230                           	opt stack 0
   231  000003                     	ds	2
   232  000005                     _Mountain_Delay_Counter:
   233                           	opt stack 0
   234  000005                     	ds	2
   235  000007                     _Red_Led_Counter:
   236                           	opt stack 0
   237  000007                     	ds	2
   238  000009                     _Train_Move_Pwm_Count:
   239                           	opt stack 0
   240  000009                     	ds	2
   241  00000B                     _Train_Move_Pwm_Fast_Count:
   242                           	opt stack 0
   243  00000B                     	ds	2
   244  00000D                     _Button_Contact_Counter_LB:
   245                           	opt stack 0
   246  00000D                     	ds	1
   247  00000E                     _Button_Contact_Counter_Middle:
   248                           	opt stack 0
   249  00000E                     	ds	1
   250  00000F                     _Button_Contact_Counter_Start:
   251                           	opt stack 0
   252  00000F                     	ds	1
   253  000010                     _Button_Contact_Counter_Stop:
   254                           	opt stack 0
   255  000010                     	ds	1
   256  000011                     _Reed_Contact_LB_Counter:
   257                           	opt stack 0
   258  000011                     	ds	1
   259  000012                     _Reed_Contact_LF_Counter:
   260                           	opt stack 0
   261  000012                     	ds	1
   262  000013                     _Reed_Contact_LMD_Counter:
   263                           	opt stack 0
   264  000013                     	ds	1
   265  000014                     _Reed_Contact_LMU_Counter:
   266                           	opt stack 0
   267  000014                     	ds	1
   268  000015                     _Reed_Contact_RB_Counter:
   269                           	opt stack 0
   270  000015                     	ds	1
   271  000016                     _Reed_Contact_RF_Counter:
   272                           	opt stack 0
   273  000016                     	ds	1
   274  000017                     _Reed_Contact_RMD_Counter:
   275                           	opt stack 0
   276  000017                     	ds	1
   277  000018                     _Reed_Contact_RMU_Counter:
   278                           	opt stack 0
   279  000018                     	ds	1
   280  000019                     _Stop_Program:
   281                           	opt stack 0
   282  000019                     	ds	1
   283  00001A                     _Switch_Activate_Controls:
   284                           	opt stack 0
   285  00001A                     	ds	1
   286  00001B                     _Switch_Adjust_LB:
   287                           	opt stack 0
   288  00001B                     	ds	1
   289  00001C                     _Switch_Adjust_LF:
   290                           	opt stack 0
   291  00001C                     	ds	1
   292  00001D                     _Switch_Adjust_RB:
   293                           	opt stack 0
   294  00001D                     	ds	1
   295  00001E                     _Switch_Adjust_RF:
   296                           	opt stack 0
   297  00001E                     	ds	1
   298  00001F                     _Switch_Init:
   299                           	opt stack 0
   300  00001F                     	ds	1
   301  000020                     _Switch_Main:
   302                           	opt stack 0
   303  000020                     	ds	1
   304  000021                     _Switch_Moutain:
   305                           	opt stack 0
   306  000021                     	ds	1
   307  000022                     _Switch_Program:
   308                           	opt stack 0
   309  000022                     	ds	1
   310  000023                     _Switch_Train_Move:
   311                           	opt stack 0
   312  000023                     	ds	1
   313  000024                     _Switch_Train_Path:
   314                           	opt stack 0
   315  000024                     	ds	1
   316  000025                     _Update_State_Machine:
   317                           	opt stack 0
   318  000025                     	ds	1
   319  000026                     _eusart1RxCount:
   320                           	opt stack 0
   321  000026                     	ds	1
   322  000027                     _eusart1RxHead:
   323                           	opt stack 0
   324  000027                     	ds	1
   325  000028                     _eusart1RxTail:
   326                           	opt stack 0
   327  000028                     	ds	1
   328  000029                     _eusart1TxBufferRemaining:
   329                           	opt stack 0
   330  000029                     	ds	1
   331  00002A                     _eusart1TxHead:
   332                           	opt stack 0
   333  00002A                     	ds	1
   334  00002B                     _eusart1TxTail:
   335                           	opt stack 0
   336  00002B                     	ds	1
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           postdec1	equ	0xFE5
   344                           fsr1l	equ	0xFE1
   345                           
   346                           	psect	dataCOMRAM
   347  00004C                     __pdataCOMRAM:
   348                           	opt stack 0
   349  00004C                     Train_Path@Return_Val:
   350                           	opt stack 0
   351  00004C                     	ds	1
   352                           tblptru	equ	0xFF8
   353                           tblptrh	equ	0xFF7
   354                           tblptrl	equ	0xFF6
   355                           tablat	equ	0xFF5
   356                           postinc0	equ	0xFEE
   357                           wreg	equ	0xFE8
   358                           postdec1	equ	0xFE5
   359                           fsr1l	equ	0xFE1
   360                           
   361                           	psect	bssBANK0
   362  000060                     __pbssBANK0:
   363                           	opt stack 0
   364  000060                     _API:
   365                           	opt stack 0
   366  000060                     	ds	126
   367  0000DE                     Junction@Junction_Switch_Time:
   368                           	opt stack 0
   369  0000DE                     	ds	2
   370  0000E0                     Train_Move_Left_Brake@Train_Move_Wait_Time:
   371                           	opt stack 0
   372  0000E0                     	ds	2
   373  0000E2                     Train_Move_Left_Start@Train_Move_Wait_Time:
   374                           	opt stack 0
   375  0000E2                     	ds	2
   376  0000E4                     Train_Move_Right_Brake@Train_Move_Wait_Time:
   377                           	opt stack 0
   378  0000E4                     	ds	2
   379  0000E6                     Train_Move_Right_Start@Train_Move_Wait_Time:
   380                           	opt stack 0
   381  0000E6                     	ds	2
   382  0000E8                     _Activate_Controls_Counter:
   383                           	opt stack 0
   384  0000E8                     	ds	2
   385  0000EA                     _Led1_Counter:
   386                           	opt stack 0
   387  0000EA                     	ds	2
   388  0000EC                     _Button_Contact_Counter_LF:
   389                           	opt stack 0
   390  0000EC                     	ds	1
   391  0000ED                     _Button_Contact_Counter_RB:
   392                           	opt stack 0
   393  0000ED                     	ds	1
   394  0000EE                     _Button_Contact_Counter_RF:
   395                           	opt stack 0
   396  0000EE                     	ds	1
   397  0000EF                     _Switch_Junction:
   398                           	opt stack 0
   399  0000EF                     	ds	1
   400                           tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           postinc0	equ	0xFEE
   405                           wreg	equ	0xFE8
   406                           postdec1	equ	0xFE5
   407                           fsr1l	equ	0xFE1
   408                           
   409                           	psect	dataBANK0
   410  0000F0                     __pdataBANK0:
   411                           	opt stack 0
   412  0000F0                     Junction@Return_Val:
   413                           	opt stack 0
   414  0000F0                     	ds	1
   415  0000F1                     Left_Mountain_From_The_Left@Return_Val:
   416                           	opt stack 0
   417  0000F1                     	ds	1
   418  0000F2                     Left_Mountain_From_The_Right@Return_Val:
   419                           	opt stack 0
   420  0000F2                     	ds	1
   421  0000F3                     Right_Mountain_From_The_Left@Return_Val:
   422                           	opt stack 0
   423  0000F3                     	ds	1
   424  0000F4                     Right_Mountain_From_The_Right@Return_Val:
   425                           	opt stack 0
   426  0000F4                     	ds	1
   427  0000F5                     Train_Move_Left_Brake@Return_Val:
   428                           	opt stack 0
   429  0000F5                     	ds	1
   430  0000F6                     Train_Move_Left_Start@Return_Val:
   431                           	opt stack 0
   432  0000F6                     	ds	1
   433  0000F7                     Train_Move_Right_Brake@Return_Val:
   434                           	opt stack 0
   435  0000F7                     	ds	1
   436  0000F8                     Train_Move_Right_Start@Return_Val:
   437                           	opt stack 0
   438  0000F8                     	ds	1
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           	psect	bssBANK1
   449  000100                     __pbssBANK1:
   450                           	opt stack 0
   451  000100                     _API_RW:
   452                           	opt stack 0
   453  000100                     	ds	126
   454  00017E                     _eusart1TxBuffer:
   455                           	opt stack 0
   456  00017E                     	ds	126
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           postdec1	equ	0xFE5
   464                           fsr1l	equ	0xFE1
   465                           
   466                           	psect	bssBANK2
   467  000200                     __pbssBANK2:
   468                           	opt stack 0
   469  000200                     _eusart1RxBuffer:
   470                           	opt stack 0
   471  000200                     	ds	126
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           postinc0	equ	0xFEE
   477                           wreg	equ	0xFE8
   478                           postdec1	equ	0xFE5
   479                           fsr1l	equ	0xFE1
   480                           
   481                           	psect	cstackBANK2
   482  00027E                     __pcstackBANK2:
   483                           	opt stack 0
   484  00027E                     ??_SETxPWM:
   485                           
   486                           ; 1 bytes @ 0x0
   487  00027E                     	ds	2
   488  000280                     SETxPWM@pwm_speed:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x2
   492  000280                     	ds	2
   493  000282                     Train_Path@From:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x4
   497  000282                     	ds	1
   498  000283                     ??_Update_StateMchn:
   499                           
   500                           ; 1 bytes @ 0x5
   501  000283                     	ds	2
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	cstackBANK1
   512  0001FC                     __pcstackBANK1:
   513                           	opt stack 0
   514  0001FC                     SETxPWM@speed:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x0
   518  0001FC                     	ds	2
   519  0001FE                     SETxPWM@direction:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x2
   523  0001FE                     	ds	1
   524  0001FF                     Train_Path@To:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x3
   528  0001FF                     	ds	1
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           tblptrl	equ	0xFF6
   532                           tablat	equ	0xFF5
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           postdec1	equ	0xFE5
   536                           fsr1l	equ	0xFE1
   537                           
   538                           	psect	cstackBANK0
   539  0000F9                     __pcstackBANK0:
   540                           	opt stack 0
   541  0000F9                     ?_GETxAPIxVAL:
   542                           	opt stack 0
   543  0000F9                     Green_Led@Operation:
   544                           	opt stack 0
   545  0000F9                     Red_Led@Operation:
   546                           	opt stack 0
   547  0000F9                     EUSART1_Initialize@baud_rate:
   548                           	opt stack 0
   549  0000F9                     INIT_TERMINAL@i:
   550                           	opt stack 0
   551  0000F9                     APIxInitialize@i:
   552                           	opt stack 0
   553  0000F9                     SETxAPIxVAL@value:
   554                           	opt stack 0
   555  0000F9                     SetDCPWM1@dutycycle:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x0
   559  0000F9                     	ds	2
   560  0000FB                     ??_SetDCPWM1:
   561  0000FB                     SETxAPIxVAL@index:
   562                           	opt stack 0
   563  0000FB                     GETxAPIxVAL@index:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x2
   567  0000FB                     	ds	1
   568  0000FC                     ??_Debounce_Inputs:
   569  0000FC                     Junction@Straight_Bend:
   570                           	opt stack 0
   571  0000FC                     INCRxAPIxVAL@value:
   572                           	opt stack 0
   573  0000FC                     DECRxAPIxVAL@value:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x3
   577  0000FC                     	ds	1
   578  0000FD                     Junction@Junction_Left_Right:
   579                           	opt stack 0
   580  0000FD                     SetDCPWM1@DCycle:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x4
   584  0000FD                     	ds	1
   585  0000FE                     INCRxAPIxVAL@index:
   586                           	opt stack 0
   587  0000FE                     DECRxAPIxVAL@index:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x5
   591  0000FE                     	ds	1
   592  0000FF                     Right_Mountain_From_The_Right@rc:
   593                           	opt stack 0
   594  0000FF                     Left_Mountain_From_The_Right@rc:
   595                           	opt stack 0
   596  0000FF                     Left_Mountain_From_The_Left@rc:
   597                           	opt stack 0
   598  0000FF                     Right_Mountain_From_The_Left@rc:
   599                           	opt stack 0
   600                           
   601                           ; 1 bytes @ 0x6
   602  0000FF                     	ds	1
   603  000100                     tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           postdec1	equ	0xFE5
   610                           fsr1l	equ	0xFE1
   611                           
   612                           ; 1 bytes @ 0x7
   613                           
   614                           	psect	cstackCOMRAM
   615  00002C                     __pcstackCOMRAM:
   616                           	opt stack 0
   617  00002C                     EUSART1_Write@txData:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x0
   621  00002C                     	ds	1
   622  00002D                     ??_tc_high:
   623                           
   624                           ; 1 bytes @ 0x1
   625  00002D                     	ds	14
   626  00003B                     ??_tc_low:
   627                           
   628                           ; 1 bytes @ 0xF
   629  00003B                     	ds	17
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1l	equ	0xFE1
   638                           
   639 ;;
   640 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   641 ;;
   642 ;; *************** function _main *****************
   643 ;; Defined at:
   644 ;;		line 105 in file "../Main.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   658 ;;      Params:         0       0       0       0       0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0
   661 ;;      Totals:         0       0       0       0       0       0       0       0       0
   662 ;;Total ram usage:        0 bytes
   663 ;; Hardware stack levels required when called:    9
   664 ;; This function calls:
   665 ;;		_APIxInitialize
   666 ;;		_EUSART1_Initialize
   667 ;;		_INIT_TERMINAL
   668 ;;		_Init_Pwm
   669 ;;		_Init_Timers
   670 ;;		_Update_StateMchn
   671 ;; This function is called by:
   672 ;;		Startup code after reset
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text0
   677  002B10                     __ptext0:
   678                           	opt stack 0
   679  002B10                     _main:
   680                           	opt stack 22
   681                           
   682                           ;Main.c: 107: TRISA = 0xFF;TRISB = 0xFF;TRISC = 0xFF;TRISD = 0xFF;TRISE = 0xFF;
   683                           
   684                           ;incstack = 0
   685  002B10  6892               	setf	3986,c	;volatile
   686  002B12  6893               	setf	3987,c	;volatile
   687  002B14  6894               	setf	3988,c	;volatile
   688  002B16  6895               	setf	3989,c	;volatile
   689  002B18  6896               	setf	3990,c	;volatile
   690                           
   691                           ;Main.c: 108: ADCON1=0x0F;
   692  002B1A  0E0F               	movlw	15
   693  002B1C  6EC1               	movwf	4033,c	;volatile
   694                           
   695                           ;Main.c: 109: CMCON=0x07;
   696  002B1E  0E07               	movlw	7
   697  002B20  6EB4               	movwf	4020,c	;volatile
   698                           
   699                           ;Main.c: 110: TRISAbits.TRISA4=0;TRISDbits.TRISD5=0;TRISDbits.TRISD6=0;;
   700  002B22  9892               	bcf	3986,4,c	;volatile
   701  002B24  9A95               	bcf	3989,5,c	;volatile
   702  002B26  9C95               	bcf	3989,6,c	;volatile
   703                           
   704                           ;Main.c: 111: PORTAbits.RA4 = 0;
   705  002B28  9880               	bcf	3968,4,c	;volatile
   706                           
   707                           ;Main.c: 112: PORTDbits.RD6 = 0;
   708  002B2A  9C83               	bcf	3971,6,c	;volatile
   709                           
   710                           ;Main.c: 113: PORTDbits.RD5 = 0;
   711  002B2C  9A83               	bcf	3971,5,c	;volatile
   712                           
   713                           ;Main.c: 115: TRISAbits.TRISA0=0;TRISAbits.TRISA1=0;TRISAbits.TRISA2=0;TRISAbits.TRISA3=
      +                          0;;
   714  002B2E  9092               	bcf	3986,0,c	;volatile
   715  002B30  9292               	bcf	3986,1,c	;volatile
   716  002B32  9492               	bcf	3986,2,c	;volatile
   717  002B34  9692               	bcf	3986,3,c	;volatile
   718                           
   719                           ;Main.c: 116: PORTAbits.RA3 = 0;
   720  002B36  9680               	bcf	3968,3,c	;volatile
   721                           
   722                           ;Main.c: 117: PORTAbits.RA2 = 0;
   723  002B38  9480               	bcf	3968,2,c	;volatile
   724                           
   725                           ;Main.c: 118: PORTAbits.RA1 = 0;
   726  002B3A  9280               	bcf	3968,1,c	;volatile
   727                           
   728                           ;Main.c: 119: PORTAbits.RA0 = 0;
   729  002B3C  9080               	bcf	3968,0,c	;volatile
   730                           
   731                           ;Main.c: 121: TRISDbits.TRISD2=1;TRISDbits.TRISD3=1;TRISDbits.TRISD0=1;TRISDbits.TRISD1=
      +                          1;
   732  002B3E  8495               	bsf	3989,2,c	;volatile
   733  002B40  8695               	bsf	3989,3,c	;volatile
   734  002B42  8095               	bsf	3989,0,c	;volatile
   735  002B44  8295               	bsf	3989,1,c	;volatile
   736                           
   737                           ;Main.c: 122: TRISBbits.TRISB0=1;TRISBbits.TRISB1=1;TRISBbits.TRISB2=1;TRISBbits.TRISB3=
      +                          1;TRISBbits.TRISB4=1;TRISBbits.TRISB5=1;TRISDbits.TRISD7=1;;
   738  002B46  8093               	bsf	3987,0,c	;volatile
   739  002B48  8293               	bsf	3987,1,c	;volatile
   740  002B4A  8493               	bsf	3987,2,c	;volatile
   741  002B4C  8693               	bsf	3987,3,c	;volatile
   742  002B4E  8893               	bsf	3987,4,c	;volatile
   743  002B50  8A93               	bsf	3987,5,c	;volatile
   744  002B52  8E95               	bsf	3989,7,c	;volatile
   745                           
   746                           ;Main.c: 123: APIxInitialize();
   747  002B54  EC5D  F00D         	call	_APIxInitialize	;wreg free
   748                           
   749                           ;Main.c: 124: Init_Pwm();
   750  002B58  ECC1  F016         	call	_Init_Pwm	;wreg free
   751                           
   752                           ;Main.c: 125: Init_Timers();
   753  002B5C  ECB5  F016         	call	_Init_Timers	;wreg free
   754                           
   755                           ;Main.c: 126: EUSART1_Initialize();
   756  002B60  ECBC  F015         	call	_EUSART1_Initialize	;wreg free
   757                           
   758                           ;Main.c: 127: INIT_TERMINAL();
   759  002B64  EC21  F016         	call	_INIT_TERMINAL	;wreg free
   760  002B68                     l8893:
   761                           
   762                           ;Main.c: 130: {
   763                           ;Main.c: 131: if (1 == Update_State_Machine)
   764  002B68  0425               	decf	_Update_State_Machine,w,c
   765  002B6A  A4D8               	btfss	status,2,c
   766  002B6C  D7FD               	goto	l8893
   767                           
   768                           ;Main.c: 132: {
   769                           ;Main.c: 133: Update_State_Machine = 0;
   770  002B6E  0E00               	movlw	0
   771  002B70  6E25               	movwf	_Update_State_Machine,c
   772                           
   773                           ;Main.c: 134: Update_StateMchn();
   774  002B72  EC55  F000         	call	_Update_StateMchn	;wreg free
   775  002B76  D7F8               	goto	l8893
   776  002B78                     __end_of_main:
   777                           	opt stack 0
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           postinc0	equ	0xFEE
   783                           wreg	equ	0xFE8
   784                           postdec1	equ	0xFE5
   785                           fsr1l	equ	0xFE1
   786                           status	equ	0xFD8
   787                           
   788 ;; *************** function _Update_StateMchn *****************
   789 ;; Defined at:
   790 ;;		line 63 in file "../State_Mchn.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   804 ;;      Params:         0       0       0       0       0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0       0       0       0       0
   806 ;;      Temps:          0       0       0       2       0       0       0       0       0
   807 ;;      Totals:         0       0       0       2       0       0       0       0       0
   808 ;;Total ram usage:        2 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    8
   811 ;; This function calls:
   812 ;;		_DECRxAPIxVAL
   813 ;;		_Debounce_Inputs
   814 ;;		_Eeprom_Store
   815 ;;		_GETxAPIxVAL
   816 ;;		_Green_Led
   817 ;;		_INCRxAPIxVAL
   818 ;;		_Red_Led
   819 ;;		_SETxAPIxVAL
   820 ;;		_Train_Path
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text1
   827  0000AA                     __ptext1:
   828                           	opt stack 0
   829  0000AA                     _Update_StateMchn:
   830                           	opt stack 22
   831                           
   832                           ;State_Mchn.c: 65: Debounce_Inputs();
   833                           
   834                           ;incstack = 0
   835  0000AA  EC47  F008         	call	_Debounce_Inputs	;wreg free
   836                           
   837                           ;State_Mchn.c: 67: switch (Switch_Main)
   838  0000AE  EF3A  F008         	goto	l8731
   839  0000B2                     l7975:
   840  0000B2  0E00               	movlw	0
   841  0000B4  EC0E  F015         	call	_Green_Led
   842                           
   843                           ;State_Mchn.c: 72: Red_Led(0);
   844  0000B8  0E00               	movlw	0
   845  0000BA  ECCC  F014         	call	_Red_Led
   846                           
   847                           ;State_Mchn.c: 73: Switch_Init = 1;
   848  0000BE  0E01               	movlw	1
   849  0000C0  6E1F               	movwf	_Switch_Init,c
   850                           
   851                           ;State_Mchn.c: 74: break;
   852  0000C2  0012               	return	
   853  0000C4                     l7979:
   854  0000C4  0E13               	movlw	19
   855  0000C6  ECA5  F016         	call	_GETxAPIxVAL
   856  0000CA  0100               	movlb	0	; () banked
   857  0000CC  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
   858  0000CE  0100               	movlb	0	; () banked
   859  0000D0  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
   860  0000D2  B4D8               	btfsc	status,2,c
   861  0000D4  D00B               	goto	l7985
   862                           
   863                           ; BSR set to: 0
   864                           ;State_Mchn.c: 77: {
   865                           ;State_Mchn.c: 78: SETxAPIxVAL(23, 0);
   866  0000D6  0E00               	movlw	0
   867  0000D8  0100               	movlb	0	; () banked
   868  0000DA  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
   869  0000DC  0E00               	movlw	0
   870  0000DE  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
   871  0000E0  0E17               	movlw	23
   872  0000E2  EC95  F016         	call	_SETxAPIxVAL
   873                           
   874                           ;State_Mchn.c: 79: Switch_Init = 2;
   875  0000E6  0E02               	movlw	2
   876  0000E8  6E1F               	movwf	_Switch_Init,c
   877                           
   878                           ;State_Mchn.c: 80: break;
   879  0000EA  0012               	return	
   880  0000EC                     l7985:
   881                           
   882                           ;State_Mchn.c: 81: }
   883                           ;State_Mchn.c: 82: if(GETxAPIxVAL(20))
   884  0000EC  0E14               	movlw	20
   885  0000EE  ECA5  F016         	call	_GETxAPIxVAL
   886  0000F2  0100               	movlb	0	; () banked
   887  0000F4  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
   888  0000F6  0100               	movlb	0	; () banked
   889  0000F8  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
   890  0000FA  B4D8               	btfsc	status,2,c
   891  0000FC  D00B               	goto	l7991
   892                           
   893                           ; BSR set to: 0
   894                           ;State_Mchn.c: 83: {
   895                           ;State_Mchn.c: 84: SETxAPIxVAL(23, 1);
   896  0000FE  0E00               	movlw	0
   897  000100  0100               	movlb	0	; () banked
   898  000102  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
   899  000104  0E01               	movlw	1
   900  000106  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
   901  000108  0E17               	movlw	23
   902  00010A  EC95  F016         	call	_SETxAPIxVAL
   903                           
   904                           ;State_Mchn.c: 85: Switch_Init = 2;
   905  00010E  0E02               	movlw	2
   906  000110  6E1F               	movwf	_Switch_Init,c
   907                           
   908                           ;State_Mchn.c: 86: break;
   909  000112  0012               	return	
   910  000114                     l7991:
   911                           
   912                           ;State_Mchn.c: 87: }
   913                           ;State_Mchn.c: 88: if(GETxAPIxVAL(21))
   914  000114  0E15               	movlw	21
   915  000116  ECA5  F016         	call	_GETxAPIxVAL
   916  00011A  0100               	movlb	0	; () banked
   917  00011C  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
   918  00011E  0100               	movlb	0	; () banked
   919  000120  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
   920  000122  B4D8               	btfsc	status,2,c
   921  000124  D00B               	goto	l7997
   922                           
   923                           ; BSR set to: 0
   924                           ;State_Mchn.c: 89: {
   925                           ;State_Mchn.c: 90: SETxAPIxVAL(23, 2);
   926  000126  0E00               	movlw	0
   927  000128  0100               	movlb	0	; () banked
   928  00012A  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
   929  00012C  0E02               	movlw	2
   930  00012E  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
   931  000130  0E17               	movlw	23
   932  000132  EC95  F016         	call	_SETxAPIxVAL
   933                           
   934                           ;State_Mchn.c: 91: Switch_Init = 2;
   935  000136  0E02               	movlw	2
   936  000138  6E1F               	movwf	_Switch_Init,c
   937                           
   938                           ;State_Mchn.c: 92: break;
   939  00013A  0012               	return	
   940  00013C                     l7997:
   941                           
   942                           ;State_Mchn.c: 93: }
   943                           ;State_Mchn.c: 94: if(GETxAPIxVAL(22))
   944  00013C  0E16               	movlw	22
   945  00013E  ECA5  F016         	call	_GETxAPIxVAL
   946  000142  0100               	movlb	0	; () banked
   947  000144  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
   948  000146  0100               	movlb	0	; () banked
   949  000148  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
   950  00014A  B4D8               	btfsc	status,2,c
   951  00014C  D00B               	goto	l8003
   952                           
   953                           ; BSR set to: 0
   954                           ;State_Mchn.c: 95: {
   955                           ;State_Mchn.c: 96: SETxAPIxVAL(23, 3);
   956  00014E  0E00               	movlw	0
   957  000150  0100               	movlb	0	; () banked
   958  000152  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
   959  000154  0E03               	movlw	3
   960  000156  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
   961  000158  0E17               	movlw	23
   962  00015A  EC95  F016         	call	_SETxAPIxVAL
   963                           
   964                           ;State_Mchn.c: 97: Switch_Init = 2;
   965  00015E  0E02               	movlw	2
   966  000160  6E1F               	movwf	_Switch_Init,c
   967                           
   968                           ;State_Mchn.c: 98: break;
   969  000162  0012               	return	
   970  000164                     l8003:
   971                           
   972                           ;State_Mchn.c: 99: }
   973                           ;State_Mchn.c: 100: if(GETxAPIxVAL(18))
   974  000164  0E12               	movlw	18
   975  000166  ECA5  F016         	call	_GETxAPIxVAL
   976  00016A  0100               	movlb	0	; () banked
   977  00016C  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
   978  00016E  0100               	movlb	0	; () banked
   979  000170  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
   980  000172  B4D8               	btfsc	status,2,c
   981  000174  D00B               	goto	l8009
   982                           
   983                           ; BSR set to: 0
   984                           ;State_Mchn.c: 101: {
   985                           ;State_Mchn.c: 102: SETxAPIxVAL(23, 4);
   986  000176  0E00               	movlw	0
   987  000178  0100               	movlb	0	; () banked
   988  00017A  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
   989  00017C  0E04               	movlw	4
   990  00017E  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
   991  000180  0E17               	movlw	23
   992  000182  EC95  F016         	call	_SETxAPIxVAL
   993                           
   994                           ;State_Mchn.c: 103: Switch_Init = 2;
   995  000186  0E02               	movlw	2
   996  000188  6E1F               	movwf	_Switch_Init,c
   997                           
   998                           ;State_Mchn.c: 104: break;
   999  00018A  0012               	return	
  1000  00018C                     l8009:
  1001                           
  1002                           ;State_Mchn.c: 105: }
  1003                           ;State_Mchn.c: 106: Switch_Init = 1;
  1004  00018C  0E01               	movlw	1
  1005  00018E  6E1F               	movwf	_Switch_Init,c
  1006                           
  1007                           ;State_Mchn.c: 107: Green_Led(2);
  1008  000190  0E02               	movlw	2
  1009  000192  EC0E  F015         	call	_Green_Led
  1010                           
  1011                           ;State_Mchn.c: 108: break;
  1012  000196  0012               	return	
  1013  000198                     l8013:
  1014  000198  0E13               	movlw	19
  1015  00019A  ECA5  F016         	call	_GETxAPIxVAL
  1016  00019E  0100               	movlb	0	; () banked
  1017  0001A0  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1018  0001A2  0100               	movlb	0	; () banked
  1019  0001A4  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1020  0001A6  A4D8               	btfss	status,2,c
  1021  0001A8  D02F               	goto	l8027
  1022                           
  1023                           ; BSR set to: 0
  1024  0001AA  0E14               	movlw	20
  1025  0001AC  ECA5  F016         	call	_GETxAPIxVAL
  1026  0001B0  0100               	movlb	0	; () banked
  1027  0001B2  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1028  0001B4  0100               	movlb	0	; () banked
  1029  0001B6  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1030  0001B8  A4D8               	btfss	status,2,c
  1031  0001BA  D026               	goto	l8027
  1032                           
  1033                           ; BSR set to: 0
  1034  0001BC  0E15               	movlw	21
  1035  0001BE  ECA5  F016         	call	_GETxAPIxVAL
  1036  0001C2  0100               	movlb	0	; () banked
  1037  0001C4  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1038  0001C6  0100               	movlb	0	; () banked
  1039  0001C8  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1040  0001CA  A4D8               	btfss	status,2,c
  1041  0001CC  D01D               	goto	l8027
  1042                           
  1043                           ; BSR set to: 0
  1044  0001CE  0E16               	movlw	22
  1045  0001D0  ECA5  F016         	call	_GETxAPIxVAL
  1046  0001D4  0100               	movlb	0	; () banked
  1047  0001D6  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1048  0001D8  0100               	movlb	0	; () banked
  1049  0001DA  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1050  0001DC  A4D8               	btfss	status,2,c
  1051  0001DE  D014               	goto	l8027
  1052                           
  1053                           ; BSR set to: 0
  1054  0001E0  0E12               	movlw	18
  1055  0001E2  ECA5  F016         	call	_GETxAPIxVAL
  1056  0001E6  0100               	movlb	0	; () banked
  1057  0001E8  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1058  0001EA  0100               	movlb	0	; () banked
  1059  0001EC  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1060  0001EE  A4D8               	btfss	status,2,c
  1061  0001F0  D00B               	goto	l8027
  1062                           
  1063                           ; BSR set to: 0
  1064  0001F2  0E10               	movlw	16
  1065  0001F4  ECA5  F016         	call	_GETxAPIxVAL
  1066  0001F8  0100               	movlb	0	; () banked
  1067  0001FA  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1068  0001FC  0100               	movlb	0	; () banked
  1069  0001FE  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1070  000200  A4D8               	btfss	status,2,c
  1071  000202  D002               	goto	l8027
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;State_Mchn.c: 111: {
  1075                           ;State_Mchn.c: 112: Switch_Init = 3;
  1076  000204  0E03               	movlw	3
  1077  000206  6E1F               	movwf	_Switch_Init,c
  1078  000208                     l8027:
  1079                           
  1080                           ; BSR set to: 0
  1081                           ;State_Mchn.c: 113: }
  1082                           ;State_Mchn.c: 114: Red_Led(0);
  1083  000208  0E00               	movlw	0
  1084  00020A  ECCC  F014         	call	_Red_Led
  1085                           
  1086                           ;State_Mchn.c: 115: Green_Led(2);
  1087  00020E  0E02               	movlw	2
  1088  000210  EC0E  F015         	call	_Green_Led
  1089                           
  1090                           ;State_Mchn.c: 116: break;
  1091  000214  0012               	return	
  1092  000216                     l8031:
  1093  000216  0E13               	movlw	19
  1094  000218  ECA5  F016         	call	_GETxAPIxVAL
  1095  00021C  0100               	movlb	0	; () banked
  1096  00021E  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1097  000220  0100               	movlb	0	; () banked
  1098  000222  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1099  000224  B4D8               	btfsc	status,2,c
  1100  000226  D00B               	goto	l8037
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;State_Mchn.c: 119: {
  1104                           ;State_Mchn.c: 120: SETxAPIxVAL(24, 0);
  1105  000228  0E00               	movlw	0
  1106  00022A  0100               	movlb	0	; () banked
  1107  00022C  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1108  00022E  0E00               	movlw	0
  1109  000230  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  1110  000232  0E18               	movlw	24
  1111  000234  EC95  F016         	call	_SETxAPIxVAL
  1112                           
  1113                           ;State_Mchn.c: 121: Switch_Init = 4;
  1114  000238  0E04               	movlw	4
  1115  00023A  6E1F               	movwf	_Switch_Init,c
  1116                           
  1117                           ;State_Mchn.c: 122: break;
  1118  00023C  0012               	return	
  1119  00023E                     l8037:
  1120                           
  1121                           ;State_Mchn.c: 123: }
  1122                           ;State_Mchn.c: 124: if(GETxAPIxVAL(20))
  1123  00023E  0E14               	movlw	20
  1124  000240  ECA5  F016         	call	_GETxAPIxVAL
  1125  000244  0100               	movlb	0	; () banked
  1126  000246  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1127  000248  0100               	movlb	0	; () banked
  1128  00024A  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1129  00024C  B4D8               	btfsc	status,2,c
  1130  00024E  D00B               	goto	l8043
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;State_Mchn.c: 125: {
  1134                           ;State_Mchn.c: 126: SETxAPIxVAL(24, 1);
  1135  000250  0E00               	movlw	0
  1136  000252  0100               	movlb	0	; () banked
  1137  000254  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1138  000256  0E01               	movlw	1
  1139  000258  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  1140  00025A  0E18               	movlw	24
  1141  00025C  EC95  F016         	call	_SETxAPIxVAL
  1142                           
  1143                           ;State_Mchn.c: 127: Switch_Init = 4;
  1144  000260  0E04               	movlw	4
  1145  000262  6E1F               	movwf	_Switch_Init,c
  1146                           
  1147                           ;State_Mchn.c: 128: break;
  1148  000264  0012               	return	
  1149  000266                     l8043:
  1150                           
  1151                           ;State_Mchn.c: 129: }
  1152                           ;State_Mchn.c: 130: if(GETxAPIxVAL(21))
  1153  000266  0E15               	movlw	21
  1154  000268  ECA5  F016         	call	_GETxAPIxVAL
  1155  00026C  0100               	movlb	0	; () banked
  1156  00026E  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1157  000270  0100               	movlb	0	; () banked
  1158  000272  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1159  000274  B4D8               	btfsc	status,2,c
  1160  000276  D00B               	goto	l8049
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;State_Mchn.c: 131: {
  1164                           ;State_Mchn.c: 132: SETxAPIxVAL(24, 2);
  1165  000278  0E00               	movlw	0
  1166  00027A  0100               	movlb	0	; () banked
  1167  00027C  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1168  00027E  0E02               	movlw	2
  1169  000280  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  1170  000282  0E18               	movlw	24
  1171  000284  EC95  F016         	call	_SETxAPIxVAL
  1172                           
  1173                           ;State_Mchn.c: 133: Switch_Init = 4;
  1174  000288  0E04               	movlw	4
  1175  00028A  6E1F               	movwf	_Switch_Init,c
  1176                           
  1177                           ;State_Mchn.c: 134: break;
  1178  00028C  0012               	return	
  1179  00028E                     l8049:
  1180                           
  1181                           ;State_Mchn.c: 135: }
  1182                           ;State_Mchn.c: 136: if(GETxAPIxVAL(22))
  1183  00028E  0E16               	movlw	22
  1184  000290  ECA5  F016         	call	_GETxAPIxVAL
  1185  000294  0100               	movlb	0	; () banked
  1186  000296  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1187  000298  0100               	movlb	0	; () banked
  1188  00029A  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1189  00029C  B4D8               	btfsc	status,2,c
  1190  00029E  D00B               	goto	l8055
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;State_Mchn.c: 137: {
  1194                           ;State_Mchn.c: 138: SETxAPIxVAL(24, 3);
  1195  0002A0  0E00               	movlw	0
  1196  0002A2  0100               	movlb	0	; () banked
  1197  0002A4  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1198  0002A6  0E03               	movlw	3
  1199  0002A8  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  1200  0002AA  0E18               	movlw	24
  1201  0002AC  EC95  F016         	call	_SETxAPIxVAL
  1202                           
  1203                           ;State_Mchn.c: 139: Switch_Init = 4;
  1204  0002B0  0E04               	movlw	4
  1205  0002B2  6E1F               	movwf	_Switch_Init,c
  1206                           
  1207                           ;State_Mchn.c: 140: break;
  1208  0002B4  0012               	return	
  1209  0002B6                     l8055:
  1210                           
  1211                           ;State_Mchn.c: 141: }
  1212                           ;State_Mchn.c: 142: if(GETxAPIxVAL(18))
  1213  0002B6  0E12               	movlw	18
  1214  0002B8  ECA5  F016         	call	_GETxAPIxVAL
  1215  0002BC  0100               	movlb	0	; () banked
  1216  0002BE  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1217  0002C0  0100               	movlb	0	; () banked
  1218  0002C2  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1219  0002C4  B4D8               	btfsc	status,2,c
  1220  0002C6  D00B               	goto	l8061
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;State_Mchn.c: 143: {
  1224                           ;State_Mchn.c: 144: SETxAPIxVAL(24, 4);
  1225  0002C8  0E00               	movlw	0
  1226  0002CA  0100               	movlb	0	; () banked
  1227  0002CC  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1228  0002CE  0E04               	movlw	4
  1229  0002D0  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  1230  0002D2  0E18               	movlw	24
  1231  0002D4  EC95  F016         	call	_SETxAPIxVAL
  1232                           
  1233                           ;State_Mchn.c: 145: Switch_Init = 4;
  1234  0002D8  0E04               	movlw	4
  1235  0002DA  6E1F               	movwf	_Switch_Init,c
  1236                           
  1237                           ;State_Mchn.c: 146: break;
  1238  0002DC  0012               	return	
  1239  0002DE                     l8061:
  1240                           
  1241                           ;State_Mchn.c: 147: }
  1242                           ;State_Mchn.c: 148: if(GETxAPIxVAL(16))
  1243  0002DE  0E10               	movlw	16
  1244  0002E0  ECA5  F016         	call	_GETxAPIxVAL
  1245  0002E4  0100               	movlb	0	; () banked
  1246  0002E6  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1247  0002E8  0100               	movlb	0	; () banked
  1248  0002EA  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1249  0002EC  B4D8               	btfsc	status,2,c
  1250  0002EE  D00B               	goto	l8067
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;State_Mchn.c: 149: {
  1254                           ;State_Mchn.c: 150: SETxAPIxVAL(24, 9);
  1255  0002F0  0E00               	movlw	0
  1256  0002F2  0100               	movlb	0	; () banked
  1257  0002F4  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1258  0002F6  0E09               	movlw	9
  1259  0002F8  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  1260  0002FA  0E18               	movlw	24
  1261  0002FC  EC95  F016         	call	_SETxAPIxVAL
  1262                           
  1263                           ;State_Mchn.c: 151: Switch_Init = 4;
  1264  000300  0E04               	movlw	4
  1265  000302  6E1F               	movwf	_Switch_Init,c
  1266                           
  1267                           ;State_Mchn.c: 152: break;
  1268  000304  0012               	return	
  1269  000306                     l8067:
  1270                           
  1271                           ;State_Mchn.c: 153: }
  1272                           ;State_Mchn.c: 154: Green_Led(2);
  1273  000306  0E02               	movlw	2
  1274  000308  EC0E  F015         	call	_Green_Led
  1275                           
  1276                           ;State_Mchn.c: 155: Switch_Init = 3;
  1277  00030C  0E03               	movlw	3
  1278  00030E  6E1F               	movwf	_Switch_Init,c
  1279                           
  1280                           ;State_Mchn.c: 156: break;
  1281  000310  0012               	return	
  1282  000312                     l8071:
  1283  000312  0E13               	movlw	19
  1284  000314  ECA5  F016         	call	_GETxAPIxVAL
  1285  000318  0100               	movlb	0	; () banked
  1286  00031A  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1287  00031C  0100               	movlb	0	; () banked
  1288  00031E  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1289  000320  A4D8               	btfss	status,2,c
  1290  000322  D05E               	goto	l8093
  1291                           
  1292                           ; BSR set to: 0
  1293  000324  0E14               	movlw	20
  1294  000326  ECA5  F016         	call	_GETxAPIxVAL
  1295  00032A  0100               	movlb	0	; () banked
  1296  00032C  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1297  00032E  0100               	movlb	0	; () banked
  1298  000330  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1299  000332  A4D8               	btfss	status,2,c
  1300  000334  D055               	goto	l8093
  1301                           
  1302                           ; BSR set to: 0
  1303  000336  0E15               	movlw	21
  1304  000338  ECA5  F016         	call	_GETxAPIxVAL
  1305  00033C  0100               	movlb	0	; () banked
  1306  00033E  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1307  000340  0100               	movlb	0	; () banked
  1308  000342  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1309  000344  A4D8               	btfss	status,2,c
  1310  000346  D04C               	goto	l8093
  1311                           
  1312                           ; BSR set to: 0
  1313  000348  0E16               	movlw	22
  1314  00034A  ECA5  F016         	call	_GETxAPIxVAL
  1315  00034E  0100               	movlb	0	; () banked
  1316  000350  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1317  000352  0100               	movlb	0	; () banked
  1318  000354  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1319  000356  A4D8               	btfss	status,2,c
  1320  000358  D043               	goto	l8093
  1321                           
  1322                           ; BSR set to: 0
  1323  00035A  0E12               	movlw	18
  1324  00035C  ECA5  F016         	call	_GETxAPIxVAL
  1325  000360  0100               	movlb	0	; () banked
  1326  000362  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1327  000364  0100               	movlb	0	; () banked
  1328  000366  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1329  000368  A4D8               	btfss	status,2,c
  1330  00036A  D03A               	goto	l8093
  1331                           
  1332                           ; BSR set to: 0
  1333  00036C  0E10               	movlw	16
  1334  00036E  ECA5  F016         	call	_GETxAPIxVAL
  1335  000372  0100               	movlb	0	; () banked
  1336  000374  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1337  000376  0100               	movlb	0	; () banked
  1338  000378  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1339  00037A  A4D8               	btfss	status,2,c
  1340  00037C  D031               	goto	l8093
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;State_Mchn.c: 159: {
  1344                           ;State_Mchn.c: 160: if(GETxAPIxVAL(23) == GETxAPIxVAL(24))
  1345  00037E  0E17               	movlw	23
  1346  000380  ECA5  F016         	call	_GETxAPIxVAL
  1347  000384  C0F9  F283         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  1348  000388  C0FA  F284         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  1349  00038C  0E18               	movlw	24
  1350  00038E  ECA5  F016         	call	_GETxAPIxVAL
  1351  000392  0100               	movlb	0	; () banked
  1352  000394  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1353  000396  0102               	movlb	2	; () banked
  1354  000398  1983               	xorwf	??_Update_StateMchn& (0+255),w,b
  1355  00039A  E10B               	bnz	l8089
  1356  00039C  0100               	movlb	0	; () banked
  1357  00039E  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1358  0003A0  0102               	movlb	2	; () banked
  1359  0003A2  1984               	xorwf	(??_Update_StateMchn+1)& (0+255),w,b
  1360  0003A4  A4D8               	btfss	status,2,c
  1361  0003A6  D005               	goto	l8089
  1362                           
  1363                           ; BSR set to: 2
  1364                           ;State_Mchn.c: 161: {
  1365                           ;State_Mchn.c: 162: Red_Led(1);
  1366  0003A8  0E01               	movlw	1
  1367  0003AA  ECCC  F014         	call	_Red_Led
  1368                           
  1369                           ;State_Mchn.c: 163: Switch_Init = 1;
  1370  0003AE  0E01               	movlw	1
  1371  0003B0  6E1F               	movwf	_Switch_Init,c
  1372  0003B2                     l8089:
  1373                           
  1374                           ;State_Mchn.c: 164: }
  1375                           ;State_Mchn.c: 165: if(GETxAPIxVAL(23) != GETxAPIxVAL(24))
  1376  0003B2  0E17               	movlw	23
  1377  0003B4  ECA5  F016         	call	_GETxAPIxVAL
  1378  0003B8  C0F9  F283         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  1379  0003BC  C0FA  F284         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  1380  0003C0  0E18               	movlw	24
  1381  0003C2  ECA5  F016         	call	_GETxAPIxVAL
  1382  0003C6  0100               	movlb	0	; () banked
  1383  0003C8  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1384  0003CA  0102               	movlb	2	; () banked
  1385  0003CC  1983               	xorwf	??_Update_StateMchn& (0+255),w,b
  1386  0003CE  E106               	bnz	u7030
  1387  0003D0  0100               	movlb	0	; () banked
  1388  0003D2  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1389  0003D4  0102               	movlb	2	; () banked
  1390  0003D6  1984               	xorwf	(??_Update_StateMchn+1)& (0+255),w,b
  1391  0003D8  B4D8               	btfsc	status,2,c
  1392  0003DA  D002               	goto	l8093
  1393  0003DC                     u7030:
  1394                           
  1395                           ; BSR set to: 2
  1396                           ;State_Mchn.c: 166: {
  1397                           ;State_Mchn.c: 167: Switch_Init = 5;
  1398  0003DC  0E05               	movlw	5
  1399  0003DE  6E1F               	movwf	_Switch_Init,c
  1400  0003E0                     l8093:
  1401                           
  1402                           ;State_Mchn.c: 168: }
  1403                           ;State_Mchn.c: 169: }
  1404                           ;State_Mchn.c: 170: Green_Led(2);
  1405  0003E0  0E02               	movlw	2
  1406  0003E2  EC0E  F015         	call	_Green_Led
  1407                           
  1408                           ;State_Mchn.c: 171: break;
  1409  0003E6  0012               	return	
  1410  0003E8                     l8095:
  1411  0003E8  0E18               	movlw	24
  1412  0003EA  ECA5  F016         	call	_GETxAPIxVAL
  1413  0003EE  0E09               	movlw	9
  1414  0003F0  0100               	movlb	0	; () banked
  1415  0003F2  19F9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  1416  0003F4  0100               	movlb	0	; () banked
  1417  0003F6  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1418  0003F8  B4D8               	btfsc	status,2,c
  1419  0003FA  D002               	goto	l8099
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;State_Mchn.c: 174: {
  1423                           ;State_Mchn.c: 175: Switch_Init = 6;
  1424  0003FC  0E06               	movlw	6
  1425  0003FE  6E1F               	movwf	_Switch_Init,c
  1426  000400                     l8099:
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;State_Mchn.c: 176: }
  1430                           ;State_Mchn.c: 177: if(GETxAPIxVAL(24) == 9)
  1431  000400  0E18               	movlw	24
  1432  000402  ECA5  F016         	call	_GETxAPIxVAL
  1433  000406  0E09               	movlw	9
  1434  000408  0100               	movlb	0	; () banked
  1435  00040A  19F9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  1436  00040C  0100               	movlb	0	; () banked
  1437  00040E  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1438  000410  A4D8               	btfss	status,2,c
  1439  000412  0012               	return	
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;State_Mchn.c: 178: {
  1443                           ;State_Mchn.c: 179: Switch_Init = 9;
  1444  000414  0E09               	movlw	9
  1445  000416  6E1F               	movwf	_Switch_Init,c
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;State_Mchn.c: 180: }
  1449                           ;State_Mchn.c: 181: break;
  1450  000418  0012               	return	
  1451  00041A                     l8103:
  1452  00041A  0E08               	movlw	8
  1453  00041C  6E1F               	movwf	_Switch_Init,c
  1454                           
  1455                           ;State_Mchn.c: 184: break;
  1456  00041E  0012               	return	
  1457  000420                     l8105:
  1458  000420  0E10               	movlw	16
  1459  000422  ECA5  F016         	call	_GETxAPIxVAL
  1460  000426  0100               	movlb	0	; () banked
  1461  000428  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1462  00042A  0100               	movlb	0	; () banked
  1463  00042C  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1464  00042E  B4D8               	btfsc	status,2,c
  1465  000430  D006               	goto	l8109
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;State_Mchn.c: 187: {
  1469                           ;State_Mchn.c: 188: Switch_Main = 1;
  1470  000432  0E01               	movlw	1
  1471  000434  6E20               	movwf	_Switch_Main,c
  1472                           
  1473                           ;State_Mchn.c: 189: Switch_Init = 0;
  1474  000436  0E00               	movlw	0
  1475  000438  6E1F               	movwf	_Switch_Init,c
  1476                           
  1477                           ;State_Mchn.c: 190: Stop_Program = 0;
  1478  00043A  0E00               	movlw	0
  1479  00043C  6E19               	movwf	_Stop_Program,c
  1480  00043E                     l8109:
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;State_Mchn.c: 191: }
  1484                           ;State_Mchn.c: 192: Green_Led(3);
  1485  00043E  0E03               	movlw	3
  1486  000440  EC0E  F015         	call	_Green_Led
  1487                           
  1488                           ;State_Mchn.c: 193: Red_Led(0);
  1489  000444  0E00               	movlw	0
  1490  000446  ECCC  F014         	call	_Red_Led
  1491                           
  1492                           ;State_Mchn.c: 194: break;
  1493  00044A  0012               	return	
  1494  00044C                     l8113:
  1495  00044C  0E17               	movlw	23
  1496  00044E  ECA5  F016         	call	_GETxAPIxVAL
  1497  000452  0E04               	movlw	4
  1498  000454  0100               	movlb	0	; () banked
  1499  000456  19F9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  1500  000458  0100               	movlb	0	; () banked
  1501  00045A  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1502  00045C  B4D8               	btfsc	status,2,c
  1503  00045E  D012               	goto	l8131
  1504  000460  D028               	goto	l8133
  1505  000462                     l8117:
  1506                           
  1507                           ; BSR set to: 0
  1508  000462  0E01               	movlw	1
  1509  000464  D005               	goto	L3
  1510  000466                     l8119:
  1511                           
  1512                           ; BSR set to: 0
  1513  000466  0E05               	movlw	5
  1514  000468  D003               	goto	L3
  1515  00046A                     l8121:
  1516                           
  1517                           ; BSR set to: 0
  1518  00046A  0E02               	movlw	2
  1519  00046C  D001               	goto	L3
  1520  00046E                     l8123:
  1521                           
  1522                           ; BSR set to: 0
  1523  00046E  0E03               	movlw	3
  1524  000470                     L3:
  1525  000470  6E22               	movwf	_Switch_Program,c
  1526                           
  1527                           ;State_Mchn.c: 210: Switch_Init = 7;
  1528  000472  0E07               	movlw	7
  1529  000474  6E1F               	movwf	_Switch_Init,c
  1530                           
  1531                           ;State_Mchn.c: 211: break;
  1532  000476  D01D               	goto	l8133
  1533  000478                     l8125:
  1534                           
  1535                           ; BSR set to: 0
  1536  000478  0E08               	movlw	8
  1537  00047A  6E1F               	movwf	_Switch_Init,c
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;State_Mchn.c: 213: Red_Led(1);
  1541  00047C  0E01               	movlw	1
  1542  00047E  ECCC  F014         	call	_Red_Led
  1543                           
  1544                           ;State_Mchn.c: 215: }
  1545                           
  1546                           ;State_Mchn.c: 214: break;
  1547  000482  D017               	goto	l8133
  1548  000484                     l8131:
  1549  000484  0E18               	movlw	24
  1550  000486  ECA5  F016         	call	_GETxAPIxVAL
  1551                           
  1552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1553                           ; Switch size 1, requested type "space"
  1554                           ; Number of cases is 1, Range of values is 0 to 0
  1555                           ; switch strategies available:
  1556                           ; Name         Instructions Cycles
  1557                           ; simple_byte            4     3 (average)
  1558                           ;	Chosen strategy is simple_byte
  1559  00048A  0100               	movlb	0	; () banked
  1560  00048C  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1561  00048E  0A00               	xorlw	0	; case 0
  1562  000490  A4D8               	btfss	status,2,c
  1563  000492  D7F2               	goto	l8125
  1564                           
  1565                           ; BSR set to: 0
  1566                           ; Switch size 1, requested type "space"
  1567                           ; Number of cases is 4, Range of values is 0 to 3
  1568                           ; switch strategies available:
  1569                           ; Name         Instructions Cycles
  1570                           ; simple_byte           13     7 (average)
  1571                           ;	Chosen strategy is simple_byte
  1572  000494  0100               	movlb	0	; () banked
  1573  000496  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1574  000498  0A00               	xorlw	0	; case 0
  1575  00049A  B4D8               	btfsc	status,2,c
  1576  00049C  D7E2               	goto	l8117
  1577  00049E  0A01               	xorlw	1	; case 1
  1578  0004A0  B4D8               	btfsc	status,2,c
  1579  0004A2  D7E1               	goto	l8119
  1580  0004A4  0A03               	xorlw	3	; case 2
  1581  0004A6  B4D8               	btfsc	status,2,c
  1582  0004A8  D7E0               	goto	l8121
  1583  0004AA  0A01               	xorlw	1	; case 3
  1584  0004AC  B4D8               	btfsc	status,2,c
  1585  0004AE  D7DF               	goto	l8123
  1586  0004B0  D7E3               	goto	l8125
  1587  0004B2                     l8133:
  1588                           
  1589                           ;State_Mchn.c: 216: }
  1590                           ;State_Mchn.c: 217: if(GETxAPIxVAL(24) == 4)
  1591  0004B2  0E18               	movlw	24
  1592  0004B4  ECA5  F016         	call	_GETxAPIxVAL
  1593  0004B8  0E04               	movlw	4
  1594  0004BA  0100               	movlb	0	; () banked
  1595  0004BC  19F9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  1596  0004BE  0100               	movlb	0	; () banked
  1597  0004C0  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1598  0004C2  B4D8               	btfsc	status,2,c
  1599  0004C4  D012               	goto	l8151
  1600  0004C6  D028               	goto	l8153
  1601  0004C8                     l8137:
  1602                           
  1603                           ; BSR set to: 0
  1604  0004C8  0E01               	movlw	1
  1605  0004CA  D005               	goto	L6
  1606  0004CC                     l8139:
  1607                           
  1608                           ; BSR set to: 0
  1609  0004CC  0E05               	movlw	5
  1610  0004CE  D003               	goto	L6
  1611  0004D0                     l8141:
  1612                           
  1613                           ; BSR set to: 0
  1614  0004D0  0E02               	movlw	2
  1615  0004D2  D001               	goto	L6
  1616  0004D4                     l8143:
  1617                           
  1618                           ; BSR set to: 0
  1619  0004D4  0E03               	movlw	3
  1620  0004D6                     L6:
  1621  0004D6  6E22               	movwf	_Switch_Program,c
  1622                           
  1623                           ;State_Mchn.c: 231: Switch_Init = 7;
  1624  0004D8  0E07               	movlw	7
  1625  0004DA  6E1F               	movwf	_Switch_Init,c
  1626                           
  1627                           ;State_Mchn.c: 232: break;
  1628  0004DC  D01D               	goto	l8153
  1629  0004DE                     l8145:
  1630                           
  1631                           ; BSR set to: 0
  1632  0004DE  0E08               	movlw	8
  1633  0004E0  6E1F               	movwf	_Switch_Init,c
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;State_Mchn.c: 234: Red_Led(1);
  1637  0004E2  0E01               	movlw	1
  1638  0004E4  ECCC  F014         	call	_Red_Led
  1639                           
  1640                           ;State_Mchn.c: 236: }
  1641                           
  1642                           ;State_Mchn.c: 235: break;
  1643  0004E8  D017               	goto	l8153
  1644  0004EA                     l8151:
  1645  0004EA  0E17               	movlw	23
  1646  0004EC  ECA5  F016         	call	_GETxAPIxVAL
  1647                           
  1648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1649                           ; Switch size 1, requested type "space"
  1650                           ; Number of cases is 1, Range of values is 0 to 0
  1651                           ; switch strategies available:
  1652                           ; Name         Instructions Cycles
  1653                           ; simple_byte            4     3 (average)
  1654                           ;	Chosen strategy is simple_byte
  1655  0004F0  0100               	movlb	0	; () banked
  1656  0004F2  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1657  0004F4  0A00               	xorlw	0	; case 0
  1658  0004F6  A4D8               	btfss	status,2,c
  1659  0004F8  D7F2               	goto	l8145
  1660                           
  1661                           ; BSR set to: 0
  1662                           ; Switch size 1, requested type "space"
  1663                           ; Number of cases is 4, Range of values is 0 to 3
  1664                           ; switch strategies available:
  1665                           ; Name         Instructions Cycles
  1666                           ; simple_byte           13     7 (average)
  1667                           ;	Chosen strategy is simple_byte
  1668  0004FA  0100               	movlb	0	; () banked
  1669  0004FC  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1670  0004FE  0A00               	xorlw	0	; case 0
  1671  000500  B4D8               	btfsc	status,2,c
  1672  000502  D7E2               	goto	l8137
  1673  000504  0A01               	xorlw	1	; case 1
  1674  000506  B4D8               	btfsc	status,2,c
  1675  000508  D7E1               	goto	l8139
  1676  00050A  0A03               	xorlw	3	; case 2
  1677  00050C  B4D8               	btfsc	status,2,c
  1678  00050E  D7E0               	goto	l8141
  1679  000510  0A01               	xorlw	1	; case 3
  1680  000512  B4D8               	btfsc	status,2,c
  1681  000514  D7DF               	goto	l8143
  1682  000516  D7E3               	goto	l8145
  1683  000518                     l8153:
  1684                           
  1685                           ;State_Mchn.c: 237: }
  1686                           ;State_Mchn.c: 238: if((GETxAPIxVAL(23) != 4) && (GETxAPIxVAL(24) != 4))
  1687  000518  0E17               	movlw	23
  1688  00051A  ECA5  F016         	call	_GETxAPIxVAL
  1689  00051E  0E04               	movlw	4
  1690  000520  0100               	movlb	0	; () banked
  1691  000522  19F9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  1692  000524  0100               	movlb	0	; () banked
  1693  000526  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1694  000528  B4D8               	btfsc	status,2,c
  1695  00052A  0012               	return	
  1696                           
  1697                           ; BSR set to: 0
  1698  00052C  0E18               	movlw	24
  1699  00052E  ECA5  F016         	call	_GETxAPIxVAL
  1700  000532  0E04               	movlw	4
  1701  000534  0100               	movlb	0	; () banked
  1702  000536  19F9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  1703  000538  0100               	movlb	0	; () banked
  1704  00053A  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1705  00053C  B4D8               	btfsc	status,2,c
  1706  00053E  0012               	return	
  1707  000540  D0C2               	goto	l8229
  1708  000542                     l8159:
  1709                           
  1710                           ; BSR set to: 0
  1711  000542  0E00               	movlw	0
  1712  000544  6E1F               	movwf	_Switch_Init,c
  1713                           
  1714                           ;State_Mchn.c: 245: break;
  1715  000546  0012               	return	
  1716  000548                     l8161:
  1717                           
  1718                           ; BSR set to: 0
  1719  000548  0E01               	movlw	1
  1720  00054A  6E22               	movwf	_Switch_Program,c
  1721                           
  1722                           ;State_Mchn.c: 247: Switch_Init = 7;
  1723  00054C  0E07               	movlw	7
  1724  00054E  6E1F               	movwf	_Switch_Init,c
  1725                           
  1726                           ;State_Mchn.c: 248: break;
  1727  000550  0012               	return	
  1728  000552                     l8163:
  1729                           
  1730                           ; BSR set to: 0
  1731  000552  0E02               	movlw	2
  1732  000554  6E22               	movwf	_Switch_Program,c
  1733                           
  1734                           ;State_Mchn.c: 250: Switch_Init = 7;
  1735  000556  0E07               	movlw	7
  1736  000558  6E1F               	movwf	_Switch_Init,c
  1737                           
  1738                           ;State_Mchn.c: 251: break;
  1739  00055A  0012               	return	
  1740  00055C                     l8165:
  1741                           
  1742                           ; BSR set to: 0
  1743  00055C  0E04               	movlw	4
  1744  00055E  6E22               	movwf	_Switch_Program,c
  1745                           
  1746                           ;State_Mchn.c: 253: Switch_Init = 7;
  1747  000560  0E07               	movlw	7
  1748  000562  6E1F               	movwf	_Switch_Init,c
  1749                           
  1750                           ;State_Mchn.c: 254: break;
  1751  000564  0012               	return	
  1752  000566                     l8167:
  1753                           
  1754                           ; BSR set to: 0
  1755  000566  0E08               	movlw	8
  1756  000568  6E1F               	movwf	_Switch_Init,c
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;State_Mchn.c: 256: Red_Led(1);
  1760  00056A  0E01               	movlw	1
  1761  00056C  ECCC  F014         	call	_Red_Led
  1762                           
  1763                           ;State_Mchn.c: 258: }
  1764                           
  1765                           ;State_Mchn.c: 257: break;
  1766  000570  0012               	return	
  1767  000572                     l8173:
  1768  000572  0E18               	movlw	24
  1769  000574  ECA5  F016         	call	_GETxAPIxVAL
  1770                           
  1771                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1772                           ; Switch size 1, requested type "space"
  1773                           ; Number of cases is 1, Range of values is 0 to 0
  1774                           ; switch strategies available:
  1775                           ; Name         Instructions Cycles
  1776                           ; simple_byte            4     3 (average)
  1777                           ;	Chosen strategy is simple_byte
  1778  000578  0100               	movlb	0	; () banked
  1779  00057A  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1780  00057C  0A00               	xorlw	0	; case 0
  1781  00057E  A4D8               	btfss	status,2,c
  1782  000580  D7F2               	goto	l8167
  1783                           
  1784                           ; BSR set to: 0
  1785                           ; Switch size 1, requested type "space"
  1786                           ; Number of cases is 4, Range of values is 0 to 3
  1787                           ; switch strategies available:
  1788                           ; Name         Instructions Cycles
  1789                           ; simple_byte           13     7 (average)
  1790                           ;	Chosen strategy is simple_byte
  1791  000582  0100               	movlb	0	; () banked
  1792  000584  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1793  000586  0A00               	xorlw	0	; case 0
  1794  000588  B4D8               	btfsc	status,2,c
  1795  00058A  D7DB               	goto	l8159
  1796  00058C  0A01               	xorlw	1	; case 1
  1797  00058E  B4D8               	btfsc	status,2,c
  1798  000590  D7DB               	goto	l8161
  1799  000592  0A03               	xorlw	3	; case 2
  1800  000594  B4D8               	btfsc	status,2,c
  1801  000596  D7DD               	goto	l8163
  1802  000598  0A01               	xorlw	1	; case 3
  1803  00059A  B4D8               	btfsc	status,2,c
  1804  00059C  D7DF               	goto	l8165
  1805  00059E  D7E3               	goto	l8167
  1806  0005A0                     l8175:
  1807                           
  1808                           ; BSR set to: 0
  1809  0005A0  0E01               	movlw	1
  1810  0005A2  6E22               	movwf	_Switch_Program,c
  1811                           
  1812                           ;State_Mchn.c: 263: Switch_Init = 7;
  1813  0005A4  0E07               	movlw	7
  1814  0005A6  6E1F               	movwf	_Switch_Init,c
  1815                           
  1816                           ;State_Mchn.c: 264: break;
  1817  0005A8  0012               	return	
  1818  0005AA                     l8177:
  1819                           
  1820                           ; BSR set to: 0
  1821  0005AA  0E00               	movlw	0
  1822  0005AC  6E1F               	movwf	_Switch_Init,c
  1823                           
  1824                           ;State_Mchn.c: 266: break;
  1825  0005AE  0012               	return	
  1826  0005B0                     l8179:
  1827                           
  1828                           ; BSR set to: 0
  1829  0005B0  0E00               	movlw	0
  1830  0005B2  6E22               	movwf	_Switch_Program,c
  1831                           
  1832                           ;State_Mchn.c: 268: Switch_Init = 7;
  1833  0005B4  0E07               	movlw	7
  1834  0005B6  6E1F               	movwf	_Switch_Init,c
  1835                           
  1836                           ;State_Mchn.c: 269: break;
  1837  0005B8  0012               	return	
  1838  0005BA                     l8181:
  1839                           
  1840                           ; BSR set to: 0
  1841  0005BA  0E06               	movlw	6
  1842  0005BC  6E22               	movwf	_Switch_Program,c
  1843                           
  1844                           ;State_Mchn.c: 271: Switch_Init = 7;
  1845  0005BE  0E07               	movlw	7
  1846  0005C0  6E1F               	movwf	_Switch_Init,c
  1847                           
  1848                           ;State_Mchn.c: 272: break;
  1849  0005C2  0012               	return	
  1850  0005C4                     l8183:
  1851                           
  1852                           ; BSR set to: 0
  1853  0005C4  0E08               	movlw	8
  1854  0005C6  6E1F               	movwf	_Switch_Init,c
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;State_Mchn.c: 274: Red_Led(1);
  1858  0005C8  0E01               	movlw	1
  1859  0005CA  ECCC  F014         	call	_Red_Led
  1860                           
  1861                           ;State_Mchn.c: 276: }
  1862                           
  1863                           ;State_Mchn.c: 275: break;
  1864  0005CE  0012               	return	
  1865  0005D0                     l8189:
  1866  0005D0  0E18               	movlw	24
  1867  0005D2  ECA5  F016         	call	_GETxAPIxVAL
  1868                           
  1869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1870                           ; Switch size 1, requested type "space"
  1871                           ; Number of cases is 1, Range of values is 0 to 0
  1872                           ; switch strategies available:
  1873                           ; Name         Instructions Cycles
  1874                           ; simple_byte            4     3 (average)
  1875                           ;	Chosen strategy is simple_byte
  1876  0005D6  0100               	movlb	0	; () banked
  1877  0005D8  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1878  0005DA  0A00               	xorlw	0	; case 0
  1879  0005DC  A4D8               	btfss	status,2,c
  1880  0005DE  D7F2               	goto	l8183
  1881                           
  1882                           ; BSR set to: 0
  1883                           ; Switch size 1, requested type "space"
  1884                           ; Number of cases is 4, Range of values is 0 to 3
  1885                           ; switch strategies available:
  1886                           ; Name         Instructions Cycles
  1887                           ; simple_byte           13     7 (average)
  1888                           ;	Chosen strategy is simple_byte
  1889  0005E0  0100               	movlb	0	; () banked
  1890  0005E2  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1891  0005E4  0A00               	xorlw	0	; case 0
  1892  0005E6  B4D8               	btfsc	status,2,c
  1893  0005E8  D7DB               	goto	l8175
  1894  0005EA  0A01               	xorlw	1	; case 1
  1895  0005EC  B4D8               	btfsc	status,2,c
  1896  0005EE  D7DD               	goto	l8177
  1897  0005F0  0A03               	xorlw	3	; case 2
  1898  0005F2  B4D8               	btfsc	status,2,c
  1899  0005F4  D7DD               	goto	l8179
  1900  0005F6  0A01               	xorlw	1	; case 3
  1901  0005F8  B4D8               	btfsc	status,2,c
  1902  0005FA  D7DF               	goto	l8181
  1903  0005FC  D7E3               	goto	l8183
  1904  0005FE                     l8191:
  1905                           
  1906                           ; BSR set to: 0
  1907  0005FE  0E02               	movlw	2
  1908  000600  6E22               	movwf	_Switch_Program,c
  1909                           
  1910                           ;State_Mchn.c: 281: Switch_Init = 7;
  1911  000602  0E07               	movlw	7
  1912  000604  6E1F               	movwf	_Switch_Init,c
  1913                           
  1914                           ;State_Mchn.c: 282: break;
  1915  000606  0012               	return	
  1916  000608                     l8193:
  1917                           
  1918                           ; BSR set to: 0
  1919  000608  0E00               	movlw	0
  1920  00060A  6E22               	movwf	_Switch_Program,c
  1921                           
  1922                           ;State_Mchn.c: 284: Switch_Init = 7;
  1923  00060C  0E07               	movlw	7
  1924  00060E  6E1F               	movwf	_Switch_Init,c
  1925                           
  1926                           ;State_Mchn.c: 285: break;
  1927  000610  0012               	return	
  1928  000612                     l8195:
  1929                           
  1930                           ; BSR set to: 0
  1931  000612  0E00               	movlw	0
  1932  000614  6E1F               	movwf	_Switch_Init,c
  1933                           
  1934                           ;State_Mchn.c: 287: break;
  1935  000616  0012               	return	
  1936  000618                     l8197:
  1937                           
  1938                           ; BSR set to: 0
  1939  000618  0E03               	movlw	3
  1940  00061A  6E22               	movwf	_Switch_Program,c
  1941                           
  1942                           ;State_Mchn.c: 289: Switch_Init = 7;
  1943  00061C  0E07               	movlw	7
  1944  00061E  6E1F               	movwf	_Switch_Init,c
  1945                           
  1946                           ;State_Mchn.c: 290: break;
  1947  000620  0012               	return	
  1948  000622                     l8199:
  1949                           
  1950                           ; BSR set to: 0
  1951  000622  0E08               	movlw	8
  1952  000624  6E1F               	movwf	_Switch_Init,c
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;State_Mchn.c: 292: Red_Led(1);
  1956  000626  0E01               	movlw	1
  1957  000628  ECCC  F014         	call	_Red_Led
  1958                           
  1959                           ;State_Mchn.c: 294: }
  1960                           
  1961                           ;State_Mchn.c: 293: break;
  1962  00062C  0012               	return	
  1963  00062E                     l8205:
  1964  00062E  0E18               	movlw	24
  1965  000630  ECA5  F016         	call	_GETxAPIxVAL
  1966                           
  1967                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1968                           ; Switch size 1, requested type "space"
  1969                           ; Number of cases is 1, Range of values is 0 to 0
  1970                           ; switch strategies available:
  1971                           ; Name         Instructions Cycles
  1972                           ; simple_byte            4     3 (average)
  1973                           ;	Chosen strategy is simple_byte
  1974  000634  0100               	movlb	0	; () banked
  1975  000636  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1976  000638  0A00               	xorlw	0	; case 0
  1977  00063A  A4D8               	btfss	status,2,c
  1978  00063C  D7F2               	goto	l8199
  1979                           
  1980                           ; BSR set to: 0
  1981                           ; Switch size 1, requested type "space"
  1982                           ; Number of cases is 4, Range of values is 0 to 3
  1983                           ; switch strategies available:
  1984                           ; Name         Instructions Cycles
  1985                           ; simple_byte           13     7 (average)
  1986                           ;	Chosen strategy is simple_byte
  1987  00063E  0100               	movlb	0	; () banked
  1988  000640  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1989  000642  0A00               	xorlw	0	; case 0
  1990  000644  B4D8               	btfsc	status,2,c
  1991  000646  D7DB               	goto	l8191
  1992  000648  0A01               	xorlw	1	; case 1
  1993  00064A  B4D8               	btfsc	status,2,c
  1994  00064C  D7DD               	goto	l8193
  1995  00064E  0A03               	xorlw	3	; case 2
  1996  000650  B4D8               	btfsc	status,2,c
  1997  000652  D7DF               	goto	l8195
  1998  000654  0A01               	xorlw	1	; case 3
  1999  000656  B4D8               	btfsc	status,2,c
  2000  000658  D7DF               	goto	l8197
  2001  00065A  D7E3               	goto	l8199
  2002  00065C                     l8207:
  2003                           
  2004                           ; BSR set to: 0
  2005  00065C  0E04               	movlw	4
  2006  00065E  6E22               	movwf	_Switch_Program,c
  2007                           
  2008                           ;State_Mchn.c: 299: Switch_Init = 7;
  2009  000660  0E07               	movlw	7
  2010  000662  6E1F               	movwf	_Switch_Init,c
  2011                           
  2012                           ;State_Mchn.c: 300: break;
  2013  000664  0012               	return	
  2014  000666                     l8209:
  2015                           
  2016                           ; BSR set to: 0
  2017  000666  0E06               	movlw	6
  2018  000668  6E22               	movwf	_Switch_Program,c
  2019                           
  2020                           ;State_Mchn.c: 302: Switch_Init = 7;
  2021  00066A  0E07               	movlw	7
  2022  00066C  6E1F               	movwf	_Switch_Init,c
  2023                           
  2024                           ;State_Mchn.c: 303: break;
  2025  00066E  0012               	return	
  2026  000670                     l8211:
  2027                           
  2028                           ; BSR set to: 0
  2029  000670  0E03               	movlw	3
  2030  000672  6E22               	movwf	_Switch_Program,c
  2031                           
  2032                           ;State_Mchn.c: 305: Switch_Init = 7;
  2033  000674  0E07               	movlw	7
  2034  000676  6E1F               	movwf	_Switch_Init,c
  2035                           
  2036                           ;State_Mchn.c: 306: break;
  2037  000678  0012               	return	
  2038  00067A                     l8213:
  2039                           
  2040                           ; BSR set to: 0
  2041  00067A  0E00               	movlw	0
  2042  00067C  6E1F               	movwf	_Switch_Init,c
  2043                           
  2044                           ;State_Mchn.c: 308: break;
  2045  00067E  0012               	return	
  2046  000680                     l8215:
  2047                           
  2048                           ; BSR set to: 0
  2049  000680  0E08               	movlw	8
  2050  000682  6E1F               	movwf	_Switch_Init,c
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;State_Mchn.c: 310: Red_Led(1);
  2054  000684  0E01               	movlw	1
  2055  000686  ECCC  F014         	call	_Red_Led
  2056                           
  2057                           ;State_Mchn.c: 312: }
  2058                           
  2059                           ;State_Mchn.c: 311: break;
  2060  00068A  0012               	return	
  2061  00068C                     l8221:
  2062  00068C  0E18               	movlw	24
  2063  00068E  ECA5  F016         	call	_GETxAPIxVAL
  2064                           
  2065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2066                           ; Switch size 1, requested type "space"
  2067                           ; Number of cases is 1, Range of values is 0 to 0
  2068                           ; switch strategies available:
  2069                           ; Name         Instructions Cycles
  2070                           ; simple_byte            4     3 (average)
  2071                           ;	Chosen strategy is simple_byte
  2072  000692  0100               	movlb	0	; () banked
  2073  000694  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2074  000696  0A00               	xorlw	0	; case 0
  2075  000698  A4D8               	btfss	status,2,c
  2076  00069A  D7F2               	goto	l8215
  2077                           
  2078                           ; BSR set to: 0
  2079                           ; Switch size 1, requested type "space"
  2080                           ; Number of cases is 4, Range of values is 0 to 3
  2081                           ; switch strategies available:
  2082                           ; Name         Instructions Cycles
  2083                           ; simple_byte           13     7 (average)
  2084                           ;	Chosen strategy is simple_byte
  2085  00069C  0100               	movlb	0	; () banked
  2086  00069E  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2087  0006A0  0A00               	xorlw	0	; case 0
  2088  0006A2  B4D8               	btfsc	status,2,c
  2089  0006A4  D7DB               	goto	l8207
  2090  0006A6  0A01               	xorlw	1	; case 1
  2091  0006A8  B4D8               	btfsc	status,2,c
  2092  0006AA  D7DD               	goto	l8209
  2093  0006AC  0A03               	xorlw	3	; case 2
  2094  0006AE  B4D8               	btfsc	status,2,c
  2095  0006B0  D7DF               	goto	l8211
  2096  0006B2  0A01               	xorlw	1	; case 3
  2097  0006B4  B4D8               	btfsc	status,2,c
  2098  0006B6  D7E1               	goto	l8213
  2099  0006B8  D7E3               	goto	l8215
  2100  0006BA                     l8223:
  2101                           
  2102                           ; BSR set to: 0
  2103  0006BA  0E08               	movlw	8
  2104  0006BC  6E1F               	movwf	_Switch_Init,c
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;State_Mchn.c: 315: Red_Led(1);
  2108  0006BE  0E01               	movlw	1
  2109  0006C0  ECCC  F014         	call	_Red_Led
  2110                           
  2111                           ;State_Mchn.c: 317: }
  2112                           
  2113                           ;State_Mchn.c: 316: break;
  2114  0006C4  0012               	return	
  2115  0006C6                     l8229:
  2116  0006C6  0E17               	movlw	23
  2117  0006C8  ECA5  F016         	call	_GETxAPIxVAL
  2118                           
  2119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2120                           ; Switch size 1, requested type "space"
  2121                           ; Number of cases is 1, Range of values is 0 to 0
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte            4     3 (average)
  2125                           ;	Chosen strategy is simple_byte
  2126  0006CC  0100               	movlb	0	; () banked
  2127  0006CE  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2128  0006D0  0A00               	xorlw	0	; case 0
  2129  0006D2  A4D8               	btfss	status,2,c
  2130  0006D4  D7F2               	goto	l8223
  2131                           
  2132                           ; BSR set to: 0
  2133                           ; Switch size 1, requested type "space"
  2134                           ; Number of cases is 4, Range of values is 0 to 3
  2135                           ; switch strategies available:
  2136                           ; Name         Instructions Cycles
  2137                           ; simple_byte           13     7 (average)
  2138                           ;	Chosen strategy is simple_byte
  2139  0006D6  0100               	movlb	0	; () banked
  2140  0006D8  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2141  0006DA  0A00               	xorlw	0	; case 0
  2142  0006DC  B4D8               	btfsc	status,2,c
  2143  0006DE  D749               	goto	l8173
  2144  0006E0  0A01               	xorlw	1	; case 1
  2145  0006E2  B4D8               	btfsc	status,2,c
  2146  0006E4  D775               	goto	l8189
  2147  0006E6  0A03               	xorlw	3	; case 2
  2148  0006E8  B4D8               	btfsc	status,2,c
  2149  0006EA  D7A1               	goto	l8205
  2150  0006EC  0A01               	xorlw	1	; case 3
  2151  0006EE  B4D8               	btfsc	status,2,c
  2152  0006F0  D7CD               	goto	l8221
  2153  0006F2  D7E3               	goto	l8223
  2154  0006F4                     l8231:
  2155  0006F4  0E0B               	movlw	11
  2156  0006F6  6E1F               	movwf	_Switch_Init,c
  2157                           
  2158                           ;State_Mchn.c: 322: break;
  2159  0006F8  0012               	return	
  2160  0006FA                     l8233:
  2161  0006FA  0E10               	movlw	16
  2162  0006FC  ECA5  F016         	call	_GETxAPIxVAL
  2163  000700  0100               	movlb	0	; () banked
  2164  000702  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2165  000704  0100               	movlb	0	; () banked
  2166  000706  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2167  000708  B4D8               	btfsc	status,2,c
  2168  00070A  D006               	goto	l8237
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;State_Mchn.c: 325: {
  2172                           ;State_Mchn.c: 326: Switch_Main = 2;
  2173  00070C  0E02               	movlw	2
  2174  00070E  6E20               	movwf	_Switch_Main,c
  2175                           
  2176                           ;State_Mchn.c: 327: Switch_Init = 0;
  2177  000710  0E00               	movlw	0
  2178  000712  6E1F               	movwf	_Switch_Init,c
  2179                           
  2180                           ;State_Mchn.c: 328: Stop_Program = 0;
  2181  000714  0E00               	movlw	0
  2182  000716  6E19               	movwf	_Stop_Program,c
  2183  000718                     l8237:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;State_Mchn.c: 329: }
  2187                           ;State_Mchn.c: 330: Green_Led(3);
  2188  000718  0E03               	movlw	3
  2189  00071A  EC0E  F015         	call	_Green_Led
  2190                           
  2191                           ;State_Mchn.c: 331: Red_Led(0);
  2192  00071E  0E00               	movlw	0
  2193  000720  ECCC  F014         	call	_Red_Led
  2194                           
  2195                           ;State_Mchn.c: 332: break;
  2196  000724  0012               	return	
  2197  000726                     l8241:
  2198  000726  0E17               	movlw	23
  2199  000728  ECA5  F016         	call	_GETxAPIxVAL
  2200  00072C  0E04               	movlw	4
  2201  00072E  0100               	movlb	0	; () banked
  2202  000730  19F9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2203  000732  0100               	movlb	0	; () banked
  2204  000734  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2205  000736  A4D8               	btfss	status,2,c
  2206  000738  D01F               	goto	l8259
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;State_Mchn.c: 335: {
  2210                           ;State_Mchn.c: 336: Switch_Program = 0;
  2211  00073A  0E00               	movlw	0
  2212  00073C  6E22               	movwf	_Switch_Program,c
  2213                           
  2214                           ;State_Mchn.c: 337: Switch_Init = 10;
  2215  00073E  0E0A               	movlw	10
  2216  000740  6E1F               	movwf	_Switch_Init,c
  2217                           
  2218                           ;State_Mchn.c: 338: }
  2219  000742  0012               	return	
  2220  000744                     l8245:
  2221                           
  2222                           ; BSR set to: 0
  2223  000744  0E01               	movlw	1
  2224  000746  6E22               	movwf	_Switch_Program,c
  2225  000748  0E0A               	movlw	10
  2226  00074A  6E1F               	movwf	_Switch_Init,c
  2227  00074C  0012               	return	
  2228  00074E                     l8247:
  2229                           
  2230                           ; BSR set to: 0
  2231  00074E  0E03               	movlw	3
  2232  000750  6E22               	movwf	_Switch_Program,c
  2233  000752  0E0A               	movlw	10
  2234  000754  6E1F               	movwf	_Switch_Init,c
  2235  000756  0012               	return	
  2236  000758                     l8249:
  2237                           
  2238                           ; BSR set to: 0
  2239  000758  0E00               	movlw	0
  2240  00075A  6E22               	movwf	_Switch_Program,c
  2241  00075C  0E0A               	movlw	10
  2242  00075E  6E1F               	movwf	_Switch_Init,c
  2243  000760  0012               	return	
  2244  000762                     l8251:
  2245                           
  2246                           ; BSR set to: 0
  2247  000762  0E02               	movlw	2
  2248  000764  6E22               	movwf	_Switch_Program,c
  2249  000766  0E0A               	movlw	10
  2250  000768  6E1F               	movwf	_Switch_Init,c
  2251  00076A  0012               	return	
  2252  00076C                     l8253:
  2253                           
  2254                           ; BSR set to: 0
  2255  00076C  0E0B               	movlw	11
  2256  00076E  6E1F               	movwf	_Switch_Init,c
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;State_Mchn.c: 346: Red_Led(1);
  2260  000770  0E01               	movlw	1
  2261  000772  ECCC  F014         	call	_Red_Led
  2262                           
  2263                           ;State_Mchn.c: 348: }
  2264                           
  2265                           ;State_Mchn.c: 347: break;
  2266  000776  0012               	return	
  2267  000778                     l8259:
  2268  000778  0E17               	movlw	23
  2269  00077A  ECA5  F016         	call	_GETxAPIxVAL
  2270                           
  2271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2272                           ; Switch size 1, requested type "space"
  2273                           ; Number of cases is 1, Range of values is 0 to 0
  2274                           ; switch strategies available:
  2275                           ; Name         Instructions Cycles
  2276                           ; simple_byte            4     3 (average)
  2277                           ;	Chosen strategy is simple_byte
  2278  00077E  0100               	movlb	0	; () banked
  2279  000780  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2280  000782  0A00               	xorlw	0	; case 0
  2281  000784  A4D8               	btfss	status,2,c
  2282  000786  D7F2               	goto	l8253
  2283                           
  2284                           ; BSR set to: 0
  2285                           ; Switch size 1, requested type "space"
  2286                           ; Number of cases is 4, Range of values is 0 to 3
  2287                           ; switch strategies available:
  2288                           ; Name         Instructions Cycles
  2289                           ; simple_byte           13     7 (average)
  2290                           ;	Chosen strategy is simple_byte
  2291  000788  0100               	movlb	0	; () banked
  2292  00078A  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2293  00078C  0A00               	xorlw	0	; case 0
  2294  00078E  B4D8               	btfsc	status,2,c
  2295  000790  D7D9               	goto	l8245
  2296  000792  0A01               	xorlw	1	; case 1
  2297  000794  B4D8               	btfsc	status,2,c
  2298  000796  D7DB               	goto	l8247
  2299  000798  0A03               	xorlw	3	; case 2
  2300  00079A  B4D8               	btfsc	status,2,c
  2301  00079C  D7DD               	goto	l8249
  2302  00079E  0A01               	xorlw	1	; case 3
  2303  0007A0  B4D8               	btfsc	status,2,c
  2304  0007A2  D7DF               	goto	l8251
  2305  0007A4  D7E3               	goto	l8253
  2306  0007A6                     l8261:
  2307  0007A6  0E00               	movlw	0
  2308  0007A8  6E1F               	movwf	_Switch_Init,c
  2309                           
  2310                           ;State_Mchn.c: 352: Red_Led(1);
  2311  0007AA  0E01               	movlw	1
  2312  0007AC  ECCC  F014         	call	_Red_Led
  2313                           
  2314                           ;State_Mchn.c: 354: }
  2315                           
  2316                           ;State_Mchn.c: 353: break;
  2317  0007B0  0012               	return	
  2318  0007B2                     l8267:
  2319  0007B2  501F               	movf	_Switch_Init,w,c
  2320                           
  2321                           ; Switch size 1, requested type "space"
  2322                           ; Number of cases is 12, Range of values is 0 to 11
  2323                           ; switch strategies available:
  2324                           ; Name         Instructions Cycles
  2325                           ; simple_byte           37    19 (average)
  2326                           ;	Chosen strategy is simple_byte
  2327  0007B4  0A00               	xorlw	0	; case 0
  2328  0007B6  B4D8               	btfsc	status,2,c
  2329  0007B8  D47C               	goto	l7975
  2330  0007BA  0A01               	xorlw	1	; case 1
  2331  0007BC  B4D8               	btfsc	status,2,c
  2332  0007BE  D482               	goto	l7979
  2333  0007C0  0A03               	xorlw	3	; case 2
  2334  0007C2  B4D8               	btfsc	status,2,c
  2335  0007C4  D4E9               	goto	l8013
  2336  0007C6  0A01               	xorlw	1	; case 3
  2337  0007C8  B4D8               	btfsc	status,2,c
  2338  0007CA  D525               	goto	l8031
  2339  0007CC  0A07               	xorlw	7	; case 4
  2340  0007CE  B4D8               	btfsc	status,2,c
  2341  0007D0  D5A0               	goto	l8071
  2342  0007D2  0A01               	xorlw	1	; case 5
  2343  0007D4  B4D8               	btfsc	status,2,c
  2344  0007D6  D608               	goto	l8095
  2345  0007D8  0A03               	xorlw	3	; case 6
  2346  0007DA  B4D8               	btfsc	status,2,c
  2347  0007DC  D61E               	goto	l8103
  2348  0007DE  0A01               	xorlw	1	; case 7
  2349  0007E0  B4D8               	btfsc	status,2,c
  2350  0007E2  D61E               	goto	l8105
  2351  0007E4  0A0F               	xorlw	15	; case 8
  2352  0007E6  B4D8               	btfsc	status,2,c
  2353  0007E8  D631               	goto	l8113
  2354  0007EA  0A01               	xorlw	1	; case 9
  2355  0007EC  B4D8               	btfsc	status,2,c
  2356  0007EE  D782               	goto	l8231
  2357  0007F0  0A03               	xorlw	3	; case 10
  2358  0007F2  B4D8               	btfsc	status,2,c
  2359  0007F4  D782               	goto	l8233
  2360  0007F6  0A01               	xorlw	1	; case 11
  2361  0007F8  B4D8               	btfsc	status,2,c
  2362  0007FA  D795               	goto	l8241
  2363  0007FC  D7D4               	goto	l8261
  2364  0007FE                     l8269:
  2365  0007FE  0E00               	movlw	0
  2366  000800  0101               	movlb	1	; () banked
  2367  000802  6FFF               	movwf	Train_Path@To& (0+255),b
  2368  000804  0E02               	movlw	2
  2369  000806  EC94  F00B         	call	_Train_Path
  2370  00080A  0900               	iorlw	0
  2371  00080C  A4D8               	btfss	status,2,c
  2372  00080E  D221               	goto	l8513
  2373                           
  2374                           ;State_Mchn.c: 360: {
  2375                           ;State_Mchn.c: 361: Switch_Program = 1;
  2376  000810  0E01               	movlw	1
  2377  000812  6E22               	movwf	_Switch_Program,c
  2378                           
  2379                           ;State_Mchn.c: 362: Eeprom_Store();
  2380  000814  EC55  F013         	call	_Eeprom_Store	;wreg free
  2381  000818                     l8275:
  2382                           
  2383                           ;State_Mchn.c: 363: if(Stop_Program == 1)
  2384  000818  0419               	decf	_Stop_Program,w,c
  2385  00081A  A4D8               	btfss	status,2,c
  2386  00081C  D21A               	goto	l8513
  2387                           
  2388                           ;State_Mchn.c: 364: {
  2389                           ;State_Mchn.c: 365: Switch_Main = 0;
  2390  00081E  0E00               	movlw	0
  2391  000820  6E20               	movwf	_Switch_Main,c
  2392                           
  2393                           ;State_Mchn.c: 367: }
  2394                           ;State_Mchn.c: 368: }
  2395                           ;State_Mchn.c: 369: break;
  2396  000822  D217               	goto	l8513
  2397  000824                     l8279:
  2398  000824  0E02               	movlw	2
  2399  000826  0101               	movlb	1	; () banked
  2400  000828  6FFF               	movwf	Train_Path@To& (0+255),b
  2401  00082A  0E01               	movlw	1
  2402  00082C  EC94  F00B         	call	_Train_Path
  2403  000830  0900               	iorlw	0
  2404  000832  A4D8               	btfss	status,2,c
  2405  000834  D20E               	goto	l8513
  2406                           
  2407                           ;State_Mchn.c: 372: {
  2408                           ;State_Mchn.c: 373: Switch_Program = 2;
  2409  000836  0E02               	movlw	2
  2410  000838  6E22               	movwf	_Switch_Program,c
  2411                           
  2412                           ;State_Mchn.c: 374: Eeprom_Store();
  2413  00083A  EC55  F013         	call	_Eeprom_Store	;wreg free
  2414  00083E  D7EC               	goto	l8275
  2415  000840                     l8289:
  2416  000840  0E03               	movlw	3
  2417  000842  0101               	movlb	1	; () banked
  2418  000844  6FFF               	movwf	Train_Path@To& (0+255),b
  2419  000846  0E00               	movlw	0
  2420  000848  EC94  F00B         	call	_Train_Path
  2421  00084C  0900               	iorlw	0
  2422  00084E  A4D8               	btfss	status,2,c
  2423  000850  D200               	goto	l8513
  2424                           
  2425                           ;State_Mchn.c: 384: {
  2426                           ;State_Mchn.c: 385: Switch_Program = 3;
  2427  000852  0E03               	movlw	3
  2428  000854  6E22               	movwf	_Switch_Program,c
  2429                           
  2430                           ;State_Mchn.c: 386: Eeprom_Store();
  2431  000856  EC55  F013         	call	_Eeprom_Store	;wreg free
  2432  00085A  D7DE               	goto	l8275
  2433  00085C                     l8299:
  2434  00085C  0E00               	movlw	0
  2435  00085E  0101               	movlb	1	; () banked
  2436  000860  6FFF               	movwf	Train_Path@To& (0+255),b
  2437  000862  0E02               	movlw	2
  2438  000864  EC94  F00B         	call	_Train_Path
  2439  000868  0900               	iorlw	0
  2440  00086A  A4D8               	btfss	status,2,c
  2441  00086C  D1F2               	goto	l8513
  2442                           
  2443                           ;State_Mchn.c: 396: {
  2444                           ;State_Mchn.c: 397: Switch_Program = 4;
  2445  00086E  0E04               	movlw	4
  2446  000870  6E22               	movwf	_Switch_Program,c
  2447                           
  2448                           ;State_Mchn.c: 398: Eeprom_Store();
  2449  000872  EC55  F013         	call	_Eeprom_Store	;wreg free
  2450  000876  D7D0               	goto	l8275
  2451  000878                     l8309:
  2452  000878  0E01               	movlw	1
  2453  00087A  0101               	movlb	1	; () banked
  2454  00087C  6FFF               	movwf	Train_Path@To& (0+255),b
  2455  00087E  0E03               	movlw	3
  2456  000880  EC94  F00B         	call	_Train_Path
  2457  000884  0900               	iorlw	0
  2458  000886  A4D8               	btfss	status,2,c
  2459  000888  D1E4               	goto	l8513
  2460                           
  2461                           ;State_Mchn.c: 408: {
  2462                           ;State_Mchn.c: 409: Switch_Program = 5;
  2463  00088A  0E05               	movlw	5
  2464  00088C  6E22               	movwf	_Switch_Program,c
  2465                           
  2466                           ;State_Mchn.c: 410: Eeprom_Store();
  2467  00088E  EC55  F013         	call	_Eeprom_Store	;wreg free
  2468  000892  D7C2               	goto	l8275
  2469  000894                     l8319:
  2470  000894  0E03               	movlw	3
  2471  000896  0101               	movlb	1	; () banked
  2472  000898  6FFF               	movwf	Train_Path@To& (0+255),b
  2473  00089A  0E00               	movlw	0
  2474  00089C  EC94  F00B         	call	_Train_Path
  2475  0008A0  0900               	iorlw	0
  2476  0008A2  A4D8               	btfss	status,2,c
  2477  0008A4  D1D6               	goto	l8513
  2478                           
  2479                           ;State_Mchn.c: 420: {
  2480                           ;State_Mchn.c: 421: Switch_Program = 6;
  2481  0008A6  0E06               	movlw	6
  2482  0008A8  6E22               	movwf	_Switch_Program,c
  2483                           
  2484                           ;State_Mchn.c: 422: Eeprom_Store();
  2485  0008AA  EC55  F013         	call	_Eeprom_Store	;wreg free
  2486  0008AE  D7B4               	goto	l8275
  2487  0008B0                     l8329:
  2488  0008B0  0E02               	movlw	2
  2489  0008B2  0101               	movlb	1	; () banked
  2490  0008B4  6FFF               	movwf	Train_Path@To& (0+255),b
  2491  0008B6  0E01               	movlw	1
  2492  0008B8  EC94  F00B         	call	_Train_Path
  2493  0008BC  0900               	iorlw	0
  2494  0008BE  A4D8               	btfss	status,2,c
  2495  0008C0  D1C8               	goto	l8513
  2496                           
  2497                           ;State_Mchn.c: 432: {
  2498                           ;State_Mchn.c: 433: Switch_Program = 7;
  2499  0008C2  0E07               	movlw	7
  2500  0008C4  6E22               	movwf	_Switch_Program,c
  2501                           
  2502                           ;State_Mchn.c: 434: Eeprom_Store();
  2503  0008C6  EC55  F013         	call	_Eeprom_Store	;wreg free
  2504  0008CA  D7A6               	goto	l8275
  2505  0008CC                     l8339:
  2506  0008CC  0E01               	movlw	1
  2507  0008CE  0101               	movlb	1	; () banked
  2508  0008D0  6FFF               	movwf	Train_Path@To& (0+255),b
  2509  0008D2  0E03               	movlw	3
  2510  0008D4  EC94  F00B         	call	_Train_Path
  2511  0008D8  0900               	iorlw	0
  2512  0008DA  A4D8               	btfss	status,2,c
  2513  0008DC  D1BA               	goto	l8513
  2514                           
  2515                           ;State_Mchn.c: 444: {
  2516                           ;State_Mchn.c: 445: Switch_Program = 0;
  2517  0008DE  0E00               	movlw	0
  2518  0008E0  6E22               	movwf	_Switch_Program,c
  2519                           
  2520                           ;State_Mchn.c: 446: Eeprom_Store();
  2521  0008E2  EC55  F013         	call	_Eeprom_Store	;wreg free
  2522  0008E6  D798               	goto	l8275
  2523  0008E8                     l8351:
  2524  0008E8  5022               	movf	_Switch_Program,w,c
  2525                           
  2526                           ; Switch size 1, requested type "space"
  2527                           ; Number of cases is 8, Range of values is 0 to 7
  2528                           ; switch strategies available:
  2529                           ; Name         Instructions Cycles
  2530                           ; simple_byte           25    13 (average)
  2531                           ;	Chosen strategy is simple_byte
  2532  0008EA  0A00               	xorlw	0	; case 0
  2533  0008EC  B4D8               	btfsc	status,2,c
  2534  0008EE  D787               	goto	l8269
  2535  0008F0  0A01               	xorlw	1	; case 1
  2536  0008F2  B4D8               	btfsc	status,2,c
  2537  0008F4  D797               	goto	l8279
  2538  0008F6  0A03               	xorlw	3	; case 2
  2539  0008F8  B4D8               	btfsc	status,2,c
  2540  0008FA  D7A2               	goto	l8289
  2541  0008FC  0A01               	xorlw	1	; case 3
  2542  0008FE  B4D8               	btfsc	status,2,c
  2543  000900  D7AD               	goto	l8299
  2544  000902  0A07               	xorlw	7	; case 4
  2545  000904  B4D8               	btfsc	status,2,c
  2546  000906  D7B8               	goto	l8309
  2547  000908  0A01               	xorlw	1	; case 5
  2548  00090A  B4D8               	btfsc	status,2,c
  2549  00090C  D7C3               	goto	l8319
  2550  00090E  0A03               	xorlw	3	; case 6
  2551  000910  B4D8               	btfsc	status,2,c
  2552  000912  D7CE               	goto	l8329
  2553  000914  0A01               	xorlw	1	; case 7
  2554  000916  B4D8               	btfsc	status,2,c
  2555  000918  D7D9               	goto	l8339
  2556                           
  2557                           ;State_Mchn.c: 460: switch(Switch_Activate_Controls)
  2558  00091A  D19B               	goto	l8513
  2559  00091C                     l8353:
  2560  00091C  0E14               	movlw	20
  2561  00091E  ECA5  F016         	call	_GETxAPIxVAL
  2562  000922  0100               	movlb	0	; () banked
  2563  000924  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2564  000926  0100               	movlb	0	; () banked
  2565  000928  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2566  00092A  B4D8               	btfsc	status,2,c
  2567  00092C  D00F               	goto	l8361
  2568                           
  2569                           ; BSR set to: 0
  2570  00092E  0E16               	movlw	22
  2571  000930  ECA5  F016         	call	_GETxAPIxVAL
  2572  000934  0100               	movlb	0	; () banked
  2573  000936  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2574  000938  0100               	movlb	0	; () banked
  2575  00093A  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2576  00093C  B4D8               	btfsc	status,2,c
  2577  00093E  D006               	goto	l8361
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;State_Mchn.c: 463: {
  2581                           ;State_Mchn.c: 464: Switch_Activate_Controls = 1;
  2582  000940  0E01               	movlw	1
  2583  000942  6E1A               	movwf	_Switch_Activate_Controls,c
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;State_Mchn.c: 465: Red_Led(3);
  2587  000944  0E03               	movlw	3
  2588  000946  ECCC  F014         	call	_Red_Led
  2589                           
  2590                           ;State_Mchn.c: 466: }
  2591  00094A  D18E               	goto	l8515
  2592  00094C                     l8361:
  2593                           
  2594                           ;State_Mchn.c: 467: else
  2595                           ;State_Mchn.c: 468: {
  2596                           ;State_Mchn.c: 469: Switch_Activate_Controls = 0;
  2597  00094C  0E00               	movlw	0
  2598  00094E  6E1A               	movwf	_Switch_Activate_Controls,c
  2599                           
  2600                           ;State_Mchn.c: 470: Red_Led(0);
  2601  000950  0E00               	movlw	0
  2602  000952  ECCC  F014         	call	_Red_Led
  2603                           
  2604                           ;State_Mchn.c: 471: }
  2605                           ;State_Mchn.c: 472: break;
  2606  000956  D188               	goto	l8515
  2607  000958                     l8365:
  2608  000958  0E14               	movlw	20
  2609  00095A  ECA5  F016         	call	_GETxAPIxVAL
  2610  00095E  0100               	movlb	0	; () banked
  2611  000960  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2612  000962  0100               	movlb	0	; () banked
  2613  000964  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2614  000966  A4D8               	btfss	status,2,c
  2615  000968  D00F               	goto	l8373
  2616                           
  2617                           ; BSR set to: 0
  2618  00096A  0E16               	movlw	22
  2619  00096C  ECA5  F016         	call	_GETxAPIxVAL
  2620  000970  0100               	movlb	0	; () banked
  2621  000972  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2622  000974  0100               	movlb	0	; () banked
  2623  000976  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2624  000978  A4D8               	btfss	status,2,c
  2625  00097A  D006               	goto	l8373
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;State_Mchn.c: 475: {
  2629                           ;State_Mchn.c: 476: Switch_Activate_Controls = 2;
  2630  00097C  0E02               	movlw	2
  2631  00097E  6E1A               	movwf	_Switch_Activate_Controls,c
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;State_Mchn.c: 477: Red_Led(3);
  2635  000980  0E03               	movlw	3
  2636  000982  ECCC  F014         	call	_Red_Led
  2637                           
  2638                           ;State_Mchn.c: 478: }
  2639  000986  D005               	goto	l8377
  2640  000988                     l8373:
  2641                           
  2642                           ;State_Mchn.c: 479: else
  2643                           ;State_Mchn.c: 480: {
  2644                           ;State_Mchn.c: 481: Switch_Activate_Controls = 1;
  2645  000988  0E01               	movlw	1
  2646  00098A  6E1A               	movwf	_Switch_Activate_Controls,c
  2647                           
  2648                           ;State_Mchn.c: 482: Red_Led(3);
  2649  00098C  0E03               	movlw	3
  2650  00098E  ECCC  F014         	call	_Red_Led
  2651  000992                     l8377:
  2652                           
  2653                           ;State_Mchn.c: 483: }
  2654                           ;State_Mchn.c: 484: Activate_Controls_Counter = 10000;
  2655  000992  0E27               	movlw	39
  2656  000994  0100               	movlb	0	; () banked
  2657  000996  6FE9               	movwf	(_Activate_Controls_Counter+1)& (0+255),b
  2658  000998  0E10               	movlw	16
  2659  00099A  6FE8               	movwf	_Activate_Controls_Counter& (0+255),b
  2660                           
  2661                           ;State_Mchn.c: 485: break;
  2662  00099C  D165               	goto	l8515
  2663  00099E                     l8379:
  2664  00099E  0E14               	movlw	20
  2665  0009A0  ECA5  F016         	call	_GETxAPIxVAL
  2666  0009A4  0100               	movlb	0	; () banked
  2667  0009A6  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2668  0009A8  0100               	movlb	0	; () banked
  2669  0009AA  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2670  0009AC  A4D8               	btfss	status,2,c
  2671  0009AE  D020               	goto	l8389
  2672                           
  2673                           ; BSR set to: 0
  2674  0009B0  0E16               	movlw	22
  2675  0009B2  ECA5  F016         	call	_GETxAPIxVAL
  2676  0009B6  0100               	movlb	0	; () banked
  2677  0009B8  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2678  0009BA  0100               	movlb	0	; () banked
  2679  0009BC  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2680  0009BE  A4D8               	btfss	status,2,c
  2681  0009C0  D017               	goto	l8389
  2682                           
  2683                           ; BSR set to: 0
  2684  0009C2  0E15               	movlw	21
  2685  0009C4  ECA5  F016         	call	_GETxAPIxVAL
  2686  0009C8  0100               	movlb	0	; () banked
  2687  0009CA  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2688  0009CC  0100               	movlb	0	; () banked
  2689  0009CE  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2690  0009D0  A4D8               	btfss	status,2,c
  2691  0009D2  D00E               	goto	l8389
  2692                           
  2693                           ; BSR set to: 0
  2694  0009D4  0E13               	movlw	19
  2695  0009D6  ECA5  F016         	call	_GETxAPIxVAL
  2696  0009DA  0100               	movlb	0	; () banked
  2697  0009DC  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2698  0009DE  0100               	movlb	0	; () banked
  2699  0009E0  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2700  0009E2  A4D8               	btfss	status,2,c
  2701  0009E4  D005               	goto	l8389
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;State_Mchn.c: 488: {
  2705                           ;State_Mchn.c: 489: Activate_Controls_Counter--;
  2706  0009E6  0100               	movlb	0	; () banked
  2707  0009E8  07E8               	decf	_Activate_Controls_Counter& (0+255),f,b
  2708  0009EA  A0D8               	btfss	status,0,c
  2709  0009EC  07E9               	decf	(_Activate_Controls_Counter+1)& (0+255),f,b
  2710                           
  2711                           ;State_Mchn.c: 490: }
  2712  0009EE  D005               	goto	l8391
  2713  0009F0                     l8389:
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;State_Mchn.c: 491: else
  2717                           ;State_Mchn.c: 492: {
  2718                           ;State_Mchn.c: 493: Activate_Controls_Counter = 10000;
  2719  0009F0  0E27               	movlw	39
  2720  0009F2  0100               	movlb	0	; () banked
  2721  0009F4  6FE9               	movwf	(_Activate_Controls_Counter+1)& (0+255),b
  2722  0009F6  0E10               	movlw	16
  2723  0009F8  6FE8               	movwf	_Activate_Controls_Counter& (0+255),b
  2724  0009FA                     l8391:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;State_Mchn.c: 494: }
  2728                           ;State_Mchn.c: 496: Red_Led(3);
  2729  0009FA  0E03               	movlw	3
  2730  0009FC  ECCC  F014         	call	_Red_Led
  2731                           
  2732                           ;State_Mchn.c: 498: switch(GETxAPIxVAL(19))
  2733  000A00  D04A               	goto	l8419
  2734  000A02                     l8393:
  2735  000A02  0E00               	movlw	0
  2736  000A04  D03B               	goto	L8
  2737  000A06                     l8395:
  2738  000A06  0E07               	movlw	7
  2739  000A08  ECA5  F016         	call	_GETxAPIxVAL
  2740  000A0C  C0F9  F283         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  2741  000A10  C0FA  F284         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  2742  000A14  0E06               	movlw	6
  2743  000A16  ECA5  F016         	call	_GETxAPIxVAL
  2744  000A1A  0100               	movlb	0	; () banked
  2745  000A1C  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2746  000A1E  0102               	movlb	2	; () banked
  2747  000A20  5D83               	subwf	??_Update_StateMchn& (0+255),w,b
  2748  000A22  0100               	movlb	0	; () banked
  2749  000A24  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2750  000A26  0102               	movlb	2	; () banked
  2751  000A28  5984               	subwfb	(??_Update_StateMchn+1)& (0+255),w,b
  2752  000A2A  A0D8               	btfss	status,0,c
  2753  000A2C  D003               	goto	l311
  2754                           
  2755                           ; BSR set to: 2
  2756                           ;State_Mchn.c: 506: {
  2757                           ;State_Mchn.c: 507: DECRxAPIxVAL(7);
  2758  000A2E  0E07               	movlw	7
  2759  000A30  EC3B  F016         	call	_DECRxAPIxVAL
  2760  000A34                     l311:
  2761                           
  2762                           ;State_Mchn.c: 508: }
  2763                           ;State_Mchn.c: 509: if(GETxAPIxVAL(8) <= GETxAPIxVAL(5))
  2764  000A34  0E05               	movlw	5
  2765  000A36  ECA5  F016         	call	_GETxAPIxVAL
  2766  000A3A  C0F9  F283         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  2767  000A3E  C0FA  F284         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  2768  000A42  0E08               	movlw	8
  2769  000A44  ECA5  F016         	call	_GETxAPIxVAL
  2770  000A48  0100               	movlb	0	; () banked
  2771  000A4A  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2772  000A4C  0102               	movlb	2	; () banked
  2773  000A4E  5D83               	subwf	??_Update_StateMchn& (0+255),w,b
  2774  000A50  0100               	movlb	0	; () banked
  2775  000A52  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2776  000A54  0102               	movlb	2	; () banked
  2777  000A56  5984               	subwfb	(??_Update_StateMchn+1)& (0+255),w,b
  2778  000A58  A0D8               	btfss	status,0,c
  2779  000A5A  D003               	goto	l8401
  2780                           
  2781                           ; BSR set to: 2
  2782                           ;State_Mchn.c: 510: {
  2783                           ;State_Mchn.c: 511: INCRxAPIxVAL(8);
  2784  000A5C  0E08               	movlw	8
  2785  000A5E  EC69  F016         	call	_INCRxAPIxVAL
  2786  000A62                     l8401:
  2787                           
  2788                           ;State_Mchn.c: 512: }
  2789                           ;State_Mchn.c: 513: Switch_Adjust_LB = 1;
  2790  000A62  0E01               	movlw	1
  2791  000A64  D00B               	goto	L8
  2792  000A66                     l8403:
  2793  000A66  5002               	movf	_Adjust_Counter+1,w,c
  2794  000A68  E104               	bnz	u7390
  2795  000A6A  0E14               	movlw	20
  2796  000A6C  5C01               	subwf	_Adjust_Counter,w,c
  2797  000A6E  A0D8               	btfss	status,0,c
  2798  000A70  D007               	goto	l8409
  2799  000A72                     u7390:
  2800                           
  2801                           ;State_Mchn.c: 517: {
  2802                           ;State_Mchn.c: 518: Adjust_Counter = 0;
  2803  000A72  0E00               	movlw	0
  2804  000A74  6E02               	movwf	_Adjust_Counter+1,c
  2805  000A76  0E00               	movlw	0
  2806  000A78  6E01               	movwf	_Adjust_Counter,c
  2807  000A7A  D7C3               	goto	l8393
  2808  000A7C                     L8:
  2809  000A7C  6E1B               	movwf	_Switch_Adjust_LB,c
  2810                           
  2811                           ;State_Mchn.c: 521: }
  2812                           
  2813                           ;State_Mchn.c: 520: break;
  2814  000A7E  D051               	goto	l8447
  2815  000A80                     l8409:
  2816                           
  2817                           ;State_Mchn.c: 522: else {Adjust_Counter++;}
  2818  000A80  4A01               	infsnz	_Adjust_Counter,f,c
  2819  000A82  2A02               	incf	_Adjust_Counter+1,f,c
  2820                           
  2821                           ;State_Mchn.c: 523: break;
  2822  000A84  D04E               	goto	l8447
  2823  000A86                     l8415:
  2824  000A86  501B               	movf	_Switch_Adjust_LB,w,c
  2825                           
  2826                           ; Switch size 1, requested type "space"
  2827                           ; Number of cases is 2, Range of values is 0 to 1
  2828                           ; switch strategies available:
  2829                           ; Name         Instructions Cycles
  2830                           ; simple_byte            7     4 (average)
  2831                           ;	Chosen strategy is simple_byte
  2832  000A88  0A00               	xorlw	0	; case 0
  2833  000A8A  B4D8               	btfsc	status,2,c
  2834  000A8C  D7BC               	goto	l8395
  2835  000A8E  0A01               	xorlw	1	; case 1
  2836  000A90  B4D8               	btfsc	status,2,c
  2837  000A92  D7E9               	goto	l8403
  2838  000A94  D7B6               	goto	l8393
  2839  000A96                     l8419:
  2840  000A96  0E13               	movlw	19
  2841  000A98  ECA5  F016         	call	_GETxAPIxVAL
  2842                           
  2843                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2844                           ; Switch size 1, requested type "space"
  2845                           ; Number of cases is 1, Range of values is 0 to 0
  2846                           ; switch strategies available:
  2847                           ; Name         Instructions Cycles
  2848                           ; simple_byte            4     3 (average)
  2849                           ;	Chosen strategy is simple_byte
  2850  000A9C  0100               	movlb	0	; () banked
  2851  000A9E  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2852  000AA0  0A00               	xorlw	0	; case 0
  2853  000AA2  A4D8               	btfss	status,2,c
  2854  000AA4  D03E               	goto	l8447
  2855                           
  2856                           ; BSR set to: 0
  2857                           ; Switch size 1, requested type "space"
  2858                           ; Number of cases is 2, Range of values is 0 to 1
  2859                           ; switch strategies available:
  2860                           ; Name         Instructions Cycles
  2861                           ; simple_byte            7     4 (average)
  2862                           ;	Chosen strategy is simple_byte
  2863  000AA6  0100               	movlb	0	; () banked
  2864  000AA8  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2865  000AAA  0A00               	xorlw	0	; case 0
  2866  000AAC  B4D8               	btfsc	status,2,c
  2867  000AAE  D7A9               	goto	l8393
  2868  000AB0  0A01               	xorlw	1	; case 1
  2869  000AB2  B4D8               	btfsc	status,2,c
  2870  000AB4  D7E8               	goto	l8415
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;State_Mchn.c: 534: switch(GETxAPIxVAL(20))
  2874  000AB6  D035               	goto	l8447
  2875  000AB8                     l8421:
  2876                           
  2877                           ; BSR set to: 0
  2878  000AB8  0E00               	movlw	0
  2879  000ABA  D026               	goto	L10
  2880  000ABC                     l8423:
  2881  000ABC  0E07               	movlw	7
  2882  000ABE  ECA5  F016         	call	_GETxAPIxVAL
  2883  000AC2  0100               	movlb	0	; () banked
  2884  000AC4  29F9               	incf	?_GETxAPIxVAL& (0+255),w,b
  2885  000AC6  0E03               	movlw	3
  2886  000AC8  0100               	movlb	0	; () banked
  2887  000ACA  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  2888  000ACC  B0D8               	btfsc	status,0,c
  2889  000ACE  D003               	goto	l325
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;State_Mchn.c: 542: {
  2893                           ;State_Mchn.c: 543: INCRxAPIxVAL(7);
  2894  000AD0  0E07               	movlw	7
  2895  000AD2  EC69  F016         	call	_INCRxAPIxVAL
  2896  000AD6                     l325:
  2897                           
  2898                           ;State_Mchn.c: 544: }
  2899                           ;State_Mchn.c: 545: if(GETxAPIxVAL(8) >= 1)
  2900  000AD6  0E08               	movlw	8
  2901  000AD8  ECA5  F016         	call	_GETxAPIxVAL
  2902  000ADC  0100               	movlb	0	; () banked
  2903  000ADE  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2904  000AE0  0100               	movlb	0	; () banked
  2905  000AE2  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2906  000AE4  B4D8               	btfsc	status,2,c
  2907  000AE6  D003               	goto	l8429
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;State_Mchn.c: 546: {
  2911                           ;State_Mchn.c: 547: DECRxAPIxVAL(8);
  2912  000AE8  0E08               	movlw	8
  2913  000AEA  EC3B  F016         	call	_DECRxAPIxVAL
  2914  000AEE                     l8429:
  2915                           
  2916                           ;State_Mchn.c: 548: }
  2917                           ;State_Mchn.c: 549: Switch_Adjust_LF = 1;
  2918  000AEE  0E01               	movlw	1
  2919  000AF0  D00B               	goto	L10
  2920  000AF2                     l8431:
  2921  000AF2  5002               	movf	_Adjust_Counter+1,w,c
  2922  000AF4  E104               	bnz	u7420
  2923  000AF6  0E14               	movlw	20
  2924  000AF8  5C01               	subwf	_Adjust_Counter,w,c
  2925  000AFA  A0D8               	btfss	status,0,c
  2926  000AFC  D007               	goto	l8437
  2927  000AFE                     u7420:
  2928                           
  2929                           ;State_Mchn.c: 553: {
  2930                           ;State_Mchn.c: 554: Adjust_Counter = 0;
  2931  000AFE  0E00               	movlw	0
  2932  000B00  6E02               	movwf	_Adjust_Counter+1,c
  2933  000B02  0E00               	movlw	0
  2934  000B04  6E01               	movwf	_Adjust_Counter,c
  2935  000B06  D7D8               	goto	l8421
  2936  000B08                     L10:
  2937  000B08  6E1C               	movwf	_Switch_Adjust_LF,c
  2938                           
  2939                           ;State_Mchn.c: 557: }
  2940                           
  2941                           ;State_Mchn.c: 556: break;
  2942  000B0A  D046               	goto	l8473
  2943  000B0C                     l8437:
  2944                           
  2945                           ;State_Mchn.c: 558: else {Adjust_Counter++;}
  2946  000B0C  4A01               	infsnz	_Adjust_Counter,f,c
  2947  000B0E  2A02               	incf	_Adjust_Counter+1,f,c
  2948                           
  2949                           ;State_Mchn.c: 559: break;
  2950  000B10  D043               	goto	l8473
  2951  000B12                     l8443:
  2952  000B12  501C               	movf	_Switch_Adjust_LF,w,c
  2953                           
  2954                           ; Switch size 1, requested type "space"
  2955                           ; Number of cases is 2, Range of values is 0 to 1
  2956                           ; switch strategies available:
  2957                           ; Name         Instructions Cycles
  2958                           ; simple_byte            7     4 (average)
  2959                           ;	Chosen strategy is simple_byte
  2960  000B14  0A00               	xorlw	0	; case 0
  2961  000B16  B4D8               	btfsc	status,2,c
  2962  000B18  D7D1               	goto	l8423
  2963  000B1A  0A01               	xorlw	1	; case 1
  2964  000B1C  B4D8               	btfsc	status,2,c
  2965  000B1E  D7E9               	goto	l8431
  2966  000B20  D7CB               	goto	l8421
  2967  000B22                     l8447:
  2968  000B22  0E14               	movlw	20
  2969  000B24  ECA5  F016         	call	_GETxAPIxVAL
  2970                           
  2971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2972                           ; Switch size 1, requested type "space"
  2973                           ; Number of cases is 1, Range of values is 0 to 0
  2974                           ; switch strategies available:
  2975                           ; Name         Instructions Cycles
  2976                           ; simple_byte            4     3 (average)
  2977                           ;	Chosen strategy is simple_byte
  2978  000B28  0100               	movlb	0	; () banked
  2979  000B2A  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2980  000B2C  0A00               	xorlw	0	; case 0
  2981  000B2E  A4D8               	btfss	status,2,c
  2982  000B30  D033               	goto	l8473
  2983                           
  2984                           ; BSR set to: 0
  2985                           ; Switch size 1, requested type "space"
  2986                           ; Number of cases is 2, Range of values is 0 to 1
  2987                           ; switch strategies available:
  2988                           ; Name         Instructions Cycles
  2989                           ; simple_byte            7     4 (average)
  2990                           ;	Chosen strategy is simple_byte
  2991  000B32  0100               	movlb	0	; () banked
  2992  000B34  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2993  000B36  0A00               	xorlw	0	; case 0
  2994  000B38  B4D8               	btfsc	status,2,c
  2995  000B3A  D7BE               	goto	l8421
  2996  000B3C  0A01               	xorlw	1	; case 1
  2997  000B3E  B4D8               	btfsc	status,2,c
  2998  000B40  D7E8               	goto	l8443
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;State_Mchn.c: 569: switch(GETxAPIxVAL(21))
  3002  000B42  D02A               	goto	l8473
  3003  000B44                     l8449:
  3004                           
  3005                           ; BSR set to: 0
  3006  000B44  0E00               	movlw	0
  3007  000B46  D01B               	goto	L12
  3008  000B48                     l8451:
  3009  000B48  0E09               	movlw	9
  3010  000B4A  ECA5  F016         	call	_GETxAPIxVAL
  3011  000B4E  0100               	movlb	0	; () banked
  3012  000B50  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3013  000B52  E108               	bnz	l8455
  3014  000B54  0EFB               	movlw	251
  3015  000B56  0100               	movlb	0	; () banked
  3016  000B58  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  3017  000B5A  B0D8               	btfsc	status,0,c
  3018  000B5C  D003               	goto	l8455
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;State_Mchn.c: 577: {
  3022                           ;State_Mchn.c: 578: INCRxAPIxVAL(9);
  3023  000B5E  0E09               	movlw	9
  3024  000B60  EC69  F016         	call	_INCRxAPIxVAL
  3025  000B64                     l8455:
  3026                           
  3027                           ;State_Mchn.c: 579: }
  3028                           ;State_Mchn.c: 580: Switch_Adjust_RB = 1;
  3029  000B64  0E01               	movlw	1
  3030  000B66  D00B               	goto	L12
  3031  000B68                     l8457:
  3032  000B68  5002               	movf	_Adjust_Counter+1,w,c
  3033  000B6A  E104               	bnz	u7440
  3034  000B6C  0E14               	movlw	20
  3035  000B6E  5C01               	subwf	_Adjust_Counter,w,c
  3036  000B70  A0D8               	btfss	status,0,c
  3037  000B72  D007               	goto	l8463
  3038  000B74                     u7440:
  3039                           
  3040                           ;State_Mchn.c: 584: {
  3041                           ;State_Mchn.c: 585: Adjust_Counter = 0;
  3042  000B74  0E00               	movlw	0
  3043  000B76  6E02               	movwf	_Adjust_Counter+1,c
  3044  000B78  0E00               	movlw	0
  3045  000B7A  6E01               	movwf	_Adjust_Counter,c
  3046  000B7C  D7E3               	goto	l8449
  3047  000B7E                     L12:
  3048  000B7E  6E1D               	movwf	_Switch_Adjust_RB,c
  3049                           
  3050                           ;State_Mchn.c: 588: }
  3051                           
  3052                           ;State_Mchn.c: 587: break;
  3053  000B80  D044               	goto	l8499
  3054  000B82                     l8463:
  3055                           
  3056                           ;State_Mchn.c: 589: else {Adjust_Counter++;}
  3057  000B82  4A01               	infsnz	_Adjust_Counter,f,c
  3058  000B84  2A02               	incf	_Adjust_Counter+1,f,c
  3059                           
  3060                           ;State_Mchn.c: 590: break;
  3061  000B86  D041               	goto	l8499
  3062  000B88                     l8469:
  3063  000B88  501D               	movf	_Switch_Adjust_RB,w,c
  3064                           
  3065                           ; Switch size 1, requested type "space"
  3066                           ; Number of cases is 2, Range of values is 0 to 1
  3067                           ; switch strategies available:
  3068                           ; Name         Instructions Cycles
  3069                           ; simple_byte            7     4 (average)
  3070                           ;	Chosen strategy is simple_byte
  3071  000B8A  0A00               	xorlw	0	; case 0
  3072  000B8C  B4D8               	btfsc	status,2,c
  3073  000B8E  D7DC               	goto	l8451
  3074  000B90  0A01               	xorlw	1	; case 1
  3075  000B92  B4D8               	btfsc	status,2,c
  3076  000B94  D7E9               	goto	l8457
  3077  000B96  D7D6               	goto	l8449
  3078  000B98                     l8473:
  3079  000B98  0E15               	movlw	21
  3080  000B9A  ECA5  F016         	call	_GETxAPIxVAL
  3081                           
  3082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3083                           ; Switch size 1, requested type "space"
  3084                           ; Number of cases is 1, Range of values is 0 to 0
  3085                           ; switch strategies available:
  3086                           ; Name         Instructions Cycles
  3087                           ; simple_byte            4     3 (average)
  3088                           ;	Chosen strategy is simple_byte
  3089  000B9E  0100               	movlb	0	; () banked
  3090  000BA0  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3091  000BA2  0A00               	xorlw	0	; case 0
  3092  000BA4  A4D8               	btfss	status,2,c
  3093  000BA6  D031               	goto	l8499
  3094                           
  3095                           ; BSR set to: 0
  3096                           ; Switch size 1, requested type "space"
  3097                           ; Number of cases is 2, Range of values is 0 to 1
  3098                           ; switch strategies available:
  3099                           ; Name         Instructions Cycles
  3100                           ; simple_byte            7     4 (average)
  3101                           ;	Chosen strategy is simple_byte
  3102  000BA8  0100               	movlb	0	; () banked
  3103  000BAA  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3104  000BAC  0A00               	xorlw	0	; case 0
  3105  000BAE  B4D8               	btfsc	status,2,c
  3106  000BB0  D7C9               	goto	l8449
  3107  000BB2  0A01               	xorlw	1	; case 1
  3108  000BB4  B4D8               	btfsc	status,2,c
  3109  000BB6  D7E8               	goto	l8469
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;State_Mchn.c: 601: switch(GETxAPIxVAL(22))
  3113  000BB8  D028               	goto	l8499
  3114  000BBA                     l8475:
  3115                           
  3116                           ; BSR set to: 0
  3117  000BBA  0E00               	movlw	0
  3118  000BBC  D019               	goto	L14
  3119  000BBE                     l8477:
  3120  000BBE  0E09               	movlw	9
  3121  000BC0  ECA5  F016         	call	_GETxAPIxVAL
  3122  000BC4  0100               	movlb	0	; () banked
  3123  000BC6  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3124  000BC8  0100               	movlb	0	; () banked
  3125  000BCA  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3126  000BCC  B4D8               	btfsc	status,2,c
  3127  000BCE  D003               	goto	l8481
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;State_Mchn.c: 609: {
  3131                           ;State_Mchn.c: 610: DECRxAPIxVAL(9);
  3132  000BD0  0E09               	movlw	9
  3133  000BD2  EC3B  F016         	call	_DECRxAPIxVAL
  3134  000BD6                     l8481:
  3135                           
  3136                           ;State_Mchn.c: 611: } Switch_Adjust_RF = 1;
  3137  000BD6  0E01               	movlw	1
  3138  000BD8  D00B               	goto	L14
  3139  000BDA                     l8483:
  3140  000BDA  5002               	movf	_Adjust_Counter+1,w,c
  3141  000BDC  E104               	bnz	u7460
  3142  000BDE  0E14               	movlw	20
  3143  000BE0  5C01               	subwf	_Adjust_Counter,w,c
  3144  000BE2  A0D8               	btfss	status,0,c
  3145  000BE4  D007               	goto	l8489
  3146  000BE6                     u7460:
  3147                           
  3148                           ;State_Mchn.c: 615: {
  3149                           ;State_Mchn.c: 616: Adjust_Counter = 0;
  3150  000BE6  0E00               	movlw	0
  3151  000BE8  6E02               	movwf	_Adjust_Counter+1,c
  3152  000BEA  0E00               	movlw	0
  3153  000BEC  6E01               	movwf	_Adjust_Counter,c
  3154  000BEE  D7E5               	goto	l8475
  3155  000BF0                     L14:
  3156  000BF0  6E1E               	movwf	_Switch_Adjust_RF,c
  3157                           
  3158                           ;State_Mchn.c: 619: }
  3159                           
  3160                           ;State_Mchn.c: 618: break;
  3161  000BF2  D01B               	goto	l8501
  3162  000BF4                     l8489:
  3163                           
  3164                           ;State_Mchn.c: 620: else {Adjust_Counter++;}
  3165  000BF4  4A01               	infsnz	_Adjust_Counter,f,c
  3166  000BF6  2A02               	incf	_Adjust_Counter+1,f,c
  3167                           
  3168                           ;State_Mchn.c: 621: break;
  3169  000BF8  D018               	goto	l8501
  3170  000BFA                     l8495:
  3171  000BFA  501E               	movf	_Switch_Adjust_RF,w,c
  3172                           
  3173                           ; Switch size 1, requested type "space"
  3174                           ; Number of cases is 2, Range of values is 0 to 1
  3175                           ; switch strategies available:
  3176                           ; Name         Instructions Cycles
  3177                           ; simple_byte            7     4 (average)
  3178                           ;	Chosen strategy is simple_byte
  3179  000BFC  0A00               	xorlw	0	; case 0
  3180  000BFE  B4D8               	btfsc	status,2,c
  3181  000C00  D7DE               	goto	l8477
  3182  000C02  0A01               	xorlw	1	; case 1
  3183  000C04  B4D8               	btfsc	status,2,c
  3184  000C06  D7E9               	goto	l8483
  3185  000C08  D7D8               	goto	l8475
  3186  000C0A                     l8499:
  3187  000C0A  0E16               	movlw	22
  3188  000C0C  ECA5  F016         	call	_GETxAPIxVAL
  3189                           
  3190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3191                           ; Switch size 1, requested type "space"
  3192                           ; Number of cases is 1, Range of values is 0 to 0
  3193                           ; switch strategies available:
  3194                           ; Name         Instructions Cycles
  3195                           ; simple_byte            4     3 (average)
  3196                           ;	Chosen strategy is simple_byte
  3197  000C10  0100               	movlb	0	; () banked
  3198  000C12  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3199  000C14  0A00               	xorlw	0	; case 0
  3200  000C16  A4D8               	btfss	status,2,c
  3201  000C18  D008               	goto	l8501
  3202                           
  3203                           ; BSR set to: 0
  3204                           ; Switch size 1, requested type "space"
  3205                           ; Number of cases is 2, Range of values is 0 to 1
  3206                           ; switch strategies available:
  3207                           ; Name         Instructions Cycles
  3208                           ; simple_byte            7     4 (average)
  3209                           ;	Chosen strategy is simple_byte
  3210  000C1A  0100               	movlb	0	; () banked
  3211  000C1C  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3212  000C1E  0A00               	xorlw	0	; case 0
  3213  000C20  B4D8               	btfsc	status,2,c
  3214  000C22  D7CB               	goto	l8475
  3215  000C24  0A01               	xorlw	1	; case 1
  3216  000C26  B4D8               	btfsc	status,2,c
  3217  000C28  D7E8               	goto	l8495
  3218  000C2A                     l8501:
  3219                           
  3220                           ;State_Mchn.c: 630: if(Activate_Controls_Counter <= 1)
  3221  000C2A  0100               	movlb	0	; () banked
  3222  000C2C  51E9               	movf	(_Activate_Controls_Counter+1)& (0+255),w,b
  3223  000C2E  E11C               	bnz	l8515
  3224  000C30  0E02               	movlw	2
  3225  000C32  0100               	movlb	0	; () banked
  3226  000C34  5DE8               	subwf	_Activate_Controls_Counter& (0+255),w,b
  3227  000C36  B0D8               	btfsc	status,0,c
  3228  000C38  D017               	goto	l8515
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;State_Mchn.c: 631: {
  3232                           ;State_Mchn.c: 632: Switch_Activate_Controls = 0;
  3233  000C3A  0E00               	movlw	0
  3234  000C3C  6E1A               	movwf	_Switch_Activate_Controls,c
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;State_Mchn.c: 633: Red_Led(0);
  3238  000C3E  0E00               	movlw	0
  3239  000C40  ECCC  F014         	call	_Red_Led
  3240                           
  3241                           ;State_Mchn.c: 634: }
  3242                           ;State_Mchn.c: 635: break;
  3243  000C44  D011               	goto	l8515
  3244  000C46                     l8507:
  3245  000C46  0E00               	movlw	0
  3246  000C48  6E1A               	movwf	_Switch_Activate_Controls,c
  3247                           
  3248                           ;State_Mchn.c: 638: Red_Led(0);
  3249  000C4A  0E00               	movlw	0
  3250  000C4C  ECCC  F014         	call	_Red_Led
  3251                           
  3252                           ;State_Mchn.c: 640: }
  3253                           
  3254                           ;State_Mchn.c: 639: break;
  3255  000C50  D00B               	goto	l8515
  3256  000C52                     l8513:
  3257  000C52  501A               	movf	_Switch_Activate_Controls,w,c
  3258                           
  3259                           ; Switch size 1, requested type "space"
  3260                           ; Number of cases is 3, Range of values is 0 to 2
  3261                           ; switch strategies available:
  3262                           ; Name         Instructions Cycles
  3263                           ; simple_byte           10     6 (average)
  3264                           ;	Chosen strategy is simple_byte
  3265  000C54  0A00               	xorlw	0	; case 0
  3266  000C56  B4D8               	btfsc	status,2,c
  3267  000C58  D661               	goto	l8353
  3268  000C5A  0A01               	xorlw	1	; case 1
  3269  000C5C  B4D8               	btfsc	status,2,c
  3270  000C5E  D67C               	goto	l8365
  3271  000C60  0A03               	xorlw	3	; case 2
  3272  000C62  B4D8               	btfsc	status,2,c
  3273  000C64  D69C               	goto	l8379
  3274  000C66  D7EF               	goto	l8507
  3275  000C68                     l8515:
  3276                           
  3277                           ;State_Mchn.c: 642: if(GETxAPIxVAL(17))
  3278  000C68  0E11               	movlw	17
  3279  000C6A  ECA5  F016         	call	_GETxAPIxVAL
  3280  000C6E  0100               	movlb	0	; () banked
  3281  000C70  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3282  000C72  0100               	movlb	0	; () banked
  3283  000C74  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3284  000C76  B4D8               	btfsc	status,2,c
  3285  000C78  D002               	goto	l8519
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;State_Mchn.c: 643: {
  3289                           ;State_Mchn.c: 644: Stop_Program = 1;
  3290  000C7A  0E01               	movlw	1
  3291  000C7C  6E19               	movwf	_Stop_Program,c
  3292  000C7E                     l8519:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;State_Mchn.c: 645: }
  3296                           ;State_Mchn.c: 647: if(Stop_Program == 1)
  3297  000C7E  0419               	decf	_Stop_Program,w,c
  3298  000C80  A4D8               	btfss	status,2,c
  3299  000C82  D003               	goto	l362
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;State_Mchn.c: 648: {
  3303                           ;State_Mchn.c: 649: Red_Led(2);
  3304  000C84  0E02               	movlw	2
  3305  000C86  ECCC  F014         	call	_Red_Led
  3306  000C8A                     l362:
  3307                           
  3308                           ;State_Mchn.c: 650: }
  3309                           ;State_Mchn.c: 652: Green_Led(1);
  3310  000C8A  0E01               	movlw	1
  3311  000C8C  EC0E  F015         	call	_Green_Led
  3312                           
  3313                           ;State_Mchn.c: 654: break;
  3314  000C90  0012               	return	
  3315  000C92                     l8523:
  3316  000C92  0E00               	movlw	0
  3317  000C94  0101               	movlb	1	; () banked
  3318  000C96  6FFF               	movwf	Train_Path@To& (0+255),b
  3319  000C98  0E02               	movlw	2
  3320  000C9A  EC94  F00B         	call	_Train_Path
  3321  000C9E  0900               	iorlw	0
  3322  000CA0  A4D8               	btfss	status,2,c
  3323  000CA2  D1DD               	goto	l8727
  3324                           
  3325                           ;State_Mchn.c: 660: {
  3326                           ;State_Mchn.c: 661: Switch_Program = 1;
  3327  000CA4  0E01               	movlw	1
  3328  000CA6  6E22               	movwf	_Switch_Program,c
  3329                           
  3330                           ;State_Mchn.c: 662: Eeprom_Store();
  3331  000CA8  EC55  F013         	call	_Eeprom_Store	;wreg free
  3332  000CAC                     l8529:
  3333                           
  3334                           ;State_Mchn.c: 663: if(Stop_Program == 1)
  3335  000CAC  0419               	decf	_Stop_Program,w,c
  3336  000CAE  A4D8               	btfss	status,2,c
  3337  000CB0  D1D6               	goto	l8727
  3338                           
  3339                           ;State_Mchn.c: 664: {
  3340                           ;State_Mchn.c: 665: Switch_Main = 0;
  3341  000CB2  0E00               	movlw	0
  3342  000CB4  6E20               	movwf	_Switch_Main,c
  3343                           
  3344                           ;State_Mchn.c: 667: }
  3345                           ;State_Mchn.c: 668: }
  3346                           ;State_Mchn.c: 669: break;
  3347  000CB6  D1D3               	goto	l8727
  3348  000CB8                     l8533:
  3349  000CB8  0E03               	movlw	3
  3350  000CBA  0101               	movlb	1	; () banked
  3351  000CBC  6FFF               	movwf	Train_Path@To& (0+255),b
  3352  000CBE  0E00               	movlw	0
  3353  000CC0  EC94  F00B         	call	_Train_Path
  3354  000CC4  0900               	iorlw	0
  3355  000CC6  A4D8               	btfss	status,2,c
  3356  000CC8  D1CA               	goto	l8727
  3357                           
  3358                           ;State_Mchn.c: 672: {
  3359                           ;State_Mchn.c: 673: Switch_Program = 2;
  3360  000CCA  0E02               	movlw	2
  3361  000CCC  6E22               	movwf	_Switch_Program,c
  3362                           
  3363                           ;State_Mchn.c: 674: Eeprom_Store();
  3364  000CCE  EC55  F013         	call	_Eeprom_Store	;wreg free
  3365  000CD2  D7EC               	goto	l8529
  3366  000CD4                     l8543:
  3367  000CD4  0E01               	movlw	1
  3368  000CD6  0101               	movlb	1	; () banked
  3369  000CD8  6FFF               	movwf	Train_Path@To& (0+255),b
  3370  000CDA  0E03               	movlw	3
  3371  000CDC  EC94  F00B         	call	_Train_Path
  3372  000CE0  0900               	iorlw	0
  3373  000CE2  A4D8               	btfss	status,2,c
  3374  000CE4  D1BC               	goto	l8727
  3375                           
  3376                           ;State_Mchn.c: 684: {
  3377                           ;State_Mchn.c: 685: Switch_Program = 3;
  3378  000CE6  0E03               	movlw	3
  3379  000CE8  6E22               	movwf	_Switch_Program,c
  3380                           
  3381                           ;State_Mchn.c: 686: Eeprom_Store();
  3382  000CEA  EC55  F013         	call	_Eeprom_Store	;wreg free
  3383  000CEE  D7DE               	goto	l8529
  3384  000CF0                     l8553:
  3385  000CF0  0E02               	movlw	2
  3386  000CF2  0101               	movlb	1	; () banked
  3387  000CF4  6FFF               	movwf	Train_Path@To& (0+255),b
  3388  000CF6  0E01               	movlw	1
  3389  000CF8  EC94  F00B         	call	_Train_Path
  3390  000CFC  0900               	iorlw	0
  3391  000CFE  A4D8               	btfss	status,2,c
  3392  000D00  D1AE               	goto	l8727
  3393                           
  3394                           ;State_Mchn.c: 696: {
  3395                           ;State_Mchn.c: 697: Switch_Program = 0;
  3396  000D02  0E00               	movlw	0
  3397  000D04  6E22               	movwf	_Switch_Program,c
  3398                           
  3399                           ;State_Mchn.c: 698: Eeprom_Store();
  3400  000D06  EC55  F013         	call	_Eeprom_Store	;wreg free
  3401  000D0A  D7D0               	goto	l8529
  3402  000D0C                     l8565:
  3403  000D0C  5022               	movf	_Switch_Program,w,c
  3404                           
  3405                           ; Switch size 1, requested type "space"
  3406                           ; Number of cases is 4, Range of values is 0 to 3
  3407                           ; switch strategies available:
  3408                           ; Name         Instructions Cycles
  3409                           ; simple_byte           13     7 (average)
  3410                           ;	Chosen strategy is simple_byte
  3411  000D0E  0A00               	xorlw	0	; case 0
  3412  000D10  B4D8               	btfsc	status,2,c
  3413  000D12  D7BF               	goto	l8523
  3414  000D14  0A01               	xorlw	1	; case 1
  3415  000D16  B4D8               	btfsc	status,2,c
  3416  000D18  D7CF               	goto	l8533
  3417  000D1A  0A03               	xorlw	3	; case 2
  3418  000D1C  B4D8               	btfsc	status,2,c
  3419  000D1E  D7DA               	goto	l8543
  3420  000D20  0A01               	xorlw	1	; case 3
  3421  000D22  B4D8               	btfsc	status,2,c
  3422  000D24  D7E5               	goto	l8553
  3423                           
  3424                           ;State_Mchn.c: 710: switch(Switch_Activate_Controls)
  3425  000D26  D19B               	goto	l8727
  3426  000D28                     l8567:
  3427  000D28  0E14               	movlw	20
  3428  000D2A  ECA5  F016         	call	_GETxAPIxVAL
  3429  000D2E  0100               	movlb	0	; () banked
  3430  000D30  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3431  000D32  0100               	movlb	0	; () banked
  3432  000D34  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3433  000D36  B4D8               	btfsc	status,2,c
  3434  000D38  D00F               	goto	l8575
  3435                           
  3436                           ; BSR set to: 0
  3437  000D3A  0E16               	movlw	22
  3438  000D3C  ECA5  F016         	call	_GETxAPIxVAL
  3439  000D40  0100               	movlb	0	; () banked
  3440  000D42  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3441  000D44  0100               	movlb	0	; () banked
  3442  000D46  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3443  000D48  B4D8               	btfsc	status,2,c
  3444  000D4A  D006               	goto	l8575
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;State_Mchn.c: 713: {
  3448                           ;State_Mchn.c: 714: Switch_Activate_Controls = 1;
  3449  000D4C  0E01               	movlw	1
  3450  000D4E  6E1A               	movwf	_Switch_Activate_Controls,c
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;State_Mchn.c: 715: Red_Led(3);
  3454  000D50  0E03               	movlw	3
  3455  000D52  ECCC  F014         	call	_Red_Led
  3456                           
  3457                           ;State_Mchn.c: 716: }
  3458  000D56  0012               	return	
  3459  000D58                     l8575:
  3460                           
  3461                           ;State_Mchn.c: 717: else
  3462                           ;State_Mchn.c: 718: {
  3463                           ;State_Mchn.c: 719: Switch_Activate_Controls = 0;
  3464  000D58  0E00               	movlw	0
  3465  000D5A  6E1A               	movwf	_Switch_Activate_Controls,c
  3466                           
  3467                           ;State_Mchn.c: 720: Red_Led(0);
  3468  000D5C  0E00               	movlw	0
  3469  000D5E  ECCC  F014         	call	_Red_Led
  3470                           
  3471                           ;State_Mchn.c: 721: }
  3472                           ;State_Mchn.c: 722: break;
  3473  000D62  0012               	return	
  3474  000D64                     l8579:
  3475  000D64  0E14               	movlw	20
  3476  000D66  ECA5  F016         	call	_GETxAPIxVAL
  3477  000D6A  0100               	movlb	0	; () banked
  3478  000D6C  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3479  000D6E  0100               	movlb	0	; () banked
  3480  000D70  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3481  000D72  A4D8               	btfss	status,2,c
  3482  000D74  D00F               	goto	l8587
  3483                           
  3484                           ; BSR set to: 0
  3485  000D76  0E16               	movlw	22
  3486  000D78  ECA5  F016         	call	_GETxAPIxVAL
  3487  000D7C  0100               	movlb	0	; () banked
  3488  000D7E  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3489  000D80  0100               	movlb	0	; () banked
  3490  000D82  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3491  000D84  A4D8               	btfss	status,2,c
  3492  000D86  D006               	goto	l8587
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;State_Mchn.c: 725: {
  3496                           ;State_Mchn.c: 726: Switch_Activate_Controls = 2;
  3497  000D88  0E02               	movlw	2
  3498  000D8A  6E1A               	movwf	_Switch_Activate_Controls,c
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;State_Mchn.c: 727: Red_Led(3);
  3502  000D8C  0E03               	movlw	3
  3503  000D8E  ECCC  F014         	call	_Red_Led
  3504                           
  3505                           ;State_Mchn.c: 728: }
  3506  000D92  D005               	goto	l8591
  3507  000D94                     l8587:
  3508                           
  3509                           ;State_Mchn.c: 729: else
  3510                           ;State_Mchn.c: 730: {
  3511                           ;State_Mchn.c: 731: Switch_Activate_Controls = 1;
  3512  000D94  0E01               	movlw	1
  3513  000D96  6E1A               	movwf	_Switch_Activate_Controls,c
  3514                           
  3515                           ;State_Mchn.c: 732: Red_Led(3);
  3516  000D98  0E03               	movlw	3
  3517  000D9A  ECCC  F014         	call	_Red_Led
  3518  000D9E                     l8591:
  3519                           
  3520                           ;State_Mchn.c: 733: }
  3521                           ;State_Mchn.c: 734: Activate_Controls_Counter = 10000;
  3522  000D9E  0E27               	movlw	39
  3523  000DA0  0100               	movlb	0	; () banked
  3524  000DA2  6FE9               	movwf	(_Activate_Controls_Counter+1)& (0+255),b
  3525  000DA4  0E10               	movlw	16
  3526  000DA6  6FE8               	movwf	_Activate_Controls_Counter& (0+255),b
  3527                           
  3528                           ;State_Mchn.c: 735: break;
  3529  000DA8  0012               	return	
  3530  000DAA                     l8593:
  3531  000DAA  0E14               	movlw	20
  3532  000DAC  ECA5  F016         	call	_GETxAPIxVAL
  3533  000DB0  0100               	movlb	0	; () banked
  3534  000DB2  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3535  000DB4  0100               	movlb	0	; () banked
  3536  000DB6  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3537  000DB8  A4D8               	btfss	status,2,c
  3538  000DBA  D020               	goto	l8603
  3539                           
  3540                           ; BSR set to: 0
  3541  000DBC  0E16               	movlw	22
  3542  000DBE  ECA5  F016         	call	_GETxAPIxVAL
  3543  000DC2  0100               	movlb	0	; () banked
  3544  000DC4  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3545  000DC6  0100               	movlb	0	; () banked
  3546  000DC8  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3547  000DCA  A4D8               	btfss	status,2,c
  3548  000DCC  D017               	goto	l8603
  3549                           
  3550                           ; BSR set to: 0
  3551  000DCE  0E15               	movlw	21
  3552  000DD0  ECA5  F016         	call	_GETxAPIxVAL
  3553  000DD4  0100               	movlb	0	; () banked
  3554  000DD6  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3555  000DD8  0100               	movlb	0	; () banked
  3556  000DDA  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3557  000DDC  A4D8               	btfss	status,2,c
  3558  000DDE  D00E               	goto	l8603
  3559                           
  3560                           ; BSR set to: 0
  3561  000DE0  0E13               	movlw	19
  3562  000DE2  ECA5  F016         	call	_GETxAPIxVAL
  3563  000DE6  0100               	movlb	0	; () banked
  3564  000DE8  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3565  000DEA  0100               	movlb	0	; () banked
  3566  000DEC  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3567  000DEE  A4D8               	btfss	status,2,c
  3568  000DF0  D005               	goto	l8603
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;State_Mchn.c: 738: {
  3572                           ;State_Mchn.c: 739: Activate_Controls_Counter--;
  3573  000DF2  0100               	movlb	0	; () banked
  3574  000DF4  07E8               	decf	_Activate_Controls_Counter& (0+255),f,b
  3575  000DF6  A0D8               	btfss	status,0,c
  3576  000DF8  07E9               	decf	(_Activate_Controls_Counter+1)& (0+255),f,b
  3577                           
  3578                           ;State_Mchn.c: 740: }
  3579  000DFA  D005               	goto	l8605
  3580  000DFC                     l8603:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;State_Mchn.c: 741: else
  3584                           ;State_Mchn.c: 742: {
  3585                           ;State_Mchn.c: 743: Activate_Controls_Counter = 10000;
  3586  000DFC  0E27               	movlw	39
  3587  000DFE  0100               	movlb	0	; () banked
  3588  000E00  6FE9               	movwf	(_Activate_Controls_Counter+1)& (0+255),b
  3589  000E02  0E10               	movlw	16
  3590  000E04  6FE8               	movwf	_Activate_Controls_Counter& (0+255),b
  3591  000E06                     l8605:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;State_Mchn.c: 744: }
  3595                           ;State_Mchn.c: 746: Red_Led(3);
  3596  000E06  0E03               	movlw	3
  3597  000E08  ECCC  F014         	call	_Red_Led
  3598                           
  3599                           ;State_Mchn.c: 748: switch(GETxAPIxVAL(19))
  3600  000E0C  D04A               	goto	l8633
  3601  000E0E                     l8607:
  3602  000E0E  0E00               	movlw	0
  3603  000E10  D03B               	goto	L16
  3604  000E12                     l8609:
  3605  000E12  0E07               	movlw	7
  3606  000E14  ECA5  F016         	call	_GETxAPIxVAL
  3607  000E18  C0F9  F283         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  3608  000E1C  C0FA  F284         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  3609  000E20  0E06               	movlw	6
  3610  000E22  ECA5  F016         	call	_GETxAPIxVAL
  3611  000E26  0100               	movlb	0	; () banked
  3612  000E28  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3613  000E2A  0102               	movlb	2	; () banked
  3614  000E2C  5D83               	subwf	??_Update_StateMchn& (0+255),w,b
  3615  000E2E  0100               	movlb	0	; () banked
  3616  000E30  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3617  000E32  0102               	movlb	2	; () banked
  3618  000E34  5984               	subwfb	(??_Update_StateMchn+1)& (0+255),w,b
  3619  000E36  A0D8               	btfss	status,0,c
  3620  000E38  D003               	goto	l396
  3621                           
  3622                           ; BSR set to: 2
  3623                           ;State_Mchn.c: 756: {
  3624                           ;State_Mchn.c: 757: DECRxAPIxVAL(7);
  3625  000E3A  0E07               	movlw	7
  3626  000E3C  EC3B  F016         	call	_DECRxAPIxVAL
  3627  000E40                     l396:
  3628                           
  3629                           ;State_Mchn.c: 758: }
  3630                           ;State_Mchn.c: 759: if(GETxAPIxVAL(8) <= GETxAPIxVAL(5))
  3631  000E40  0E05               	movlw	5
  3632  000E42  ECA5  F016         	call	_GETxAPIxVAL
  3633  000E46  C0F9  F283         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  3634  000E4A  C0FA  F284         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  3635  000E4E  0E08               	movlw	8
  3636  000E50  ECA5  F016         	call	_GETxAPIxVAL
  3637  000E54  0100               	movlb	0	; () banked
  3638  000E56  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3639  000E58  0102               	movlb	2	; () banked
  3640  000E5A  5D83               	subwf	??_Update_StateMchn& (0+255),w,b
  3641  000E5C  0100               	movlb	0	; () banked
  3642  000E5E  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3643  000E60  0102               	movlb	2	; () banked
  3644  000E62  5984               	subwfb	(??_Update_StateMchn+1)& (0+255),w,b
  3645  000E64  A0D8               	btfss	status,0,c
  3646  000E66  D003               	goto	l8615
  3647                           
  3648                           ; BSR set to: 2
  3649                           ;State_Mchn.c: 760: {
  3650                           ;State_Mchn.c: 761: INCRxAPIxVAL(8);
  3651  000E68  0E08               	movlw	8
  3652  000E6A  EC69  F016         	call	_INCRxAPIxVAL
  3653  000E6E                     l8615:
  3654                           
  3655                           ;State_Mchn.c: 762: }
  3656                           ;State_Mchn.c: 763: Switch_Adjust_LB = 1;
  3657  000E6E  0E01               	movlw	1
  3658  000E70  D00B               	goto	L16
  3659  000E72                     l8617:
  3660  000E72  5002               	movf	_Adjust_Counter+1,w,c
  3661  000E74  E104               	bnz	u7680
  3662  000E76  0E14               	movlw	20
  3663  000E78  5C01               	subwf	_Adjust_Counter,w,c
  3664  000E7A  A0D8               	btfss	status,0,c
  3665  000E7C  D007               	goto	l8623
  3666  000E7E                     u7680:
  3667                           
  3668                           ;State_Mchn.c: 767: {
  3669                           ;State_Mchn.c: 768: Adjust_Counter = 0;
  3670  000E7E  0E00               	movlw	0
  3671  000E80  6E02               	movwf	_Adjust_Counter+1,c
  3672  000E82  0E00               	movlw	0
  3673  000E84  6E01               	movwf	_Adjust_Counter,c
  3674  000E86  D7C3               	goto	l8607
  3675  000E88                     L16:
  3676  000E88  6E1B               	movwf	_Switch_Adjust_LB,c
  3677                           
  3678                           ;State_Mchn.c: 771: }
  3679                           
  3680                           ;State_Mchn.c: 770: break;
  3681  000E8A  D051               	goto	l8661
  3682  000E8C                     l8623:
  3683                           
  3684                           ;State_Mchn.c: 772: else {Adjust_Counter++;}
  3685  000E8C  4A01               	infsnz	_Adjust_Counter,f,c
  3686  000E8E  2A02               	incf	_Adjust_Counter+1,f,c
  3687                           
  3688                           ;State_Mchn.c: 773: break;
  3689  000E90  D04E               	goto	l8661
  3690  000E92                     l8629:
  3691  000E92  501B               	movf	_Switch_Adjust_LB,w,c
  3692                           
  3693                           ; Switch size 1, requested type "space"
  3694                           ; Number of cases is 2, Range of values is 0 to 1
  3695                           ; switch strategies available:
  3696                           ; Name         Instructions Cycles
  3697                           ; simple_byte            7     4 (average)
  3698                           ;	Chosen strategy is simple_byte
  3699  000E94  0A00               	xorlw	0	; case 0
  3700  000E96  B4D8               	btfsc	status,2,c
  3701  000E98  D7BC               	goto	l8609
  3702  000E9A  0A01               	xorlw	1	; case 1
  3703  000E9C  B4D8               	btfsc	status,2,c
  3704  000E9E  D7E9               	goto	l8617
  3705  000EA0  D7B6               	goto	l8607
  3706  000EA2                     l8633:
  3707  000EA2  0E13               	movlw	19
  3708  000EA4  ECA5  F016         	call	_GETxAPIxVAL
  3709                           
  3710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3711                           ; Switch size 1, requested type "space"
  3712                           ; Number of cases is 1, Range of values is 0 to 0
  3713                           ; switch strategies available:
  3714                           ; Name         Instructions Cycles
  3715                           ; simple_byte            4     3 (average)
  3716                           ;	Chosen strategy is simple_byte
  3717  000EA8  0100               	movlb	0	; () banked
  3718  000EAA  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3719  000EAC  0A00               	xorlw	0	; case 0
  3720  000EAE  A4D8               	btfss	status,2,c
  3721  000EB0  D03E               	goto	l8661
  3722                           
  3723                           ; BSR set to: 0
  3724                           ; Switch size 1, requested type "space"
  3725                           ; Number of cases is 2, Range of values is 0 to 1
  3726                           ; switch strategies available:
  3727                           ; Name         Instructions Cycles
  3728                           ; simple_byte            7     4 (average)
  3729                           ;	Chosen strategy is simple_byte
  3730  000EB2  0100               	movlb	0	; () banked
  3731  000EB4  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3732  000EB6  0A00               	xorlw	0	; case 0
  3733  000EB8  B4D8               	btfsc	status,2,c
  3734  000EBA  D7A9               	goto	l8607
  3735  000EBC  0A01               	xorlw	1	; case 1
  3736  000EBE  B4D8               	btfsc	status,2,c
  3737  000EC0  D7E8               	goto	l8629
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;State_Mchn.c: 784: switch(GETxAPIxVAL(20))
  3741  000EC2  D035               	goto	l8661
  3742  000EC4                     l8635:
  3743                           
  3744                           ; BSR set to: 0
  3745  000EC4  0E00               	movlw	0
  3746  000EC6  D026               	goto	L18
  3747  000EC8                     l8637:
  3748  000EC8  0E07               	movlw	7
  3749  000ECA  ECA5  F016         	call	_GETxAPIxVAL
  3750  000ECE  0100               	movlb	0	; () banked
  3751  000ED0  29F9               	incf	?_GETxAPIxVAL& (0+255),w,b
  3752  000ED2  0E03               	movlw	3
  3753  000ED4  0100               	movlb	0	; () banked
  3754  000ED6  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  3755  000ED8  B0D8               	btfsc	status,0,c
  3756  000EDA  D003               	goto	l410
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;State_Mchn.c: 792: {
  3760                           ;State_Mchn.c: 793: INCRxAPIxVAL(7);
  3761  000EDC  0E07               	movlw	7
  3762  000EDE  EC69  F016         	call	_INCRxAPIxVAL
  3763  000EE2                     l410:
  3764                           
  3765                           ;State_Mchn.c: 794: }
  3766                           ;State_Mchn.c: 795: if(GETxAPIxVAL(8) >= 1)
  3767  000EE2  0E08               	movlw	8
  3768  000EE4  ECA5  F016         	call	_GETxAPIxVAL
  3769  000EE8  0100               	movlb	0	; () banked
  3770  000EEA  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3771  000EEC  0100               	movlb	0	; () banked
  3772  000EEE  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3773  000EF0  B4D8               	btfsc	status,2,c
  3774  000EF2  D003               	goto	l8643
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;State_Mchn.c: 796: {
  3778                           ;State_Mchn.c: 797: DECRxAPIxVAL(8);
  3779  000EF4  0E08               	movlw	8
  3780  000EF6  EC3B  F016         	call	_DECRxAPIxVAL
  3781  000EFA                     l8643:
  3782                           
  3783                           ;State_Mchn.c: 798: }
  3784                           ;State_Mchn.c: 799: Switch_Adjust_LF = 1;
  3785  000EFA  0E01               	movlw	1
  3786  000EFC  D00B               	goto	L18
  3787  000EFE                     l8645:
  3788  000EFE  5002               	movf	_Adjust_Counter+1,w,c
  3789  000F00  E104               	bnz	u7710
  3790  000F02  0E14               	movlw	20
  3791  000F04  5C01               	subwf	_Adjust_Counter,w,c
  3792  000F06  A0D8               	btfss	status,0,c
  3793  000F08  D007               	goto	l8651
  3794  000F0A                     u7710:
  3795                           
  3796                           ;State_Mchn.c: 803: {
  3797                           ;State_Mchn.c: 804: Adjust_Counter = 0;
  3798  000F0A  0E00               	movlw	0
  3799  000F0C  6E02               	movwf	_Adjust_Counter+1,c
  3800  000F0E  0E00               	movlw	0
  3801  000F10  6E01               	movwf	_Adjust_Counter,c
  3802  000F12  D7D8               	goto	l8635
  3803  000F14                     L18:
  3804  000F14  6E1C               	movwf	_Switch_Adjust_LF,c
  3805                           
  3806                           ;State_Mchn.c: 807: }
  3807                           
  3808                           ;State_Mchn.c: 806: break;
  3809  000F16  D046               	goto	l8687
  3810  000F18                     l8651:
  3811                           
  3812                           ;State_Mchn.c: 808: else {Adjust_Counter++;}
  3813  000F18  4A01               	infsnz	_Adjust_Counter,f,c
  3814  000F1A  2A02               	incf	_Adjust_Counter+1,f,c
  3815                           
  3816                           ;State_Mchn.c: 809: break;
  3817  000F1C  D043               	goto	l8687
  3818  000F1E                     l8657:
  3819  000F1E  501C               	movf	_Switch_Adjust_LF,w,c
  3820                           
  3821                           ; Switch size 1, requested type "space"
  3822                           ; Number of cases is 2, Range of values is 0 to 1
  3823                           ; switch strategies available:
  3824                           ; Name         Instructions Cycles
  3825                           ; simple_byte            7     4 (average)
  3826                           ;	Chosen strategy is simple_byte
  3827  000F20  0A00               	xorlw	0	; case 0
  3828  000F22  B4D8               	btfsc	status,2,c
  3829  000F24  D7D1               	goto	l8637
  3830  000F26  0A01               	xorlw	1	; case 1
  3831  000F28  B4D8               	btfsc	status,2,c
  3832  000F2A  D7E9               	goto	l8645
  3833  000F2C  D7CB               	goto	l8635
  3834  000F2E                     l8661:
  3835  000F2E  0E14               	movlw	20
  3836  000F30  ECA5  F016         	call	_GETxAPIxVAL
  3837                           
  3838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3839                           ; Switch size 1, requested type "space"
  3840                           ; Number of cases is 1, Range of values is 0 to 0
  3841                           ; switch strategies available:
  3842                           ; Name         Instructions Cycles
  3843                           ; simple_byte            4     3 (average)
  3844                           ;	Chosen strategy is simple_byte
  3845  000F34  0100               	movlb	0	; () banked
  3846  000F36  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3847  000F38  0A00               	xorlw	0	; case 0
  3848  000F3A  A4D8               	btfss	status,2,c
  3849  000F3C  D033               	goto	l8687
  3850                           
  3851                           ; BSR set to: 0
  3852                           ; Switch size 1, requested type "space"
  3853                           ; Number of cases is 2, Range of values is 0 to 1
  3854                           ; switch strategies available:
  3855                           ; Name         Instructions Cycles
  3856                           ; simple_byte            7     4 (average)
  3857                           ;	Chosen strategy is simple_byte
  3858  000F3E  0100               	movlb	0	; () banked
  3859  000F40  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3860  000F42  0A00               	xorlw	0	; case 0
  3861  000F44  B4D8               	btfsc	status,2,c
  3862  000F46  D7BE               	goto	l8635
  3863  000F48  0A01               	xorlw	1	; case 1
  3864  000F4A  B4D8               	btfsc	status,2,c
  3865  000F4C  D7E8               	goto	l8657
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;State_Mchn.c: 819: switch(GETxAPIxVAL(21))
  3869  000F4E  D02A               	goto	l8687
  3870  000F50                     l8663:
  3871                           
  3872                           ; BSR set to: 0
  3873  000F50  0E00               	movlw	0
  3874  000F52  D01B               	goto	L20
  3875  000F54                     l8665:
  3876  000F54  0E09               	movlw	9
  3877  000F56  ECA5  F016         	call	_GETxAPIxVAL
  3878  000F5A  0100               	movlb	0	; () banked
  3879  000F5C  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3880  000F5E  E108               	bnz	l8669
  3881  000F60  0EFB               	movlw	251
  3882  000F62  0100               	movlb	0	; () banked
  3883  000F64  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  3884  000F66  B0D8               	btfsc	status,0,c
  3885  000F68  D003               	goto	l8669
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;State_Mchn.c: 827: {
  3889                           ;State_Mchn.c: 828: INCRxAPIxVAL(9);
  3890  000F6A  0E09               	movlw	9
  3891  000F6C  EC69  F016         	call	_INCRxAPIxVAL
  3892  000F70                     l8669:
  3893                           
  3894                           ;State_Mchn.c: 829: }
  3895                           ;State_Mchn.c: 830: Switch_Adjust_RB = 1;
  3896  000F70  0E01               	movlw	1
  3897  000F72  D00B               	goto	L20
  3898  000F74                     l8671:
  3899  000F74  5002               	movf	_Adjust_Counter+1,w,c
  3900  000F76  E104               	bnz	u7730
  3901  000F78  0E14               	movlw	20
  3902  000F7A  5C01               	subwf	_Adjust_Counter,w,c
  3903  000F7C  A0D8               	btfss	status,0,c
  3904  000F7E  D007               	goto	l8677
  3905  000F80                     u7730:
  3906                           
  3907                           ;State_Mchn.c: 834: {
  3908                           ;State_Mchn.c: 835: Adjust_Counter = 0;
  3909  000F80  0E00               	movlw	0
  3910  000F82  6E02               	movwf	_Adjust_Counter+1,c
  3911  000F84  0E00               	movlw	0
  3912  000F86  6E01               	movwf	_Adjust_Counter,c
  3913  000F88  D7E3               	goto	l8663
  3914  000F8A                     L20:
  3915  000F8A  6E1D               	movwf	_Switch_Adjust_RB,c
  3916                           
  3917                           ;State_Mchn.c: 838: }
  3918                           
  3919                           ;State_Mchn.c: 837: break;
  3920  000F8C  D044               	goto	l8713
  3921  000F8E                     l8677:
  3922                           
  3923                           ;State_Mchn.c: 839: else {Adjust_Counter++;}
  3924  000F8E  4A01               	infsnz	_Adjust_Counter,f,c
  3925  000F90  2A02               	incf	_Adjust_Counter+1,f,c
  3926                           
  3927                           ;State_Mchn.c: 840: break;
  3928  000F92  D041               	goto	l8713
  3929  000F94                     l8683:
  3930  000F94  501D               	movf	_Switch_Adjust_RB,w,c
  3931                           
  3932                           ; Switch size 1, requested type "space"
  3933                           ; Number of cases is 2, Range of values is 0 to 1
  3934                           ; switch strategies available:
  3935                           ; Name         Instructions Cycles
  3936                           ; simple_byte            7     4 (average)
  3937                           ;	Chosen strategy is simple_byte
  3938  000F96  0A00               	xorlw	0	; case 0
  3939  000F98  B4D8               	btfsc	status,2,c
  3940  000F9A  D7DC               	goto	l8665
  3941  000F9C  0A01               	xorlw	1	; case 1
  3942  000F9E  B4D8               	btfsc	status,2,c
  3943  000FA0  D7E9               	goto	l8671
  3944  000FA2  D7D6               	goto	l8663
  3945  000FA4                     l8687:
  3946  000FA4  0E15               	movlw	21
  3947  000FA6  ECA5  F016         	call	_GETxAPIxVAL
  3948                           
  3949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3950                           ; Switch size 1, requested type "space"
  3951                           ; Number of cases is 1, Range of values is 0 to 0
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte            4     3 (average)
  3955                           ;	Chosen strategy is simple_byte
  3956  000FAA  0100               	movlb	0	; () banked
  3957  000FAC  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3958  000FAE  0A00               	xorlw	0	; case 0
  3959  000FB0  A4D8               	btfss	status,2,c
  3960  000FB2  D031               	goto	l8713
  3961                           
  3962                           ; BSR set to: 0
  3963                           ; Switch size 1, requested type "space"
  3964                           ; Number of cases is 2, Range of values is 0 to 1
  3965                           ; switch strategies available:
  3966                           ; Name         Instructions Cycles
  3967                           ; simple_byte            7     4 (average)
  3968                           ;	Chosen strategy is simple_byte
  3969  000FB4  0100               	movlb	0	; () banked
  3970  000FB6  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3971  000FB8  0A00               	xorlw	0	; case 0
  3972  000FBA  B4D8               	btfsc	status,2,c
  3973  000FBC  D7C9               	goto	l8663
  3974  000FBE  0A01               	xorlw	1	; case 1
  3975  000FC0  B4D8               	btfsc	status,2,c
  3976  000FC2  D7E8               	goto	l8683
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;State_Mchn.c: 851: switch(GETxAPIxVAL(22))
  3980  000FC4  D028               	goto	l8713
  3981  000FC6                     l8689:
  3982                           
  3983                           ; BSR set to: 0
  3984  000FC6  0E00               	movlw	0
  3985  000FC8  D019               	goto	L22
  3986  000FCA                     l8691:
  3987  000FCA  0E09               	movlw	9
  3988  000FCC  ECA5  F016         	call	_GETxAPIxVAL
  3989  000FD0  0100               	movlb	0	; () banked
  3990  000FD2  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3991  000FD4  0100               	movlb	0	; () banked
  3992  000FD6  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3993  000FD8  B4D8               	btfsc	status,2,c
  3994  000FDA  D003               	goto	l8695
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;State_Mchn.c: 859: {
  3998                           ;State_Mchn.c: 860: DECRxAPIxVAL(9);
  3999  000FDC  0E09               	movlw	9
  4000  000FDE  EC3B  F016         	call	_DECRxAPIxVAL
  4001  000FE2                     l8695:
  4002                           
  4003                           ;State_Mchn.c: 861: }
  4004                           ;State_Mchn.c: 862: Switch_Adjust_RF = 1;
  4005  000FE2  0E01               	movlw	1
  4006  000FE4  D00B               	goto	L22
  4007  000FE6                     l8697:
  4008  000FE6  5002               	movf	_Adjust_Counter+1,w,c
  4009  000FE8  E104               	bnz	u7750
  4010  000FEA  0E14               	movlw	20
  4011  000FEC  5C01               	subwf	_Adjust_Counter,w,c
  4012  000FEE  A0D8               	btfss	status,0,c
  4013  000FF0  D007               	goto	l8703
  4014  000FF2                     u7750:
  4015                           
  4016                           ;State_Mchn.c: 866: {
  4017                           ;State_Mchn.c: 867: Adjust_Counter = 0;
  4018  000FF2  0E00               	movlw	0
  4019  000FF4  6E02               	movwf	_Adjust_Counter+1,c
  4020  000FF6  0E00               	movlw	0
  4021  000FF8  6E01               	movwf	_Adjust_Counter,c
  4022  000FFA  D7E5               	goto	l8689
  4023  000FFC                     L22:
  4024  000FFC  6E1E               	movwf	_Switch_Adjust_RF,c
  4025                           
  4026                           ;State_Mchn.c: 870: }
  4027                           
  4028                           ;State_Mchn.c: 869: break;
  4029  000FFE  D01B               	goto	l8715
  4030  001000                     l8703:
  4031                           
  4032                           ;State_Mchn.c: 871: else {Adjust_Counter++;}
  4033  001000  4A01               	infsnz	_Adjust_Counter,f,c
  4034  001002  2A02               	incf	_Adjust_Counter+1,f,c
  4035                           
  4036                           ;State_Mchn.c: 872: break;
  4037  001004  D018               	goto	l8715
  4038  001006                     l8709:
  4039  001006  501E               	movf	_Switch_Adjust_RF,w,c
  4040                           
  4041                           ; Switch size 1, requested type "space"
  4042                           ; Number of cases is 2, Range of values is 0 to 1
  4043                           ; switch strategies available:
  4044                           ; Name         Instructions Cycles
  4045                           ; simple_byte            7     4 (average)
  4046                           ;	Chosen strategy is simple_byte
  4047  001008  0A00               	xorlw	0	; case 0
  4048  00100A  B4D8               	btfsc	status,2,c
  4049  00100C  D7DE               	goto	l8691
  4050  00100E  0A01               	xorlw	1	; case 1
  4051  001010  B4D8               	btfsc	status,2,c
  4052  001012  D7E9               	goto	l8697
  4053  001014  D7D8               	goto	l8689
  4054  001016                     l8713:
  4055  001016  0E16               	movlw	22
  4056  001018  ECA5  F016         	call	_GETxAPIxVAL
  4057                           
  4058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4059                           ; Switch size 1, requested type "space"
  4060                           ; Number of cases is 1, Range of values is 0 to 0
  4061                           ; switch strategies available:
  4062                           ; Name         Instructions Cycles
  4063                           ; simple_byte            4     3 (average)
  4064                           ;	Chosen strategy is simple_byte
  4065  00101C  0100               	movlb	0	; () banked
  4066  00101E  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4067  001020  0A00               	xorlw	0	; case 0
  4068  001022  A4D8               	btfss	status,2,c
  4069  001024  D008               	goto	l8715
  4070                           
  4071                           ; BSR set to: 0
  4072                           ; Switch size 1, requested type "space"
  4073                           ; Number of cases is 2, Range of values is 0 to 1
  4074                           ; switch strategies available:
  4075                           ; Name         Instructions Cycles
  4076                           ; simple_byte            7     4 (average)
  4077                           ;	Chosen strategy is simple_byte
  4078  001026  0100               	movlb	0	; () banked
  4079  001028  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4080  00102A  0A00               	xorlw	0	; case 0
  4081  00102C  B4D8               	btfsc	status,2,c
  4082  00102E  D7CB               	goto	l8689
  4083  001030  0A01               	xorlw	1	; case 1
  4084  001032  B4D8               	btfsc	status,2,c
  4085  001034  D7E8               	goto	l8709
  4086  001036                     l8715:
  4087                           
  4088                           ;State_Mchn.c: 881: if(Activate_Controls_Counter <= 1)
  4089  001036  0100               	movlb	0	; () banked
  4090  001038  51E9               	movf	(_Activate_Controls_Counter+1)& (0+255),w,b
  4091  00103A  E128               	bnz	l447
  4092  00103C  0E02               	movlw	2
  4093  00103E  0100               	movlb	0	; () banked
  4094  001040  5DE8               	subwf	_Activate_Controls_Counter& (0+255),w,b
  4095  001042  B0D8               	btfsc	status,0,c
  4096  001044  0012               	return	
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;State_Mchn.c: 882: {
  4100                           ;State_Mchn.c: 883: Switch_Activate_Controls = 0;
  4101  001046  0E00               	movlw	0
  4102  001048  6E1A               	movwf	_Switch_Activate_Controls,c
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;State_Mchn.c: 884: Red_Led(0);
  4106  00104A  0E00               	movlw	0
  4107  00104C  ECCC  F014         	call	_Red_Led
  4108                           
  4109                           ;State_Mchn.c: 885: }
  4110                           ;State_Mchn.c: 886: break;
  4111  001050  0012               	return	
  4112  001052                     l8721:
  4113  001052  0E00               	movlw	0
  4114  001054  6E1A               	movwf	_Switch_Activate_Controls,c
  4115                           
  4116                           ;State_Mchn.c: 889: Red_Led(0);
  4117  001056  0E00               	movlw	0
  4118  001058  ECCC  F014         	call	_Red_Led
  4119                           
  4120                           ;State_Mchn.c: 891: }
  4121                           
  4122                           ;State_Mchn.c: 890: break;
  4123  00105C  0012               	return	
  4124  00105E                     l8727:
  4125  00105E  501A               	movf	_Switch_Activate_Controls,w,c
  4126                           
  4127                           ; Switch size 1, requested type "space"
  4128                           ; Number of cases is 3, Range of values is 0 to 2
  4129                           ; switch strategies available:
  4130                           ; Name         Instructions Cycles
  4131                           ; simple_byte           10     6 (average)
  4132                           ;	Chosen strategy is simple_byte
  4133  001060  0A00               	xorlw	0	; case 0
  4134  001062  B4D8               	btfsc	status,2,c
  4135  001064  D661               	goto	l8567
  4136  001066  0A01               	xorlw	1	; case 1
  4137  001068  B4D8               	btfsc	status,2,c
  4138  00106A  D67C               	goto	l8579
  4139  00106C  0A03               	xorlw	3	; case 2
  4140  00106E  B4D8               	btfsc	status,2,c
  4141  001070  D69C               	goto	l8593
  4142  001072  D7EF               	goto	l8721
  4143  001074                     l8731:
  4144  001074  5020               	movf	_Switch_Main,w,c
  4145                           
  4146                           ; Switch size 1, requested type "space"
  4147                           ; Number of cases is 3, Range of values is 0 to 2
  4148                           ; switch strategies available:
  4149                           ; Name         Instructions Cycles
  4150                           ; simple_byte           10     6 (average)
  4151                           ;	Chosen strategy is simple_byte
  4152  001076  0A00               	xorlw	0	; case 0
  4153  001078  B4D8               	btfsc	status,2,c
  4154  00107A  EFD9  F003         	goto	l8267
  4155  00107E  0A01               	xorlw	1	; case 1
  4156  001080  B4D8               	btfsc	status,2,c
  4157  001082  D432               	goto	l8351
  4158  001084  0A03               	xorlw	3	; case 2
  4159  001086  A4D8               	btfss	status,2,c
  4160  001088  0012               	return	
  4161  00108A  D640               	goto	l8565
  4162  00108C                     l447:
  4163  00108C  0012               	return		;funcret
  4164  00108E                     __end_of_Update_StateMchn:
  4165                           	opt stack 0
  4166                           tblptru	equ	0xFF8
  4167                           tblptrh	equ	0xFF7
  4168                           tblptrl	equ	0xFF6
  4169                           tablat	equ	0xFF5
  4170                           postinc0	equ	0xFEE
  4171                           wreg	equ	0xFE8
  4172                           postdec1	equ	0xFE5
  4173                           fsr1l	equ	0xFE1
  4174                           status	equ	0xFD8
  4175                           
  4176 ;; *************** function _Train_Path *****************
  4177 ;; Defined at:
  4178 ;;		line 912 in file "../State_Mchn.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  From            1    wreg     unsigned char 
  4181 ;;  To              1    3[BANK1 ] unsigned char 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  From            1    4[BANK2 ] unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      unsigned char 
  4186 ;; Registers used:
  4187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4193 ;;      Params:         0       0       1       0       0       0       0       0       0
  4194 ;;      Locals:         0       0       0       1       0       0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4196 ;;      Totals:         0       0       1       1       0       0       0       0       0
  4197 ;;Total ram usage:        2 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    7
  4200 ;; This function calls:
  4201 ;;		_GETxAPIxVAL
  4202 ;;		_Junction
  4203 ;;		_Left_Mountain_From_The_Left
  4204 ;;		_Left_Mountain_From_The_Right
  4205 ;;		_Right_Mountain_From_The_Left
  4206 ;;		_Right_Mountain_From_The_Right
  4207 ;;		_Train_Move_Left_Brake
  4208 ;;		_Train_Move_Left_Start
  4209 ;;		_Train_Move_Right_Brake
  4210 ;;		_Train_Move_Right_Start
  4211 ;; This function is called by:
  4212 ;;		_Update_StateMchn
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text2
  4217  001728                     __ptext2:
  4218                           	opt stack 0
  4219  001728                     _Train_Path:
  4220                           	opt stack 22
  4221                           
  4222                           ;incstack = 0
  4223                           ;Train_Path@From stored from wreg
  4224  001728  0102               	movlb	2	; () banked
  4225  00172A  6F82               	movwf	Train_Path@From& (0+255),b
  4226                           
  4227                           ;State_Mchn.c: 914: static char Return_Val = 1;
  4228                           ;State_Mchn.c: 916: switch(Switch_Train_Path)
  4229  00172C  D19B               	goto	l7855
  4230  00172E                     l7647:
  4231  00172E  0E00               	movlw	0
  4232  001730  0100               	movlb	0	; () banked
  4233  001732  6FFC               	movwf	Junction@Straight_Bend& (0+255),b
  4234  001734  0E01               	movlw	1
  4235  001736  ECBE  F013         	call	_Junction
  4236  00173A  0900               	iorlw	0
  4237  00173C  B4D8               	btfsc	status,2,c
  4238  00173E  D01A               	goto	l7661
  4239  001740                     l456:
  4240                           
  4241                           ;State_Mchn.c: 924: }
  4242                           ;State_Mchn.c: 925: Return_Val = 1;
  4243  001740  0E01               	movlw	1
  4244  001742                     L39:
  4245  001742  6E4C               	movwf	Train_Path@Return_Val,c
  4246                           
  4247                           ;State_Mchn.c: 926: break;
  4248  001744  D1B8               	goto	l7857
  4249  001746                     l7651:
  4250  001746  0E01               	movlw	1
  4251  001748  0100               	movlb	0	; () banked
  4252  00174A  6FFC               	movwf	Junction@Straight_Bend& (0+255),b
  4253  00174C  0E01               	movlw	1
  4254  00174E  ECBE  F013         	call	_Junction
  4255  001752  D7F3               	goto	L58
  4256  001754                     l7655:
  4257  001754  0E01               	movlw	1
  4258  001756  0100               	movlb	0	; () banked
  4259  001758  6FFC               	movwf	Junction@Straight_Bend& (0+255),b
  4260  00175A  0E00               	movlw	0
  4261  00175C  ECBE  F013         	call	_Junction
  4262  001760  D7EC               	goto	L58
  4263  001762                     l7659:
  4264  001762  0E00               	movlw	0
  4265  001764  0100               	movlb	0	; () banked
  4266  001766  6FFC               	movwf	Junction@Straight_Bend& (0+255),b
  4267  001768  0E00               	movlw	0
  4268  00176A  ECBE  F013         	call	_Junction
  4269  00176E  0900               	iorlw	0
  4270  001770  A4D8               	btfss	status,2,c
  4271  001772  D7E6               	goto	l456
  4272  001774                     l7661:
  4273                           
  4274                           ;State_Mchn.c: 942: {
  4275                           ;State_Mchn.c: 943: Switch_Train_Path = 1;
  4276  001774  0E01               	movlw	1
  4277  001776  D016               	goto	L40
  4278  001778                     l7665:
  4279  001778  0102               	movlb	2	; () banked
  4280  00177A  5182               	movf	Train_Path@From& (0+255),w,b
  4281                           
  4282                           ; Switch size 1, requested type "space"
  4283                           ; Number of cases is 4, Range of values is 0 to 3
  4284                           ; switch strategies available:
  4285                           ; Name         Instructions Cycles
  4286                           ; simple_byte           13     7 (average)
  4287                           ;	Chosen strategy is simple_byte
  4288  00177C  0A00               	xorlw	0	; case 0
  4289  00177E  B4D8               	btfsc	status,2,c
  4290  001780  D7E9               	goto	l7655
  4291  001782  0A01               	xorlw	1	; case 1
  4292  001784  B4D8               	btfsc	status,2,c
  4293  001786  D7ED               	goto	l7659
  4294  001788  0A03               	xorlw	3	; case 2
  4295  00178A  B4D8               	btfsc	status,2,c
  4296  00178C  D7D0               	goto	l7647
  4297  00178E  0A01               	xorlw	1	; case 3
  4298  001790  B4D8               	btfsc	status,2,c
  4299  001792  D7D9               	goto	l7651
  4300                           
  4301                           ; BSR set to: 2
  4302                           ;State_Mchn.c: 950: break;
  4303  001794  D190               	goto	l7857
  4304  001796                     l7667:
  4305  001796  0E00               	movlw	0
  4306  001798  0100               	movlb	0	; () banked
  4307  00179A  6FFC               	movwf	Junction@Straight_Bend& (0+255),b
  4308  00179C  0E01               	movlw	1
  4309  00179E  ECBE  F013         	call	_Junction
  4310  0017A2  D018               	goto	L45
  4311  0017A4                     L40:
  4312  0017A4  6E24               	movwf	_Switch_Train_Path,c
  4313                           
  4314                           ;State_Mchn.c: 957: Return_Val = 1;
  4315  0017A6  0E01               	movlw	1
  4316  0017A8  6E4C               	movwf	Train_Path@Return_Val,c
  4317  0017AA  D7CA               	goto	l456
  4318  0017AC                     l7671:
  4319  0017AC  0E01               	movlw	1
  4320  0017AE  0100               	movlb	0	; () banked
  4321  0017B0  6FFC               	movwf	Junction@Straight_Bend& (0+255),b
  4322  0017B2  0E01               	movlw	1
  4323  0017B4  ECBE  F013         	call	_Junction
  4324  0017B8  D00D               	goto	L45
  4325  0017BA                     l7675:
  4326  0017BA  0E01               	movlw	1
  4327  0017BC  0100               	movlb	0	; () banked
  4328  0017BE  6FFC               	movwf	Junction@Straight_Bend& (0+255),b
  4329  0017C0  0E00               	movlw	0
  4330  0017C2  ECBE  F013         	call	_Junction
  4331  0017C6  D006               	goto	L45
  4332  0017C8                     l7679:
  4333  0017C8  0E00               	movlw	0
  4334  0017CA  0100               	movlb	0	; () banked
  4335  0017CC  6FFC               	movwf	Junction@Straight_Bend& (0+255),b
  4336  0017CE  0E00               	movlw	0
  4337  0017D0  ECBE  F013         	call	_Junction
  4338  0017D4                     L45:
  4339  0017D4  0900               	iorlw	0
  4340  0017D6  A4D8               	btfss	status,2,c
  4341  0017D8  D7B3               	goto	l456
  4342                           
  4343                           ;State_Mchn.c: 976: {
  4344                           ;State_Mchn.c: 977: Switch_Train_Path = 2;
  4345  0017DA  0E02               	movlw	2
  4346  0017DC  D7E3               	goto	L40
  4347  0017DE                     l7685:
  4348  0017DE  0101               	movlb	1	; () banked
  4349  0017E0  51FF               	movf	Train_Path@To& (0+255),w,b
  4350                           
  4351                           ; Switch size 1, requested type "space"
  4352                           ; Number of cases is 4, Range of values is 0 to 3
  4353                           ; switch strategies available:
  4354                           ; Name         Instructions Cycles
  4355                           ; simple_byte           13     7 (average)
  4356                           ;	Chosen strategy is simple_byte
  4357  0017E2  0A00               	xorlw	0	; case 0
  4358  0017E4  B4D8               	btfsc	status,2,c
  4359  0017E6  D7E9               	goto	l7675
  4360  0017E8  0A01               	xorlw	1	; case 1
  4361  0017EA  B4D8               	btfsc	status,2,c
  4362  0017EC  D7ED               	goto	l7679
  4363  0017EE  0A03               	xorlw	3	; case 2
  4364  0017F0  B4D8               	btfsc	status,2,c
  4365  0017F2  D7D1               	goto	l7667
  4366  0017F4  0A01               	xorlw	1	; case 3
  4367  0017F6  B4D8               	btfsc	status,2,c
  4368  0017F8  D7D9               	goto	l7671
  4369                           
  4370                           ; BSR set to: 1
  4371                           ;State_Mchn.c: 984: break;
  4372  0017FA  D15D               	goto	l7857
  4373  0017FC                     l7687:
  4374                           
  4375                           ; BSR set to: 1
  4376  0017FC  EC2E  F011         	call	_Train_Move_Right_Start	;wreg free
  4377  001800  D008               	goto	L48
  4378  001802                     l7691:
  4379  001802  EC2E  F011         	call	_Train_Move_Right_Start	;wreg free
  4380  001806  D005               	goto	L48
  4381  001808                     l7695:
  4382  001808  EC43  F012         	call	_Train_Move_Left_Start	;wreg free
  4383  00180C  D002               	goto	L48
  4384  00180E                     l7699:
  4385  00180E  EC43  F012         	call	_Train_Move_Left_Start	;wreg free
  4386  001812                     L48:
  4387  001812  0900               	iorlw	0
  4388  001814  A4D8               	btfss	status,2,c
  4389  001816  D794               	goto	l456
  4390                           
  4391                           ;State_Mchn.c: 1010: {
  4392                           ;State_Mchn.c: 1011: Switch_Train_Path = 3;
  4393  001818  0E03               	movlw	3
  4394  00181A  D7C4               	goto	L40
  4395  00181C                     l7705:
  4396  00181C  0101               	movlb	1	; () banked
  4397  00181E  51FF               	movf	Train_Path@To& (0+255),w,b
  4398                           
  4399                           ; Switch size 1, requested type "space"
  4400                           ; Number of cases is 4, Range of values is 0 to 3
  4401                           ; switch strategies available:
  4402                           ; Name         Instructions Cycles
  4403                           ; simple_byte           13     7 (average)
  4404                           ;	Chosen strategy is simple_byte
  4405  001820  0A00               	xorlw	0	; case 0
  4406  001822  B4D8               	btfsc	status,2,c
  4407  001824  D7F1               	goto	l7695
  4408  001826  0A01               	xorlw	1	; case 1
  4409  001828  B4D8               	btfsc	status,2,c
  4410  00182A  D7F1               	goto	l7699
  4411  00182C  0A03               	xorlw	3	; case 2
  4412  00182E  B4D8               	btfsc	status,2,c
  4413  001830  D7E5               	goto	l7687
  4414  001832  0A01               	xorlw	1	; case 3
  4415  001834  B4D8               	btfsc	status,2,c
  4416  001836  D7E5               	goto	l7691
  4417                           
  4418                           ; BSR set to: 1
  4419                           ;State_Mchn.c: 1018: break;
  4420  001838  D13E               	goto	l7857
  4421  00183A                     l7707:
  4422                           
  4423                           ; BSR set to: 1
  4424  00183A  0E0C               	movlw	12
  4425  00183C  ECA5  F016         	call	_GETxAPIxVAL
  4426  001840  0100               	movlb	0	; () banked
  4427  001842  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4428  001844  0100               	movlb	0	; () banked
  4429  001846  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4430  001848  B4D8               	btfsc	status,2,c
  4431  00184A  D087               	goto	l7769
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;State_Mchn.c: 1025: else if(GETxAPIxVAL(25) == 1){
  4435                           
  4436                           ; BSR set to: 0
  4437                           
  4438                           ;State_Mchn.c: 1024: }
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;State_Mchn.c: 1023: Switch_Train_Path = 4;
  4442  00184C  0E19               	movlw	25
  4443  00184E  ECA5  F016         	call	_GETxAPIxVAL
  4444  001852  0100               	movlb	0	; () banked
  4445  001854  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4446  001856  0100               	movlb	0	; () banked
  4447  001858  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4448  00185A  A4D8               	btfss	status,2,c
  4449  00185C  D002               	goto	l7715
  4450  00185E                     
  4451                           ; BSR set to: 0
  4452                           ;State_Mchn.c: 1026: Switch_Train_Path = 5;
  4453  00185E  0E05               	movlw	5
  4454  001860  D049               	goto	L30
  4455  001862                     l7715:
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;State_Mchn.c: 1028: else if(GETxAPIxVAL(26) == 1){
  4459  001862  0E1A               	movlw	26
  4460  001864  ECA5  F016         	call	_GETxAPIxVAL
  4461  001868  0100               	movlb	0	; () banked
  4462  00186A  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4463  00186C  0100               	movlb	0	; () banked
  4464  00186E  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4465  001870  A4D8               	btfss	status,2,c
  4466  001872  D002               	goto	l7719
  4467  001874                     
  4468                           ; BSR set to: 0
  4469                           ;State_Mchn.c: 1029: Switch_Train_Path = 6;
  4470  001874  0E06               	movlw	6
  4471  001876  D03E               	goto	L30
  4472  001878                     l7719:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;State_Mchn.c: 1031: else if(GETxAPIxVAL(28) == 1){
  4476  001878  0E1C               	movlw	28
  4477  00187A  ECA5  F016         	call	_GETxAPIxVAL
  4478  00187E  0100               	movlb	0	; () banked
  4479  001880  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4480  001882  0100               	movlb	0	; () banked
  4481  001884  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4482  001886  A4D8               	btfss	status,2,c
  4483  001888  D002               	goto	l7723
  4484  00188A                     
  4485                           ; BSR set to: 0
  4486                           ;State_Mchn.c: 1032: Switch_Train_Path = 7;
  4487  00188A  0E07               	movlw	7
  4488  00188C  D033               	goto	L30
  4489  00188E                     l7723:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;State_Mchn.c: 1034: else if(GETxAPIxVAL(27) == 1){
  4493  00188E  0E1B               	movlw	27
  4494  001890  ECA5  F016         	call	_GETxAPIxVAL
  4495  001894  0100               	movlb	0	; () banked
  4496  001896  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4497  001898  0100               	movlb	0	; () banked
  4498  00189A  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4499  00189C  A4D8               	btfss	status,2,c
  4500  00189E  D750               	goto	l456
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;State_Mchn.c: 1035: Switch_Train_Path = 8;
  4504  0018A0  0E08               	movlw	8
  4505  0018A2  D028               	goto	L30
  4506  0018A4                     l7727:
  4507  0018A4  0E0D               	movlw	13
  4508  0018A6  ECA5  F016         	call	_GETxAPIxVAL
  4509  0018AA  0100               	movlb	0	; () banked
  4510  0018AC  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4511  0018AE  0100               	movlb	0	; () banked
  4512  0018B0  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4513  0018B2  B4D8               	btfsc	status,2,c
  4514  0018B4  D052               	goto	l7769
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;State_Mchn.c: 1042: else if(GETxAPIxVAL(25) == 1){
  4518                           
  4519                           ; BSR set to: 0
  4520                           
  4521                           ;State_Mchn.c: 1041: }
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;State_Mchn.c: 1040: Switch_Train_Path = 4;
  4525  0018B6  0E19               	movlw	25
  4526  0018B8  ECA5  F016         	call	_GETxAPIxVAL
  4527  0018BC  0100               	movlb	0	; () banked
  4528  0018BE  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4529  0018C0  0100               	movlb	0	; () banked
  4530  0018C2  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4531  0018C4  B4D8               	btfsc	status,2,c
  4532  0018C6  D7CB               	goto	L82
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;State_Mchn.c: 1045: else if(GETxAPIxVAL(26) == 1){
  4536                           
  4537                           ; BSR set to: 0
  4538                           
  4539                           ;State_Mchn.c: 1044: }
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;State_Mchn.c: 1043: Switch_Train_Path = 5;
  4543  0018C8  0E1A               	movlw	26
  4544  0018CA  ECA5  F016         	call	_GETxAPIxVAL
  4545  0018CE  0100               	movlb	0	; () banked
  4546  0018D0  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4547  0018D2  0100               	movlb	0	; () banked
  4548  0018D4  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4549  0018D6  B4D8               	btfsc	status,2,c
  4550  0018D8  D7CD               	goto	L83
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;State_Mchn.c: 1048: else if(GETxAPIxVAL(28) == 1){
  4554                           
  4555                           ; BSR set to: 0
  4556                           
  4557                           ;State_Mchn.c: 1047: }
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;State_Mchn.c: 1046: Switch_Train_Path = 6;
  4561  0018DA  0E1C               	movlw	28
  4562  0018DC  ECA5  F016         	call	_GETxAPIxVAL
  4563  0018E0  0100               	movlb	0	; () banked
  4564  0018E2  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4565  0018E4  0100               	movlb	0	; () banked
  4566  0018E6  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4567  0018E8  B4D8               	btfsc	status,2,c
  4568  0018EA  D7CF               	goto	L84
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;State_Mchn.c: 1051: else if(GETxAPIxVAL(27) == 1){
  4572                           
  4573                           ; BSR set to: 0
  4574                           
  4575                           ;State_Mchn.c: 1050: }
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;State_Mchn.c: 1049: Switch_Train_Path = 7;
  4579  0018EC  0E1B               	movlw	27
  4580  0018EE  ECA5  F016         	call	_GETxAPIxVAL
  4581  0018F2  D7D0               	goto	L41
  4582  0018F4                     L30:
  4583  0018F4  6E24               	movwf	_Switch_Train_Path,c
  4584                           
  4585                           ; BSR set to: 0
  4586                           
  4587                           ; BSR set to: 0
  4588                           
  4589                           ; BSR set to: 0
  4590  0018F6  D724               	goto	l456
  4591  0018F8                     l7747:
  4592  0018F8  0E0E               	movlw	14
  4593  0018FA  ECA5  F016         	call	_GETxAPIxVAL
  4594  0018FE  0100               	movlb	0	; () banked
  4595  001900  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4596  001902  0100               	movlb	0	; () banked
  4597  001904  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4598  001906  B4D8               	btfsc	status,2,c
  4599  001908  D028               	goto	l7769
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;State_Mchn.c: 1060: else if(GETxAPIxVAL(25) == 1){
  4603                           
  4604                           ; BSR set to: 0
  4605                           
  4606                           ;State_Mchn.c: 1059: }
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;State_Mchn.c: 1057: {
  4610                           ;State_Mchn.c: 1058: Switch_Train_Path = 4;
  4611  00190A  0E19               	movlw	25
  4612  00190C  ECA5  F016         	call	_GETxAPIxVAL
  4613  001910  0100               	movlb	0	; () banked
  4614  001912  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4615  001914  0100               	movlb	0	; () banked
  4616  001916  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4617  001918  B4D8               	btfsc	status,2,c
  4618  00191A  D02A               	goto	l7773
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;State_Mchn.c: 1063: else if(GETxAPIxVAL(26) == 1){
  4622                           
  4623                           ; BSR set to: 0
  4624                           
  4625                           ;State_Mchn.c: 1062: }
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;State_Mchn.c: 1061: Switch_Train_Path = 9;
  4629  00191C  0E1A               	movlw	26
  4630  00191E  ECA5  F016         	call	_GETxAPIxVAL
  4631  001922  0100               	movlb	0	; () banked
  4632  001924  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4633  001926  0100               	movlb	0	; () banked
  4634  001928  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4635  00192A  B4D8               	btfsc	status,2,c
  4636  00192C  D02C               	goto	l7777
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;State_Mchn.c: 1066: else if(GETxAPIxVAL(28) == 1){
  4640                           
  4641                           ; BSR set to: 0
  4642                           
  4643                           ;State_Mchn.c: 1065: }
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;State_Mchn.c: 1064: Switch_Train_Path = 10;
  4647  00192E  0E1C               	movlw	28
  4648  001930  ECA5  F016         	call	_GETxAPIxVAL
  4649  001934  0100               	movlb	0	; () banked
  4650  001936  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4651  001938  0100               	movlb	0	; () banked
  4652  00193A  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4653  00193C  B4D8               	btfsc	status,2,c
  4654  00193E  D02E               	goto	l7781
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;State_Mchn.c: 1069: else if(GETxAPIxVAL(27) == 1){
  4658                           
  4659                           ; BSR set to: 0
  4660                           
  4661                           ;State_Mchn.c: 1068: }
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;State_Mchn.c: 1067: Switch_Train_Path = 11;
  4665  001940  0E1B               	movlw	27
  4666  001942  ECA5  F016         	call	_GETxAPIxVAL
  4667  001946  D02F               	goto	L49
  4668  001948                     l7767:
  4669  001948  0E0F               	movlw	15
  4670  00194A  ECA5  F016         	call	_GETxAPIxVAL
  4671  00194E  0100               	movlb	0	; () banked
  4672  001950  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4673  001952  0100               	movlb	0	; () banked
  4674  001954  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4675  001956  A4D8               	btfss	status,2,c
  4676  001958  D002               	goto	l7771
  4677  00195A                     l7769:
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;State_Mchn.c: 1075: {
  4681                           ;State_Mchn.c: 1076: Switch_Train_Path = 4;
  4682  00195A  0E04               	movlw	4
  4683  00195C  D7CB               	goto	L30
  4684  00195E                     l7771:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;State_Mchn.c: 1078: else if(GETxAPIxVAL(25) == 1){
  4688  00195E  0E19               	movlw	25
  4689  001960  ECA5  F016         	call	_GETxAPIxVAL
  4690  001964  0100               	movlb	0	; () banked
  4691  001966  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4692  001968  0100               	movlb	0	; () banked
  4693  00196A  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4694  00196C  A4D8               	btfss	status,2,c
  4695  00196E  D002               	goto	l7775
  4696  001970                     l7773:
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;State_Mchn.c: 1079: Switch_Train_Path = 9;
  4700  001970  0E09               	movlw	9
  4701  001972  D7C0               	goto	L30
  4702  001974                     l7775:
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;State_Mchn.c: 1081: else if(GETxAPIxVAL(26) == 1){
  4706  001974  0E1A               	movlw	26
  4707  001976  ECA5  F016         	call	_GETxAPIxVAL
  4708  00197A  0100               	movlb	0	; () banked
  4709  00197C  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4710  00197E  0100               	movlb	0	; () banked
  4711  001980  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4712  001982  A4D8               	btfss	status,2,c
  4713  001984  D002               	goto	l7779
  4714  001986                     l7777:
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;State_Mchn.c: 1082: Switch_Train_Path = 10;
  4718  001986  0E0A               	movlw	10
  4719  001988  D7B5               	goto	L30
  4720  00198A                     l7779:
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;State_Mchn.c: 1084: else if(GETxAPIxVAL(28) == 1){
  4724  00198A  0E1C               	movlw	28
  4725  00198C  ECA5  F016         	call	_GETxAPIxVAL
  4726  001990  0100               	movlb	0	; () banked
  4727  001992  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4728  001994  0100               	movlb	0	; () banked
  4729  001996  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4730  001998  A4D8               	btfss	status,2,c
  4731  00199A  D002               	goto	l7783
  4732  00199C                     l7781:
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;State_Mchn.c: 1085: Switch_Train_Path = 11;
  4736  00199C  0E0B               	movlw	11
  4737  00199E  D7AA               	goto	L30
  4738  0019A0                     l7783:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;State_Mchn.c: 1087: else if(GETxAPIxVAL(27) == 1){
  4742  0019A0  0E1B               	movlw	27
  4743  0019A2  ECA5  F016         	call	_GETxAPIxVAL
  4744  0019A6                     L49:
  4745  0019A6  0100               	movlb	0	; () banked
  4746  0019A8  05F9               	decf	?_GETxAPIxVAL& (0+255),w,b
  4747  0019AA  0100               	movlb	0	; () banked
  4748  0019AC  11FA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4749  0019AE  A4D8               	btfss	status,2,c
  4750  0019B0  D6C7               	goto	l456
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;State_Mchn.c: 1088: Switch_Train_Path = 12;
  4754  0019B2  0E0C               	movlw	12
  4755  0019B4  D79F               	goto	L30
  4756  0019B6                     l7789:
  4757  0019B6  0101               	movlb	1	; () banked
  4758  0019B8  51FF               	movf	Train_Path@To& (0+255),w,b
  4759                           
  4760                           ; Switch size 1, requested type "space"
  4761                           ; Number of cases is 4, Range of values is 0 to 3
  4762                           ; switch strategies available:
  4763                           ; Name         Instructions Cycles
  4764                           ; simple_byte           13     7 (average)
  4765                           ;	Chosen strategy is simple_byte
  4766  0019BA  0A00               	xorlw	0	; case 0
  4767  0019BC  B4D8               	btfsc	status,2,c
  4768  0019BE  D79C               	goto	l7747
  4769  0019C0  0A01               	xorlw	1	; case 1
  4770  0019C2  B4D8               	btfsc	status,2,c
  4771  0019C4  D7C1               	goto	l7767
  4772  0019C6  0A03               	xorlw	3	; case 2
  4773  0019C8  B4D8               	btfsc	status,2,c
  4774  0019CA  D737               	goto	l7707
  4775  0019CC  0A01               	xorlw	1	; case 3
  4776  0019CE  B4D8               	btfsc	status,2,c
  4777  0019D0  D769               	goto	l7727
  4778                           
  4779                           ; BSR set to: 1
  4780                           ;State_Mchn.c: 1094: break;
  4781  0019D2  D071               	goto	l7857
  4782  0019D4                     l7791:
  4783                           
  4784                           ; BSR set to: 1
  4785  0019D4  EC86  F00F         	call	_Train_Move_Right_Brake	;wreg free
  4786  0019D8  D008               	goto	L80
  4787  0019DA                     l7797:
  4788  0019DA  EC86  F00F         	call	_Train_Move_Right_Brake	;wreg free
  4789  0019DE  D005               	goto	L80
  4790  0019E0                     l7803:
  4791  0019E0  ECF5  F00E         	call	_Train_Move_Left_Brake	;wreg free
  4792  0019E4  D002               	goto	L80
  4793  0019E6                     l7809:
  4794  0019E6  ECF5  F00E         	call	_Train_Move_Left_Brake	;wreg free
  4795  0019EA                     L80:
  4796  0019EA  0900               	iorlw	0
  4797  0019EC  A4D8               	btfss	status,2,c
  4798  0019EE  D6A8               	goto	l456
  4799                           
  4800                           ;State_Mchn.c: 1123: {
  4801                           ;State_Mchn.c: 1124: Switch_Train_Path = 0;
  4802  0019F0  0E00               	movlw	0
  4803  0019F2  6E24               	movwf	_Switch_Train_Path,c
  4804                           
  4805                           ;State_Mchn.c: 1125: Return_Val = 0;
  4806  0019F4  0E00               	movlw	0
  4807  0019F6  D6A5               	goto	L39
  4808  0019F8                     l7817:
  4809  0019F8  0101               	movlb	1	; () banked
  4810  0019FA  51FF               	movf	Train_Path@To& (0+255),w,b
  4811                           
  4812                           ; Switch size 1, requested type "space"
  4813                           ; Number of cases is 4, Range of values is 0 to 3
  4814                           ; switch strategies available:
  4815                           ; Name         Instructions Cycles
  4816                           ; simple_byte           13     7 (average)
  4817                           ;	Chosen strategy is simple_byte
  4818  0019FC  0A00               	xorlw	0	; case 0
  4819  0019FE  B4D8               	btfsc	status,2,c
  4820  001A00  D7EF               	goto	l7803
  4821  001A02  0A01               	xorlw	1	; case 1
  4822  001A04  B4D8               	btfsc	status,2,c
  4823  001A06  D7EF               	goto	l7809
  4824  001A08  0A03               	xorlw	3	; case 2
  4825  001A0A  B4D8               	btfsc	status,2,c
  4826  001A0C  D7E3               	goto	l7791
  4827  001A0E  0A01               	xorlw	1	; case 3
  4828  001A10  B4D8               	btfsc	status,2,c
  4829  001A12  D7E3               	goto	l7797
  4830                           
  4831                           ; BSR set to: 1
  4832                           ;State_Mchn.c: 1132: break;
  4833  001A14  D050               	goto	l7857
  4834  001A16                     l7819:
  4835                           
  4836                           ;State_Mchn.c: 1135: if(Left_Mountain_From_The_Left(1) == 0){
  4837  001A16  0E01               	movlw	1
  4838  001A18  ECB9  F011         	call	_Left_Mountain_From_The_Left
  4839  001A1C  D01B               	goto	L81
  4840  001A1E                     l7823:
  4841                           
  4842                           ;State_Mchn.c: 1142: if(Left_Mountain_From_The_Left(2) == 0){
  4843  001A1E  0E02               	movlw	2
  4844  001A20  ECB9  F011         	call	_Left_Mountain_From_The_Left
  4845  001A24  D017               	goto	L81
  4846  001A26                     l7827:
  4847                           
  4848                           ;State_Mchn.c: 1149: if(Right_Mountain_From_The_Left(3) == 0){
  4849  001A26  0E03               	movlw	3
  4850  001A28  ECA1  F010         	call	_Right_Mountain_From_The_Left
  4851  001A2C  D013               	goto	L81
  4852  001A2E                     l7831:
  4853                           
  4854                           ;State_Mchn.c: 1156: if(Right_Mountain_From_The_Left(4) == 0){
  4855  001A2E  0E04               	movlw	4
  4856  001A30  ECA1  F010         	call	_Right_Mountain_From_The_Left
  4857  001A34  D00F               	goto	L81
  4858  001A36                     l7835:
  4859                           
  4860                           ;State_Mchn.c: 1163: if(Right_Mountain_From_The_Right(4) == 0){
  4861  001A36  0E04               	movlw	4
  4862  001A38  EC14  F010         	call	_Right_Mountain_From_The_Right
  4863  001A3C  D00B               	goto	L81
  4864  001A3E                     l7839:
  4865                           
  4866                           ;State_Mchn.c: 1170: if(Right_Mountain_From_The_Right(3) == 0){
  4867  001A3E  0E03               	movlw	3
  4868  001A40  EC14  F010         	call	_Right_Mountain_From_The_Right
  4869  001A44  D007               	goto	L81
  4870  001A46                     l7843:
  4871                           
  4872                           ;State_Mchn.c: 1177: if(Left_Mountain_From_The_Right(2) == 0){
  4873  001A46  0E02               	movlw	2
  4874  001A48  ECCC  F012         	call	_Left_Mountain_From_The_Right
  4875  001A4C  D003               	goto	L81
  4876  001A4E                     l7847:
  4877                           
  4878                           ;State_Mchn.c: 1184: if(Left_Mountain_From_The_Right(1) == 0){
  4879  001A4E  0E01               	movlw	1
  4880  001A50  ECCC  F012         	call	_Left_Mountain_From_The_Right
  4881  001A54                     L81:
  4882  001A54  0900               	iorlw	0
  4883  001A56  A4D8               	btfss	status,2,c
  4884  001A58  D673               	goto	l456
  4885                           
  4886                           ;State_Mchn.c: 1185: Switch_Train_Path = 3;
  4887  001A5A  0E03               	movlw	3
  4888  001A5C  D001               	goto	L42
  4889  001A5E                     l7851:
  4890  001A5E  0E00               	movlw	0
  4891  001A60                     L42:
  4892  001A60  6E24               	movwf	_Switch_Train_Path,c
  4893  001A62  D66E               	goto	l456
  4894  001A64                     l7855:
  4895  001A64  5024               	movf	_Switch_Train_Path,w,c
  4896                           
  4897                           ; Switch size 1, requested type "space"
  4898                           ; Number of cases is 13, Range of values is 0 to 12
  4899                           ; switch strategies available:
  4900                           ; Name         Instructions Cycles
  4901                           ; simple_byte           40    21 (average)
  4902                           ;	Chosen strategy is simple_byte
  4903  001A66  0A00               	xorlw	0	; case 0
  4904  001A68  B4D8               	btfsc	status,2,c
  4905  001A6A  D686               	goto	l7665
  4906  001A6C  0A01               	xorlw	1	; case 1
  4907  001A6E  B4D8               	btfsc	status,2,c
  4908  001A70  D6B6               	goto	l7685
  4909  001A72  0A03               	xorlw	3	; case 2
  4910  001A74  B4D8               	btfsc	status,2,c
  4911  001A76  D6D2               	goto	l7705
  4912  001A78  0A01               	xorlw	1	; case 3
  4913  001A7A  B4D8               	btfsc	status,2,c
  4914  001A7C  D79C               	goto	l7789
  4915  001A7E  0A07               	xorlw	7	; case 4
  4916  001A80  B4D8               	btfsc	status,2,c
  4917  001A82  D7BA               	goto	l7817
  4918  001A84  0A01               	xorlw	1	; case 5
  4919  001A86  B4D8               	btfsc	status,2,c
  4920  001A88  D7C6               	goto	l7819
  4921  001A8A  0A03               	xorlw	3	; case 6
  4922  001A8C  B4D8               	btfsc	status,2,c
  4923  001A8E  D7C7               	goto	l7823
  4924  001A90  0A01               	xorlw	1	; case 7
  4925  001A92  B4D8               	btfsc	status,2,c
  4926  001A94  D7C8               	goto	l7827
  4927  001A96  0A0F               	xorlw	15	; case 8
  4928  001A98  B4D8               	btfsc	status,2,c
  4929  001A9A  D7C9               	goto	l7831
  4930  001A9C  0A01               	xorlw	1	; case 9
  4931  001A9E  B4D8               	btfsc	status,2,c
  4932  001AA0  D7CA               	goto	l7835
  4933  001AA2  0A03               	xorlw	3	; case 10
  4934  001AA4  B4D8               	btfsc	status,2,c
  4935  001AA6  D7CB               	goto	l7839
  4936  001AA8  0A01               	xorlw	1	; case 11
  4937  001AAA  B4D8               	btfsc	status,2,c
  4938  001AAC  D7CC               	goto	l7843
  4939  001AAE  0A07               	xorlw	7	; case 12
  4940  001AB0  B4D8               	btfsc	status,2,c
  4941  001AB2  D7CD               	goto	l7847
  4942  001AB4  D7D4               	goto	l7851
  4943  001AB6                     l7857:
  4944                           
  4945                           ;State_Mchn.c: 1193: return(Return_Val);
  4946  001AB6  504C               	movf	Train_Path@Return_Val,w,c
  4947  001AB8  0012               	return	
  4948  001ABA                     __end_of_Train_Path:
  4949                           	opt stack 0
  4950                           tblptru	equ	0xFF8
  4951                           tblptrh	equ	0xFF7
  4952                           tblptrl	equ	0xFF6
  4953                           tablat	equ	0xFF5
  4954                           postinc0	equ	0xFEE
  4955                           wreg	equ	0xFE8
  4956                           postdec1	equ	0xFE5
  4957                           fsr1l	equ	0xFE1
  4958                           status	equ	0xFD8
  4959                           
  4960 ;; *************** function _Train_Move_Right_Start *****************
  4961 ;; Defined at:
  4962 ;;		line 27 in file "../train_move_right.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      unsigned char 
  4969 ;; Registers used:
  4970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4976 ;;      Params:         0       0       0       0       0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4979 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4980 ;;Total ram usage:        0 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; Hardware stack levels required when called:    6
  4983 ;; This function calls:
  4984 ;;		_GETxAPIxVAL
  4985 ;;		_SETxPWM
  4986 ;; This function is called by:
  4987 ;;		_Train_Path
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           	psect	text3
  4992  00225C                     __ptext3:
  4993                           	opt stack 0
  4994  00225C                     _Train_Move_Right_Start:
  4995                           	opt stack 22
  4996                           
  4997                           ;train_move_right.c: 29: static char Return_Val = 1;
  4998                           ;train_move_right.c: 30: static unsigned int Train_Move_Wait_Time = 0;
  4999                           ;train_move_right.c: 32: switch(Switch_Train_Move)
  5000                           
  5001                           ;incstack = 0
  5002  00225C  D07A               	goto	l6949
  5003  00225E                     l6905:
  5004  00225E  0E04               	movlw	4
  5005  002260  ECA5  F016         	call	_GETxAPIxVAL
  5006  002264  0100               	movlb	0	; () banked
  5007  002266  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5008  002268  0100               	movlb	0	; () banked
  5009  00226A  5DE6               	subwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),w,b
  5010  00226C  0100               	movlb	0	; () banked
  5011  00226E  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5012  002270  0100               	movlb	0	; () banked
  5013  002272  59E7               	subwfb	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  5014  002274  A0D8               	btfss	status,0,c
  5015  002276  D002               	goto	l6909
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;train_move_right.c: 37: {
  5019                           ;train_move_right.c: 38: Switch_Train_Move = 1;
  5020  002278  0E01               	movlw	1
  5021  00227A  D02C               	goto	L62
  5022  00227C                     l6909:
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;train_move_right.c: 42: }
  5026                           ;train_move_right.c: 43: Train_Move_Wait_Time++;
  5027  00227C  0100               	movlb	0	; () banked
  5028  00227E  4BE6               	infsnz	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),f,b
  5029  002280  2BE7               	incf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;train_move_right.c: 44: Switch_Train_Move = 0;
  5033  002282  0E00               	movlw	0
  5034  002284  6E23               	movwf	_Switch_Train_Move,c
  5035  002286  D061               	goto	L63
  5036  002288                     l6915:
  5037  002288  0E06               	movlw	6
  5038  00228A  ECA5  F016         	call	_GETxAPIxVAL
  5039  00228E  C0F9  F1FC         	movff	?_GETxAPIxVAL,SETxPWM@speed
  5040  002292  C0FA  F1FD         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  5041  002296  0E01               	movlw	1
  5042  002298  0101               	movlb	1	; () banked
  5043  00229A  6FFE               	movwf	SETxPWM@direction& (0+255),b
  5044  00229C  EC88  F014         	call	_SETxPWM	;wreg free
  5045                           
  5046                           ;train_move_right.c: 49: Train_Move_Pwm_Count = GETxAPIxVAL(6);
  5047  0022A0  0E06               	movlw	6
  5048  0022A2  ECA5  F016         	call	_GETxAPIxVAL
  5049  0022A6  C0F9  F009         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  5050  0022AA  C0FA  F00A         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  5051                           
  5052                           ;train_move_right.c: 50: PORTCbits.RC0 = 0;
  5053  0022AE  9082               	bcf	3970,0,c	;volatile
  5054                           
  5055                           ;train_move_right.c: 51: Return_Val = 1;
  5056  0022B0  0E01               	movlw	1
  5057  0022B2  0100               	movlb	0	; () banked
  5058  0022B4  6FF8               	movwf	Train_Move_Right_Start@Return_Val& (0+255),b
  5059  0022B6  D01B               	goto	l6931
  5060  0022B8                     l6923:
  5061  0022B8  0E02               	movlw	2
  5062  0022BA  ECA5  F016         	call	_GETxAPIxVAL
  5063  0022BE  0100               	movlb	0	; () banked
  5064  0022C0  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5065  0022C2  0100               	movlb	0	; () banked
  5066  0022C4  5DE6               	subwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),w,b
  5067  0022C6  0100               	movlb	0	; () banked
  5068  0022C8  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5069  0022CA  0100               	movlb	0	; () banked
  5070  0022CC  59E7               	subwfb	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  5071  0022CE  A0D8               	btfss	status,0,c
  5072  0022D0  D008               	goto	l6927
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;train_move_right.c: 56: {
  5076                           ;train_move_right.c: 57: Switch_Train_Move = 3;
  5077  0022D2  0E03               	movlw	3
  5078  0022D4                     L62:
  5079  0022D4  6E23               	movwf	_Switch_Train_Move,c
  5080                           
  5081                           ;train_move_right.c: 58: Train_Move_Wait_Time = 0;
  5082  0022D6  0E00               	movlw	0
  5083  0022D8  0100               	movlb	0	; () banked
  5084  0022DA  6FE7               	movwf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),b
  5085  0022DC  0E00               	movlw	0
  5086  0022DE  6FE6               	movwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),b
  5087  0022E0  D034               	goto	L63
  5088  0022E2                     l6927:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;train_move_right.c: 61: }
  5092                           ;train_move_right.c: 62: Return_Val = 1;
  5093  0022E2  0E01               	movlw	1
  5094  0022E4  0100               	movlb	0	; () banked
  5095  0022E6  6FF8               	movwf	Train_Move_Right_Start@Return_Val& (0+255),b
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;train_move_right.c: 63: Train_Move_Wait_Time++;
  5099  0022E8  0100               	movlb	0	; () banked
  5100  0022EA  4BE6               	infsnz	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),f,b
  5101  0022EC  2BE7               	incf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  5102  0022EE                     l6931:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;train_move_right.c: 64: Switch_Train_Move = 2;
  5106  0022EE  0E02               	movlw	2
  5107  0022F0  6E23               	movwf	_Switch_Train_Move,c
  5108                           
  5109                           ;train_move_right.c: 65: break;
  5110  0022F2  D03C               	goto	l6951
  5111  0022F4                     l6933:
  5112  0022F4  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5113  0022F8  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5114  0022FC  0E01               	movlw	1
  5115  0022FE  0101               	movlb	1	; () banked
  5116  002300  6FFE               	movwf	SETxPWM@direction& (0+255),b
  5117  002302  EC88  F014         	call	_SETxPWM	;wreg free
  5118                           
  5119                           ;train_move_right.c: 68: if (Train_Move_Pwm_Count <= GETxAPIxVAL(7))
  5120  002306  0E07               	movlw	7
  5121  002308  ECA5  F016         	call	_GETxAPIxVAL
  5122  00230C  5009               	movf	_Train_Move_Pwm_Count,w,c
  5123  00230E  0100               	movlb	0	; () banked
  5124  002310  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  5125  002312  500A               	movf	_Train_Move_Pwm_Count+1,w,c
  5126  002314  0100               	movlb	0	; () banked
  5127  002316  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  5128  002318  A0D8               	btfss	status,0,c
  5129  00231A  D004               	goto	l6939
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;train_move_right.c: 69: {
  5133                           ;train_move_right.c: 70: Switch_Train_Move = 0;
  5134  00231C  0E00               	movlw	0
  5135  00231E  6E23               	movwf	_Switch_Train_Move,c
  5136                           
  5137                           ;train_move_right.c: 71: Return_Val = 0;
  5138  002320  0E00               	movlw	0
  5139  002322  D014               	goto	L61
  5140  002324                     l6939:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;train_move_right.c: 73: }
  5144                           ;train_move_right.c: 74: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(10))
  5145  002324  0E0A               	movlw	10
  5146  002326  ECA5  F016         	call	_GETxAPIxVAL
  5147  00232A  0100               	movlb	0	; () banked
  5148  00232C  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5149  00232E  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  5150  002330  0100               	movlb	0	; () banked
  5151  002332  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5152  002334  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  5153  002336  A0D8               	btfss	status,0,c
  5154  002338  D006               	goto	l6945
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;train_move_right.c: 75: {
  5158                           ;train_move_right.c: 76: Train_Move_Pwm_Count++;
  5159  00233A  4A09               	infsnz	_Train_Move_Pwm_Count,f,c
  5160  00233C  2A0A               	incf	_Train_Move_Pwm_Count+1,f,c
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;train_move_right.c: 77: Train_Move_Pwm_Fast_Count = 0;
  5164  00233E  0E00               	movlw	0
  5165  002340  6E0C               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  5166  002342  0E00               	movlw	0
  5167  002344  6E0B               	movwf	_Train_Move_Pwm_Fast_Count,c
  5168  002346                     l6945:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;train_move_right.c: 78: }
  5172                           ;train_move_right.c: 79: Train_Move_Pwm_Fast_Count++;
  5173  002346  4A0B               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  5174  002348  2A0C               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  5175  00234A                     L63:
  5176                           
  5177                           ;train_move_right.c: 80: Return_Val = 1;
  5178  00234A  0E01               	movlw	1
  5179  00234C                     L61:
  5180  00234C  0100               	movlb	0	; () banked
  5181  00234E  6FF8               	movwf	Train_Move_Right_Start@Return_Val& (0+255),b
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;train_move_right.c: 84: }
  5185                           
  5186                           ; BSR set to: 0
  5187                           
  5188                           ;train_move_right.c: 83: default : break;
  5189                           
  5190                           ;train_move_right.c: 81: break;
  5191  002350  D00D               	goto	l6951
  5192  002352                     l6949:
  5193  002352  5023               	movf	_Switch_Train_Move,w,c
  5194                           
  5195                           ; Switch size 1, requested type "space"
  5196                           ; Number of cases is 4, Range of values is 0 to 3
  5197                           ; switch strategies available:
  5198                           ; Name         Instructions Cycles
  5199                           ; simple_byte           13     7 (average)
  5200                           ;	Chosen strategy is simple_byte
  5201  002354  0A00               	xorlw	0	; case 0
  5202  002356  B4D8               	btfsc	status,2,c
  5203  002358  D782               	goto	l6905
  5204  00235A  0A01               	xorlw	1	; case 1
  5205  00235C  B4D8               	btfsc	status,2,c
  5206  00235E  D794               	goto	l6915
  5207  002360  0A03               	xorlw	3	; case 2
  5208  002362  B4D8               	btfsc	status,2,c
  5209  002364  D7A9               	goto	l6923
  5210  002366  0A01               	xorlw	1	; case 3
  5211  002368  B4D8               	btfsc	status,2,c
  5212  00236A  D7C4               	goto	l6933
  5213  00236C                     l6951:
  5214                           
  5215                           ;train_move_right.c: 86: return(Return_Val);
  5216  00236C  0100               	movlb	0	; () banked
  5217  00236E  51F8               	movf	Train_Move_Right_Start@Return_Val& (0+255),w,b
  5218  002370  0012               	return	
  5219  002372                     __end_of_Train_Move_Right_Start:
  5220                           	opt stack 0
  5221                           tblptru	equ	0xFF8
  5222                           tblptrh	equ	0xFF7
  5223                           tblptrl	equ	0xFF6
  5224                           tablat	equ	0xFF5
  5225                           postinc0	equ	0xFEE
  5226                           wreg	equ	0xFE8
  5227                           postdec1	equ	0xFE5
  5228                           fsr1l	equ	0xFE1
  5229                           status	equ	0xFD8
  5230                           
  5231 ;; *************** function _Train_Move_Right_Brake *****************
  5232 ;; Defined at:
  5233 ;;		line 246 in file "../train_move_right.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      unsigned char 
  5240 ;; Registers used:
  5241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5247 ;;      Params:         0       0       0       0       0       0       0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5250 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5251 ;;Total ram usage:        0 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    6
  5254 ;; This function calls:
  5255 ;;		_GETxAPIxVAL
  5256 ;;		_SETxPWM
  5257 ;; This function is called by:
  5258 ;;		_Train_Path
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text4
  5263  001F0C                     __ptext4:
  5264                           	opt stack 0
  5265  001F0C                     _Train_Move_Right_Brake:
  5266                           	opt stack 22
  5267                           
  5268                           ;train_move_right.c: 248: static char Return_Val = 1;
  5269                           ;train_move_right.c: 249: static unsigned int Train_Move_Wait_Time = 0;
  5270                           ;train_move_right.c: 251: switch(Switch_Train_Move)
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;incstack = 0
  5274  001F0C  D07D               	goto	l7055
  5275  001F0E                     l7011:
  5276  001F0E  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5277  001F12  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5278  001F16  0E01               	movlw	1
  5279  001F18  0101               	movlb	1	; () banked
  5280  001F1A  6FFE               	movwf	SETxPWM@direction& (0+255),b
  5281  001F1C  EC88  F014         	call	_SETxPWM	;wreg free
  5282                           
  5283                           ;train_move_right.c: 254: if (Train_Move_Pwm_Count >= GETxAPIxVAL(6))
  5284  001F20  0E06               	movlw	6
  5285  001F22  ECA5  F016         	call	_GETxAPIxVAL
  5286  001F26  0100               	movlb	0	; () banked
  5287  001F28  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5288  001F2A  5C09               	subwf	_Train_Move_Pwm_Count,w,c
  5289  001F2C  0100               	movlb	0	; () banked
  5290  001F2E  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5291  001F30  580A               	subwfb	_Train_Move_Pwm_Count+1,w,c
  5292  001F32  A0D8               	btfss	status,0,c
  5293  001F34  D002               	goto	l7017
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;train_move_right.c: 255: {
  5297                           ;train_move_right.c: 256: Switch_Train_Move = 1;
  5298  001F36  0E01               	movlw	1
  5299  001F38  D062               	goto	L69
  5300  001F3A                     l7017:
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;train_move_right.c: 259: }
  5304                           ;train_move_right.c: 260: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(9))
  5305  001F3A  0E09               	movlw	9
  5306  001F3C  ECA5  F016         	call	_GETxAPIxVAL
  5307  001F40  0100               	movlb	0	; () banked
  5308  001F42  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5309  001F44  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  5310  001F46  0100               	movlb	0	; () banked
  5311  001F48  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5312  001F4A  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  5313  001F4C  A0D8               	btfss	status,0,c
  5314  001F4E  D007               	goto	l7023
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;train_move_right.c: 261: {
  5318                           ;train_move_right.c: 262: Train_Move_Pwm_Count--;
  5319  001F50  0609               	decf	_Train_Move_Pwm_Count,f,c
  5320  001F52  A0D8               	btfss	status,0,c
  5321  001F54  060A               	decf	_Train_Move_Pwm_Count+1,f,c
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;train_move_right.c: 263: Train_Move_Pwm_Fast_Count = 0;
  5325  001F56  0E00               	movlw	0
  5326  001F58  6E0C               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  5327  001F5A  0E00               	movlw	0
  5328  001F5C  6E0B               	movwf	_Train_Move_Pwm_Fast_Count,c
  5329  001F5E                     l7023:
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;train_move_right.c: 264: }
  5333                           ;train_move_right.c: 265: Train_Move_Pwm_Fast_Count++;
  5334  001F5E  4A0B               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  5335  001F60  2A0C               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  5336  001F62  D04E               	goto	l7051
  5337  001F64                     l7025:
  5338  001F64  0E02               	movlw	2
  5339  001F66  ECA5  F016         	call	_GETxAPIxVAL
  5340  001F6A  0100               	movlb	0	; () banked
  5341  001F6C  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5342  001F6E  0100               	movlb	0	; () banked
  5343  001F70  5DE4               	subwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),w,b
  5344  001F72  0100               	movlb	0	; () banked
  5345  001F74  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5346  001F76  0100               	movlb	0	; () banked
  5347  001F78  59E5               	subwfb	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  5348  001F7A  A0D8               	btfss	status,0,c
  5349  001F7C  D008               	goto	l7029
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;train_move_right.c: 270: {
  5353                           ;train_move_right.c: 271: Switch_Train_Move = 2;
  5354  001F7E  0E02               	movlw	2
  5355  001F80  6E23               	movwf	_Switch_Train_Move,c
  5356                           
  5357                           ;train_move_right.c: 272: Train_Move_Wait_Time = 0;
  5358  001F82  0E00               	movlw	0
  5359  001F84  0100               	movlb	0	; () banked
  5360  001F86  6FE5               	movwf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),b
  5361  001F88  0E00               	movlw	0
  5362  001F8A  6FE4               	movwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),b
  5363  001F8C  D039               	goto	l7051
  5364  001F8E                     l7029:
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;train_move_right.c: 275: }
  5368                           ;train_move_right.c: 276: Return_Val = 1;
  5369  001F8E  0E01               	movlw	1
  5370  001F90  0100               	movlb	0	; () banked
  5371  001F92  6FF7               	movwf	Train_Move_Right_Brake@Return_Val& (0+255),b
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;train_move_right.c: 277: Train_Move_Wait_Time++;
  5375  001F94  0100               	movlb	0	; () banked
  5376  001F96  4BE4               	infsnz	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),f,b
  5377  001F98  2BE5               	incf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;train_move_right.c: 278: Switch_Train_Move = 1;
  5381  001F9A  0E01               	movlw	1
  5382  001F9C  6E23               	movwf	_Switch_Train_Move,c
  5383                           
  5384                           ;train_move_right.c: 279: break;
  5385  001F9E  D041               	goto	l7057
  5386  001FA0                     l7035:
  5387  001FA0  0E06               	movlw	6
  5388  001FA2  ECA5  F016         	call	_GETxAPIxVAL
  5389  001FA6  C0F9  F1FC         	movff	?_GETxAPIxVAL,SETxPWM@speed
  5390  001FAA  C0FA  F1FD         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  5391  001FAE  0E01               	movlw	1
  5392  001FB0  0101               	movlb	1	; () banked
  5393  001FB2  6FFE               	movwf	SETxPWM@direction& (0+255),b
  5394  001FB4  EC88  F014         	call	_SETxPWM	;wreg free
  5395                           
  5396                           ;train_move_right.c: 282: PORTCbits.RC0 = 1;
  5397  001FB8  8082               	bsf	3970,0,c	;volatile
  5398                           
  5399                           ;train_move_right.c: 283: Train_Move_Pwm_Count = GETxAPIxVAL(6);
  5400  001FBA  0E06               	movlw	6
  5401  001FBC  ECA5  F016         	call	_GETxAPIxVAL
  5402  001FC0  C0F9  F009         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  5403  001FC4  C0FA  F00A         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  5404  001FC8  D019               	goto	l7049
  5405  001FCA                     l7043:
  5406  001FCA  0E04               	movlw	4
  5407  001FCC  ECA5  F016         	call	_GETxAPIxVAL
  5408  001FD0  0100               	movlb	0	; () banked
  5409  001FD2  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5410  001FD4  0100               	movlb	0	; () banked
  5411  001FD6  5DE4               	subwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),w,b
  5412  001FD8  0100               	movlb	0	; () banked
  5413  001FDA  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5414  001FDC  0100               	movlb	0	; () banked
  5415  001FDE  59E5               	subwfb	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  5416  001FE0  A0D8               	btfss	status,0,c
  5417  001FE2  D009               	goto	l7047
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;train_move_right.c: 289: {
  5421                           ;train_move_right.c: 290: Switch_Train_Move = 0;
  5422  001FE4  0E00               	movlw	0
  5423  001FE6  6E23               	movwf	_Switch_Train_Move,c
  5424                           
  5425                           ;train_move_right.c: 291: Train_Move_Wait_Time = 0;
  5426  001FE8  0E00               	movlw	0
  5427  001FEA  0100               	movlb	0	; () banked
  5428  001FEC  6FE5               	movwf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),b
  5429  001FEE  0E00               	movlw	0
  5430  001FF0  6FE4               	movwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),b
  5431                           
  5432                           ;train_move_right.c: 292: Return_Val = 0;
  5433  001FF2  0E00               	movlw	0
  5434  001FF4  D006               	goto	L67
  5435  001FF6                     l7047:
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;train_move_right.c: 294: }
  5439                           ;train_move_right.c: 295: Train_Move_Wait_Time++;
  5440  001FF6  0100               	movlb	0	; () banked
  5441  001FF8  4BE4               	infsnz	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),f,b
  5442  001FFA  2BE5               	incf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  5443  001FFC                     l7049:
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;train_move_right.c: 296: Switch_Train_Move = 3;
  5447  001FFC  0E03               	movlw	3
  5448  001FFE                     L69:
  5449  001FFE  6E23               	movwf	_Switch_Train_Move,c
  5450  002000                     l7051:
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;train_move_right.c: 297: Return_Val = 1;
  5454  002000  0E01               	movlw	1
  5455  002002                     L67:
  5456  002002  0100               	movlb	0	; () banked
  5457  002004  6FF7               	movwf	Train_Move_Right_Brake@Return_Val& (0+255),b
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;train_move_right.c: 301: }
  5461                           
  5462                           ; BSR set to: 0
  5463                           
  5464                           ;train_move_right.c: 300: default : break;
  5465                           
  5466                           ;train_move_right.c: 298: break;
  5467  002006  D00D               	goto	l7057
  5468  002008                     l7055:
  5469  002008  5023               	movf	_Switch_Train_Move,w,c
  5470                           
  5471                           ; Switch size 1, requested type "space"
  5472                           ; Number of cases is 4, Range of values is 0 to 3
  5473                           ; switch strategies available:
  5474                           ; Name         Instructions Cycles
  5475                           ; simple_byte           13     7 (average)
  5476                           ;	Chosen strategy is simple_byte
  5477  00200A  0A00               	xorlw	0	; case 0
  5478  00200C  B4D8               	btfsc	status,2,c
  5479  00200E  D77F               	goto	l7011
  5480  002010  0A01               	xorlw	1	; case 1
  5481  002012  B4D8               	btfsc	status,2,c
  5482  002014  D7A7               	goto	l7025
  5483  002016  0A03               	xorlw	3	; case 2
  5484  002018  B4D8               	btfsc	status,2,c
  5485  00201A  D7C2               	goto	l7035
  5486  00201C  0A01               	xorlw	1	; case 3
  5487  00201E  B4D8               	btfsc	status,2,c
  5488  002020  D7D4               	goto	l7043
  5489  002022                     l7057:
  5490                           
  5491                           ;train_move_right.c: 303: return(Return_Val);
  5492  002022  0100               	movlb	0	; () banked
  5493  002024  51F7               	movf	Train_Move_Right_Brake@Return_Val& (0+255),w,b
  5494  002026  0012               	return	
  5495  002028                     __end_of_Train_Move_Right_Brake:
  5496                           	opt stack 0
  5497                           tblptru	equ	0xFF8
  5498                           tblptrh	equ	0xFF7
  5499                           tblptrl	equ	0xFF6
  5500                           tablat	equ	0xFF5
  5501                           postinc0	equ	0xFEE
  5502                           wreg	equ	0xFE8
  5503                           postdec1	equ	0xFE5
  5504                           fsr1l	equ	0xFE1
  5505                           status	equ	0xFD8
  5506                           
  5507 ;; *************** function _Train_Move_Left_Start *****************
  5508 ;; Defined at:
  5509 ;;		line 27 in file "../train_move_left.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;		None
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;		None
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  1    wreg      unsigned char 
  5516 ;; Registers used:
  5517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5523 ;;      Params:         0       0       0       0       0       0       0       0       0
  5524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5526 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5527 ;;Total ram usage:        0 bytes
  5528 ;; Hardware stack levels used:    1
  5529 ;; Hardware stack levels required when called:    6
  5530 ;; This function calls:
  5531 ;;		_GETxAPIxVAL
  5532 ;;		_SETxPWM
  5533 ;; This function is called by:
  5534 ;;		_Train_Path
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text5
  5539  002486                     __ptext5:
  5540                           	opt stack 0
  5541  002486                     _Train_Move_Left_Start:
  5542                           	opt stack 22
  5543                           
  5544                           ;train_move_left.c: 29: static char Return_Val = 1;
  5545                           ;train_move_left.c: 30: static unsigned int Train_Move_Wait_Time = 0;
  5546                           ;train_move_left.c: 32: switch(Switch_Train_Move)
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;incstack = 0
  5550  002486  D078               	goto	l7003
  5551  002488                     l6957:
  5552  002488  0E04               	movlw	4
  5553  00248A  ECA5  F016         	call	_GETxAPIxVAL
  5554  00248E  0100               	movlb	0	; () banked
  5555  002490  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5556  002492  0100               	movlb	0	; () banked
  5557  002494  5DE2               	subwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),w,b
  5558  002496  0100               	movlb	0	; () banked
  5559  002498  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5560  00249A  0100               	movlb	0	; () banked
  5561  00249C  59E3               	subwfb	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  5562  00249E  A0D8               	btfss	status,0,c
  5563  0024A0  D002               	goto	l6961
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;train_move_left.c: 37: {
  5567                           ;train_move_left.c: 38: Switch_Train_Move = 1;
  5568  0024A2  0E01               	movlw	1
  5569  0024A4  D02E               	goto	L72
  5570  0024A6                     l6961:
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;train_move_left.c: 42: }
  5574                           ;train_move_left.c: 43: Train_Move_Wait_Time++;
  5575  0024A6  0100               	movlb	0	; () banked
  5576  0024A8  4BE2               	infsnz	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),f,b
  5577  0024AA  2BE3               	incf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;train_move_left.c: 44: Switch_Train_Move = 0;
  5581  0024AC  0E00               	movlw	0
  5582  0024AE  D019               	goto	L70
  5583  0024B0                     l6965:
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;train_move_left.c: 45: Return_Val = 1;
  5587  0024B0  0E01               	movlw	1
  5588  0024B2  0100               	movlb	0	; () banked
  5589  0024B4  6FF6               	movwf	Train_Move_Left_Start@Return_Val& (0+255),b
  5590                           
  5591                           ;train_move_left.c: 46: break;
  5592  0024B6  D06D               	goto	l7005
  5593  0024B8                     l6967:
  5594  0024B8  0E05               	movlw	5
  5595  0024BA  ECA5  F016         	call	_GETxAPIxVAL
  5596  0024BE  C0F9  F1FC         	movff	?_GETxAPIxVAL,SETxPWM@speed
  5597  0024C2  C0FA  F1FD         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  5598  0024C6  0E00               	movlw	0
  5599  0024C8  0101               	movlb	1	; () banked
  5600  0024CA  6FFE               	movwf	SETxPWM@direction& (0+255),b
  5601  0024CC  EC88  F014         	call	_SETxPWM	;wreg free
  5602                           
  5603                           ;train_move_left.c: 49: Train_Move_Pwm_Count = GETxAPIxVAL(5);
  5604  0024D0  0E05               	movlw	5
  5605  0024D2  ECA5  F016         	call	_GETxAPIxVAL
  5606  0024D6  C0F9  F009         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  5607  0024DA  C0FA  F00A         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  5608                           
  5609                           ;train_move_left.c: 50: PORTCbits.RC0 = 0;
  5610  0024DE  9082               	bcf	3970,0,c	;volatile
  5611  0024E0  D01A               	goto	l6981
  5612  0024E2                     L70:
  5613  0024E2  6E23               	movwf	_Switch_Train_Move,c
  5614  0024E4  D7E5               	goto	l6965
  5615  0024E6                     l6975:
  5616  0024E6  0E02               	movlw	2
  5617  0024E8  ECA5  F016         	call	_GETxAPIxVAL
  5618  0024EC  0100               	movlb	0	; () banked
  5619  0024EE  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5620  0024F0  0100               	movlb	0	; () banked
  5621  0024F2  5DE2               	subwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),w,b
  5622  0024F4  0100               	movlb	0	; () banked
  5623  0024F6  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5624  0024F8  0100               	movlb	0	; () banked
  5625  0024FA  59E3               	subwfb	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  5626  0024FC  A0D8               	btfss	status,0,c
  5627  0024FE  D008               	goto	l6979
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;train_move_left.c: 56: {
  5631                           ;train_move_left.c: 57: Switch_Train_Move = 3;
  5632  002500  0E03               	movlw	3
  5633  002502                     L72:
  5634  002502  6E23               	movwf	_Switch_Train_Move,c
  5635                           
  5636                           ;train_move_left.c: 58: Train_Move_Wait_Time = 0;
  5637  002504  0E00               	movlw	0
  5638  002506  0100               	movlb	0	; () banked
  5639  002508  6FE3               	movwf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),b
  5640  00250A  0E00               	movlw	0
  5641  00250C  6FE2               	movwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),b
  5642  00250E  D7D0               	goto	l6965
  5643  002510                     l6979:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;train_move_left.c: 61: }
  5647                           ;train_move_left.c: 62: Train_Move_Wait_Time++;
  5648  002510  0100               	movlb	0	; () banked
  5649  002512  4BE2               	infsnz	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),f,b
  5650  002514  2BE3               	incf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  5651  002516                     l6981:
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;train_move_left.c: 63: Switch_Train_Move = 2;
  5655  002516  0E02               	movlw	2
  5656  002518  D7E4               	goto	L70
  5657  00251A                     l6985:
  5658  00251A  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5659  00251E  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5660  002522  0E00               	movlw	0
  5661  002524  0101               	movlb	1	; () banked
  5662  002526  6FFE               	movwf	SETxPWM@direction& (0+255),b
  5663  002528  EC88  F014         	call	_SETxPWM	;wreg free
  5664                           
  5665                           ;train_move_left.c: 68: Return_Val = 1;
  5666  00252C  0E01               	movlw	1
  5667  00252E  0100               	movlb	0	; () banked
  5668  002530  6FF6               	movwf	Train_Move_Left_Start@Return_Val& (0+255),b
  5669                           
  5670                           ; BSR set to: 0
  5671                           ;train_move_left.c: 69: if (Train_Move_Pwm_Count <= GETxAPIxVAL(8))
  5672  002532  0E08               	movlw	8
  5673  002534  ECA5  F016         	call	_GETxAPIxVAL
  5674  002538  5009               	movf	_Train_Move_Pwm_Count,w,c
  5675  00253A  0100               	movlb	0	; () banked
  5676  00253C  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  5677  00253E  500A               	movf	_Train_Move_Pwm_Count+1,w,c
  5678  002540  0100               	movlb	0	; () banked
  5679  002542  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  5680  002544  A0D8               	btfss	status,0,c
  5681  002546  D004               	goto	l6993
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;train_move_left.c: 70: {
  5685                           ;train_move_left.c: 71: Switch_Train_Move = 0;
  5686  002548  0E00               	movlw	0
  5687  00254A  6E23               	movwf	_Switch_Train_Move,c
  5688                           
  5689                           ;train_move_left.c: 72: Return_Val = 0;
  5690  00254C  0E00               	movlw	0
  5691  00254E  D7B1               	goto	L71
  5692  002550                     l6993:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;train_move_left.c: 74: }
  5696                           ;train_move_left.c: 75: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(10))
  5697  002550  0E0A               	movlw	10
  5698  002552  ECA5  F016         	call	_GETxAPIxVAL
  5699  002556  0100               	movlb	0	; () banked
  5700  002558  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5701  00255A  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  5702  00255C  0100               	movlb	0	; () banked
  5703  00255E  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5704  002560  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  5705  002562  A0D8               	btfss	status,0,c
  5706  002564  D006               	goto	l6999
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;train_move_left.c: 76: {
  5710                           ;train_move_left.c: 77: Train_Move_Pwm_Count++;
  5711  002566  4A09               	infsnz	_Train_Move_Pwm_Count,f,c
  5712  002568  2A0A               	incf	_Train_Move_Pwm_Count+1,f,c
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;train_move_left.c: 78: Train_Move_Pwm_Fast_Count = 0;
  5716  00256A  0E00               	movlw	0
  5717  00256C  6E0C               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  5718  00256E  0E00               	movlw	0
  5719  002570  6E0B               	movwf	_Train_Move_Pwm_Fast_Count,c
  5720  002572                     l6999:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;train_move_left.c: 79: }
  5724                           ;train_move_left.c: 80: Train_Move_Pwm_Fast_Count++;
  5725  002572  4A0B               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  5726  002574  2A0C               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;train_move_left.c: 83: }
  5730                           
  5731                           ; BSR set to: 0
  5732                           
  5733                           ;train_move_left.c: 82: default : break;
  5734                           
  5735                           ;train_move_left.c: 81: break;
  5736  002576  D00D               	goto	l7005
  5737  002578                     l7003:
  5738  002578  5023               	movf	_Switch_Train_Move,w,c
  5739                           
  5740                           ; Switch size 1, requested type "space"
  5741                           ; Number of cases is 4, Range of values is 0 to 3
  5742                           ; switch strategies available:
  5743                           ; Name         Instructions Cycles
  5744                           ; simple_byte           13     7 (average)
  5745                           ;	Chosen strategy is simple_byte
  5746  00257A  0A00               	xorlw	0	; case 0
  5747  00257C  B4D8               	btfsc	status,2,c
  5748  00257E  D784               	goto	l6957
  5749  002580  0A01               	xorlw	1	; case 1
  5750  002582  B4D8               	btfsc	status,2,c
  5751  002584  D799               	goto	l6967
  5752  002586  0A03               	xorlw	3	; case 2
  5753  002588  B4D8               	btfsc	status,2,c
  5754  00258A  D7AD               	goto	l6975
  5755  00258C  0A01               	xorlw	1	; case 3
  5756  00258E  B4D8               	btfsc	status,2,c
  5757  002590  D7C4               	goto	l6985
  5758  002592                     l7005:
  5759                           
  5760                           ;train_move_left.c: 85: return(Return_Val);
  5761  002592  0100               	movlb	0	; () banked
  5762  002594  51F6               	movf	Train_Move_Left_Start@Return_Val& (0+255),w,b
  5763  002596  0012               	return	
  5764  002598                     __end_of_Train_Move_Left_Start:
  5765                           	opt stack 0
  5766                           tblptru	equ	0xFF8
  5767                           tblptrh	equ	0xFF7
  5768                           tblptrl	equ	0xFF6
  5769                           tablat	equ	0xFF5
  5770                           postinc0	equ	0xFEE
  5771                           wreg	equ	0xFE8
  5772                           postdec1	equ	0xFE5
  5773                           fsr1l	equ	0xFE1
  5774                           status	equ	0xFD8
  5775                           
  5776 ;; *************** function _Train_Move_Left_Brake *****************
  5777 ;; Defined at:
  5778 ;;		line 246 in file "../train_move_left.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;		None
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;		None
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      unsigned char 
  5785 ;; Registers used:
  5786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5792 ;;      Params:         0       0       0       0       0       0       0       0       0
  5793 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5795 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5796 ;;Total ram usage:        0 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    6
  5799 ;; This function calls:
  5800 ;;		_GETxAPIxVAL
  5801 ;;		_SETxPWM
  5802 ;; This function is called by:
  5803 ;;		_Train_Path
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text6
  5808  001DEA                     __ptext6:
  5809                           	opt stack 0
  5810  001DEA                     _Train_Move_Left_Brake:
  5811                           	opt stack 22
  5812                           
  5813                           ;train_move_left.c: 248: static char Return_Val = 1;
  5814                           ;train_move_left.c: 249: static unsigned int Train_Move_Wait_Time = 0;
  5815                           ;train_move_left.c: 251: switch(Switch_Train_Move)
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;incstack = 0
  5819  001DEA  D080               	goto	l7109
  5820  001DEC                     l7063:
  5821  001DEC  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5822  001DF0  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5823  001DF4  0E00               	movlw	0
  5824  001DF6  0101               	movlb	1	; () banked
  5825  001DF8  6FFE               	movwf	SETxPWM@direction& (0+255),b
  5826  001DFA  EC88  F014         	call	_SETxPWM	;wreg free
  5827                           
  5828                           ;train_move_left.c: 254: Return_Val = 1;
  5829  001DFE  0E01               	movlw	1
  5830  001E00  0100               	movlb	0	; () banked
  5831  001E02  6FF5               	movwf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;train_move_left.c: 255: if (Train_Move_Pwm_Count >= GETxAPIxVAL(5))
  5835  001E04  0E05               	movlw	5
  5836  001E06  ECA5  F016         	call	_GETxAPIxVAL
  5837  001E0A  0100               	movlb	0	; () banked
  5838  001E0C  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5839  001E0E  5C09               	subwf	_Train_Move_Pwm_Count,w,c
  5840  001E10  0100               	movlb	0	; () banked
  5841  001E12  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5842  001E14  580A               	subwfb	_Train_Move_Pwm_Count+1,w,c
  5843  001E16  A0D8               	btfss	status,0,c
  5844  001E18  D002               	goto	l7071
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;train_move_left.c: 256: {
  5848                           ;train_move_left.c: 257: Switch_Train_Move = 1;
  5849  001E1A  0E01               	movlw	1
  5850  001E1C  D062               	goto	L85
  5851  001E1E                     l7071:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;train_move_left.c: 260: }
  5855                           ;train_move_left.c: 261: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(9))
  5856  001E1E  0E09               	movlw	9
  5857  001E20  ECA5  F016         	call	_GETxAPIxVAL
  5858  001E24  0100               	movlb	0	; () banked
  5859  001E26  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5860  001E28  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  5861  001E2A  0100               	movlb	0	; () banked
  5862  001E2C  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5863  001E2E  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  5864  001E30  A0D8               	btfss	status,0,c
  5865  001E32  D007               	goto	l7077
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;train_move_left.c: 262: {
  5869                           ;train_move_left.c: 263: Train_Move_Pwm_Count--;
  5870  001E34  0609               	decf	_Train_Move_Pwm_Count,f,c
  5871  001E36  A0D8               	btfss	status,0,c
  5872  001E38  060A               	decf	_Train_Move_Pwm_Count+1,f,c
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;train_move_left.c: 264: Train_Move_Pwm_Fast_Count = 0;
  5876  001E3A  0E00               	movlw	0
  5877  001E3C  6E0C               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  5878  001E3E  0E00               	movlw	0
  5879  001E40  6E0B               	movwf	_Train_Move_Pwm_Fast_Count,c
  5880  001E42                     l7077:
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;train_move_left.c: 265: }
  5884                           ;train_move_left.c: 266: Train_Move_Pwm_Fast_Count++;
  5885  001E42  4A0B               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  5886  001E44  2A0C               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  5887                           
  5888                           ;train_move_left.c: 267: break;
  5889  001E46  D05F               	goto	l7111
  5890  001E48                     l7079:
  5891  001E48  0E02               	movlw	2
  5892  001E4A  ECA5  F016         	call	_GETxAPIxVAL
  5893  001E4E  0100               	movlb	0	; () banked
  5894  001E50  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5895  001E52  0100               	movlb	0	; () banked
  5896  001E54  5DE0               	subwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),w,b
  5897  001E56  0100               	movlb	0	; () banked
  5898  001E58  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5899  001E5A  0100               	movlb	0	; () banked
  5900  001E5C  59E1               	subwfb	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  5901  001E5E  A0D8               	btfss	status,0,c
  5902  001E60  D008               	goto	l7083
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;train_move_left.c: 270: {
  5906                           ;train_move_left.c: 271: Switch_Train_Move = 2;
  5907  001E62  0E02               	movlw	2
  5908  001E64  6E23               	movwf	_Switch_Train_Move,c
  5909                           
  5910                           ;train_move_left.c: 272: Train_Move_Wait_Time = 0;
  5911  001E66  0E00               	movlw	0
  5912  001E68  0100               	movlb	0	; () banked
  5913  001E6A  6FE1               	movwf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),b
  5914  001E6C  0E00               	movlw	0
  5915  001E6E  6FE0               	movwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),b
  5916  001E70  D039               	goto	l7105
  5917  001E72                     l7083:
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;train_move_left.c: 275: }
  5921                           ;train_move_left.c: 276: Return_Val = 1;
  5922  001E72  0E01               	movlw	1
  5923  001E74  0100               	movlb	0	; () banked
  5924  001E76  6FF5               	movwf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;train_move_left.c: 277: Train_Move_Wait_Time++;
  5928  001E78  0100               	movlb	0	; () banked
  5929  001E7A  4BE0               	infsnz	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),f,b
  5930  001E7C  2BE1               	incf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;train_move_left.c: 278: Switch_Train_Move = 1;
  5934  001E7E  0E01               	movlw	1
  5935  001E80  6E23               	movwf	_Switch_Train_Move,c
  5936                           
  5937                           ;train_move_left.c: 279: break;
  5938  001E82  D041               	goto	l7111
  5939  001E84                     l7089:
  5940  001E84  0E05               	movlw	5
  5941  001E86  ECA5  F016         	call	_GETxAPIxVAL
  5942  001E8A  C0F9  F1FC         	movff	?_GETxAPIxVAL,SETxPWM@speed
  5943  001E8E  C0FA  F1FD         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  5944  001E92  0E00               	movlw	0
  5945  001E94  0101               	movlb	1	; () banked
  5946  001E96  6FFE               	movwf	SETxPWM@direction& (0+255),b
  5947  001E98  EC88  F014         	call	_SETxPWM	;wreg free
  5948                           
  5949                           ;train_move_left.c: 282: PORTCbits.RC0 = 1;
  5950  001E9C  8082               	bsf	3970,0,c	;volatile
  5951                           
  5952                           ;train_move_left.c: 283: Train_Move_Pwm_Count = GETxAPIxVAL(5);
  5953  001E9E  0E05               	movlw	5
  5954  001EA0  ECA5  F016         	call	_GETxAPIxVAL
  5955  001EA4  C0F9  F009         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  5956  001EA8  C0FA  F00A         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  5957  001EAC  D019               	goto	L86
  5958  001EAE                     l7097:
  5959  001EAE  0E04               	movlw	4
  5960  001EB0  ECA5  F016         	call	_GETxAPIxVAL
  5961  001EB4  0100               	movlb	0	; () banked
  5962  001EB6  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5963  001EB8  0100               	movlb	0	; () banked
  5964  001EBA  5DE0               	subwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),w,b
  5965  001EBC  0100               	movlb	0	; () banked
  5966  001EBE  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5967  001EC0  0100               	movlb	0	; () banked
  5968  001EC2  59E1               	subwfb	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  5969  001EC4  A0D8               	btfss	status,0,c
  5970  001EC6  D009               	goto	l7101
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;train_move_left.c: 289: {
  5974                           ;train_move_left.c: 290: Switch_Train_Move = 0;
  5975  001EC8  0E00               	movlw	0
  5976  001ECA  6E23               	movwf	_Switch_Train_Move,c
  5977                           
  5978                           ;train_move_left.c: 291: Train_Move_Wait_Time = 0;
  5979  001ECC  0E00               	movlw	0
  5980  001ECE  0100               	movlb	0	; () banked
  5981  001ED0  6FE1               	movwf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),b
  5982  001ED2  0E00               	movlw	0
  5983  001ED4  6FE0               	movwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),b
  5984                           
  5985                           ;train_move_left.c: 292: Return_Val = 0;
  5986  001ED6  0E00               	movlw	0
  5987  001ED8  D006               	goto	L75
  5988  001EDA                     l7101:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;train_move_left.c: 294: }
  5992                           ;train_move_left.c: 295: Train_Move_Wait_Time++;
  5993  001EDA  0100               	movlb	0	; () banked
  5994  001EDC  4BE0               	infsnz	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),f,b
  5995  001EDE  2BE1               	incf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  5996  001EE0                     L86:
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;train_move_left.c: 296: Switch_Train_Move = 3;
  6000  001EE0  0E03               	movlw	3
  6001  001EE2                     L85:
  6002  001EE2  6E23               	movwf	_Switch_Train_Move,c
  6003  001EE4                     l7105:
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;train_move_left.c: 297: Return_Val = 1;
  6007  001EE4  0E01               	movlw	1
  6008  001EE6                     L75:
  6009  001EE6  0100               	movlb	0	; () banked
  6010  001EE8  6FF5               	movwf	Train_Move_Left_Brake@Return_Val& (0+255),b
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;train_move_left.c: 301: }
  6014                           
  6015                           ; BSR set to: 0
  6016                           
  6017                           ;train_move_left.c: 300: default : break;
  6018                           
  6019                           ;train_move_left.c: 298: break;
  6020  001EEA  D00D               	goto	l7111
  6021  001EEC                     l7109:
  6022  001EEC  5023               	movf	_Switch_Train_Move,w,c
  6023                           
  6024                           ; Switch size 1, requested type "space"
  6025                           ; Number of cases is 4, Range of values is 0 to 3
  6026                           ; switch strategies available:
  6027                           ; Name         Instructions Cycles
  6028                           ; simple_byte           13     7 (average)
  6029                           ;	Chosen strategy is simple_byte
  6030  001EEE  0A00               	xorlw	0	; case 0
  6031  001EF0  B4D8               	btfsc	status,2,c
  6032  001EF2  D77C               	goto	l7063
  6033  001EF4  0A01               	xorlw	1	; case 1
  6034  001EF6  B4D8               	btfsc	status,2,c
  6035  001EF8  D7A7               	goto	l7079
  6036  001EFA  0A03               	xorlw	3	; case 2
  6037  001EFC  B4D8               	btfsc	status,2,c
  6038  001EFE  D7C2               	goto	l7089
  6039  001F00  0A01               	xorlw	1	; case 3
  6040  001F02  B4D8               	btfsc	status,2,c
  6041  001F04  D7D4               	goto	l7097
  6042  001F06                     l7111:
  6043                           
  6044                           ;train_move_left.c: 303: return(Return_Val);
  6045  001F06  0100               	movlb	0	; () banked
  6046  001F08  51F5               	movf	Train_Move_Left_Brake@Return_Val& (0+255),w,b
  6047  001F0A  0012               	return	
  6048  001F0C                     __end_of_Train_Move_Left_Brake:
  6049                           	opt stack 0
  6050                           tblptru	equ	0xFF8
  6051                           tblptrh	equ	0xFF7
  6052                           tblptrl	equ	0xFF6
  6053                           tablat	equ	0xFF5
  6054                           postinc0	equ	0xFEE
  6055                           wreg	equ	0xFE8
  6056                           postdec1	equ	0xFE5
  6057                           fsr1l	equ	0xFE1
  6058                           status	equ	0xFD8
  6059                           
  6060 ;; *************** function _Right_Mountain_From_The_Right *****************
  6061 ;; Defined at:
  6062 ;;		line 103 in file "../train_move_left.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  rc              1    wreg     unsigned char 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  rc              1    6[BANK0 ] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  1    wreg      unsigned char 
  6069 ;; Registers used:
  6070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6076 ;;      Params:         0       0       0       0       0       0       0       0       0
  6077 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6079 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6080 ;;Total ram usage:        1 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:    6
  6083 ;; This function calls:
  6084 ;;		_GETxAPIxVAL
  6085 ;;		_SETxPWM
  6086 ;; This function is called by:
  6087 ;;		_Train_Path
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text7
  6092  002028                     __ptext7:
  6093                           	opt stack 0
  6094  002028                     _Right_Mountain_From_The_Right:
  6095                           	opt stack 22
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;incstack = 0
  6099                           ;Right_Mountain_From_The_Right@rc stored from wreg
  6100  002028  0100               	movlb	0	; () banked
  6101  00202A  6FFF               	movwf	Right_Mountain_From_The_Right@rc& (0+255),b
  6102                           
  6103                           ;train_move_left.c: 105: static char Return_Val = 1;
  6104                           ;train_move_left.c: 107: switch (Switch_Moutain){
  6105  00202C  D080               	goto	l7265
  6106  00202E                     l7221:
  6107  00202E  0E03               	movlw	3
  6108  002030  0100               	movlb	0	; () banked
  6109  002032  19FF               	xorwf	Right_Mountain_From_The_Right@rc& (0+255),w,b
  6110  002034  A4D8               	btfss	status,2,c
  6111  002036  D002               	goto	l7225
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;train_move_left.c: 109: Switch_Moutain = 1;
  6115  002038  0E01               	movlw	1
  6116  00203A  D00C               	goto	L77
  6117  00203C                     l7225:
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;train_move_left.c: 112: else if(Mountain_Delay_Counter >= GETxAPIxVAL(37)){
  6121  00203C  0E25               	movlw	37
  6122  00203E  ECA5  F016         	call	_GETxAPIxVAL
  6123  002042  0100               	movlb	0	; () banked
  6124  002044  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6125  002046  5C05               	subwf	_Mountain_Delay_Counter,w,c
  6126  002048  0100               	movlb	0	; () banked
  6127  00204A  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6128  00204C  5806               	subwfb	_Mountain_Delay_Counter+1,w,c
  6129  00204E  A0D8               	btfss	status,0,c
  6130  002050  D007               	goto	l7229
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;train_move_left.c: 113: Switch_Moutain = 0;
  6134  002052  0E00               	movlw	0
  6135  002054                     L77:
  6136  002054  6E21               	movwf	_Switch_Moutain,c
  6137                           
  6138                           ;train_move_left.c: 114: Mountain_Delay_Counter = 0;
  6139  002056  0E00               	movlw	0
  6140  002058  6E06               	movwf	_Mountain_Delay_Counter+1,c
  6141  00205A  0E00               	movlw	0
  6142  00205C  6E05               	movwf	_Mountain_Delay_Counter,c
  6143                           
  6144                           ;train_move_left.c: 115: }
  6145  00205E  D06E               	goto	l7267
  6146  002060                     l7229:
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;train_move_left.c: 116: else{
  6150                           ;train_move_left.c: 117: Mountain_Delay_Counter++;
  6151  002060  4A05               	infsnz	_Mountain_Delay_Counter,f,c
  6152  002062  2A06               	incf	_Mountain_Delay_Counter+1,f,c
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;train_move_left.c: 118: }
  6156                           ;train_move_left.c: 119: break;
  6157                           
  6158                           ; BSR set to: 0
  6159  002064  D06B               	goto	l7267
  6160  002066                     l7231:
  6161  002066  0E04               	movlw	4
  6162  002068  0100               	movlb	0	; () banked
  6163  00206A  19FF               	xorwf	Right_Mountain_From_The_Right@rc& (0+255),w,b
  6164  00206C  A4D8               	btfss	status,2,c
  6165  00206E  D02E               	goto	l7247
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;train_move_left.c: 122: SETxPWM(Train_Move_Pwm_Count, 0);
  6169  002070  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6170  002074  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6171  002078  0E00               	movlw	0
  6172  00207A  0101               	movlb	1	; () banked
  6173  00207C  6FFE               	movwf	SETxPWM@direction& (0+255),b
  6174  00207E  EC88  F014         	call	_SETxPWM	;wreg free
  6175                           
  6176                           ;train_move_left.c: 123: if (Train_Move_Pwm_Count <= GETxAPIxVAL(30))
  6177  002082  0E1E               	movlw	30
  6178  002084  ECA5  F016         	call	_GETxAPIxVAL
  6179  002088  5009               	movf	_Train_Move_Pwm_Count,w,c
  6180  00208A  0100               	movlb	0	; () banked
  6181  00208C  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  6182  00208E  500A               	movf	_Train_Move_Pwm_Count+1,w,c
  6183  002090  0100               	movlb	0	; () banked
  6184  002092  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  6185  002094  A0D8               	btfss	status,0,c
  6186  002096  D007               	goto	l7239
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;train_move_left.c: 124: {
  6190                           ;train_move_left.c: 125: Switch_Train_Move = 0;
  6191  002098  0E00               	movlw	0
  6192  00209A  6E23               	movwf	_Switch_Train_Move,c
  6193                           
  6194                           ;train_move_left.c: 126: Switch_Moutain = 0;
  6195  00209C  0E00               	movlw	0
  6196  00209E  6E21               	movwf	_Switch_Moutain,c
  6197                           
  6198                           ;train_move_left.c: 127: Return_Val = 0;
  6199  0020A0  0E00               	movlw	0
  6200  0020A2  0100               	movlb	0	; () banked
  6201  0020A4  6FF4               	movwf	Right_Mountain_From_The_Right@Return_Val& (0+255),b
  6202  0020A6                     l7239:
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;train_move_left.c: 128: }
  6206                           ;train_move_left.c: 129: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(10))
  6207  0020A6  0E0A               	movlw	10
  6208  0020A8  ECA5  F016         	call	_GETxAPIxVAL
  6209  0020AC  0100               	movlb	0	; () banked
  6210  0020AE  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6211  0020B0  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  6212  0020B2  0100               	movlb	0	; () banked
  6213  0020B4  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6214  0020B6  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  6215  0020B8  A0D8               	btfss	status,0,c
  6216  0020BA  D036               	goto	l7261
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;train_move_left.c: 130: {
  6220                           ;train_move_left.c: 131: Train_Move_Pwm_Count--;
  6221  0020BC  0609               	decf	_Train_Move_Pwm_Count,f,c
  6222  0020BE  A0D8               	btfss	status,0,c
  6223  0020C0  060A               	decf	_Train_Move_Pwm_Count+1,f,c
  6224  0020C2                     l7243:
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;train_move_left.c: 132: Train_Move_Pwm_Fast_Count = 0;
  6228  0020C2  0E00               	movlw	0
  6229  0020C4  6E0C               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  6230  0020C6  0E00               	movlw	0
  6231  0020C8  6E0B               	movwf	_Train_Move_Pwm_Fast_Count,c
  6232  0020CA  D02E               	goto	l7261
  6233  0020CC                     l7247:
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;train_move_left.c: 136: else if (rc == 3){
  6237  0020CC  0E03               	movlw	3
  6238  0020CE  0100               	movlb	0	; () banked
  6239  0020D0  19FF               	xorwf	Right_Mountain_From_The_Right@rc& (0+255),w,b
  6240  0020D2  A4D8               	btfss	status,2,c
  6241  0020D4  D033               	goto	l7267
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;train_move_left.c: 137: SETxPWM(Train_Move_Pwm_Count, 0);
  6245  0020D6  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6246  0020DA  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6247  0020DE  0E00               	movlw	0
  6248  0020E0  0101               	movlb	1	; () banked
  6249  0020E2  6FFE               	movwf	SETxPWM@direction& (0+255),b
  6250  0020E4  EC88  F014         	call	_SETxPWM	;wreg free
  6251                           
  6252                           ;train_move_left.c: 138: if (Train_Move_Pwm_Count <= GETxAPIxVAL(8))
  6253  0020E8  0E08               	movlw	8
  6254  0020EA  ECA5  F016         	call	_GETxAPIxVAL
  6255  0020EE  5009               	movf	_Train_Move_Pwm_Count,w,c
  6256  0020F0  0100               	movlb	0	; () banked
  6257  0020F2  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  6258  0020F4  500A               	movf	_Train_Move_Pwm_Count+1,w,c
  6259  0020F6  0100               	movlb	0	; () banked
  6260  0020F8  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  6261  0020FA  A0D8               	btfss	status,0,c
  6262  0020FC  D007               	goto	l7255
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;train_move_left.c: 139: {
  6266                           ;train_move_left.c: 140: Switch_Train_Move = 0;
  6267  0020FE  0E00               	movlw	0
  6268  002100  6E23               	movwf	_Switch_Train_Move,c
  6269                           
  6270                           ;train_move_left.c: 141: Switch_Moutain = 0;
  6271  002102  0E00               	movlw	0
  6272  002104  6E21               	movwf	_Switch_Moutain,c
  6273                           
  6274                           ;train_move_left.c: 142: Return_Val = 0;
  6275  002106  0E00               	movlw	0
  6276  002108  0100               	movlb	0	; () banked
  6277  00210A  6FF4               	movwf	Right_Mountain_From_The_Right@Return_Val& (0+255),b
  6278  00210C                     l7255:
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;train_move_left.c: 143: }
  6282                           ;train_move_left.c: 144: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(10))
  6283  00210C  0E0A               	movlw	10
  6284  00210E  ECA5  F016         	call	_GETxAPIxVAL
  6285  002112  0100               	movlb	0	; () banked
  6286  002114  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6287  002116  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  6288  002118  0100               	movlb	0	; () banked
  6289  00211A  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6290  00211C  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  6291  00211E  A0D8               	btfss	status,0,c
  6292  002120  D003               	goto	l7261
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;train_move_left.c: 145: {
  6296                           ;train_move_left.c: 146: Train_Move_Pwm_Count++;
  6297  002122  4A09               	infsnz	_Train_Move_Pwm_Count,f,c
  6298  002124  2A0A               	incf	_Train_Move_Pwm_Count+1,f,c
  6299  002126  D7CD               	goto	l7243
  6300  002128                     l7261:
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;train_move_left.c: 148: }
  6304                           ;train_move_left.c: 149: Train_Move_Pwm_Fast_Count++;
  6305  002128  4A0B               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  6306  00212A  2A0C               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;train_move_left.c: 155: }
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;train_move_left.c: 154: break;
  6313                           
  6314                           ;train_move_left.c: 153: default:
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;train_move_left.c: 150: }
  6318                           ;train_move_left.c: 151: break;
  6319                           
  6320                           ; BSR set to: 0
  6321  00212C  D007               	goto	l7267
  6322  00212E                     l7265:
  6323  00212E  5021               	movf	_Switch_Moutain,w,c
  6324                           
  6325                           ; Switch size 1, requested type "space"
  6326                           ; Number of cases is 2, Range of values is 0 to 1
  6327                           ; switch strategies available:
  6328                           ; Name         Instructions Cycles
  6329                           ; simple_byte            7     4 (average)
  6330                           ;	Chosen strategy is simple_byte
  6331  002130  0A00               	xorlw	0	; case 0
  6332  002132  B4D8               	btfsc	status,2,c
  6333  002134  D77C               	goto	l7221
  6334  002136  0A01               	xorlw	1	; case 1
  6335  002138  B4D8               	btfsc	status,2,c
  6336  00213A  D795               	goto	l7231
  6337  00213C                     l7267:
  6338                           
  6339                           ;train_move_left.c: 157: return(Return_Val);
  6340  00213C  0100               	movlb	0	; () banked
  6341  00213E  51F4               	movf	Right_Mountain_From_The_Right@Return_Val& (0+255),w,b
  6342  002140  0012               	return	
  6343  002142                     __end_of_Right_Mountain_From_The_Right:
  6344                           	opt stack 0
  6345                           tblptru	equ	0xFF8
  6346                           tblptrh	equ	0xFF7
  6347                           tblptrl	equ	0xFF6
  6348                           tablat	equ	0xFF5
  6349                           postinc0	equ	0xFEE
  6350                           wreg	equ	0xFE8
  6351                           postdec1	equ	0xFE5
  6352                           fsr1l	equ	0xFE1
  6353                           status	equ	0xFD8
  6354                           
  6355 ;; *************** function _Right_Mountain_From_The_Left *****************
  6356 ;; Defined at:
  6357 ;;		line 175 in file "../train_move_right.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;  rc              1    wreg     unsigned char 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;  rc              1    6[BANK0 ] unsigned char 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  1    wreg      unsigned char 
  6364 ;; Registers used:
  6365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6371 ;;      Params:         0       0       0       0       0       0       0       0       0
  6372 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6374 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6375 ;;Total ram usage:        1 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:    6
  6378 ;; This function calls:
  6379 ;;		_GETxAPIxVAL
  6380 ;;		_SETxPWM
  6381 ;; This function is called by:
  6382 ;;		_Train_Path
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text8
  6387  002142                     __ptext8:
  6388                           	opt stack 0
  6389  002142                     _Right_Mountain_From_The_Left:
  6390                           	opt stack 22
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;incstack = 0
  6394                           ;Right_Mountain_From_The_Left@rc stored from wreg
  6395  002142  0100               	movlb	0	; () banked
  6396  002144  6FFF               	movwf	Right_Mountain_From_The_Left@rc& (0+255),b
  6397                           
  6398                           ;train_move_right.c: 177: static char Return_Val = 1;
  6399                           ;train_move_right.c: 179: switch (Switch_Moutain){
  6400  002146  D080               	goto	l7213
  6401  002148                     l7169:
  6402  002148  0E04               	movlw	4
  6403  00214A  0100               	movlb	0	; () banked
  6404  00214C  19FF               	xorwf	Right_Mountain_From_The_Left@rc& (0+255),w,b
  6405  00214E  A4D8               	btfss	status,2,c
  6406  002150  D002               	goto	l7173
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;train_move_right.c: 181: Switch_Moutain = 1;
  6410  002152  0E01               	movlw	1
  6411  002154  D00C               	goto	L78
  6412  002156                     l7173:
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;train_move_right.c: 184: else if(Mountain_Delay_Counter >= GETxAPIxVAL(40)){
  6416  002156  0E28               	movlw	40
  6417  002158  ECA5  F016         	call	_GETxAPIxVAL
  6418  00215C  0100               	movlb	0	; () banked
  6419  00215E  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6420  002160  5C05               	subwf	_Mountain_Delay_Counter,w,c
  6421  002162  0100               	movlb	0	; () banked
  6422  002164  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6423  002166  5806               	subwfb	_Mountain_Delay_Counter+1,w,c
  6424  002168  A0D8               	btfss	status,0,c
  6425  00216A  D007               	goto	l7177
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;train_move_right.c: 185: Switch_Moutain = 0;
  6429  00216C  0E00               	movlw	0
  6430  00216E                     L78:
  6431  00216E  6E21               	movwf	_Switch_Moutain,c
  6432                           
  6433                           ;train_move_right.c: 186: Mountain_Delay_Counter = 0;
  6434  002170  0E00               	movlw	0
  6435  002172  6E06               	movwf	_Mountain_Delay_Counter+1,c
  6436  002174  0E00               	movlw	0
  6437  002176  6E05               	movwf	_Mountain_Delay_Counter,c
  6438                           
  6439                           ;train_move_right.c: 187: }
  6440  002178  D06E               	goto	l7215
  6441  00217A                     l7177:
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;train_move_right.c: 188: else{
  6445                           ;train_move_right.c: 189: Mountain_Delay_Counter++;
  6446  00217A  4A05               	infsnz	_Mountain_Delay_Counter,f,c
  6447  00217C  2A06               	incf	_Mountain_Delay_Counter+1,f,c
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;train_move_right.c: 190: }
  6451                           ;train_move_right.c: 191: break;
  6452                           
  6453                           ; BSR set to: 0
  6454  00217E  D06B               	goto	l7215
  6455  002180                     l7179:
  6456  002180  0E03               	movlw	3
  6457  002182  0100               	movlb	0	; () banked
  6458  002184  19FF               	xorwf	Right_Mountain_From_The_Left@rc& (0+255),w,b
  6459  002186  A4D8               	btfss	status,2,c
  6460  002188  D02D               	goto	l7195
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;train_move_right.c: 194: SETxPWM(Train_Move_Pwm_Count, 1);
  6464  00218A  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6465  00218E  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6466  002192  0E01               	movlw	1
  6467  002194  0101               	movlb	1	; () banked
  6468  002196  6FFE               	movwf	SETxPWM@direction& (0+255),b
  6469  002198  EC88  F014         	call	_SETxPWM	;wreg free
  6470                           
  6471                           ;train_move_right.c: 195: if (Train_Move_Pwm_Count >= GETxAPIxVAL(31))
  6472  00219C  0E1F               	movlw	31
  6473  00219E  ECA5  F016         	call	_GETxAPIxVAL
  6474  0021A2  0100               	movlb	0	; () banked
  6475  0021A4  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6476  0021A6  5C09               	subwf	_Train_Move_Pwm_Count,w,c
  6477  0021A8  0100               	movlb	0	; () banked
  6478  0021AA  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6479  0021AC  580A               	subwfb	_Train_Move_Pwm_Count+1,w,c
  6480  0021AE  A0D8               	btfss	status,0,c
  6481  0021B0  D007               	goto	l7187
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;train_move_right.c: 196: {
  6485                           ;train_move_right.c: 197: Switch_Train_Move = 0;
  6486  0021B2  0E00               	movlw	0
  6487  0021B4  6E23               	movwf	_Switch_Train_Move,c
  6488                           
  6489                           ;train_move_right.c: 198: Switch_Moutain = 0;
  6490  0021B6  0E00               	movlw	0
  6491  0021B8  6E21               	movwf	_Switch_Moutain,c
  6492                           
  6493                           ;train_move_right.c: 199: Return_Val = 0;
  6494  0021BA  0E00               	movlw	0
  6495  0021BC  0100               	movlb	0	; () banked
  6496  0021BE  6FF3               	movwf	Right_Mountain_From_The_Left@Return_Val& (0+255),b
  6497  0021C0                     l7187:
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;train_move_right.c: 200: }
  6501                           ;train_move_right.c: 201: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(10))
  6502  0021C0  0E0A               	movlw	10
  6503  0021C2  ECA5  F016         	call	_GETxAPIxVAL
  6504  0021C6  0100               	movlb	0	; () banked
  6505  0021C8  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6506  0021CA  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  6507  0021CC  0100               	movlb	0	; () banked
  6508  0021CE  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6509  0021D0  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  6510  0021D2  A0D8               	btfss	status,0,c
  6511  0021D4  D036               	goto	l7209
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;train_move_right.c: 202: {
  6515                           ;train_move_right.c: 203: Train_Move_Pwm_Count++;
  6516  0021D6  4A09               	infsnz	_Train_Move_Pwm_Count,f,c
  6517  0021D8  2A0A               	incf	_Train_Move_Pwm_Count+1,f,c
  6518  0021DA                     l7191:
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;train_move_right.c: 204: Train_Move_Pwm_Fast_Count = 0;
  6522  0021DA  0E00               	movlw	0
  6523  0021DC  6E0C               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  6524  0021DE  0E00               	movlw	0
  6525  0021E0  6E0B               	movwf	_Train_Move_Pwm_Fast_Count,c
  6526  0021E2  D02F               	goto	l7209
  6527  0021E4                     l7195:
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;train_move_right.c: 208: else if (rc == 4){
  6531  0021E4  0E04               	movlw	4
  6532  0021E6  0100               	movlb	0	; () banked
  6533  0021E8  19FF               	xorwf	Right_Mountain_From_The_Left@rc& (0+255),w,b
  6534  0021EA  A4D8               	btfss	status,2,c
  6535  0021EC  D034               	goto	l7215
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;train_move_right.c: 209: SETxPWM(Train_Move_Pwm_Count, 1);
  6539  0021EE  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6540  0021F2  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6541  0021F6  0E01               	movlw	1
  6542  0021F8  0101               	movlb	1	; () banked
  6543  0021FA  6FFE               	movwf	SETxPWM@direction& (0+255),b
  6544  0021FC  EC88  F014         	call	_SETxPWM	;wreg free
  6545                           
  6546                           ;train_move_right.c: 210: if (Train_Move_Pwm_Count >= GETxAPIxVAL(7))
  6547  002200  0E07               	movlw	7
  6548  002202  ECA5  F016         	call	_GETxAPIxVAL
  6549  002206  0100               	movlb	0	; () banked
  6550  002208  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6551  00220A  5C09               	subwf	_Train_Move_Pwm_Count,w,c
  6552  00220C  0100               	movlb	0	; () banked
  6553  00220E  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6554  002210  580A               	subwfb	_Train_Move_Pwm_Count+1,w,c
  6555  002212  A0D8               	btfss	status,0,c
  6556  002214  D007               	goto	l7203
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;train_move_right.c: 211: {
  6560                           ;train_move_right.c: 212: Switch_Train_Move = 0;
  6561  002216  0E00               	movlw	0
  6562  002218  6E23               	movwf	_Switch_Train_Move,c
  6563                           
  6564                           ;train_move_right.c: 213: Switch_Moutain = 0;
  6565  00221A  0E00               	movlw	0
  6566  00221C  6E21               	movwf	_Switch_Moutain,c
  6567                           
  6568                           ;train_move_right.c: 214: Return_Val = 0;
  6569  00221E  0E00               	movlw	0
  6570  002220  0100               	movlb	0	; () banked
  6571  002222  6FF3               	movwf	Right_Mountain_From_The_Left@Return_Val& (0+255),b
  6572  002224                     l7203:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;train_move_right.c: 215: }
  6576                           ;train_move_right.c: 216: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(10))
  6577  002224  0E0A               	movlw	10
  6578  002226  ECA5  F016         	call	_GETxAPIxVAL
  6579  00222A  0100               	movlb	0	; () banked
  6580  00222C  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6581  00222E  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  6582  002230  0100               	movlb	0	; () banked
  6583  002232  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6584  002234  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  6585  002236  A0D8               	btfss	status,0,c
  6586  002238  D004               	goto	l7209
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;train_move_right.c: 217: {
  6590                           ;train_move_right.c: 218: Train_Move_Pwm_Count--;
  6591  00223A  0609               	decf	_Train_Move_Pwm_Count,f,c
  6592  00223C  A0D8               	btfss	status,0,c
  6593  00223E  060A               	decf	_Train_Move_Pwm_Count+1,f,c
  6594  002240  D7CC               	goto	l7191
  6595  002242                     l7209:
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;train_move_right.c: 220: }
  6599                           ;train_move_right.c: 221: Train_Move_Pwm_Fast_Count++;
  6600  002242  4A0B               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  6601  002244  2A0C               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  6602                           
  6603                           ; BSR set to: 0
  6604                           ;train_move_right.c: 227: }
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;train_move_right.c: 226: break;
  6608                           
  6609                           ;train_move_right.c: 225: default:
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;train_move_right.c: 222: }
  6613                           ;train_move_right.c: 223: break;
  6614                           
  6615                           ; BSR set to: 0
  6616  002246  D007               	goto	l7215
  6617  002248                     l7213:
  6618  002248  5021               	movf	_Switch_Moutain,w,c
  6619                           
  6620                           ; Switch size 1, requested type "space"
  6621                           ; Number of cases is 2, Range of values is 0 to 1
  6622                           ; switch strategies available:
  6623                           ; Name         Instructions Cycles
  6624                           ; simple_byte            7     4 (average)
  6625                           ;	Chosen strategy is simple_byte
  6626  00224A  0A00               	xorlw	0	; case 0
  6627  00224C  B4D8               	btfsc	status,2,c
  6628  00224E  D77C               	goto	l7169
  6629  002250  0A01               	xorlw	1	; case 1
  6630  002252  B4D8               	btfsc	status,2,c
  6631  002254  D795               	goto	l7179
  6632  002256                     l7215:
  6633                           
  6634                           ;train_move_right.c: 229: return(Return_Val);
  6635  002256  0100               	movlb	0	; () banked
  6636  002258  51F3               	movf	Right_Mountain_From_The_Left@Return_Val& (0+255),w,b
  6637  00225A  0012               	return	
  6638  00225C                     __end_of_Right_Mountain_From_The_Left:
  6639                           	opt stack 0
  6640                           tblptru	equ	0xFF8
  6641                           tblptrh	equ	0xFF7
  6642                           tblptrl	equ	0xFF6
  6643                           tablat	equ	0xFF5
  6644                           postinc0	equ	0xFEE
  6645                           wreg	equ	0xFE8
  6646                           postdec1	equ	0xFE5
  6647                           fsr1l	equ	0xFE1
  6648                           status	equ	0xFD8
  6649                           
  6650 ;; *************** function _Left_Mountain_From_The_Right *****************
  6651 ;; Defined at:
  6652 ;;		line 174 in file "../train_move_left.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  rc              1    wreg     unsigned char 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  rc              1    6[BANK0 ] unsigned char 
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      unsigned char 
  6659 ;; Registers used:
  6660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6666 ;;      Params:         0       0       0       0       0       0       0       0       0
  6667 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6669 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6670 ;;Total ram usage:        1 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; Hardware stack levels required when called:    6
  6673 ;; This function calls:
  6674 ;;		_GETxAPIxVAL
  6675 ;;		_SETxPWM
  6676 ;; This function is called by:
  6677 ;;		_Train_Path
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           	psect	text9
  6682  002598                     __ptext9:
  6683                           	opt stack 0
  6684  002598                     _Left_Mountain_From_The_Right:
  6685                           	opt stack 22
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;incstack = 0
  6689                           ;Left_Mountain_From_The_Right@rc stored from wreg
  6690  002598  0100               	movlb	0	; () banked
  6691  00259A  6FFF               	movwf	Left_Mountain_From_The_Right@rc& (0+255),b
  6692                           
  6693                           ;train_move_left.c: 176: static char Return_Val = 1;
  6694                           ;train_move_left.c: 178: switch (Switch_Moutain){
  6695  00259C  D07C               	goto	l7317
  6696  00259E                     l7273:
  6697  00259E  0100               	movlb	0	; () banked
  6698  0025A0  05FF               	decf	Left_Mountain_From_The_Right@rc& (0+255),w,b
  6699  0025A2  B4D8               	btfsc	status,2,c
  6700  0025A4  D00B               	goto	l7279
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;train_move_left.c: 183: else if(Mountain_Delay_Counter >= GETxAPIxVAL(42)){
  6704                           
  6705                           ; BSR set to: 0
  6706                           
  6707                           ;train_move_left.c: 182: }
  6708                           
  6709                           ;train_move_left.c: 181: Mountain_Delay_Counter = 0;
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;train_move_left.c: 180: Switch_Moutain = 1;
  6713  0025A6  0E2A               	movlw	42
  6714  0025A8  ECA5  F016         	call	_GETxAPIxVAL
  6715  0025AC  0100               	movlb	0	; () banked
  6716  0025AE  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6717  0025B0  5C05               	subwf	_Mountain_Delay_Counter,w,c
  6718  0025B2  0100               	movlb	0	; () banked
  6719  0025B4  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6720  0025B6  5806               	subwfb	_Mountain_Delay_Counter+1,w,c
  6721  0025B8  A0D8               	btfss	status,0,c
  6722  0025BA  D007               	goto	l7281
  6723  0025BC                     l7279:
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;train_move_left.c: 184: Switch_Moutain = 1;
  6727  0025BC  0E01               	movlw	1
  6728  0025BE  6E21               	movwf	_Switch_Moutain,c
  6729                           
  6730                           ;train_move_left.c: 185: Mountain_Delay_Counter = 0;
  6731  0025C0  0E00               	movlw	0
  6732  0025C2  6E06               	movwf	_Mountain_Delay_Counter+1,c
  6733  0025C4  0E00               	movlw	0
  6734  0025C6  6E05               	movwf	_Mountain_Delay_Counter,c
  6735                           
  6736                           ;train_move_left.c: 186: }
  6737  0025C8  D06D               	goto	l7319
  6738  0025CA                     l7281:
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;train_move_left.c: 187: else{
  6742                           ;train_move_left.c: 188: Mountain_Delay_Counter++;
  6743  0025CA  4A05               	infsnz	_Mountain_Delay_Counter,f,c
  6744  0025CC  2A06               	incf	_Mountain_Delay_Counter+1,f,c
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;train_move_left.c: 189: }
  6748                           ;train_move_left.c: 190: break;
  6749                           
  6750                           ; BSR set to: 0
  6751  0025CE  D06A               	goto	l7319
  6752  0025D0                     l7283:
  6753  0025D0  0E02               	movlw	2
  6754  0025D2  0100               	movlb	0	; () banked
  6755  0025D4  19FF               	xorwf	Left_Mountain_From_The_Right@rc& (0+255),w,b
  6756  0025D6  A4D8               	btfss	status,2,c
  6757  0025D8  D02D               	goto	l7299
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;train_move_left.c: 193: SETxPWM(Train_Move_Pwm_Count, 0);
  6761  0025DA  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6762  0025DE  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6763  0025E2  0E00               	movlw	0
  6764  0025E4  0101               	movlb	1	; () banked
  6765  0025E6  6FFE               	movwf	SETxPWM@direction& (0+255),b
  6766  0025E8  EC88  F014         	call	_SETxPWM	;wreg free
  6767                           
  6768                           ;train_move_left.c: 194: if (Train_Move_Pwm_Count >= GETxAPIxVAL(36))
  6769  0025EC  0E24               	movlw	36
  6770  0025EE  ECA5  F016         	call	_GETxAPIxVAL
  6771  0025F2  0100               	movlb	0	; () banked
  6772  0025F4  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6773  0025F6  5C09               	subwf	_Train_Move_Pwm_Count,w,c
  6774  0025F8  0100               	movlb	0	; () banked
  6775  0025FA  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6776  0025FC  580A               	subwfb	_Train_Move_Pwm_Count+1,w,c
  6777  0025FE  A0D8               	btfss	status,0,c
  6778  002600  D007               	goto	l7291
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;train_move_left.c: 195: {
  6782                           ;train_move_left.c: 196: Switch_Train_Move = 0;
  6783  002602  0E00               	movlw	0
  6784  002604  6E23               	movwf	_Switch_Train_Move,c
  6785                           
  6786                           ;train_move_left.c: 197: Switch_Moutain = 0;
  6787  002606  0E00               	movlw	0
  6788  002608  6E21               	movwf	_Switch_Moutain,c
  6789                           
  6790                           ;train_move_left.c: 198: Return_Val = 0;
  6791  00260A  0E00               	movlw	0
  6792  00260C  0100               	movlb	0	; () banked
  6793  00260E  6FF2               	movwf	Left_Mountain_From_The_Right@Return_Val& (0+255),b
  6794  002610                     l7291:
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;train_move_left.c: 199: }
  6798                           ;train_move_left.c: 200: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(10))
  6799  002610  0E0A               	movlw	10
  6800  002612  ECA5  F016         	call	_GETxAPIxVAL
  6801  002616  0100               	movlb	0	; () banked
  6802  002618  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6803  00261A  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  6804  00261C  0100               	movlb	0	; () banked
  6805  00261E  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6806  002620  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  6807  002622  A0D8               	btfss	status,0,c
  6808  002624  D035               	goto	l7313
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;train_move_left.c: 201: {
  6812                           ;train_move_left.c: 202: Train_Move_Pwm_Count++;
  6813  002626  4A09               	infsnz	_Train_Move_Pwm_Count,f,c
  6814  002628  2A0A               	incf	_Train_Move_Pwm_Count+1,f,c
  6815  00262A                     l7295:
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;train_move_left.c: 203: Train_Move_Pwm_Fast_Count = 0;
  6819  00262A  0E00               	movlw	0
  6820  00262C  6E0C               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  6821  00262E  0E00               	movlw	0
  6822  002630  6E0B               	movwf	_Train_Move_Pwm_Fast_Count,c
  6823  002632  D02E               	goto	l7313
  6824  002634                     l7299:
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;train_move_left.c: 207: else if (rc == 1){
  6828  002634  0100               	movlb	0	; () banked
  6829  002636  05FF               	decf	Left_Mountain_From_The_Right@rc& (0+255),w,b
  6830  002638  A4D8               	btfss	status,2,c
  6831  00263A  D034               	goto	l7319
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;train_move_left.c: 208: SETxPWM(Train_Move_Pwm_Count, 0);
  6835  00263C  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6836  002640  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6837  002644  0E00               	movlw	0
  6838  002646  0101               	movlb	1	; () banked
  6839  002648  6FFE               	movwf	SETxPWM@direction& (0+255),b
  6840  00264A  EC88  F014         	call	_SETxPWM	;wreg free
  6841                           
  6842                           ;train_move_left.c: 209: if (Train_Move_Pwm_Count <= GETxAPIxVAL(8))
  6843  00264E  0E08               	movlw	8
  6844  002650  ECA5  F016         	call	_GETxAPIxVAL
  6845  002654  5009               	movf	_Train_Move_Pwm_Count,w,c
  6846  002656  0100               	movlb	0	; () banked
  6847  002658  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  6848  00265A  500A               	movf	_Train_Move_Pwm_Count+1,w,c
  6849  00265C  0100               	movlb	0	; () banked
  6850  00265E  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  6851  002660  A0D8               	btfss	status,0,c
  6852  002662  D007               	goto	l7307
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;train_move_left.c: 210: {
  6856                           ;train_move_left.c: 211: Switch_Train_Move = 0;
  6857  002664  0E00               	movlw	0
  6858  002666  6E23               	movwf	_Switch_Train_Move,c
  6859                           
  6860                           ;train_move_left.c: 212: Switch_Moutain = 0;
  6861  002668  0E00               	movlw	0
  6862  00266A  6E21               	movwf	_Switch_Moutain,c
  6863                           
  6864                           ;train_move_left.c: 213: Return_Val = 0;
  6865  00266C  0E00               	movlw	0
  6866  00266E  0100               	movlb	0	; () banked
  6867  002670  6FF2               	movwf	Left_Mountain_From_The_Right@Return_Val& (0+255),b
  6868  002672                     l7307:
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;train_move_left.c: 214: }
  6872                           ;train_move_left.c: 215: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(10))
  6873  002672  0E0A               	movlw	10
  6874  002674  ECA5  F016         	call	_GETxAPIxVAL
  6875  002678  0100               	movlb	0	; () banked
  6876  00267A  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6877  00267C  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  6878  00267E  0100               	movlb	0	; () banked
  6879  002680  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6880  002682  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  6881  002684  A0D8               	btfss	status,0,c
  6882  002686  D004               	goto	l7313
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;train_move_left.c: 216: {
  6886                           ;train_move_left.c: 217: Train_Move_Pwm_Count--;
  6887  002688  0609               	decf	_Train_Move_Pwm_Count,f,c
  6888  00268A  A0D8               	btfss	status,0,c
  6889  00268C  060A               	decf	_Train_Move_Pwm_Count+1,f,c
  6890  00268E  D7CD               	goto	l7295
  6891  002690                     l7313:
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;train_move_left.c: 219: }
  6895                           ;train_move_left.c: 220: Train_Move_Pwm_Fast_Count++;
  6896  002690  4A0B               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  6897  002692  2A0C               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;train_move_left.c: 226: }
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;train_move_left.c: 225: break;
  6904                           
  6905                           ;train_move_left.c: 224: default:
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;train_move_left.c: 221: }
  6909                           ;train_move_left.c: 222: break;
  6910                           
  6911                           ; BSR set to: 0
  6912  002694  D007               	goto	l7319
  6913  002696                     l7317:
  6914  002696  5021               	movf	_Switch_Moutain,w,c
  6915                           
  6916                           ; Switch size 1, requested type "space"
  6917                           ; Number of cases is 2, Range of values is 0 to 1
  6918                           ; switch strategies available:
  6919                           ; Name         Instructions Cycles
  6920                           ; simple_byte            7     4 (average)
  6921                           ;	Chosen strategy is simple_byte
  6922  002698  0A00               	xorlw	0	; case 0
  6923  00269A  B4D8               	btfsc	status,2,c
  6924  00269C  D780               	goto	l7273
  6925  00269E  0A01               	xorlw	1	; case 1
  6926  0026A0  B4D8               	btfsc	status,2,c
  6927  0026A2  D796               	goto	l7283
  6928  0026A4                     l7319:
  6929                           
  6930                           ;train_move_left.c: 228: return(Return_Val);
  6931  0026A4  0100               	movlb	0	; () banked
  6932  0026A6  51F2               	movf	Left_Mountain_From_The_Right@Return_Val& (0+255),w,b
  6933  0026A8  0012               	return	
  6934  0026AA                     __end_of_Left_Mountain_From_The_Right:
  6935                           	opt stack 0
  6936                           tblptru	equ	0xFF8
  6937                           tblptrh	equ	0xFF7
  6938                           tblptrl	equ	0xFF6
  6939                           tablat	equ	0xFF5
  6940                           postinc0	equ	0xFEE
  6941                           wreg	equ	0xFE8
  6942                           postdec1	equ	0xFE5
  6943                           fsr1l	equ	0xFE1
  6944                           status	equ	0xFD8
  6945                           
  6946 ;; *************** function _Left_Mountain_From_The_Left *****************
  6947 ;; Defined at:
  6948 ;;		line 104 in file "../train_move_right.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  rc              1    wreg     unsigned char 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  rc              1    6[BANK0 ] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      unsigned char 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0
  6963 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6965 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6966 ;;Total ram usage:        1 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    6
  6969 ;; This function calls:
  6970 ;;		_GETxAPIxVAL
  6971 ;;		_SETxPWM
  6972 ;; This function is called by:
  6973 ;;		_Train_Path
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text10
  6978  002372                     __ptext10:
  6979                           	opt stack 0
  6980  002372                     _Left_Mountain_From_The_Left:
  6981                           	opt stack 22
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;incstack = 0
  6985                           ;Left_Mountain_From_The_Left@rc stored from wreg
  6986  002372  0100               	movlb	0	; () banked
  6987  002374  6FFF               	movwf	Left_Mountain_From_The_Left@rc& (0+255),b
  6988                           
  6989                           ;train_move_right.c: 106: static char Return_Val = 1;
  6990                           ;train_move_right.c: 108: switch (Switch_Moutain){
  6991  002376  D07D               	goto	l7161
  6992  002378                     l7117:
  6993  002378  0E02               	movlw	2
  6994  00237A  0100               	movlb	0	; () banked
  6995  00237C  19FF               	xorwf	Left_Mountain_From_The_Left@rc& (0+255),w,b
  6996  00237E  B4D8               	btfsc	status,2,c
  6997  002380  D00B               	goto	l7123
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;train_move_right.c: 113: else if(Mountain_Delay_Counter >= GETxAPIxVAL(43)){
  7001                           
  7002                           ; BSR set to: 0
  7003                           
  7004                           ;train_move_right.c: 112: }
  7005                           
  7006                           ;train_move_right.c: 111: Mountain_Delay_Counter = 0;
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;train_move_right.c: 110: Switch_Moutain = 1;
  7010  002382  0E2B               	movlw	43
  7011  002384  ECA5  F016         	call	_GETxAPIxVAL
  7012  002388  0100               	movlb	0	; () banked
  7013  00238A  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  7014  00238C  5C05               	subwf	_Mountain_Delay_Counter,w,c
  7015  00238E  0100               	movlb	0	; () banked
  7016  002390  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  7017  002392  5806               	subwfb	_Mountain_Delay_Counter+1,w,c
  7018  002394  A0D8               	btfss	status,0,c
  7019  002396  D007               	goto	l7125
  7020  002398                     l7123:
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;train_move_right.c: 114: Switch_Moutain = 1;
  7024  002398  0E01               	movlw	1
  7025  00239A  6E21               	movwf	_Switch_Moutain,c
  7026                           
  7027                           ;train_move_right.c: 115: Mountain_Delay_Counter = 0;
  7028  00239C  0E00               	movlw	0
  7029  00239E  6E06               	movwf	_Mountain_Delay_Counter+1,c
  7030  0023A0  0E00               	movlw	0
  7031  0023A2  6E05               	movwf	_Mountain_Delay_Counter,c
  7032                           
  7033                           ;train_move_right.c: 116: }
  7034  0023A4  D06D               	goto	l7163
  7035  0023A6                     l7125:
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;train_move_right.c: 117: else{
  7039                           ;train_move_right.c: 118: Mountain_Delay_Counter++;
  7040  0023A6  4A05               	infsnz	_Mountain_Delay_Counter,f,c
  7041  0023A8  2A06               	incf	_Mountain_Delay_Counter+1,f,c
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;train_move_right.c: 119: }
  7045                           ;train_move_right.c: 120: break;
  7046                           
  7047                           ; BSR set to: 0
  7048  0023AA  D06A               	goto	l7163
  7049  0023AC                     l7127:
  7050  0023AC  0100               	movlb	0	; () banked
  7051  0023AE  05FF               	decf	Left_Mountain_From_The_Left@rc& (0+255),w,b
  7052  0023B0  A4D8               	btfss	status,2,c
  7053  0023B2  D02E               	goto	l7143
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;train_move_right.c: 123: SETxPWM(Train_Move_Pwm_Count, 1);
  7057  0023B4  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  7058  0023B8  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  7059  0023BC  0E01               	movlw	1
  7060  0023BE  0101               	movlb	1	; () banked
  7061  0023C0  6FFE               	movwf	SETxPWM@direction& (0+255),b
  7062  0023C2  EC88  F014         	call	_SETxPWM	;wreg free
  7063                           
  7064                           ;train_move_right.c: 124: if (Train_Move_Pwm_Count >= GETxAPIxVAL(33))
  7065  0023C6  0E21               	movlw	33
  7066  0023C8  ECA5  F016         	call	_GETxAPIxVAL
  7067  0023CC  0100               	movlb	0	; () banked
  7068  0023CE  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  7069  0023D0  5C09               	subwf	_Train_Move_Pwm_Count,w,c
  7070  0023D2  0100               	movlb	0	; () banked
  7071  0023D4  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  7072  0023D6  580A               	subwfb	_Train_Move_Pwm_Count+1,w,c
  7073  0023D8  A0D8               	btfss	status,0,c
  7074  0023DA  D007               	goto	l7135
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;train_move_right.c: 125: {
  7078                           ;train_move_right.c: 126: Switch_Train_Move = 0;
  7079  0023DC  0E00               	movlw	0
  7080  0023DE  6E23               	movwf	_Switch_Train_Move,c
  7081                           
  7082                           ;train_move_right.c: 127: Switch_Moutain = 0;
  7083  0023E0  0E00               	movlw	0
  7084  0023E2  6E21               	movwf	_Switch_Moutain,c
  7085                           
  7086                           ;train_move_right.c: 128: Return_Val = 0;
  7087  0023E4  0E00               	movlw	0
  7088  0023E6  0100               	movlb	0	; () banked
  7089  0023E8  6FF1               	movwf	Left_Mountain_From_The_Left@Return_Val& (0+255),b
  7090  0023EA                     l7135:
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;train_move_right.c: 129: }
  7094                           ;train_move_right.c: 130: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(10))
  7095  0023EA  0E0A               	movlw	10
  7096  0023EC  ECA5  F016         	call	_GETxAPIxVAL
  7097  0023F0  0100               	movlb	0	; () banked
  7098  0023F2  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  7099  0023F4  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  7100  0023F6  0100               	movlb	0	; () banked
  7101  0023F8  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  7102  0023FA  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  7103  0023FC  A0D8               	btfss	status,0,c
  7104  0023FE  D036               	goto	l7157
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;train_move_right.c: 131: {
  7108                           ;train_move_right.c: 132: Train_Move_Pwm_Count--;
  7109  002400  0609               	decf	_Train_Move_Pwm_Count,f,c
  7110  002402  A0D8               	btfss	status,0,c
  7111  002404  060A               	decf	_Train_Move_Pwm_Count+1,f,c
  7112  002406                     l7139:
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;train_move_right.c: 133: Train_Move_Pwm_Fast_Count = 0;
  7116  002406  0E00               	movlw	0
  7117  002408  6E0C               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  7118  00240A  0E00               	movlw	0
  7119  00240C  6E0B               	movwf	_Train_Move_Pwm_Fast_Count,c
  7120  00240E  D02E               	goto	l7157
  7121  002410                     l7143:
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;train_move_right.c: 137: else if (rc == 2){
  7125  002410  0E02               	movlw	2
  7126  002412  0100               	movlb	0	; () banked
  7127  002414  19FF               	xorwf	Left_Mountain_From_The_Left@rc& (0+255),w,b
  7128  002416  A4D8               	btfss	status,2,c
  7129  002418  D033               	goto	l7163
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;train_move_right.c: 138: SETxPWM(Train_Move_Pwm_Count, 1);
  7133  00241A  C009  F1FC         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  7134  00241E  C00A  F1FD         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  7135  002422  0E01               	movlw	1
  7136  002424  0101               	movlb	1	; () banked
  7137  002426  6FFE               	movwf	SETxPWM@direction& (0+255),b
  7138  002428  EC88  F014         	call	_SETxPWM	;wreg free
  7139                           
  7140                           ;train_move_right.c: 139: if (Train_Move_Pwm_Count <= GETxAPIxVAL(7))
  7141  00242C  0E07               	movlw	7
  7142  00242E  ECA5  F016         	call	_GETxAPIxVAL
  7143  002432  5009               	movf	_Train_Move_Pwm_Count,w,c
  7144  002434  0100               	movlb	0	; () banked
  7145  002436  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  7146  002438  500A               	movf	_Train_Move_Pwm_Count+1,w,c
  7147  00243A  0100               	movlb	0	; () banked
  7148  00243C  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  7149  00243E  A0D8               	btfss	status,0,c
  7150  002440  D007               	goto	l7151
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;train_move_right.c: 140: {
  7154                           ;train_move_right.c: 141: Switch_Train_Move = 0;
  7155  002442  0E00               	movlw	0
  7156  002444  6E23               	movwf	_Switch_Train_Move,c
  7157                           
  7158                           ;train_move_right.c: 142: Switch_Moutain = 0;
  7159  002446  0E00               	movlw	0
  7160  002448  6E21               	movwf	_Switch_Moutain,c
  7161                           
  7162                           ;train_move_right.c: 143: Return_Val = 0;
  7163  00244A  0E00               	movlw	0
  7164  00244C  0100               	movlb	0	; () banked
  7165  00244E  6FF1               	movwf	Left_Mountain_From_The_Left@Return_Val& (0+255),b
  7166  002450                     l7151:
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;train_move_right.c: 144: }
  7170                           ;train_move_right.c: 145: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(10))
  7171  002450  0E0A               	movlw	10
  7172  002452  ECA5  F016         	call	_GETxAPIxVAL
  7173  002456  0100               	movlb	0	; () banked
  7174  002458  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  7175  00245A  5C0B               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  7176  00245C  0100               	movlb	0	; () banked
  7177  00245E  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  7178  002460  580C               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  7179  002462  A0D8               	btfss	status,0,c
  7180  002464  D003               	goto	l7157
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;train_move_right.c: 146: {
  7184                           ;train_move_right.c: 147: Train_Move_Pwm_Count++;
  7185  002466  4A09               	infsnz	_Train_Move_Pwm_Count,f,c
  7186  002468  2A0A               	incf	_Train_Move_Pwm_Count+1,f,c
  7187  00246A  D7CD               	goto	l7139
  7188  00246C                     l7157:
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;train_move_right.c: 149: }
  7192                           ;train_move_right.c: 150: Train_Move_Pwm_Fast_Count++;
  7193  00246C  4A0B               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  7194  00246E  2A0C               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;train_move_right.c: 156: }
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;train_move_right.c: 155: break;
  7201                           
  7202                           ;train_move_right.c: 154: default:
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;train_move_right.c: 151: }
  7206                           ;train_move_right.c: 152: break;
  7207                           
  7208                           ; BSR set to: 0
  7209  002470  D007               	goto	l7163
  7210  002472                     l7161:
  7211  002472  5021               	movf	_Switch_Moutain,w,c
  7212                           
  7213                           ; Switch size 1, requested type "space"
  7214                           ; Number of cases is 2, Range of values is 0 to 1
  7215                           ; switch strategies available:
  7216                           ; Name         Instructions Cycles
  7217                           ; simple_byte            7     4 (average)
  7218                           ;	Chosen strategy is simple_byte
  7219  002474  0A00               	xorlw	0	; case 0
  7220  002476  B4D8               	btfsc	status,2,c
  7221  002478  D77F               	goto	l7117
  7222  00247A  0A01               	xorlw	1	; case 1
  7223  00247C  B4D8               	btfsc	status,2,c
  7224  00247E  D796               	goto	l7127
  7225  002480                     l7163:
  7226                           
  7227                           ;train_move_right.c: 158: return(Return_Val);
  7228  002480  0100               	movlb	0	; () banked
  7229  002482  51F1               	movf	Left_Mountain_From_The_Left@Return_Val& (0+255),w,b
  7230  002484  0012               	return	
  7231  002486                     __end_of_Left_Mountain_From_The_Left:
  7232                           	opt stack 0
  7233                           tblptru	equ	0xFF8
  7234                           tblptrh	equ	0xFF7
  7235                           tblptrl	equ	0xFF6
  7236                           tablat	equ	0xFF5
  7237                           postinc0	equ	0xFEE
  7238                           wreg	equ	0xFE8
  7239                           postdec1	equ	0xFE5
  7240                           fsr1l	equ	0xFE1
  7241                           status	equ	0xFD8
  7242                           
  7243 ;; *************** function _SETxPWM *****************
  7244 ;; Defined at:
  7245 ;;		line 20 in file "../set_pwm.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;  speed           2    0[BANK1 ] unsigned int 
  7248 ;;  direction       1    2[BANK1 ] unsigned char 
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;  pwm_speed       2    2[BANK2 ] unsigned int 
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  1    wreg      void 
  7253 ;; Registers used:
  7254 ;;		wreg, status,2, status,0, cstack
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7260 ;;      Params:         0       0       3       0       0       0       0       0       0
  7261 ;;      Locals:         0       0       0       2       0       0       0       0       0
  7262 ;;      Temps:          0       0       0       2       0       0       0       0       0
  7263 ;;      Totals:         0       0       3       4       0       0       0       0       0
  7264 ;;Total ram usage:        7 bytes
  7265 ;; Hardware stack levels used:    1
  7266 ;; Hardware stack levels required when called:    5
  7267 ;; This function calls:
  7268 ;;		_SetDCPWM1
  7269 ;; This function is called by:
  7270 ;;		_Train_Move_Left_Start
  7271 ;;		_Right_Mountain_From_The_Right
  7272 ;;		_Left_Mountain_From_The_Right
  7273 ;;		_Train_Move_Left_Brake
  7274 ;;		_Train_Move_Right_Start
  7275 ;;		_Left_Mountain_From_The_Left
  7276 ;;		_Right_Mountain_From_The_Left
  7277 ;;		_Train_Move_Right_Brake
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text11
  7282  002910                     __ptext11:
  7283                           	opt stack 0
  7284  002910                     _SETxPWM:
  7285                           	opt stack 22
  7286                           
  7287                           ;set_pwm.c: 22: unsigned int pwm_speed = 511;
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;incstack = 0
  7291  002910  0E01               	movlw	1
  7292  002912  0102               	movlb	2	; () banked
  7293  002914  6F81               	movwf	(SETxPWM@pwm_speed+1)& (0+255),b
  7294  002916  6980               	setf	SETxPWM@pwm_speed& (0+255),b
  7295                           
  7296                           ;set_pwm.c: 24: if (direction == 0){
  7297  002918  0101               	movlb	1	; () banked
  7298  00291A  51FE               	movf	SETxPWM@direction& (0+255),w,b
  7299  00291C  0101               	movlb	1	; () banked
  7300  00291E  A4D8               	btfss	status,2,c
  7301  002920  D01E               	goto	l6859
  7302                           
  7303                           ; BSR set to: 1
  7304                           ;set_pwm.c: 25: pwm_speed = 511 - (speed * 2);
  7305  002922  C1FC  F27E         	movff	SETxPWM@speed,??_SETxPWM
  7306  002926  C1FD  F27F         	movff	SETxPWM@speed+1,??_SETxPWM+1
  7307  00292A  90D8               	bcf	status,0,c
  7308  00292C  0102               	movlb	2	; () banked
  7309  00292E  377E               	rlcf	??_SETxPWM& (0+255),f,b
  7310  002930  377F               	rlcf	(??_SETxPWM+1)& (0+255),f,b
  7311  002932  0102               	movlb	2	; () banked
  7312  002934  1F7E               	comf	??_SETxPWM& (0+255),f,b
  7313  002936  1F7F               	comf	(??_SETxPWM+1)& (0+255),f,b
  7314  002938  4B7E               	infsnz	??_SETxPWM& (0+255),f,b
  7315  00293A  2B7F               	incf	(??_SETxPWM+1)& (0+255),f,b
  7316  00293C  0EFF               	movlw	255
  7317  00293E  0102               	movlb	2	; () banked
  7318  002940  257E               	addwf	??_SETxPWM& (0+255),w,b
  7319  002942  0102               	movlb	2	; () banked
  7320  002944  6F80               	movwf	SETxPWM@pwm_speed& (0+255),b
  7321  002946  0E01               	movlw	1
  7322  002948  0102               	movlb	2	; () banked
  7323  00294A  217F               	addwfc	(??_SETxPWM+1)& (0+255),w,b
  7324  00294C  0102               	movlb	2	; () banked
  7325  00294E  6F81               	movwf	(SETxPWM@pwm_speed+1)& (0+255),b
  7326                           
  7327                           ; BSR set to: 2
  7328                           ;set_pwm.c: 26: SetDCPWM1(pwm_speed);
  7329  002950  C280  F0F9         	movff	SETxPWM@pwm_speed,SetDCPWM1@dutycycle
  7330  002954  C281  F0FA         	movff	SETxPWM@pwm_speed+1,SetDCPWM1@dutycycle+1
  7331  002958  ECE2  F015         	call	_SetDCPWM1	;wreg free
  7332                           
  7333                           ;set_pwm.c: 27: }
  7334  00295C  0012               	return	
  7335  00295E                     l6859:
  7336                           
  7337                           ;set_pwm.c: 28: else if (direction == 1){
  7338  00295E  0101               	movlb	1	; () banked
  7339  002960  05FE               	decf	SETxPWM@direction& (0+255),w,b
  7340  002962  A4D8               	btfss	status,2,c
  7341  002964  0012               	return	
  7342                           
  7343                           ; BSR set to: 1
  7344                           ;set_pwm.c: 29: pwm_speed = 511 + (speed * 2);
  7345  002966  C1FC  F27E         	movff	SETxPWM@speed,??_SETxPWM
  7346  00296A  C1FD  F27F         	movff	SETxPWM@speed+1,??_SETxPWM+1
  7347  00296E  90D8               	bcf	status,0,c
  7348  002970  0102               	movlb	2	; () banked
  7349  002972  377E               	rlcf	??_SETxPWM& (0+255),f,b
  7350  002974  377F               	rlcf	(??_SETxPWM+1)& (0+255),f,b
  7351  002976  0EFF               	movlw	255
  7352  002978  0102               	movlb	2	; () banked
  7353  00297A  257E               	addwf	??_SETxPWM& (0+255),w,b
  7354  00297C  0102               	movlb	2	; () banked
  7355  00297E  6F80               	movwf	SETxPWM@pwm_speed& (0+255),b
  7356  002980  0E01               	movlw	1
  7357  002982  0102               	movlb	2	; () banked
  7358  002984  217F               	addwfc	(??_SETxPWM+1)& (0+255),w,b
  7359  002986  0102               	movlb	2	; () banked
  7360  002988  6F81               	movwf	(SETxPWM@pwm_speed+1)& (0+255),b
  7361                           
  7362                           ; BSR set to: 2
  7363                           ;set_pwm.c: 30: SetDCPWM1(pwm_speed);
  7364  00298A  C280  F0F9         	movff	SETxPWM@pwm_speed,SetDCPWM1@dutycycle
  7365  00298E  C281  F0FA         	movff	SETxPWM@pwm_speed+1,SetDCPWM1@dutycycle+1
  7366  002992  ECE2  F015         	call	_SetDCPWM1	;wreg free
  7367  002996  0012               	return	
  7368  002998                     __end_of_SETxPWM:
  7369                           	opt stack 0
  7370                           tblptru	equ	0xFF8
  7371                           tblptrh	equ	0xFF7
  7372                           tblptrl	equ	0xFF6
  7373                           tablat	equ	0xFF5
  7374                           postinc0	equ	0xFEE
  7375                           wreg	equ	0xFE8
  7376                           postdec1	equ	0xFE5
  7377                           fsr1l	equ	0xFE1
  7378                           status	equ	0xFD8
  7379                           
  7380 ;; *************** function _SetDCPWM1 *****************
  7381 ;; Defined at:
  7382 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic18\plib\PWM\pw1setdc.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  1    wreg      void 
  7389 ;; Registers used:
  7390 ;;		wreg, status,2, status,0
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7396 ;;      Params:         0       2       0       0       0       0       0       0       0
  7397 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7398 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7399 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7400 ;;Total ram usage:        6 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:    4
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_SETxPWM
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text12
  7411  002BC4                     __ptext12:
  7412                           	opt stack 0
  7413  002BC4                     _SetDCPWM1:
  7414                           	opt stack 22
  7415                           
  7416                           ;incstack = 0
  7417  002BC4  C0F9  F0FB         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  7418  002BC8  C0FA  F0FC         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  7419  002BCC  0E06               	movlw	6
  7420  002BCE                     u5295:
  7421  002BCE  90D8               	bcf	status,0,c
  7422  002BD0  0100               	movlb	0	; () banked
  7423  002BD2  37FB               	rlcf	??_SetDCPWM1& (0+255),f,b
  7424  002BD4  37FC               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  7425  002BD6  2EE8               	decfsz	wreg,f,c
  7426  002BD8  D7FA               	goto	u5295
  7427  002BDA  C0FB  F0FD         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  7428  002BDE  C0FC  F0FE         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  7429                           
  7430                           ; BSR set to: 0
  7431  002BE2  C0FE  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  7432  002BE6  C0FD  F0FB         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  7433  002BEA  0100               	movlb	0	; () banked
  7434  002BEC  90D8               	bcf	status,0,c
  7435  002BEE  33FB               	rrcf	??_SetDCPWM1& (0+255),f,b
  7436  002BF0  0100               	movlb	0	; () banked
  7437  002BF2  90D8               	bcf	status,0,c
  7438  002BF4  33FB               	rrcf	??_SetDCPWM1& (0+255),f,b
  7439  002BF6  0E30               	movlw	48
  7440  002BF8  0100               	movlb	0	; () banked
  7441  002BFA  17FB               	andwf	??_SetDCPWM1& (0+255),f,b
  7442  002BFC  50BD               	movf	4029,w,c	;volatile
  7443  002BFE  0BCF               	andlw	207
  7444  002C00  0100               	movlb	0	; () banked
  7445  002C02  11FB               	iorwf	??_SetDCPWM1& (0+255),w,b
  7446  002C04  6EBD               	movwf	4029,c	;volatile
  7447                           
  7448                           ; BSR set to: 0
  7449  002C06  0012               	return		;funcret
  7450  002C08                     __end_of_SetDCPWM1:
  7451                           	opt stack 0
  7452                           tblptru	equ	0xFF8
  7453                           tblptrh	equ	0xFF7
  7454                           tblptrl	equ	0xFF6
  7455                           tablat	equ	0xFF5
  7456                           postinc0	equ	0xFEE
  7457                           wreg	equ	0xFE8
  7458                           postdec1	equ	0xFE5
  7459                           fsr1l	equ	0xFE1
  7460                           status	equ	0xFD8
  7461                           
  7462 ;; *************** function _Junction *****************
  7463 ;; Defined at:
  7464 ;;		line 23 in file "../junction.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  Junction_Lef    1    wreg     unsigned char 
  7467 ;;  Straight_Ben    1    3[BANK0 ] unsigned char 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;  Junction_Lef    1    4[BANK0 ] unsigned char 
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  1    wreg      unsigned char 
  7472 ;; Registers used:
  7473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7479 ;;      Params:         0       1       0       0       0       0       0       0       0
  7480 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7482 ;;      Totals:         0       2       0       0       0       0       0       0       0
  7483 ;;Total ram usage:        2 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    5
  7486 ;; This function calls:
  7487 ;;		_GETxAPIxVAL
  7488 ;; This function is called by:
  7489 ;;		_Train_Path
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text13
  7494  00277C                     __ptext13:
  7495                           	opt stack 0
  7496  00277C                     _Junction:
  7497                           	opt stack 23
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;incstack = 0
  7501                           ;Junction@Junction_Left_Right stored from wreg
  7502  00277C  0100               	movlb	0	; () banked
  7503  00277E  6FFD               	movwf	Junction@Junction_Left_Right& (0+255),b
  7504                           
  7505                           ;junction.c: 25: static char Return_Val = 1;
  7506                           ;junction.c: 26: static unsigned int Junction_Switch_Time = 0;
  7507                           ;junction.c: 28: switch (Switch_Junction)
  7508  002780  D056               	goto	l6897
  7509  002782                     l6869:
  7510  002782  0E01               	movlw	1
  7511  002784  0100               	movlb	0	; () banked
  7512  002786  6FF0               	movwf	Junction@Return_Val& (0+255),b
  7513                           
  7514                           ;junction.c: 31: switch (Junction_Left_Right)
  7515  002788  D01A               	goto	l6881
  7516  00278A                     l901:
  7517                           
  7518                           ; BSR set to: 0
  7519  00278A  8680               	bsf	3968,3,c	;volatile
  7520  00278C  D020               	goto	l6883
  7521  00278E                     l903:
  7522                           
  7523                           ; BSR set to: 0
  7524  00278E  8480               	bsf	3968,2,c	;volatile
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;junction.c: 38: }
  7528                           
  7529                           ; BSR set to: 0
  7530                           
  7531                           ;junction.c: 37: default : break;
  7532  002790  D01E               	goto	l6883
  7533  002792                     l6873:
  7534                           
  7535                           ; BSR set to: 0
  7536  002792  0100               	movlb	0	; () banked
  7537  002794  51FC               	movf	Junction@Straight_Bend& (0+255),w,b
  7538                           
  7539                           ; Switch size 1, requested type "space"
  7540                           ; Number of cases is 2, Range of values is 0 to 1
  7541                           ; switch strategies available:
  7542                           ; Name         Instructions Cycles
  7543                           ; simple_byte            7     4 (average)
  7544                           ;	Chosen strategy is simple_byte
  7545  002796  0A00               	xorlw	0	; case 0
  7546  002798  B4D8               	btfsc	status,2,c
  7547  00279A  D7F7               	goto	l901
  7548  00279C  0A01               	xorlw	1	; case 1
  7549  00279E  B4D8               	btfsc	status,2,c
  7550  0027A0  D7F6               	goto	l903
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;junction.c: 39: break;
  7554  0027A2  D015               	goto	l6883
  7555  0027A4                     l908:
  7556                           
  7557                           ; BSR set to: 0
  7558  0027A4  8280               	bsf	3968,1,c	;volatile
  7559  0027A6  D013               	goto	l6883
  7560  0027A8                     l910:
  7561                           
  7562                           ; BSR set to: 0
  7563  0027A8  8080               	bsf	3968,0,c	;volatile
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;junction.c: 46: }
  7567                           
  7568                           ; BSR set to: 0
  7569                           
  7570                           ;junction.c: 45: default : break;
  7571  0027AA  D011               	goto	l6883
  7572  0027AC                     l6877:
  7573                           
  7574                           ; BSR set to: 0
  7575  0027AC  0100               	movlb	0	; () banked
  7576  0027AE  51FC               	movf	Junction@Straight_Bend& (0+255),w,b
  7577                           
  7578                           ; Switch size 1, requested type "space"
  7579                           ; Number of cases is 2, Range of values is 0 to 1
  7580                           ; switch strategies available:
  7581                           ; Name         Instructions Cycles
  7582                           ; simple_byte            7     4 (average)
  7583                           ;	Chosen strategy is simple_byte
  7584  0027B0  0A00               	xorlw	0	; case 0
  7585  0027B2  B4D8               	btfsc	status,2,c
  7586  0027B4  D7F7               	goto	l908
  7587  0027B6  0A01               	xorlw	1	; case 1
  7588  0027B8  B4D8               	btfsc	status,2,c
  7589  0027BA  D7F6               	goto	l910
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;junction.c: 50: }
  7593                           
  7594                           ; BSR set to: 0
  7595                           
  7596                           ;junction.c: 49: default : break;
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;junction.c: 47: break;
  7600  0027BC  D008               	goto	l6883
  7601  0027BE                     l6881:
  7602                           
  7603                           ; BSR set to: 0
  7604  0027BE  0100               	movlb	0	; () banked
  7605  0027C0  51FD               	movf	Junction@Junction_Left_Right& (0+255),w,b
  7606                           
  7607                           ; Switch size 1, requested type "space"
  7608                           ; Number of cases is 2, Range of values is 0 to 1
  7609                           ; switch strategies available:
  7610                           ; Name         Instructions Cycles
  7611                           ; simple_byte            7     4 (average)
  7612                           ;	Chosen strategy is simple_byte
  7613  0027C2  0A00               	xorlw	0	; case 0
  7614  0027C4  B4D8               	btfsc	status,2,c
  7615  0027C6  D7E5               	goto	l6873
  7616  0027C8  0A01               	xorlw	1	; case 1
  7617  0027CA  B4D8               	btfsc	status,2,c
  7618  0027CC  D7EF               	goto	l6877
  7619  0027CE                     l6883:
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;junction.c: 51: Switch_Junction = 1;
  7623  0027CE  0E01               	movlw	1
  7624  0027D0  0100               	movlb	0	; () banked
  7625  0027D2  6FEF               	movwf	_Switch_Junction& (0+255),b
  7626                           
  7627                           ;junction.c: 52: break;
  7628  0027D4  D037               	goto	l6899
  7629  0027D6                     l6885:
  7630                           
  7631                           ; BSR set to: 0
  7632  0027D6  0E03               	movlw	3
  7633  0027D8  ECA5  F016         	call	_GETxAPIxVAL
  7634  0027DC  0100               	movlb	0	; () banked
  7635  0027DE  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  7636  0027E0  0100               	movlb	0	; () banked
  7637  0027E2  5DDE               	subwf	Junction@Junction_Switch_Time& (0+255),w,b
  7638  0027E4  0100               	movlb	0	; () banked
  7639  0027E6  51FA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  7640  0027E8  0100               	movlb	0	; () banked
  7641  0027EA  59DF               	subwfb	(Junction@Junction_Switch_Time+1)& (0+255),w,b
  7642  0027EC  A0D8               	btfss	status,0,c
  7643  0027EE  D00A               	goto	l6889
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;junction.c: 55: {
  7647                           ;junction.c: 56: Switch_Junction = 2;
  7648  0027F0  0E02               	movlw	2
  7649  0027F2  0100               	movlb	0	; () banked
  7650  0027F4  6FEF               	movwf	_Switch_Junction& (0+255),b
  7651                           
  7652                           ;junction.c: 57: Junction_Switch_Time = 0;
  7653  0027F6  0E00               	movlw	0
  7654  0027F8  0100               	movlb	0	; () banked
  7655  0027FA  6FDF               	movwf	(Junction@Junction_Switch_Time+1)& (0+255),b
  7656  0027FC  0E00               	movlw	0
  7657  0027FE  6FDE               	movwf	Junction@Junction_Switch_Time& (0+255),b
  7658                           
  7659                           ;junction.c: 58: Return_Val = 1;
  7660  002800  0E01               	movlw	1
  7661  002802  D012               	goto	L79
  7662  002804                     l6889:
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;junction.c: 60: }
  7666                           ;junction.c: 61: Return_Val = 1;
  7667  002804  0E01               	movlw	1
  7668  002806  0100               	movlb	0	; () banked
  7669  002808  6FF0               	movwf	Junction@Return_Val& (0+255),b
  7670                           
  7671                           ;junction.c: 62: Switch_Junction = 1;
  7672  00280A  0E01               	movlw	1
  7673  00280C  0100               	movlb	0	; () banked
  7674  00280E  6FEF               	movwf	_Switch_Junction& (0+255),b
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;junction.c: 63: Junction_Switch_Time++;
  7678  002810  0100               	movlb	0	; () banked
  7679  002812  4BDE               	infsnz	Junction@Junction_Switch_Time& (0+255),f,b
  7680  002814  2BDF               	incf	(Junction@Junction_Switch_Time+1)& (0+255),f,b
  7681                           
  7682                           ;junction.c: 64: break;
  7683  002816  D016               	goto	l6899
  7684  002818                     l916:
  7685                           
  7686                           ; BSR set to: 0
  7687  002818  9680               	bcf	3968,3,c	;volatile
  7688                           
  7689                           ;junction.c: 67: PORTAbits.RA2 = 0;
  7690  00281A  9480               	bcf	3968,2,c	;volatile
  7691                           
  7692                           ;junction.c: 68: PORTAbits.RA1 = 0;
  7693  00281C  9280               	bcf	3968,1,c	;volatile
  7694                           
  7695                           ;junction.c: 69: PORTAbits.RA0 = 0;
  7696  00281E  9080               	bcf	3968,0,c	;volatile
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;junction.c: 70: Switch_Junction = 0;
  7700  002820  0E00               	movlw	0
  7701  002822  0100               	movlb	0	; () banked
  7702  002824  6FEF               	movwf	_Switch_Junction& (0+255),b
  7703                           
  7704                           ;junction.c: 71: Return_Val = 0;
  7705  002826  0E00               	movlw	0
  7706  002828                     L79:
  7707  002828  0100               	movlb	0	; () banked
  7708  00282A  6FF0               	movwf	Junction@Return_Val& (0+255),b
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;junction.c: 75: }
  7712                           
  7713                           ; BSR set to: 0
  7714                           
  7715                           ;junction.c: 74: default : break;
  7716                           
  7717                           ;junction.c: 72: break;
  7718  00282C  D00B               	goto	l6899
  7719  00282E                     l6897:
  7720  00282E  0100               	movlb	0	; () banked
  7721  002830  51EF               	movf	_Switch_Junction& (0+255),w,b
  7722                           
  7723                           ; Switch size 1, requested type "space"
  7724                           ; Number of cases is 3, Range of values is 0 to 2
  7725                           ; switch strategies available:
  7726                           ; Name         Instructions Cycles
  7727                           ; simple_byte           10     6 (average)
  7728                           ;	Chosen strategy is simple_byte
  7729  002832  0A00               	xorlw	0	; case 0
  7730  002834  B4D8               	btfsc	status,2,c
  7731  002836  D7A5               	goto	l6869
  7732  002838  0A01               	xorlw	1	; case 1
  7733  00283A  B4D8               	btfsc	status,2,c
  7734  00283C  D7CC               	goto	l6885
  7735  00283E  0A03               	xorlw	3	; case 2
  7736  002840  B4D8               	btfsc	status,2,c
  7737  002842  D7EA               	goto	l916
  7738  002844                     l6899:
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;junction.c: 77: return (Return_Val);
  7742  002844  0100               	movlb	0	; () banked
  7743  002846  51F0               	movf	Junction@Return_Val& (0+255),w,b
  7744  002848  0012               	return	
  7745  00284A                     __end_of_Junction:
  7746                           	opt stack 0
  7747                           tblptru	equ	0xFF8
  7748                           tblptrh	equ	0xFF7
  7749                           tblptrl	equ	0xFF6
  7750                           tablat	equ	0xFF5
  7751                           postinc0	equ	0xFEE
  7752                           wreg	equ	0xFE8
  7753                           postdec1	equ	0xFE5
  7754                           fsr1l	equ	0xFE1
  7755                           status	equ	0xFD8
  7756                           
  7757 ;; *************** function _Red_Led *****************
  7758 ;; Defined at:
  7759 ;;		line 97 in file "../io.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  Operation       1    wreg     unsigned char 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  Operation       1    0[BANK0 ] unsigned char 
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      void 
  7766 ;; Registers used:
  7767 ;;		wreg, status,2, status,0
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7773 ;;      Params:         0       0       0       0       0       0       0       0       0
  7774 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7776 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7777 ;;Total ram usage:        1 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; Hardware stack levels required when called:    4
  7780 ;; This function calls:
  7781 ;;		Nothing
  7782 ;; This function is called by:
  7783 ;;		_Update_StateMchn
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text14
  7788  002998                     __ptext14:
  7789                           	opt stack 0
  7790  002998                     _Red_Led:
  7791                           	opt stack 25
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;incstack = 0
  7795                           ;Red_Led@Operation stored from wreg
  7796  002998  0100               	movlb	0	; () banked
  7797  00299A  6FF9               	movwf	Red_Led@Operation& (0+255),b
  7798                           
  7799                           ;io.c: 99: switch(Operation)
  7800  00299C  D030               	goto	l7643
  7801  00299E                     l761:
  7802                           
  7803                           ; BSR set to: 0
  7804  00299E  9A83               	bcf	3971,5,c	;volatile
  7805  0029A0  0012               	return	
  7806  0029A2                     l763:
  7807                           
  7808                           ; BSR set to: 0
  7809  0029A2  8A83               	bsf	3971,5,c	;volatile
  7810  0029A4  0012               	return	
  7811  0029A6                     l7621:
  7812                           
  7813                           ; BSR set to: 0
  7814  0029A6  4A07               	infsnz	_Red_Led_Counter,f,c
  7815  0029A8  2A08               	incf	_Red_Led_Counter+1,f,c
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;io.c: 106: if(Red_Led_Counter >= 3000)
  7819  0029AA  0EB8               	movlw	184
  7820  0029AC  5C07               	subwf	_Red_Led_Counter,w,c
  7821  0029AE  0E0B               	movlw	11
  7822  0029B0  5808               	subwfb	_Red_Led_Counter+1,w,c
  7823  0029B2  A0D8               	btfss	status,0,c
  7824  0029B4  D004               	goto	l7627
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;io.c: 107: {
  7828                           ;io.c: 108: Red_Led_Counter = 0;
  7829  0029B6  0E00               	movlw	0
  7830  0029B8  6E08               	movwf	_Red_Led_Counter+1,c
  7831  0029BA  0E00               	movlw	0
  7832  0029BC  6E07               	movwf	_Red_Led_Counter,c
  7833  0029BE                     l7627:
  7834                           
  7835                           ; BSR set to: 0
  7836                           ;io.c: 109: }
  7837                           ;io.c: 110: if(Red_Led_Counter >= 3000/2)
  7838  0029BE  0EDC               	movlw	220
  7839  0029C0  5C07               	subwf	_Red_Led_Counter,w,c
  7840  0029C2  0E05               	movlw	5
  7841  0029C4  5808               	subwfb	_Red_Led_Counter+1,w,c
  7842  0029C6  A0D8               	btfss	status,0,c
  7843  0029C8  D002               	goto	l766
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;io.c: 111: {
  7847                           ;io.c: 112: PORTDbits.RD5 = 1;
  7848  0029CA  8A83               	bsf	3971,5,c	;volatile
  7849                           
  7850                           ;io.c: 113: }
  7851  0029CC  0012               	return	
  7852  0029CE                     l766:
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;io.c: 114: else {PORTDbits.RD5 = 0;}
  7856  0029CE  9A83               	bcf	3971,5,c	;volatile
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;io.c: 115: break;
  7860  0029D0  0012               	return	
  7861  0029D2                     l7631:
  7862                           
  7863                           ; BSR set to: 0
  7864  0029D2  4A07               	infsnz	_Red_Led_Counter,f,c
  7865  0029D4  2A08               	incf	_Red_Led_Counter+1,f,c
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;io.c: 118: if(Red_Led_Counter >= 1000)
  7869  0029D6  0EE8               	movlw	232
  7870  0029D8  5C07               	subwf	_Red_Led_Counter,w,c
  7871  0029DA  0E03               	movlw	3
  7872  0029DC  5808               	subwfb	_Red_Led_Counter+1,w,c
  7873  0029DE  A0D8               	btfss	status,0,c
  7874  0029E0  D004               	goto	l7637
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;io.c: 119: {
  7878                           ;io.c: 120: Red_Led_Counter = 0;
  7879  0029E2  0E00               	movlw	0
  7880  0029E4  6E08               	movwf	_Red_Led_Counter+1,c
  7881  0029E6  0E00               	movlw	0
  7882  0029E8  6E07               	movwf	_Red_Led_Counter,c
  7883  0029EA                     l7637:
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;io.c: 121: }
  7887                           ;io.c: 122: if(Red_Led_Counter >= 1000/2)
  7888  0029EA  0EF4               	movlw	244
  7889  0029EC  5C07               	subwf	_Red_Led_Counter,w,c
  7890  0029EE  0E01               	movlw	1
  7891  0029F0  5808               	subwfb	_Red_Led_Counter+1,w,c
  7892  0029F2  A0D8               	btfss	status,0,c
  7893  0029F4  D002               	goto	l770
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;io.c: 123: {
  7897                           ;io.c: 124: PORTDbits.RD5 = 1;
  7898  0029F6  8A83               	bsf	3971,5,c	;volatile
  7899                           
  7900                           ;io.c: 125: }
  7901  0029F8  0012               	return	
  7902  0029FA                     l770:
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;io.c: 126: else {PORTDbits.RD5 = 0;}
  7906  0029FA  9A83               	bcf	3971,5,c	;volatile
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;io.c: 130: }
  7910                           
  7911                           ; BSR set to: 0
  7912                           
  7913                           ;io.c: 129: default : break;
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;io.c: 127: break;
  7917  0029FC  0012               	return	
  7918  0029FE                     l7643:
  7919  0029FE  0100               	movlb	0	; () banked
  7920  002A00  51F9               	movf	Red_Led@Operation& (0+255),w,b
  7921                           
  7922                           ; Switch size 1, requested type "space"
  7923                           ; Number of cases is 4, Range of values is 0 to 3
  7924                           ; switch strategies available:
  7925                           ; Name         Instructions Cycles
  7926                           ; simple_byte           13     7 (average)
  7927                           ;	Chosen strategy is simple_byte
  7928  002A02  0A00               	xorlw	0	; case 0
  7929  002A04  B4D8               	btfsc	status,2,c
  7930  002A06  D7CB               	goto	l761
  7931  002A08  0A01               	xorlw	1	; case 1
  7932  002A0A  B4D8               	btfsc	status,2,c
  7933  002A0C  D7CA               	goto	l763
  7934  002A0E  0A03               	xorlw	3	; case 2
  7935  002A10  B4D8               	btfsc	status,2,c
  7936  002A12  D7C9               	goto	l7621
  7937  002A14  0A01               	xorlw	1	; case 3
  7938  002A16  A4D8               	btfss	status,2,c
  7939  002A18  0012               	return	
  7940  002A1A  D7DB               	goto	l7631
  7941  002A1C                     __end_of_Red_Led:
  7942                           	opt stack 0
  7943                           tblptru	equ	0xFF8
  7944                           tblptrh	equ	0xFF7
  7945                           tblptrl	equ	0xFF6
  7946                           tablat	equ	0xFF5
  7947                           postinc0	equ	0xFEE
  7948                           wreg	equ	0xFE8
  7949                           postdec1	equ	0xFE5
  7950                           fsr1l	equ	0xFE1
  7951                           status	equ	0xFD8
  7952                           
  7953 ;; *************** function _INCRxAPIxVAL *****************
  7954 ;; Defined at:
  7955 ;;		line 144 in file "../api.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  index           1    wreg     unsigned char 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  index           1    5[BANK0 ] unsigned char 
  7960 ;;  value           2    3[BANK0 ] unsigned int 
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  1    wreg      void 
  7963 ;; Registers used:
  7964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7970 ;;      Params:         0       0       0       0       0       0       0       0       0
  7971 ;;      Locals:         0       3       0       0       0       0       0       0       0
  7972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7973 ;;      Totals:         0       3       0       0       0       0       0       0       0
  7974 ;;Total ram usage:        3 bytes
  7975 ;; Hardware stack levels used:    1
  7976 ;; Hardware stack levels required when called:    5
  7977 ;; This function calls:
  7978 ;;		_GETxAPIxVAL
  7979 ;;		_SETxAPIxVAL
  7980 ;; This function is called by:
  7981 ;;		_Update_StateMchn
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           	psect	text15
  7986  002CD2                     __ptext15:
  7987                           	opt stack 0
  7988  002CD2                     _INCRxAPIxVAL:
  7989                           	opt stack 24
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;incstack = 0
  7993                           ;INCRxAPIxVAL@index stored from wreg
  7994  002CD2  0100               	movlb	0	; () banked
  7995  002CD4  6FFE               	movwf	INCRxAPIxVAL@index& (0+255),b
  7996                           
  7997                           ;api.c: 145: unsigned int value;
  7998                           ;api.c: 146: value = GETxAPIxVAL(index);
  7999  002CD6  0100               	movlb	0	; () banked
  8000  002CD8  51FE               	movf	INCRxAPIxVAL@index& (0+255),w,b
  8001  002CDA  ECA5  F016         	call	_GETxAPIxVAL
  8002  002CDE  C0F9  F0FC         	movff	?_GETxAPIxVAL,INCRxAPIxVAL@value
  8003  002CE2  C0FA  F0FD         	movff	?_GETxAPIxVAL+1,INCRxAPIxVAL@value+1
  8004                           
  8005                           ;api.c: 147: value++;
  8006  002CE6  0100               	movlb	0	; () banked
  8007  002CE8  4BFC               	infsnz	INCRxAPIxVAL@value& (0+255),f,b
  8008  002CEA  2BFD               	incf	(INCRxAPIxVAL@value+1)& (0+255),f,b
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;api.c: 148: SETxAPIxVAL(index, value);
  8012  002CEC  C0FC  F0F9         	movff	INCRxAPIxVAL@value,SETxAPIxVAL@value
  8013  002CF0  C0FD  F0FA         	movff	INCRxAPIxVAL@value+1,SETxAPIxVAL@value+1
  8014  002CF4  0100               	movlb	0	; () banked
  8015  002CF6  51FE               	movf	INCRxAPIxVAL@index& (0+255),w,b
  8016  002CF8  EC95  F016         	call	_SETxAPIxVAL
  8017  002CFC  0012               	return		;funcret
  8018  002CFE                     __end_of_INCRxAPIxVAL:
  8019                           	opt stack 0
  8020                           tblptru	equ	0xFF8
  8021                           tblptrh	equ	0xFF7
  8022                           tblptrl	equ	0xFF6
  8023                           tablat	equ	0xFF5
  8024                           postinc0	equ	0xFEE
  8025                           wreg	equ	0xFE8
  8026                           postdec1	equ	0xFE5
  8027                           fsr1l	equ	0xFE1
  8028                           status	equ	0xFD8
  8029                           
  8030 ;; *************** function _Green_Led *****************
  8031 ;; Defined at:
  8032 ;;		line 47 in file "../io.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  Operation       1    wreg     unsigned char 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  Operation       1    0[BANK0 ] unsigned char 
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  1    wreg      void 
  8039 ;; Registers used:
  8040 ;;		wreg, status,2, status,0
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8046 ;;      Params:         0       0       0       0       0       0       0       0       0
  8047 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8049 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8050 ;;Total ram usage:        1 bytes
  8051 ;; Hardware stack levels used:    1
  8052 ;; Hardware stack levels required when called:    4
  8053 ;; This function calls:
  8054 ;;		Nothing
  8055 ;; This function is called by:
  8056 ;;		_Update_StateMchn
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           
  8060                           	psect	text16
  8061  002A1C                     __ptext16:
  8062                           	opt stack 0
  8063  002A1C                     _Green_Led:
  8064                           	opt stack 25
  8065                           
  8066                           ;incstack = 0
  8067                           ;Green_Led@Operation stored from wreg
  8068  002A1C  0100               	movlb	0	; () banked
  8069  002A1E  6FF9               	movwf	Green_Led@Operation& (0+255),b
  8070                           
  8071                           ;io.c: 49: switch(Operation)
  8072  002A20  D030               	goto	l7617
  8073  002A22                     l745:
  8074                           
  8075                           ; BSR set to: 0
  8076  002A22  9C83               	bcf	3971,6,c	;volatile
  8077  002A24  0012               	return	
  8078  002A26                     l747:
  8079                           
  8080                           ; BSR set to: 0
  8081  002A26  8C83               	bsf	3971,6,c	;volatile
  8082  002A28  0012               	return	
  8083  002A2A                     l7595:
  8084                           
  8085                           ; BSR set to: 0
  8086  002A2A  4A03               	infsnz	_Green_Led_Counter,f,c
  8087  002A2C  2A04               	incf	_Green_Led_Counter+1,f,c
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;io.c: 56: if(Green_Led_Counter >= 3000)
  8091  002A2E  0EB8               	movlw	184
  8092  002A30  5C03               	subwf	_Green_Led_Counter,w,c
  8093  002A32  0E0B               	movlw	11
  8094  002A34  5804               	subwfb	_Green_Led_Counter+1,w,c
  8095  002A36  A0D8               	btfss	status,0,c
  8096  002A38  D004               	goto	l7601
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;io.c: 57: {
  8100                           ;io.c: 58: Green_Led_Counter = 0;
  8101  002A3A  0E00               	movlw	0
  8102  002A3C  6E04               	movwf	_Green_Led_Counter+1,c
  8103  002A3E  0E00               	movlw	0
  8104  002A40  6E03               	movwf	_Green_Led_Counter,c
  8105  002A42                     l7601:
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;io.c: 59: }
  8109                           ;io.c: 60: if(Green_Led_Counter >= 3000/2)
  8110  002A42  0EDC               	movlw	220
  8111  002A44  5C03               	subwf	_Green_Led_Counter,w,c
  8112  002A46  0E05               	movlw	5
  8113  002A48  5804               	subwfb	_Green_Led_Counter+1,w,c
  8114  002A4A  A0D8               	btfss	status,0,c
  8115  002A4C  D002               	goto	l750
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;io.c: 61: {
  8119                           ;io.c: 62: PORTDbits.RD6 = 1;
  8120  002A4E  8C83               	bsf	3971,6,c	;volatile
  8121                           
  8122                           ;io.c: 63: }
  8123  002A50  0012               	return	
  8124  002A52                     l750:
  8125                           
  8126                           ; BSR set to: 0
  8127                           ;io.c: 64: else {PORTDbits.RD6 = 0;}
  8128  002A52  9C83               	bcf	3971,6,c	;volatile
  8129                           
  8130                           ; BSR set to: 0
  8131                           ;io.c: 65: break;
  8132  002A54  0012               	return	
  8133  002A56                     l7605:
  8134                           
  8135                           ; BSR set to: 0
  8136  002A56  4A03               	infsnz	_Green_Led_Counter,f,c
  8137  002A58  2A04               	incf	_Green_Led_Counter+1,f,c
  8138                           
  8139                           ; BSR set to: 0
  8140                           ;io.c: 68: if(Green_Led_Counter >= 1000)
  8141  002A5A  0EE8               	movlw	232
  8142  002A5C  5C03               	subwf	_Green_Led_Counter,w,c
  8143  002A5E  0E03               	movlw	3
  8144  002A60  5804               	subwfb	_Green_Led_Counter+1,w,c
  8145  002A62  A0D8               	btfss	status,0,c
  8146  002A64  D004               	goto	l7611
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;io.c: 69: {
  8150                           ;io.c: 70: Green_Led_Counter = 0;
  8151  002A66  0E00               	movlw	0
  8152  002A68  6E04               	movwf	_Green_Led_Counter+1,c
  8153  002A6A  0E00               	movlw	0
  8154  002A6C  6E03               	movwf	_Green_Led_Counter,c
  8155  002A6E                     l7611:
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;io.c: 71: }
  8159                           ;io.c: 72: if(Green_Led_Counter >= 1000/2)
  8160  002A6E  0EF4               	movlw	244
  8161  002A70  5C03               	subwf	_Green_Led_Counter,w,c
  8162  002A72  0E01               	movlw	1
  8163  002A74  5804               	subwfb	_Green_Led_Counter+1,w,c
  8164  002A76  A0D8               	btfss	status,0,c
  8165  002A78  D002               	goto	l754
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;io.c: 73: {
  8169                           ;io.c: 74: PORTDbits.RD6 = 1;
  8170  002A7A  8C83               	bsf	3971,6,c	;volatile
  8171                           
  8172                           ;io.c: 75: }
  8173  002A7C  0012               	return	
  8174  002A7E                     l754:
  8175                           
  8176                           ; BSR set to: 0
  8177                           ;io.c: 76: else {PORTDbits.RD6 = 0;}
  8178  002A7E  9C83               	bcf	3971,6,c	;volatile
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;io.c: 80: }
  8182                           
  8183                           ; BSR set to: 0
  8184                           
  8185                           ;io.c: 79: default : break;
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;io.c: 77: break;
  8189  002A80  0012               	return	
  8190  002A82                     l7617:
  8191  002A82  0100               	movlb	0	; () banked
  8192  002A84  51F9               	movf	Green_Led@Operation& (0+255),w,b
  8193                           
  8194                           ; Switch size 1, requested type "space"
  8195                           ; Number of cases is 4, Range of values is 0 to 3
  8196                           ; switch strategies available:
  8197                           ; Name         Instructions Cycles
  8198                           ; simple_byte           13     7 (average)
  8199                           ;	Chosen strategy is simple_byte
  8200  002A86  0A00               	xorlw	0	; case 0
  8201  002A88  B4D8               	btfsc	status,2,c
  8202  002A8A  D7CB               	goto	l745
  8203  002A8C  0A01               	xorlw	1	; case 1
  8204  002A8E  B4D8               	btfsc	status,2,c
  8205  002A90  D7CA               	goto	l747
  8206  002A92  0A03               	xorlw	3	; case 2
  8207  002A94  B4D8               	btfsc	status,2,c
  8208  002A96  D7C9               	goto	l7595
  8209  002A98  0A01               	xorlw	1	; case 3
  8210  002A9A  A4D8               	btfss	status,2,c
  8211  002A9C  0012               	return	
  8212  002A9E  D7DB               	goto	l7605
  8213  002AA0                     __end_of_Green_Led:
  8214                           	opt stack 0
  8215                           tblptru	equ	0xFF8
  8216                           tblptrh	equ	0xFF7
  8217                           tblptrl	equ	0xFF6
  8218                           tablat	equ	0xFF5
  8219                           postinc0	equ	0xFEE
  8220                           wreg	equ	0xFE8
  8221                           postdec1	equ	0xFE5
  8222                           fsr1l	equ	0xFE1
  8223                           status	equ	0xFD8
  8224                           
  8225 ;; *************** function _Eeprom_Store *****************
  8226 ;; Defined at:
  8227 ;;		line 21 in file "../eeprom_settings.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;		None
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;		None
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1    wreg      void 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8241 ;;      Params:         0       0       0       0       0       0       0       0       0
  8242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8244 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8245 ;;Total ram usage:        0 bytes
  8246 ;; Hardware stack levels used:    1
  8247 ;; Hardware stack levels required when called:    5
  8248 ;; This function calls:
  8249 ;;		_GETxAPIxVAL
  8250 ;; This function is called by:
  8251 ;;		_Update_StateMchn
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           	psect	text17
  8256  0026AA                     __ptext17:
  8257                           	opt stack 0
  8258  0026AA                     _Eeprom_Store:
  8259                           	opt stack 24
  8260                           
  8261                           ;eeprom_settings.c: 23: INTCON = 0x00;
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;incstack = 0
  8265  0026AA  0E00               	movlw	0
  8266  0026AC  6EF2               	movwf	intcon,c	;volatile
  8267                           
  8268                           ;eeprom_settings.c: 25: EECON1bits.EEPGD = 0;
  8269  0026AE  9EA6               	bcf	4006,7,c	;volatile
  8270                           
  8271                           ;eeprom_settings.c: 26: EECON1bits.WREN = 1;
  8272  0026B0  84A6               	bsf	4006,2,c	;volatile
  8273                           
  8274                           ;eeprom_settings.c: 27: EEADR = 0x01;
  8275  0026B2  0E01               	movlw	1
  8276  0026B4  6EA9               	movwf	4009,c	;volatile
  8277                           
  8278                           ;eeprom_settings.c: 28: EEDATA = GETxAPIxVAL(7);
  8279  0026B6  0E07               	movlw	7
  8280  0026B8  ECA5  F016         	call	_GETxAPIxVAL
  8281  0026BC  0100               	movlb	0	; () banked
  8282  0026BE  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  8283  0026C0  6EA8               	movwf	4008,c	;volatile
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;eeprom_settings.c: 29: EECON2 = 0x55;
  8287  0026C2  0E55               	movlw	85
  8288  0026C4  6EA7               	movwf	4007,c	;volatile
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;eeprom_settings.c: 30: EECON2 = 0xaa;
  8292  0026C6  0EAA               	movlw	170
  8293  0026C8  6EA7               	movwf	4007,c	;volatile
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;eeprom_settings.c: 31: EECON1bits.WR = 1;
  8297  0026CA  82A6               	bsf	4006,1,c	;volatile
  8298  0026CC                     l680:
  8299  0026CC  A8A1               	btfss	4001,4,c	;volatile
  8300  0026CE  D7FE               	goto	l680
  8301                           
  8302                           ;eeprom_settings.c: 33: PIR2bits.EEIF = 0;
  8303  0026D0  98A1               	bcf	4001,4,c	;volatile
  8304                           
  8305                           ;eeprom_settings.c: 35: EECON1bits.EEPGD = 0;
  8306  0026D2  9EA6               	bcf	4006,7,c	;volatile
  8307                           
  8308                           ;eeprom_settings.c: 36: EECON1bits.WREN = 1;
  8309  0026D4  84A6               	bsf	4006,2,c	;volatile
  8310                           
  8311                           ;eeprom_settings.c: 37: EEADR = 0x00;
  8312  0026D6  0E00               	movlw	0
  8313  0026D8  6EA9               	movwf	4009,c	;volatile
  8314                           
  8315                           ;eeprom_settings.c: 38: EEDATA = GETxAPIxVAL(7)>>8;
  8316  0026DA  0E07               	movlw	7
  8317  0026DC  ECA5  F016         	call	_GETxAPIxVAL
  8318  0026E0  0100               	movlb	0	; () banked
  8319  0026E2  C0FA  F0F9         	movff	?_GETxAPIxVAL+1,?_GETxAPIxVAL
  8320  0026E6  0100               	movlb	0	; () banked
  8321  0026E8  6BFA               	clrf	(?_GETxAPIxVAL+1)& (0+255),b
  8322  0026EA  0100               	movlb	0	; () banked
  8323  0026EC  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  8324  0026EE  6EA8               	movwf	4008,c	;volatile
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;eeprom_settings.c: 39: EECON2 = 0x55;
  8328  0026F0  0E55               	movlw	85
  8329  0026F2  6EA7               	movwf	4007,c	;volatile
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;eeprom_settings.c: 40: EECON2 = 0xaa;
  8333  0026F4  0EAA               	movlw	170
  8334  0026F6  6EA7               	movwf	4007,c	;volatile
  8335                           
  8336                           ; BSR set to: 0
  8337                           ;eeprom_settings.c: 41: EECON1bits.WR = 1;
  8338  0026F8  82A6               	bsf	4006,1,c	;volatile
  8339  0026FA                     l683:
  8340  0026FA  A8A1               	btfss	4001,4,c	;volatile
  8341  0026FC  D7FE               	goto	l683
  8342                           
  8343                           ;eeprom_settings.c: 43: PIR2bits.EEIF = 0;
  8344  0026FE  98A1               	bcf	4001,4,c	;volatile
  8345                           
  8346                           ;eeprom_settings.c: 45: EECON1bits.EEPGD = 0;
  8347  002700  9EA6               	bcf	4006,7,c	;volatile
  8348                           
  8349                           ;eeprom_settings.c: 46: EECON1bits.WREN = 1;
  8350  002702  84A6               	bsf	4006,2,c	;volatile
  8351                           
  8352                           ;eeprom_settings.c: 47: EEADR = 0x03;
  8353  002704  0E03               	movlw	3
  8354  002706  6EA9               	movwf	4009,c	;volatile
  8355                           
  8356                           ;eeprom_settings.c: 48: EEDATA = GETxAPIxVAL(8);
  8357  002708  0E08               	movlw	8
  8358  00270A  ECA5  F016         	call	_GETxAPIxVAL
  8359  00270E  0100               	movlb	0	; () banked
  8360  002710  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  8361  002712  6EA8               	movwf	4008,c	;volatile
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;eeprom_settings.c: 49: EECON2 = 0x55;
  8365  002714  0E55               	movlw	85
  8366  002716  6EA7               	movwf	4007,c	;volatile
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;eeprom_settings.c: 50: EECON2 = 0xaa;
  8370  002718  0EAA               	movlw	170
  8371  00271A  6EA7               	movwf	4007,c	;volatile
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;eeprom_settings.c: 51: EECON1bits.WR = 1;
  8375  00271C  82A6               	bsf	4006,1,c	;volatile
  8376  00271E                     l686:
  8377  00271E  A8A1               	btfss	4001,4,c	;volatile
  8378  002720  D7FE               	goto	l686
  8379                           
  8380                           ;eeprom_settings.c: 53: PIR2bits.EEIF = 0;
  8381  002722  98A1               	bcf	4001,4,c	;volatile
  8382                           
  8383                           ;eeprom_settings.c: 55: EECON1bits.EEPGD = 0;
  8384  002724  9EA6               	bcf	4006,7,c	;volatile
  8385                           
  8386                           ;eeprom_settings.c: 56: EECON1bits.WREN = 1;
  8387  002726  84A6               	bsf	4006,2,c	;volatile
  8388                           
  8389                           ;eeprom_settings.c: 57: EEADR = 0x02;
  8390  002728  0E02               	movlw	2
  8391  00272A  6EA9               	movwf	4009,c	;volatile
  8392                           
  8393                           ;eeprom_settings.c: 58: EEDATA = GETxAPIxVAL(8)>>8;
  8394  00272C  0E08               	movlw	8
  8395  00272E  ECA5  F016         	call	_GETxAPIxVAL
  8396  002732  0100               	movlb	0	; () banked
  8397  002734  C0FA  F0F9         	movff	?_GETxAPIxVAL+1,?_GETxAPIxVAL
  8398  002738  0100               	movlb	0	; () banked
  8399  00273A  6BFA               	clrf	(?_GETxAPIxVAL+1)& (0+255),b
  8400  00273C  0100               	movlb	0	; () banked
  8401  00273E  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  8402  002740  6EA8               	movwf	4008,c	;volatile
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;eeprom_settings.c: 59: EECON2 = 0x55;
  8406  002742  0E55               	movlw	85
  8407  002744  6EA7               	movwf	4007,c	;volatile
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;eeprom_settings.c: 60: EECON2 = 0xaa;
  8411  002746  0EAA               	movlw	170
  8412  002748  6EA7               	movwf	4007,c	;volatile
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;eeprom_settings.c: 61: EECON1bits.WR = 1;
  8416  00274A  82A6               	bsf	4006,1,c	;volatile
  8417  00274C                     l689:
  8418  00274C  A8A1               	btfss	4001,4,c	;volatile
  8419  00274E  D7FE               	goto	l689
  8420                           
  8421                           ;eeprom_settings.c: 63: PIR2bits.EEIF = 0;
  8422  002750  98A1               	bcf	4001,4,c	;volatile
  8423                           
  8424                           ;eeprom_settings.c: 65: EECON1bits.EEPGD = 0;
  8425  002752  9EA6               	bcf	4006,7,c	;volatile
  8426                           
  8427                           ;eeprom_settings.c: 66: EECON1bits.WREN = 1;
  8428  002754  84A6               	bsf	4006,2,c	;volatile
  8429                           
  8430                           ;eeprom_settings.c: 67: EEADR = 0x04;
  8431  002756  0E04               	movlw	4
  8432  002758  6EA9               	movwf	4009,c	;volatile
  8433                           
  8434                           ;eeprom_settings.c: 68: EEDATA = GETxAPIxVAL(9);
  8435  00275A  0E09               	movlw	9
  8436  00275C  ECA5  F016         	call	_GETxAPIxVAL
  8437  002760  0100               	movlb	0	; () banked
  8438  002762  51F9               	movf	?_GETxAPIxVAL& (0+255),w,b
  8439  002764  6EA8               	movwf	4008,c	;volatile
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;eeprom_settings.c: 69: EECON2 = 0x55;
  8443  002766  0E55               	movlw	85
  8444  002768  6EA7               	movwf	4007,c	;volatile
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;eeprom_settings.c: 70: EECON2 = 0xaa;
  8448  00276A  0EAA               	movlw	170
  8449  00276C  6EA7               	movwf	4007,c	;volatile
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;eeprom_settings.c: 71: EECON1bits.WR = 1;
  8453  00276E  82A6               	bsf	4006,1,c	;volatile
  8454  002770                     l692:
  8455  002770  A8A1               	btfss	4001,4,c	;volatile
  8456  002772  D7FE               	goto	l692
  8457                           
  8458                           ;eeprom_settings.c: 73: PIR2bits.EEIF = 0;
  8459  002774  98A1               	bcf	4001,4,c	;volatile
  8460                           
  8461                           ;eeprom_settings.c: 76: INTCON = 0xA0;
  8462  002776  0EA0               	movlw	160
  8463  002778  6EF2               	movwf	intcon,c	;volatile
  8464  00277A  0012               	return		;funcret
  8465  00277C                     __end_of_Eeprom_Store:
  8466                           	opt stack 0
  8467                           tblptru	equ	0xFF8
  8468                           tblptrh	equ	0xFF7
  8469                           tblptrl	equ	0xFF6
  8470                           tablat	equ	0xFF5
  8471                           intcon	equ	0xFF2
  8472                           postinc0	equ	0xFEE
  8473                           wreg	equ	0xFE8
  8474                           postdec1	equ	0xFE5
  8475                           fsr1l	equ	0xFE1
  8476                           status	equ	0xFD8
  8477                           
  8478 ;; *************** function _Debounce_Inputs *****************
  8479 ;; Defined at:
  8480 ;;		line 148 in file "../io.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;		None
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;		None
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1    wreg      void 
  8487 ;; Registers used:
  8488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8494 ;;      Params:         0       0       0       0       0       0       0       0       0
  8495 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8496 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8497 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8498 ;;Total ram usage:        2 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    5
  8501 ;; This function calls:
  8502 ;;		_GETxAPIxVAL
  8503 ;;		_SETxAPIxVAL
  8504 ;; This function is called by:
  8505 ;;		_Update_StateMchn
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           	psect	text18
  8510  00108E                     __ptext18:
  8511                           	opt stack 0
  8512  00108E                     _Debounce_Inputs:
  8513                           	opt stack 24
  8514                           
  8515                           ;io.c: 150: switch(PORTDbits.RD2)
  8516                           
  8517                           ;incstack = 0
  8518  00108E  D027               	goto	l7339
  8519  001090                     l7325:
  8520  001090  0E00               	movlw	0
  8521  001092  6E12               	movwf	_Reed_Contact_LF_Counter,c
  8522                           
  8523                           ;io.c: 153: SETxAPIxVAL(15, 0);
  8524  001094  0E00               	movlw	0
  8525  001096  0100               	movlb	0	; () banked
  8526  001098  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8527  00109A  0E00               	movlw	0
  8528  00109C  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  8529  00109E  0E0F               	movlw	15
  8530  0010A0  EC95  F016         	call	_SETxAPIxVAL
  8531                           
  8532                           ;io.c: 154: break;
  8533  0010A4  D04F               	goto	l7355
  8534  0010A6                     l7329:
  8535  0010A6  5012               	movf	_Reed_Contact_LF_Counter,w,c
  8536  0010A8  0100               	movlb	0	; () banked
  8537  0010AA  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  8538  0010AC  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8539  0010AE  0E0B               	movlw	11
  8540  0010B0  ECA5  F016         	call	_GETxAPIxVAL
  8541  0010B4  0100               	movlb	0	; () banked
  8542  0010B6  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  8543  0010B8  0100               	movlb	0	; () banked
  8544  0010BA  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8545  0010BC  0100               	movlb	0	; () banked
  8546  0010BE  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8547  0010C0  0100               	movlb	0	; () banked
  8548  0010C2  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8549  0010C4  A0D8               	btfss	status,0,c
  8550  0010C6  D002               	goto	l7335
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;io.c: 157: {
  8554                           ;io.c: 158: Reed_Contact_LF_Counter++;
  8555  0010C8  2A12               	incf	_Reed_Contact_LF_Counter,f,c
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;io.c: 160: }
  8559                           
  8560                           ;io.c: 159: break;
  8561  0010CA  D03C               	goto	l7355
  8562  0010CC                     l7335:
  8563                           
  8564                           ; BSR set to: 0
  8565                           ;io.c: 161: else {SETxAPIxVAL(15, 1);}
  8566  0010CC  0E00               	movlw	0
  8567  0010CE  0100               	movlb	0	; () banked
  8568  0010D0  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8569  0010D2  0E01               	movlw	1
  8570  0010D4  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  8571  0010D6  0E0F               	movlw	15
  8572  0010D8  EC95  F016         	call	_SETxAPIxVAL
  8573                           
  8574                           ;io.c: 165: }
  8575                           
  8576                           ;io.c: 164: default : break;
  8577                           
  8578                           ;io.c: 162: break;
  8579  0010DC  D033               	goto	l7355
  8580  0010DE                     l7339:
  8581  0010DE  A483               	btfss	3971,2,c	;volatile
  8582  0010E0  D002               	goto	u5820
  8583  0010E2  0E01               	movlw	1
  8584  0010E4  D001               	goto	u5826
  8585  0010E6                     u5820:
  8586  0010E6  0E00               	movlw	0
  8587  0010E8                     u5826:
  8588                           
  8589                           ; Switch size 1, requested type "space"
  8590                           ; Number of cases is 2, Range of values is 0 to 1
  8591                           ; switch strategies available:
  8592                           ; Name         Instructions Cycles
  8593                           ; simple_byte            7     4 (average)
  8594                           ;	Chosen strategy is simple_byte
  8595  0010E8  0A00               	xorlw	0	; case 0
  8596  0010EA  B4D8               	btfsc	status,2,c
  8597  0010EC  D7DC               	goto	l7329
  8598  0010EE  0A01               	xorlw	1	; case 1
  8599  0010F0  B4D8               	btfsc	status,2,c
  8600  0010F2  D7CE               	goto	l7325
  8601                           
  8602                           ;io.c: 168: switch(PORTDbits.RD3)
  8603  0010F4  D027               	goto	l7355
  8604  0010F6                     l7341:
  8605  0010F6  0E00               	movlw	0
  8606  0010F8  6E11               	movwf	_Reed_Contact_LB_Counter,c
  8607                           
  8608                           ;io.c: 171: SETxAPIxVAL(14, 0);
  8609  0010FA  0E00               	movlw	0
  8610  0010FC  0100               	movlb	0	; () banked
  8611  0010FE  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8612  001100  0E00               	movlw	0
  8613  001102  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  8614  001104  0E0E               	movlw	14
  8615  001106  EC95  F016         	call	_SETxAPIxVAL
  8616                           
  8617                           ;io.c: 172: break;
  8618  00110A  D04F               	goto	l7371
  8619  00110C                     l7345:
  8620  00110C  5011               	movf	_Reed_Contact_LB_Counter,w,c
  8621  00110E  0100               	movlb	0	; () banked
  8622  001110  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  8623  001112  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8624  001114  0E0B               	movlw	11
  8625  001116  ECA5  F016         	call	_GETxAPIxVAL
  8626  00111A  0100               	movlb	0	; () banked
  8627  00111C  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  8628  00111E  0100               	movlb	0	; () banked
  8629  001120  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8630  001122  0100               	movlb	0	; () banked
  8631  001124  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8632  001126  0100               	movlb	0	; () banked
  8633  001128  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8634  00112A  A0D8               	btfss	status,0,c
  8635  00112C  D002               	goto	l7351
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;io.c: 175: {
  8639                           ;io.c: 176: Reed_Contact_LB_Counter++;
  8640  00112E  2A11               	incf	_Reed_Contact_LB_Counter,f,c
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;io.c: 178: }
  8644                           
  8645                           ;io.c: 177: break;
  8646  001130  D03C               	goto	l7371
  8647  001132                     l7351:
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;io.c: 179: else {SETxAPIxVAL(14, 1);}
  8651  001132  0E00               	movlw	0
  8652  001134  0100               	movlb	0	; () banked
  8653  001136  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8654  001138  0E01               	movlw	1
  8655  00113A  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  8656  00113C  0E0E               	movlw	14
  8657  00113E  EC95  F016         	call	_SETxAPIxVAL
  8658                           
  8659                           ;io.c: 183: }
  8660                           
  8661                           ;io.c: 182: default : break;
  8662                           
  8663                           ;io.c: 180: break;
  8664  001142  D033               	goto	l7371
  8665  001144                     l7355:
  8666  001144  A683               	btfss	3971,3,c	;volatile
  8667  001146  D002               	goto	u5840
  8668  001148  0E01               	movlw	1
  8669  00114A  D001               	goto	u5846
  8670  00114C                     u5840:
  8671  00114C  0E00               	movlw	0
  8672  00114E                     u5846:
  8673                           
  8674                           ; Switch size 1, requested type "space"
  8675                           ; Number of cases is 2, Range of values is 0 to 1
  8676                           ; switch strategies available:
  8677                           ; Name         Instructions Cycles
  8678                           ; simple_byte            7     4 (average)
  8679                           ;	Chosen strategy is simple_byte
  8680  00114E  0A00               	xorlw	0	; case 0
  8681  001150  B4D8               	btfsc	status,2,c
  8682  001152  D7DC               	goto	l7345
  8683  001154  0A01               	xorlw	1	; case 1
  8684  001156  B4D8               	btfsc	status,2,c
  8685  001158  D7CE               	goto	l7341
  8686                           
  8687                           ;io.c: 186: switch(PORTDbits.RD0)
  8688  00115A  D027               	goto	l7371
  8689  00115C                     l7357:
  8690  00115C  0E00               	movlw	0
  8691  00115E  6E16               	movwf	_Reed_Contact_RF_Counter,c
  8692                           
  8693                           ;io.c: 189: SETxAPIxVAL(13, 0);
  8694  001160  0E00               	movlw	0
  8695  001162  0100               	movlb	0	; () banked
  8696  001164  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8697  001166  0E00               	movlw	0
  8698  001168  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  8699  00116A  0E0D               	movlw	13
  8700  00116C  EC95  F016         	call	_SETxAPIxVAL
  8701                           
  8702                           ;io.c: 190: break;
  8703  001170  D04F               	goto	l7387
  8704  001172                     l7361:
  8705  001172  5016               	movf	_Reed_Contact_RF_Counter,w,c
  8706  001174  0100               	movlb	0	; () banked
  8707  001176  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  8708  001178  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8709  00117A  0E0B               	movlw	11
  8710  00117C  ECA5  F016         	call	_GETxAPIxVAL
  8711  001180  0100               	movlb	0	; () banked
  8712  001182  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  8713  001184  0100               	movlb	0	; () banked
  8714  001186  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8715  001188  0100               	movlb	0	; () banked
  8716  00118A  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8717  00118C  0100               	movlb	0	; () banked
  8718  00118E  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8719  001190  A0D8               	btfss	status,0,c
  8720  001192  D002               	goto	l7367
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;io.c: 193: {
  8724                           ;io.c: 194: Reed_Contact_RF_Counter++;
  8725  001194  2A16               	incf	_Reed_Contact_RF_Counter,f,c
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;io.c: 196: }
  8729                           
  8730                           ;io.c: 195: break;
  8731  001196  D03C               	goto	l7387
  8732  001198                     l7367:
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;io.c: 197: else {SETxAPIxVAL(13, 1);}
  8736  001198  0E00               	movlw	0
  8737  00119A  0100               	movlb	0	; () banked
  8738  00119C  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8739  00119E  0E01               	movlw	1
  8740  0011A0  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  8741  0011A2  0E0D               	movlw	13
  8742  0011A4  EC95  F016         	call	_SETxAPIxVAL
  8743                           
  8744                           ;io.c: 201: }
  8745                           
  8746                           ;io.c: 200: default : break;
  8747                           
  8748                           ;io.c: 198: break;
  8749  0011A8  D033               	goto	l7387
  8750  0011AA                     l7371:
  8751  0011AA  A083               	btfss	3971,0,c	;volatile
  8752  0011AC  D002               	goto	u5860
  8753  0011AE  0E01               	movlw	1
  8754  0011B0  D001               	goto	u5866
  8755  0011B2                     u5860:
  8756  0011B2  0E00               	movlw	0
  8757  0011B4                     u5866:
  8758                           
  8759                           ; Switch size 1, requested type "space"
  8760                           ; Number of cases is 2, Range of values is 0 to 1
  8761                           ; switch strategies available:
  8762                           ; Name         Instructions Cycles
  8763                           ; simple_byte            7     4 (average)
  8764                           ;	Chosen strategy is simple_byte
  8765  0011B4  0A00               	xorlw	0	; case 0
  8766  0011B6  B4D8               	btfsc	status,2,c
  8767  0011B8  D7DC               	goto	l7361
  8768  0011BA  0A01               	xorlw	1	; case 1
  8769  0011BC  B4D8               	btfsc	status,2,c
  8770  0011BE  D7CE               	goto	l7357
  8771                           
  8772                           ;io.c: 204: switch(PORTDbits.RD1)
  8773  0011C0  D027               	goto	l7387
  8774  0011C2                     l7373:
  8775  0011C2  0E00               	movlw	0
  8776  0011C4  6E15               	movwf	_Reed_Contact_RB_Counter,c
  8777                           
  8778                           ;io.c: 207: SETxAPIxVAL(12, 0);
  8779  0011C6  0E00               	movlw	0
  8780  0011C8  0100               	movlb	0	; () banked
  8781  0011CA  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8782  0011CC  0E00               	movlw	0
  8783  0011CE  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  8784  0011D0  0E0C               	movlw	12
  8785  0011D2  EC95  F016         	call	_SETxAPIxVAL
  8786                           
  8787                           ;io.c: 208: break;
  8788  0011D6  D04F               	goto	l7403
  8789  0011D8                     l7377:
  8790  0011D8  5015               	movf	_Reed_Contact_RB_Counter,w,c
  8791  0011DA  0100               	movlb	0	; () banked
  8792  0011DC  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  8793  0011DE  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8794  0011E0  0E0B               	movlw	11
  8795  0011E2  ECA5  F016         	call	_GETxAPIxVAL
  8796  0011E6  0100               	movlb	0	; () banked
  8797  0011E8  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  8798  0011EA  0100               	movlb	0	; () banked
  8799  0011EC  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8800  0011EE  0100               	movlb	0	; () banked
  8801  0011F0  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8802  0011F2  0100               	movlb	0	; () banked
  8803  0011F4  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8804  0011F6  A0D8               	btfss	status,0,c
  8805  0011F8  D002               	goto	l7383
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;io.c: 211: {
  8809                           ;io.c: 212: Reed_Contact_RB_Counter++;
  8810  0011FA  2A15               	incf	_Reed_Contact_RB_Counter,f,c
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;io.c: 214: }
  8814                           
  8815                           ;io.c: 213: break;
  8816  0011FC  D03C               	goto	l7403
  8817  0011FE                     l7383:
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;io.c: 215: else {SETxAPIxVAL(12, 1);}
  8821  0011FE  0E00               	movlw	0
  8822  001200  0100               	movlb	0	; () banked
  8823  001202  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8824  001204  0E01               	movlw	1
  8825  001206  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  8826  001208  0E0C               	movlw	12
  8827  00120A  EC95  F016         	call	_SETxAPIxVAL
  8828                           
  8829                           ;io.c: 219: }
  8830                           
  8831                           ;io.c: 218: default : break;
  8832                           
  8833                           ;io.c: 216: break;
  8834  00120E  D033               	goto	l7403
  8835  001210                     l7387:
  8836  001210  A283               	btfss	3971,1,c	;volatile
  8837  001212  D002               	goto	u5880
  8838  001214  0E01               	movlw	1
  8839  001216  D001               	goto	u5886
  8840  001218                     u5880:
  8841  001218  0E00               	movlw	0
  8842  00121A                     u5886:
  8843                           
  8844                           ; Switch size 1, requested type "space"
  8845                           ; Number of cases is 2, Range of values is 0 to 1
  8846                           ; switch strategies available:
  8847                           ; Name         Instructions Cycles
  8848                           ; simple_byte            7     4 (average)
  8849                           ;	Chosen strategy is simple_byte
  8850  00121A  0A00               	xorlw	0	; case 0
  8851  00121C  B4D8               	btfsc	status,2,c
  8852  00121E  D7DC               	goto	l7377
  8853  001220  0A01               	xorlw	1	; case 1
  8854  001222  B4D8               	btfsc	status,2,c
  8855  001224  D7CE               	goto	l7373
  8856                           
  8857                           ;io.c: 222: switch(!PORTBbits.RB0)
  8858  001226  D027               	goto	l7403
  8859  001228                     l7389:
  8860  001228  500F               	movf	_Button_Contact_Counter_Start,w,c
  8861  00122A  0100               	movlb	0	; () banked
  8862  00122C  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  8863  00122E  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8864  001230  0E0B               	movlw	11
  8865  001232  ECA5  F016         	call	_GETxAPIxVAL
  8866  001236  0100               	movlb	0	; () banked
  8867  001238  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  8868  00123A  0100               	movlb	0	; () banked
  8869  00123C  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8870  00123E  0100               	movlb	0	; () banked
  8871  001240  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8872  001242  0100               	movlb	0	; () banked
  8873  001244  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8874  001246  A0D8               	btfss	status,0,c
  8875  001248  D002               	goto	l7395
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;io.c: 225: {
  8879                           ;io.c: 226: Button_Contact_Counter_Start++;
  8880  00124A  2A0F               	incf	_Button_Contact_Counter_Start,f,c
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;io.c: 228: }
  8884                           
  8885                           ;io.c: 227: break;
  8886  00124C  D051               	goto	l7419
  8887  00124E                     l7395:
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;io.c: 229: else {SETxAPIxVAL(16, 1); }
  8891  00124E  0E00               	movlw	0
  8892  001250  0100               	movlb	0	; () banked
  8893  001252  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8894  001254  0E01               	movlw	1
  8895  001256  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  8896  001258  0E10               	movlw	16
  8897  00125A  EC95  F016         	call	_SETxAPIxVAL
  8898                           
  8899                           ;io.c: 230: break;
  8900  00125E  D048               	goto	l7419
  8901  001260                     l7397:
  8902  001260  0E00               	movlw	0
  8903  001262  6E0F               	movwf	_Button_Contact_Counter_Start,c
  8904                           
  8905                           ;io.c: 233: SETxAPIxVAL(16, 0);
  8906  001264  0E00               	movlw	0
  8907  001266  0100               	movlb	0	; () banked
  8908  001268  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8909  00126A  0E00               	movlw	0
  8910  00126C  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  8911  00126E  0E10               	movlw	16
  8912  001270  EC95  F016         	call	_SETxAPIxVAL
  8913                           
  8914                           ;io.c: 237: }
  8915                           
  8916                           ;io.c: 236: default : break;
  8917                           
  8918                           ;io.c: 234: break;
  8919  001274  D03D               	goto	l7419
  8920  001276                     l7403:
  8921  001276  B081               	btfsc	3969,0,c	;volatile
  8922  001278  D002               	goto	u5900
  8923  00127A  0E01               	movlw	1
  8924  00127C  D001               	goto	u5910
  8925  00127E                     u5900:
  8926  00127E  0E00               	movlw	0
  8927  001280                     u5910:
  8928  001280  0100               	movlb	0	; () banked
  8929  001282  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  8930  001284  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8931                           
  8932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8933                           ; Switch size 1, requested type "space"
  8934                           ; Number of cases is 1, Range of values is 0 to 0
  8935                           ; switch strategies available:
  8936                           ; Name         Instructions Cycles
  8937                           ; simple_byte            4     3 (average)
  8938                           ;	Chosen strategy is simple_byte
  8939  001286  0100               	movlb	0	; () banked
  8940  001288  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8941  00128A  0A00               	xorlw	0	; case 0
  8942  00128C  A4D8               	btfss	status,2,c
  8943  00128E  D030               	goto	l7419
  8944                           
  8945                           ; BSR set to: 0
  8946                           ; Switch size 1, requested type "space"
  8947                           ; Number of cases is 2, Range of values is 0 to 1
  8948                           ; switch strategies available:
  8949                           ; Name         Instructions Cycles
  8950                           ; simple_byte            7     4 (average)
  8951                           ;	Chosen strategy is simple_byte
  8952  001290  0100               	movlb	0	; () banked
  8953  001292  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  8954  001294  0A00               	xorlw	0	; case 0
  8955  001296  B4D8               	btfsc	status,2,c
  8956  001298  D7E3               	goto	l7397
  8957  00129A  0A01               	xorlw	1	; case 1
  8958  00129C  B4D8               	btfsc	status,2,c
  8959  00129E  D7C4               	goto	l7389
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;io.c: 240: switch(!PORTDbits.RD7)
  8963  0012A0  D027               	goto	l7419
  8964  0012A2                     l7405:
  8965                           
  8966                           ; BSR set to: 0
  8967  0012A2  5010               	movf	_Button_Contact_Counter_Stop,w,c
  8968  0012A4  0100               	movlb	0	; () banked
  8969  0012A6  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  8970  0012A8  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8971  0012AA  0E0B               	movlw	11
  8972  0012AC  ECA5  F016         	call	_GETxAPIxVAL
  8973  0012B0  0100               	movlb	0	; () banked
  8974  0012B2  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  8975  0012B4  0100               	movlb	0	; () banked
  8976  0012B6  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8977  0012B8  0100               	movlb	0	; () banked
  8978  0012BA  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8979  0012BC  0100               	movlb	0	; () banked
  8980  0012BE  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8981  0012C0  A0D8               	btfss	status,0,c
  8982  0012C2  D002               	goto	l7411
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;io.c: 243: {
  8986                           ;io.c: 244: Button_Contact_Counter_Stop++;
  8987  0012C4  2A10               	incf	_Button_Contact_Counter_Stop,f,c
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;io.c: 246: }
  8991                           
  8992                           ;io.c: 245: break;
  8993  0012C6  D051               	goto	l7435
  8994  0012C8                     l7411:
  8995                           
  8996                           ; BSR set to: 0
  8997                           ;io.c: 247: else {SETxAPIxVAL(17, 1); }
  8998  0012C8  0E00               	movlw	0
  8999  0012CA  0100               	movlb	0	; () banked
  9000  0012CC  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9001  0012CE  0E01               	movlw	1
  9002  0012D0  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9003  0012D2  0E11               	movlw	17
  9004  0012D4  EC95  F016         	call	_SETxAPIxVAL
  9005                           
  9006                           ;io.c: 248: break;
  9007  0012D8  D048               	goto	l7435
  9008  0012DA                     l7413:
  9009  0012DA  0E00               	movlw	0
  9010  0012DC  6E10               	movwf	_Button_Contact_Counter_Stop,c
  9011                           
  9012                           ;io.c: 251: SETxAPIxVAL(17, 0);
  9013  0012DE  0E00               	movlw	0
  9014  0012E0  0100               	movlb	0	; () banked
  9015  0012E2  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9016  0012E4  0E00               	movlw	0
  9017  0012E6  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9018  0012E8  0E11               	movlw	17
  9019  0012EA  EC95  F016         	call	_SETxAPIxVAL
  9020                           
  9021                           ;io.c: 255: }
  9022                           
  9023                           ;io.c: 254: default : break;
  9024                           
  9025                           ;io.c: 252: break;
  9026  0012EE  D03D               	goto	l7435
  9027  0012F0                     l7419:
  9028  0012F0  BE83               	btfsc	3971,7,c	;volatile
  9029  0012F2  D002               	goto	u5930
  9030  0012F4  0E01               	movlw	1
  9031  0012F6  D001               	goto	u5940
  9032  0012F8                     u5930:
  9033  0012F8  0E00               	movlw	0
  9034  0012FA                     u5940:
  9035  0012FA  0100               	movlb	0	; () banked
  9036  0012FC  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9037  0012FE  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9038                           
  9039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9040                           ; Switch size 1, requested type "space"
  9041                           ; Number of cases is 1, Range of values is 0 to 0
  9042                           ; switch strategies available:
  9043                           ; Name         Instructions Cycles
  9044                           ; simple_byte            4     3 (average)
  9045                           ;	Chosen strategy is simple_byte
  9046  001300  0100               	movlb	0	; () banked
  9047  001302  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9048  001304  0A00               	xorlw	0	; case 0
  9049  001306  A4D8               	btfss	status,2,c
  9050  001308  D030               	goto	l7435
  9051                           
  9052                           ; BSR set to: 0
  9053                           ; Switch size 1, requested type "space"
  9054                           ; Number of cases is 2, Range of values is 0 to 1
  9055                           ; switch strategies available:
  9056                           ; Name         Instructions Cycles
  9057                           ; simple_byte            7     4 (average)
  9058                           ;	Chosen strategy is simple_byte
  9059  00130A  0100               	movlb	0	; () banked
  9060  00130C  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9061  00130E  0A00               	xorlw	0	; case 0
  9062  001310  B4D8               	btfsc	status,2,c
  9063  001312  D7E3               	goto	l7413
  9064  001314  0A01               	xorlw	1	; case 1
  9065  001316  B4D8               	btfsc	status,2,c
  9066  001318  D7C4               	goto	l7405
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;io.c: 258: switch(!PORTBbits.RB1)
  9070  00131A  D027               	goto	l7435
  9071  00131C                     l7421:
  9072                           
  9073                           ; BSR set to: 0
  9074  00131C  500E               	movf	_Button_Contact_Counter_Middle,w,c
  9075  00131E  0100               	movlb	0	; () banked
  9076  001320  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9077  001322  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9078  001324  0E0B               	movlw	11
  9079  001326  ECA5  F016         	call	_GETxAPIxVAL
  9080  00132A  0100               	movlb	0	; () banked
  9081  00132C  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9082  00132E  0100               	movlb	0	; () banked
  9083  001330  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9084  001332  0100               	movlb	0	; () banked
  9085  001334  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9086  001336  0100               	movlb	0	; () banked
  9087  001338  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9088  00133A  A0D8               	btfss	status,0,c
  9089  00133C  D002               	goto	l7427
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;io.c: 261: {
  9093                           ;io.c: 262: Button_Contact_Counter_Middle++;
  9094  00133E  2A0E               	incf	_Button_Contact_Counter_Middle,f,c
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;io.c: 264: }
  9098                           
  9099                           ;io.c: 263: break;
  9100  001340  D051               	goto	l7451
  9101  001342                     l7427:
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;io.c: 265: else {SETxAPIxVAL(18, 1); }
  9105  001342  0E00               	movlw	0
  9106  001344  0100               	movlb	0	; () banked
  9107  001346  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9108  001348  0E01               	movlw	1
  9109  00134A  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9110  00134C  0E12               	movlw	18
  9111  00134E  EC95  F016         	call	_SETxAPIxVAL
  9112                           
  9113                           ;io.c: 266: break;
  9114  001352  D048               	goto	l7451
  9115  001354                     l7429:
  9116  001354  0E00               	movlw	0
  9117  001356  6E0E               	movwf	_Button_Contact_Counter_Middle,c
  9118                           
  9119                           ;io.c: 269: SETxAPIxVAL(18, 0);
  9120  001358  0E00               	movlw	0
  9121  00135A  0100               	movlb	0	; () banked
  9122  00135C  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9123  00135E  0E00               	movlw	0
  9124  001360  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9125  001362  0E12               	movlw	18
  9126  001364  EC95  F016         	call	_SETxAPIxVAL
  9127                           
  9128                           ;io.c: 273: }
  9129                           
  9130                           ;io.c: 272: default : break;
  9131                           
  9132                           ;io.c: 270: break;
  9133  001368  D03D               	goto	l7451
  9134  00136A                     l7435:
  9135  00136A  B281               	btfsc	3969,1,c	;volatile
  9136  00136C  D002               	goto	u5960
  9137  00136E  0E01               	movlw	1
  9138  001370  D001               	goto	u5970
  9139  001372                     u5960:
  9140  001372  0E00               	movlw	0
  9141  001374                     u5970:
  9142  001374  0100               	movlb	0	; () banked
  9143  001376  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9144  001378  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9145                           
  9146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9147                           ; Switch size 1, requested type "space"
  9148                           ; Number of cases is 1, Range of values is 0 to 0
  9149                           ; switch strategies available:
  9150                           ; Name         Instructions Cycles
  9151                           ; simple_byte            4     3 (average)
  9152                           ;	Chosen strategy is simple_byte
  9153  00137A  0100               	movlb	0	; () banked
  9154  00137C  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9155  00137E  0A00               	xorlw	0	; case 0
  9156  001380  A4D8               	btfss	status,2,c
  9157  001382  D030               	goto	l7451
  9158                           
  9159                           ; BSR set to: 0
  9160                           ; Switch size 1, requested type "space"
  9161                           ; Number of cases is 2, Range of values is 0 to 1
  9162                           ; switch strategies available:
  9163                           ; Name         Instructions Cycles
  9164                           ; simple_byte            7     4 (average)
  9165                           ;	Chosen strategy is simple_byte
  9166  001384  0100               	movlb	0	; () banked
  9167  001386  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9168  001388  0A00               	xorlw	0	; case 0
  9169  00138A  B4D8               	btfsc	status,2,c
  9170  00138C  D7E3               	goto	l7429
  9171  00138E  0A01               	xorlw	1	; case 1
  9172  001390  B4D8               	btfsc	status,2,c
  9173  001392  D7C4               	goto	l7421
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;io.c: 276: switch(!PORTBbits.RB5)
  9177  001394  D027               	goto	l7451
  9178  001396                     l7437:
  9179                           
  9180                           ; BSR set to: 0
  9181  001396  500D               	movf	_Button_Contact_Counter_LB,w,c
  9182  001398  0100               	movlb	0	; () banked
  9183  00139A  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9184  00139C  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9185  00139E  0E0B               	movlw	11
  9186  0013A0  ECA5  F016         	call	_GETxAPIxVAL
  9187  0013A4  0100               	movlb	0	; () banked
  9188  0013A6  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9189  0013A8  0100               	movlb	0	; () banked
  9190  0013AA  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9191  0013AC  0100               	movlb	0	; () banked
  9192  0013AE  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9193  0013B0  0100               	movlb	0	; () banked
  9194  0013B2  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9195  0013B4  A0D8               	btfss	status,0,c
  9196  0013B6  D002               	goto	l7443
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;io.c: 279: {
  9200                           ;io.c: 280: Button_Contact_Counter_LB++;
  9201  0013B8  2A0D               	incf	_Button_Contact_Counter_LB,f,c
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;io.c: 282: }
  9205                           
  9206                           ;io.c: 281: break;
  9207  0013BA  D054               	goto	l7467
  9208  0013BC                     l7443:
  9209                           
  9210                           ; BSR set to: 0
  9211                           ;io.c: 283: else {SETxAPIxVAL(19, 1); }
  9212  0013BC  0E00               	movlw	0
  9213  0013BE  0100               	movlb	0	; () banked
  9214  0013C0  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9215  0013C2  0E01               	movlw	1
  9216  0013C4  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9217  0013C6  0E13               	movlw	19
  9218  0013C8  EC95  F016         	call	_SETxAPIxVAL
  9219                           
  9220                           ;io.c: 284: break;
  9221  0013CC  D04B               	goto	l7467
  9222  0013CE                     l7445:
  9223  0013CE  0E00               	movlw	0
  9224  0013D0  6E0D               	movwf	_Button_Contact_Counter_LB,c
  9225                           
  9226                           ;io.c: 287: SETxAPIxVAL(19, 0);
  9227  0013D2  0E00               	movlw	0
  9228  0013D4  0100               	movlb	0	; () banked
  9229  0013D6  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9230  0013D8  0E00               	movlw	0
  9231  0013DA  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9232  0013DC  0E13               	movlw	19
  9233  0013DE  EC95  F016         	call	_SETxAPIxVAL
  9234                           
  9235                           ;io.c: 291: }
  9236                           
  9237                           ;io.c: 290: default : break;
  9238                           
  9239                           ;io.c: 288: break;
  9240  0013E2  D040               	goto	l7467
  9241  0013E4                     l7451:
  9242  0013E4  BA81               	btfsc	3969,5,c	;volatile
  9243  0013E6  D002               	goto	u5990
  9244  0013E8  0E01               	movlw	1
  9245  0013EA  D001               	goto	u6000
  9246  0013EC                     u5990:
  9247  0013EC  0E00               	movlw	0
  9248  0013EE                     u6000:
  9249  0013EE  0100               	movlb	0	; () banked
  9250  0013F0  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9251  0013F2  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9252                           
  9253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9254                           ; Switch size 1, requested type "space"
  9255                           ; Number of cases is 1, Range of values is 0 to 0
  9256                           ; switch strategies available:
  9257                           ; Name         Instructions Cycles
  9258                           ; simple_byte            4     3 (average)
  9259                           ;	Chosen strategy is simple_byte
  9260  0013F4  0100               	movlb	0	; () banked
  9261  0013F6  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9262  0013F8  0A00               	xorlw	0	; case 0
  9263  0013FA  A4D8               	btfss	status,2,c
  9264  0013FC  D033               	goto	l7467
  9265                           
  9266                           ; BSR set to: 0
  9267                           ; Switch size 1, requested type "space"
  9268                           ; Number of cases is 2, Range of values is 0 to 1
  9269                           ; switch strategies available:
  9270                           ; Name         Instructions Cycles
  9271                           ; simple_byte            7     4 (average)
  9272                           ;	Chosen strategy is simple_byte
  9273  0013FE  0100               	movlb	0	; () banked
  9274  001400  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9275  001402  0A00               	xorlw	0	; case 0
  9276  001404  B4D8               	btfsc	status,2,c
  9277  001406  D7E3               	goto	l7445
  9278  001408  0A01               	xorlw	1	; case 1
  9279  00140A  B4D8               	btfsc	status,2,c
  9280  00140C  D7C4               	goto	l7437
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;io.c: 294: switch(!PORTBbits.RB4)
  9284  00140E  D02A               	goto	l7467
  9285  001410                     l7453:
  9286                           
  9287                           ; BSR set to: 0
  9288  001410  0100               	movlb	0	; () banked
  9289  001412  51EC               	movf	_Button_Contact_Counter_LF& (0+255),w,b
  9290  001414  0100               	movlb	0	; () banked
  9291  001416  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9292  001418  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9293  00141A  0E0B               	movlw	11
  9294  00141C  ECA5  F016         	call	_GETxAPIxVAL
  9295  001420  0100               	movlb	0	; () banked
  9296  001422  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9297  001424  0100               	movlb	0	; () banked
  9298  001426  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9299  001428  0100               	movlb	0	; () banked
  9300  00142A  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9301  00142C  0100               	movlb	0	; () banked
  9302  00142E  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9303  001430  A0D8               	btfss	status,0,c
  9304  001432  D003               	goto	l7459
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;io.c: 297: {
  9308                           ;io.c: 298: Button_Contact_Counter_LF++;
  9309  001434  0100               	movlb	0	; () banked
  9310  001436  2BEC               	incf	_Button_Contact_Counter_LF& (0+255),f,b
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;io.c: 300: }
  9314                           
  9315                           ;io.c: 299: break;
  9316  001438  D055               	goto	l7483
  9317  00143A                     l7459:
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;io.c: 301: else {SETxAPIxVAL(20, 1); }
  9321  00143A  0E00               	movlw	0
  9322  00143C  0100               	movlb	0	; () banked
  9323  00143E  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9324  001440  0E01               	movlw	1
  9325  001442  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9326  001444  0E14               	movlw	20
  9327  001446  EC95  F016         	call	_SETxAPIxVAL
  9328                           
  9329                           ;io.c: 302: break;
  9330  00144A  D04C               	goto	l7483
  9331  00144C                     l7461:
  9332  00144C  0E00               	movlw	0
  9333  00144E  0100               	movlb	0	; () banked
  9334  001450  6FEC               	movwf	_Button_Contact_Counter_LF& (0+255),b
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;io.c: 305: SETxAPIxVAL(20, 0);
  9338  001452  0E00               	movlw	0
  9339  001454  0100               	movlb	0	; () banked
  9340  001456  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9341  001458  0E00               	movlw	0
  9342  00145A  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9343  00145C  0E14               	movlw	20
  9344  00145E  EC95  F016         	call	_SETxAPIxVAL
  9345                           
  9346                           ;io.c: 309: }
  9347                           
  9348                           ;io.c: 308: default : break;
  9349                           
  9350                           ;io.c: 306: break;
  9351  001462  D040               	goto	l7483
  9352  001464                     l7467:
  9353  001464  B881               	btfsc	3969,4,c	;volatile
  9354  001466  D002               	goto	u6020
  9355  001468  0E01               	movlw	1
  9356  00146A  D001               	goto	u6030
  9357  00146C                     u6020:
  9358  00146C  0E00               	movlw	0
  9359  00146E                     u6030:
  9360  00146E  0100               	movlb	0	; () banked
  9361  001470  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9362  001472  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9363                           
  9364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9365                           ; Switch size 1, requested type "space"
  9366                           ; Number of cases is 1, Range of values is 0 to 0
  9367                           ; switch strategies available:
  9368                           ; Name         Instructions Cycles
  9369                           ; simple_byte            4     3 (average)
  9370                           ;	Chosen strategy is simple_byte
  9371  001474  0100               	movlb	0	; () banked
  9372  001476  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9373  001478  0A00               	xorlw	0	; case 0
  9374  00147A  A4D8               	btfss	status,2,c
  9375  00147C  D033               	goto	l7483
  9376                           
  9377                           ; BSR set to: 0
  9378                           ; Switch size 1, requested type "space"
  9379                           ; Number of cases is 2, Range of values is 0 to 1
  9380                           ; switch strategies available:
  9381                           ; Name         Instructions Cycles
  9382                           ; simple_byte            7     4 (average)
  9383                           ;	Chosen strategy is simple_byte
  9384  00147E  0100               	movlb	0	; () banked
  9385  001480  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9386  001482  0A00               	xorlw	0	; case 0
  9387  001484  B4D8               	btfsc	status,2,c
  9388  001486  D7E2               	goto	l7461
  9389  001488  0A01               	xorlw	1	; case 1
  9390  00148A  B4D8               	btfsc	status,2,c
  9391  00148C  D7C1               	goto	l7453
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;io.c: 312: switch(!PORTBbits.RB3)
  9395  00148E  D02A               	goto	l7483
  9396  001490                     l7469:
  9397                           
  9398                           ; BSR set to: 0
  9399  001490  0100               	movlb	0	; () banked
  9400  001492  51ED               	movf	_Button_Contact_Counter_RB& (0+255),w,b
  9401  001494  0100               	movlb	0	; () banked
  9402  001496  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9403  001498  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9404  00149A  0E0B               	movlw	11
  9405  00149C  ECA5  F016         	call	_GETxAPIxVAL
  9406  0014A0  0100               	movlb	0	; () banked
  9407  0014A2  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9408  0014A4  0100               	movlb	0	; () banked
  9409  0014A6  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9410  0014A8  0100               	movlb	0	; () banked
  9411  0014AA  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9412  0014AC  0100               	movlb	0	; () banked
  9413  0014AE  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9414  0014B0  A0D8               	btfss	status,0,c
  9415  0014B2  D003               	goto	l7475
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;io.c: 315: {
  9419                           ;io.c: 316: Button_Contact_Counter_RB++;
  9420  0014B4  0100               	movlb	0	; () banked
  9421  0014B6  2BED               	incf	_Button_Contact_Counter_RB& (0+255),f,b
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;io.c: 318: }
  9425                           
  9426                           ;io.c: 317: break;
  9427  0014B8  D055               	goto	l7499
  9428  0014BA                     l7475:
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;io.c: 319: else {SETxAPIxVAL(21, 1); }
  9432  0014BA  0E00               	movlw	0
  9433  0014BC  0100               	movlb	0	; () banked
  9434  0014BE  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9435  0014C0  0E01               	movlw	1
  9436  0014C2  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9437  0014C4  0E15               	movlw	21
  9438  0014C6  EC95  F016         	call	_SETxAPIxVAL
  9439                           
  9440                           ;io.c: 320: break;
  9441  0014CA  D04C               	goto	l7499
  9442  0014CC                     l7477:
  9443  0014CC  0E00               	movlw	0
  9444  0014CE  0100               	movlb	0	; () banked
  9445  0014D0  6FED               	movwf	_Button_Contact_Counter_RB& (0+255),b
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;io.c: 323: SETxAPIxVAL(21, 0);
  9449  0014D2  0E00               	movlw	0
  9450  0014D4  0100               	movlb	0	; () banked
  9451  0014D6  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9452  0014D8  0E00               	movlw	0
  9453  0014DA  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9454  0014DC  0E15               	movlw	21
  9455  0014DE  EC95  F016         	call	_SETxAPIxVAL
  9456                           
  9457                           ;io.c: 327: }
  9458                           
  9459                           ;io.c: 326: default : break;
  9460                           
  9461                           ;io.c: 324: break;
  9462  0014E2  D040               	goto	l7499
  9463  0014E4                     l7483:
  9464  0014E4  B681               	btfsc	3969,3,c	;volatile
  9465  0014E6  D002               	goto	u6050
  9466  0014E8  0E01               	movlw	1
  9467  0014EA  D001               	goto	u6060
  9468  0014EC                     u6050:
  9469  0014EC  0E00               	movlw	0
  9470  0014EE                     u6060:
  9471  0014EE  0100               	movlb	0	; () banked
  9472  0014F0  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9473  0014F2  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9474                           
  9475                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9476                           ; Switch size 1, requested type "space"
  9477                           ; Number of cases is 1, Range of values is 0 to 0
  9478                           ; switch strategies available:
  9479                           ; Name         Instructions Cycles
  9480                           ; simple_byte            4     3 (average)
  9481                           ;	Chosen strategy is simple_byte
  9482  0014F4  0100               	movlb	0	; () banked
  9483  0014F6  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9484  0014F8  0A00               	xorlw	0	; case 0
  9485  0014FA  A4D8               	btfss	status,2,c
  9486  0014FC  D033               	goto	l7499
  9487                           
  9488                           ; BSR set to: 0
  9489                           ; Switch size 1, requested type "space"
  9490                           ; Number of cases is 2, Range of values is 0 to 1
  9491                           ; switch strategies available:
  9492                           ; Name         Instructions Cycles
  9493                           ; simple_byte            7     4 (average)
  9494                           ;	Chosen strategy is simple_byte
  9495  0014FE  0100               	movlb	0	; () banked
  9496  001500  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9497  001502  0A00               	xorlw	0	; case 0
  9498  001504  B4D8               	btfsc	status,2,c
  9499  001506  D7E2               	goto	l7477
  9500  001508  0A01               	xorlw	1	; case 1
  9501  00150A  B4D8               	btfsc	status,2,c
  9502  00150C  D7C1               	goto	l7469
  9503                           
  9504                           ; BSR set to: 0
  9505                           ;io.c: 330: switch(!PORTBbits.RB2)
  9506  00150E  D02A               	goto	l7499
  9507  001510                     l7485:
  9508                           
  9509                           ; BSR set to: 0
  9510  001510  0100               	movlb	0	; () banked
  9511  001512  51EE               	movf	_Button_Contact_Counter_RF& (0+255),w,b
  9512  001514  0100               	movlb	0	; () banked
  9513  001516  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9514  001518  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9515  00151A  0E0B               	movlw	11
  9516  00151C  ECA5  F016         	call	_GETxAPIxVAL
  9517  001520  0100               	movlb	0	; () banked
  9518  001522  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9519  001524  0100               	movlb	0	; () banked
  9520  001526  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9521  001528  0100               	movlb	0	; () banked
  9522  00152A  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9523  00152C  0100               	movlb	0	; () banked
  9524  00152E  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9525  001530  A0D8               	btfss	status,0,c
  9526  001532  D003               	goto	l7491
  9527                           
  9528                           ; BSR set to: 0
  9529                           ;io.c: 333: {
  9530                           ;io.c: 334: Button_Contact_Counter_RF++;
  9531  001534  0100               	movlb	0	; () banked
  9532  001536  2BEE               	incf	_Button_Contact_Counter_RF& (0+255),f,b
  9533                           
  9534                           ; BSR set to: 0
  9535                           ;io.c: 336: }
  9536                           
  9537                           ;io.c: 335: break;
  9538  001538  D052               	goto	l7515
  9539  00153A                     l7491:
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;io.c: 337: else {SETxAPIxVAL(22, 1); }
  9543  00153A  0E00               	movlw	0
  9544  00153C  0100               	movlb	0	; () banked
  9545  00153E  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9546  001540  0E01               	movlw	1
  9547  001542  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9548  001544  0E16               	movlw	22
  9549  001546  EC95  F016         	call	_SETxAPIxVAL
  9550                           
  9551                           ;io.c: 338: break;
  9552  00154A  D049               	goto	l7515
  9553  00154C                     l7493:
  9554  00154C  0E00               	movlw	0
  9555  00154E  0100               	movlb	0	; () banked
  9556  001550  6FEE               	movwf	_Button_Contact_Counter_RF& (0+255),b
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;io.c: 341: SETxAPIxVAL(22, 0);
  9560  001552  0E00               	movlw	0
  9561  001554  0100               	movlb	0	; () banked
  9562  001556  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9563  001558  0E00               	movlw	0
  9564  00155A  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9565  00155C  0E16               	movlw	22
  9566  00155E  EC95  F016         	call	_SETxAPIxVAL
  9567                           
  9568                           ;io.c: 345: }
  9569                           
  9570                           ;io.c: 344: default : break;
  9571                           
  9572                           ;io.c: 342: break;
  9573  001562  D03D               	goto	l7515
  9574  001564                     l7499:
  9575  001564  B481               	btfsc	3969,2,c	;volatile
  9576  001566  D002               	goto	u6080
  9577  001568  0E01               	movlw	1
  9578  00156A  D001               	goto	u6090
  9579  00156C                     u6080:
  9580  00156C  0E00               	movlw	0
  9581  00156E                     u6090:
  9582  00156E  0100               	movlb	0	; () banked
  9583  001570  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9584  001572  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9585                           
  9586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9587                           ; Switch size 1, requested type "space"
  9588                           ; Number of cases is 1, Range of values is 0 to 0
  9589                           ; switch strategies available:
  9590                           ; Name         Instructions Cycles
  9591                           ; simple_byte            4     3 (average)
  9592                           ;	Chosen strategy is simple_byte
  9593  001574  0100               	movlb	0	; () banked
  9594  001576  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9595  001578  0A00               	xorlw	0	; case 0
  9596  00157A  A4D8               	btfss	status,2,c
  9597  00157C  D030               	goto	l7515
  9598                           
  9599                           ; BSR set to: 0
  9600                           ; Switch size 1, requested type "space"
  9601                           ; Number of cases is 2, Range of values is 0 to 1
  9602                           ; switch strategies available:
  9603                           ; Name         Instructions Cycles
  9604                           ; simple_byte            7     4 (average)
  9605                           ;	Chosen strategy is simple_byte
  9606  00157E  0100               	movlb	0	; () banked
  9607  001580  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9608  001582  0A00               	xorlw	0	; case 0
  9609  001584  B4D8               	btfsc	status,2,c
  9610  001586  D7E2               	goto	l7493
  9611  001588  0A01               	xorlw	1	; case 1
  9612  00158A  B4D8               	btfsc	status,2,c
  9613  00158C  D7C1               	goto	l7485
  9614                           
  9615                           ; BSR set to: 0
  9616                           ;io.c: 348: switch(PORTCbits.RC1)
  9617  00158E  D027               	goto	l7515
  9618  001590                     l7501:
  9619  001590  5014               	movf	_Reed_Contact_LMU_Counter,w,c
  9620  001592  0100               	movlb	0	; () banked
  9621  001594  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9622  001596  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9623  001598  0E0B               	movlw	11
  9624  00159A  ECA5  F016         	call	_GETxAPIxVAL
  9625  00159E  0100               	movlb	0	; () banked
  9626  0015A0  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9627  0015A2  0100               	movlb	0	; () banked
  9628  0015A4  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9629  0015A6  0100               	movlb	0	; () banked
  9630  0015A8  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9631  0015AA  0100               	movlb	0	; () banked
  9632  0015AC  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9633  0015AE  A0D8               	btfss	status,0,c
  9634  0015B0  D002               	goto	l7507
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;io.c: 351: {
  9638                           ;io.c: 352: Reed_Contact_LMU_Counter++;
  9639  0015B2  2A14               	incf	_Reed_Contact_LMU_Counter,f,c
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;io.c: 354: }
  9643                           
  9644                           ;io.c: 353: break;
  9645  0015B4  D047               	goto	l7531
  9646  0015B6                     l7507:
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;io.c: 355: else {SETxAPIxVAL(25, 1); }
  9650  0015B6  0E00               	movlw	0
  9651  0015B8  0100               	movlb	0	; () banked
  9652  0015BA  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9653  0015BC  0E01               	movlw	1
  9654  0015BE  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9655  0015C0  0E19               	movlw	25
  9656  0015C2  EC95  F016         	call	_SETxAPIxVAL
  9657                           
  9658                           ;io.c: 356: break;
  9659  0015C6  D03E               	goto	l7531
  9660  0015C8                     l7509:
  9661  0015C8  0E00               	movlw	0
  9662  0015CA  6E14               	movwf	_Reed_Contact_LMU_Counter,c
  9663                           
  9664                           ;io.c: 359: SETxAPIxVAL(25, 0);
  9665  0015CC  0E00               	movlw	0
  9666  0015CE  0100               	movlb	0	; () banked
  9667  0015D0  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9668  0015D2  0E00               	movlw	0
  9669  0015D4  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9670  0015D6  0E19               	movlw	25
  9671  0015D8  EC95  F016         	call	_SETxAPIxVAL
  9672                           
  9673                           ;io.c: 363: }
  9674                           
  9675                           ;io.c: 362: default : break;
  9676                           
  9677                           ;io.c: 360: break;
  9678  0015DC  D033               	goto	l7531
  9679  0015DE                     l7515:
  9680  0015DE  A282               	btfss	3970,1,c	;volatile
  9681  0015E0  D002               	goto	u6110
  9682  0015E2  0E01               	movlw	1
  9683  0015E4  D001               	goto	u6116
  9684  0015E6                     u6110:
  9685  0015E6  0E00               	movlw	0
  9686  0015E8                     u6116:
  9687                           
  9688                           ; Switch size 1, requested type "space"
  9689                           ; Number of cases is 2, Range of values is 0 to 1
  9690                           ; switch strategies available:
  9691                           ; Name         Instructions Cycles
  9692                           ; simple_byte            7     4 (average)
  9693                           ;	Chosen strategy is simple_byte
  9694  0015E8  0A00               	xorlw	0	; case 0
  9695  0015EA  B4D8               	btfsc	status,2,c
  9696  0015EC  D7ED               	goto	l7509
  9697  0015EE  0A01               	xorlw	1	; case 1
  9698  0015F0  B4D8               	btfsc	status,2,c
  9699  0015F2  D7CE               	goto	l7501
  9700                           
  9701                           ;io.c: 366: switch(PORTDbits.RD4)
  9702  0015F4  D027               	goto	l7531
  9703  0015F6                     l7517:
  9704  0015F6  5013               	movf	_Reed_Contact_LMD_Counter,w,c
  9705  0015F8  0100               	movlb	0	; () banked
  9706  0015FA  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9707  0015FC  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9708  0015FE  0E0B               	movlw	11
  9709  001600  ECA5  F016         	call	_GETxAPIxVAL
  9710  001604  0100               	movlb	0	; () banked
  9711  001606  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9712  001608  0100               	movlb	0	; () banked
  9713  00160A  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9714  00160C  0100               	movlb	0	; () banked
  9715  00160E  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9716  001610  0100               	movlb	0	; () banked
  9717  001612  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9718  001614  A0D8               	btfss	status,0,c
  9719  001616  D002               	goto	l7523
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;io.c: 369: {
  9723                           ;io.c: 370: Reed_Contact_LMD_Counter++;
  9724  001618  2A13               	incf	_Reed_Contact_LMD_Counter,f,c
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;io.c: 372: }
  9728                           
  9729                           ;io.c: 371: break;
  9730  00161A  D047               	goto	l7547
  9731  00161C                     l7523:
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;io.c: 373: else {SETxAPIxVAL(26, 1); }
  9735  00161C  0E00               	movlw	0
  9736  00161E  0100               	movlb	0	; () banked
  9737  001620  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9738  001622  0E01               	movlw	1
  9739  001624  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9740  001626  0E1A               	movlw	26
  9741  001628  EC95  F016         	call	_SETxAPIxVAL
  9742                           
  9743                           ;io.c: 374: break;
  9744  00162C  D03E               	goto	l7547
  9745  00162E                     l7525:
  9746  00162E  0E00               	movlw	0
  9747  001630  6E13               	movwf	_Reed_Contact_LMD_Counter,c
  9748                           
  9749                           ;io.c: 377: SETxAPIxVAL(26, 0);
  9750  001632  0E00               	movlw	0
  9751  001634  0100               	movlb	0	; () banked
  9752  001636  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9753  001638  0E00               	movlw	0
  9754  00163A  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9755  00163C  0E1A               	movlw	26
  9756  00163E  EC95  F016         	call	_SETxAPIxVAL
  9757                           
  9758                           ;io.c: 381: }
  9759                           
  9760                           ;io.c: 380: default : break;
  9761                           
  9762                           ;io.c: 378: break;
  9763  001642  D033               	goto	l7547
  9764  001644                     l7531:
  9765  001644  A883               	btfss	3971,4,c	;volatile
  9766  001646  D002               	goto	u6130
  9767  001648  0E01               	movlw	1
  9768  00164A  D001               	goto	u6136
  9769  00164C                     u6130:
  9770  00164C  0E00               	movlw	0
  9771  00164E                     u6136:
  9772                           
  9773                           ; Switch size 1, requested type "space"
  9774                           ; Number of cases is 2, Range of values is 0 to 1
  9775                           ; switch strategies available:
  9776                           ; Name         Instructions Cycles
  9777                           ; simple_byte            7     4 (average)
  9778                           ;	Chosen strategy is simple_byte
  9779  00164E  0A00               	xorlw	0	; case 0
  9780  001650  B4D8               	btfsc	status,2,c
  9781  001652  D7ED               	goto	l7525
  9782  001654  0A01               	xorlw	1	; case 1
  9783  001656  B4D8               	btfsc	status,2,c
  9784  001658  D7CE               	goto	l7517
  9785                           
  9786                           ;io.c: 384: switch(PORTCbits.RC4)
  9787  00165A  D027               	goto	l7547
  9788  00165C                     l7533:
  9789  00165C  5018               	movf	_Reed_Contact_RMU_Counter,w,c
  9790  00165E  0100               	movlb	0	; () banked
  9791  001660  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9792  001662  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9793  001664  0E0B               	movlw	11
  9794  001666  ECA5  F016         	call	_GETxAPIxVAL
  9795  00166A  0100               	movlb	0	; () banked
  9796  00166C  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9797  00166E  0100               	movlb	0	; () banked
  9798  001670  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9799  001672  0100               	movlb	0	; () banked
  9800  001674  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9801  001676  0100               	movlb	0	; () banked
  9802  001678  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9803  00167A  A0D8               	btfss	status,0,c
  9804  00167C  D002               	goto	l7539
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;io.c: 387: {
  9808                           ;io.c: 388: Reed_Contact_RMU_Counter++;
  9809  00167E  2A18               	incf	_Reed_Contact_RMU_Counter,f,c
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;io.c: 390: }
  9813                           
  9814                           ;io.c: 389: break;
  9815  001680  D047               	goto	l7563
  9816  001682                     l7539:
  9817                           
  9818                           ; BSR set to: 0
  9819                           ;io.c: 391: else {SETxAPIxVAL(27, 1); }
  9820  001682  0E00               	movlw	0
  9821  001684  0100               	movlb	0	; () banked
  9822  001686  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9823  001688  0E01               	movlw	1
  9824  00168A  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9825  00168C  0E1B               	movlw	27
  9826  00168E  EC95  F016         	call	_SETxAPIxVAL
  9827                           
  9828                           ;io.c: 392: break;
  9829  001692  D03E               	goto	l7563
  9830  001694                     l7541:
  9831  001694  0E00               	movlw	0
  9832  001696  6E18               	movwf	_Reed_Contact_RMU_Counter,c
  9833                           
  9834                           ;io.c: 395: SETxAPIxVAL(27, 0);
  9835  001698  0E00               	movlw	0
  9836  00169A  0100               	movlb	0	; () banked
  9837  00169C  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9838  00169E  0E00               	movlw	0
  9839  0016A0  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9840  0016A2  0E1B               	movlw	27
  9841  0016A4  EC95  F016         	call	_SETxAPIxVAL
  9842                           
  9843                           ;io.c: 399: }
  9844                           
  9845                           ;io.c: 398: default : break;
  9846                           
  9847                           ;io.c: 396: break;
  9848  0016A8  D033               	goto	l7563
  9849  0016AA                     l7547:
  9850  0016AA  A882               	btfss	3970,4,c	;volatile
  9851  0016AC  D002               	goto	u6150
  9852  0016AE  0E01               	movlw	1
  9853  0016B0  D001               	goto	u6156
  9854  0016B2                     u6150:
  9855  0016B2  0E00               	movlw	0
  9856  0016B4                     u6156:
  9857                           
  9858                           ; Switch size 1, requested type "space"
  9859                           ; Number of cases is 2, Range of values is 0 to 1
  9860                           ; switch strategies available:
  9861                           ; Name         Instructions Cycles
  9862                           ; simple_byte            7     4 (average)
  9863                           ;	Chosen strategy is simple_byte
  9864  0016B4  0A00               	xorlw	0	; case 0
  9865  0016B6  B4D8               	btfsc	status,2,c
  9866  0016B8  D7ED               	goto	l7541
  9867  0016BA  0A01               	xorlw	1	; case 1
  9868  0016BC  B4D8               	btfsc	status,2,c
  9869  0016BE  D7CE               	goto	l7533
  9870                           
  9871                           ;io.c: 402: switch(PORTCbits.RC5)
  9872  0016C0  D027               	goto	l7563
  9873  0016C2                     l7549:
  9874  0016C2  5017               	movf	_Reed_Contact_RMD_Counter,w,c
  9875  0016C4  0100               	movlb	0	; () banked
  9876  0016C6  6FFC               	movwf	??_Debounce_Inputs& (0+255),b
  9877  0016C8  6BFD               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9878  0016CA  0E0B               	movlw	11
  9879  0016CC  ECA5  F016         	call	_GETxAPIxVAL
  9880  0016D0  0100               	movlb	0	; () banked
  9881  0016D2  51FC               	movf	??_Debounce_Inputs& (0+255),w,b
  9882  0016D4  0100               	movlb	0	; () banked
  9883  0016D6  5DF9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9884  0016D8  0100               	movlb	0	; () banked
  9885  0016DA  51FD               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9886  0016DC  0100               	movlb	0	; () banked
  9887  0016DE  59FA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9888  0016E0  A0D8               	btfss	status,0,c
  9889  0016E2  D002               	goto	l7555
  9890                           
  9891                           ; BSR set to: 0
  9892                           ;io.c: 405: {
  9893                           ;io.c: 406: Reed_Contact_RMD_Counter++;
  9894  0016E4  2A17               	incf	_Reed_Contact_RMD_Counter,f,c
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;io.c: 408: }
  9898                           
  9899                           ;io.c: 407: break;
  9900  0016E6  0012               	return	
  9901  0016E8                     l7555:
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;io.c: 409: else {SETxAPIxVAL(28, 1); }
  9905  0016E8  0E00               	movlw	0
  9906  0016EA  0100               	movlb	0	; () banked
  9907  0016EC  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9908  0016EE  0E01               	movlw	1
  9909  0016F0  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9910  0016F2  0E1C               	movlw	28
  9911  0016F4  EC95  F016         	call	_SETxAPIxVAL
  9912                           
  9913                           ;io.c: 410: break;
  9914  0016F8  0012               	return	
  9915  0016FA                     l7557:
  9916  0016FA  0E00               	movlw	0
  9917  0016FC  6E17               	movwf	_Reed_Contact_RMD_Counter,c
  9918                           
  9919                           ;io.c: 413: SETxAPIxVAL(28, 0);
  9920  0016FE  0E00               	movlw	0
  9921  001700  0100               	movlb	0	; () banked
  9922  001702  6FFA               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9923  001704  0E00               	movlw	0
  9924  001706  6FF9               	movwf	SETxAPIxVAL@value& (0+255),b
  9925  001708  0E1C               	movlw	28
  9926  00170A  EC95  F016         	call	_SETxAPIxVAL
  9927                           
  9928                           ;io.c: 417: }
  9929                           
  9930                           ;io.c: 416: default : break;
  9931                           
  9932                           ;io.c: 414: break;
  9933  00170E  0012               	return	
  9934  001710                     l7563:
  9935  001710  AA82               	btfss	3970,5,c	;volatile
  9936  001712  D002               	goto	u6170
  9937  001714  0E01               	movlw	1
  9938  001716  D001               	goto	u6176
  9939  001718                     u6170:
  9940  001718  0E00               	movlw	0
  9941  00171A                     u6176:
  9942                           
  9943                           ; Switch size 1, requested type "space"
  9944                           ; Number of cases is 2, Range of values is 0 to 1
  9945                           ; switch strategies available:
  9946                           ; Name         Instructions Cycles
  9947                           ; simple_byte            7     4 (average)
  9948                           ;	Chosen strategy is simple_byte
  9949  00171A  0A00               	xorlw	0	; case 0
  9950  00171C  B4D8               	btfsc	status,2,c
  9951  00171E  D7ED               	goto	l7557
  9952  001720  0A01               	xorlw	1	; case 1
  9953  001722  A4D8               	btfss	status,2,c
  9954  001724  0012               	return	
  9955  001726  D7CD               	goto	l7549
  9956  001728                     __end_of_Debounce_Inputs:
  9957                           	opt stack 0
  9958                           tblptru	equ	0xFF8
  9959                           tblptrh	equ	0xFF7
  9960                           tblptrl	equ	0xFF6
  9961                           tablat	equ	0xFF5
  9962                           intcon	equ	0xFF2
  9963                           postinc0	equ	0xFEE
  9964                           wreg	equ	0xFE8
  9965                           postdec1	equ	0xFE5
  9966                           fsr1l	equ	0xFE1
  9967                           status	equ	0xFD8
  9968                           
  9969 ;; *************** function _DECRxAPIxVAL *****************
  9970 ;; Defined at:
  9971 ;;		line 151 in file "../api.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;  index           1    wreg     unsigned char 
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;  index           1    5[BANK0 ] unsigned char 
  9976 ;;  value           2    3[BANK0 ] unsigned int 
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  1    wreg      void 
  9979 ;; Registers used:
  9980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9986 ;;      Params:         0       0       0       0       0       0       0       0       0
  9987 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9989 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9990 ;;Total ram usage:        3 bytes
  9991 ;; Hardware stack levels used:    1
  9992 ;; Hardware stack levels required when called:    5
  9993 ;; This function calls:
  9994 ;;		_GETxAPIxVAL
  9995 ;;		_SETxAPIxVAL
  9996 ;; This function is called by:
  9997 ;;		_Update_StateMchn
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           	psect	text19
 10002  002C76                     __ptext19:
 10003                           	opt stack 0
 10004  002C76                     _DECRxAPIxVAL:
 10005                           	opt stack 24
 10006                           
 10007                           ;incstack = 0
 10008                           ;DECRxAPIxVAL@index stored from wreg
 10009  002C76  0100               	movlb	0	; () banked
 10010  002C78  6FFE               	movwf	DECRxAPIxVAL@index& (0+255),b
 10011                           
 10012                           ;api.c: 152: unsigned int value;
 10013                           ;api.c: 153: value = GETxAPIxVAL(index);
 10014  002C7A  0100               	movlb	0	; () banked
 10015  002C7C  51FE               	movf	DECRxAPIxVAL@index& (0+255),w,b
 10016  002C7E  ECA5  F016         	call	_GETxAPIxVAL
 10017  002C82  C0F9  F0FC         	movff	?_GETxAPIxVAL,DECRxAPIxVAL@value
 10018  002C86  C0FA  F0FD         	movff	?_GETxAPIxVAL+1,DECRxAPIxVAL@value+1
 10019                           
 10020                           ;api.c: 154: value--;
 10021  002C8A  0100               	movlb	0	; () banked
 10022  002C8C  07FC               	decf	DECRxAPIxVAL@value& (0+255),f,b
 10023  002C8E  A0D8               	btfss	status,0,c
 10024  002C90  07FD               	decf	(DECRxAPIxVAL@value+1)& (0+255),f,b
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;api.c: 155: SETxAPIxVAL(index, value);
 10028  002C92  C0FC  F0F9         	movff	DECRxAPIxVAL@value,SETxAPIxVAL@value
 10029  002C96  C0FD  F0FA         	movff	DECRxAPIxVAL@value+1,SETxAPIxVAL@value+1
 10030  002C9A  0100               	movlb	0	; () banked
 10031  002C9C  51FE               	movf	DECRxAPIxVAL@index& (0+255),w,b
 10032  002C9E  EC95  F016         	call	_SETxAPIxVAL
 10033  002CA2  0012               	return		;funcret
 10034  002CA4                     __end_of_DECRxAPIxVAL:
 10035                           	opt stack 0
 10036                           tblptru	equ	0xFF8
 10037                           tblptrh	equ	0xFF7
 10038                           tblptrl	equ	0xFF6
 10039                           tablat	equ	0xFF5
 10040                           intcon	equ	0xFF2
 10041                           postinc0	equ	0xFEE
 10042                           wreg	equ	0xFE8
 10043                           postdec1	equ	0xFE5
 10044                           fsr1l	equ	0xFE1
 10045                           status	equ	0xFD8
 10046                           
 10047 ;; *************** function _SETxAPIxVAL *****************
 10048 ;; Defined at:
 10049 ;;		line 137 in file "../api.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  index           1    wreg     unsigned char 
 10052 ;;  value           2    0[BANK0 ] unsigned int 
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;  index           1    2[BANK0 ] unsigned char 
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  1    wreg      void 
 10057 ;; Registers used:
 10058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10064 ;;      Params:         0       2       0       0       0       0       0       0       0
 10065 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10066 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10067 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10068 ;;Total ram usage:        3 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; Hardware stack levels required when called:    4
 10071 ;; This function calls:
 10072 ;;		Nothing
 10073 ;; This function is called by:
 10074 ;;		_Update_StateMchn
 10075 ;;		_INCRxAPIxVAL
 10076 ;;		_DECRxAPIxVAL
 10077 ;;		_Debounce_Inputs
 10078 ;; This function uses a non-reentrant model
 10079 ;;
 10080                           
 10081                           	psect	text20
 10082  002D2A                     __ptext20:
 10083                           	opt stack 0
 10084  002D2A                     _SETxAPIxVAL:
 10085                           	opt stack 25
 10086                           
 10087                           ;incstack = 0
 10088                           ;SETxAPIxVAL@index stored from wreg
 10089  002D2A  0100               	movlb	0	; () banked
 10090  002D2C  6FFB               	movwf	SETxAPIxVAL@index& (0+255),b
 10091                           
 10092                           ;api.c: 138: API[index] = value;
 10093  002D2E  0100               	movlb	0	; () banked
 10094  002D30  51FB               	movf	SETxAPIxVAL@index& (0+255),w,b
 10095  002D32  0D02               	mullw	2
 10096  002D34  0E60               	movlw	low _API
 10097  002D36  24F3               	addwf	prodl,w,c
 10098  002D38  6ED9               	movwf	fsr2l,c
 10099  002D3A  0E00               	movlw	high _API
 10100  002D3C  20F4               	addwfc	prodh,w,c
 10101  002D3E  6EDA               	movwf	fsr2h,c
 10102  002D40  C0F9  FFDE         	movff	SETxAPIxVAL@value,postinc2
 10103  002D44  C0FA  FFDD         	movff	SETxAPIxVAL@value+1,postdec2
 10104                           
 10105                           ; BSR set to: 0
 10106  002D48  0012               	return		;funcret
 10107  002D4A                     __end_of_SETxAPIxVAL:
 10108                           	opt stack 0
 10109                           tblptru	equ	0xFF8
 10110                           tblptrh	equ	0xFF7
 10111                           tblptrl	equ	0xFF6
 10112                           tablat	equ	0xFF5
 10113                           prodh	equ	0xFF4
 10114                           prodl	equ	0xFF3
 10115                           intcon	equ	0xFF2
 10116                           postinc0	equ	0xFEE
 10117                           wreg	equ	0xFE8
 10118                           postdec1	equ	0xFE5
 10119                           fsr1l	equ	0xFE1
 10120                           postinc2	equ	0xFDE
 10121                           postdec2	equ	0xFDD
 10122                           fsr2h	equ	0xFDA
 10123                           fsr2l	equ	0xFD9
 10124                           status	equ	0xFD8
 10125                           
 10126 ;; *************** function _GETxAPIxVAL *****************
 10127 ;; Defined at:
 10128 ;;		line 140 in file "../api.c"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;  index           1    wreg     unsigned char 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;  index           1    2[BANK0 ] unsigned char 
 10133 ;; Return value:  Size  Location     Type
 10134 ;;                  2    0[BANK0 ] unsigned int 
 10135 ;; Registers used:
 10136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10137 ;; Tracked objects:
 10138 ;;		On entry : 0/0
 10139 ;;		On exit  : 0/0
 10140 ;;		Unchanged: 0/0
 10141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10142 ;;      Params:         0       2       0       0       0       0       0       0       0
 10143 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10145 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10146 ;;Total ram usage:        3 bytes
 10147 ;; Hardware stack levels used:    1
 10148 ;; Hardware stack levels required when called:    4
 10149 ;; This function calls:
 10150 ;;		Nothing
 10151 ;; This function is called by:
 10152 ;;		_Update_StateMchn
 10153 ;;		_Train_Path
 10154 ;;		_INCRxAPIxVAL
 10155 ;;		_DECRxAPIxVAL
 10156 ;;		_Eeprom_Store
 10157 ;;		_Debounce_Inputs
 10158 ;;		_Junction
 10159 ;;		_Train_Move_Left_Start
 10160 ;;		_Right_Mountain_From_The_Right
 10161 ;;		_Left_Mountain_From_The_Right
 10162 ;;		_Train_Move_Left_Brake
 10163 ;;		_Train_Move_Right_Start
 10164 ;;		_Left_Mountain_From_The_Left
 10165 ;;		_Right_Mountain_From_The_Left
 10166 ;;		_Train_Move_Right_Brake
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           	psect	text21
 10171  002D4A                     __ptext21:
 10172                           	opt stack 0
 10173  002D4A                     _GETxAPIxVAL:
 10174                           	opt stack 23
 10175                           
 10176                           ; BSR set to: 0
 10177                           ;incstack = 0
 10178                           ;GETxAPIxVAL@index stored from wreg
 10179  002D4A  0100               	movlb	0	; () banked
 10180  002D4C  6FFB               	movwf	GETxAPIxVAL@index& (0+255),b
 10181                           
 10182                           ;api.c: 141: return API[index];
 10183  002D4E  0100               	movlb	0	; () banked
 10184  002D50  51FB               	movf	GETxAPIxVAL@index& (0+255),w,b
 10185  002D52  0D02               	mullw	2
 10186  002D54  0E60               	movlw	low _API
 10187  002D56  24F3               	addwf	prodl,w,c
 10188  002D58  6ED9               	movwf	fsr2l,c
 10189  002D5A  0E00               	movlw	high _API
 10190  002D5C  20F4               	addwfc	prodh,w,c
 10191  002D5E  6EDA               	movwf	fsr2h,c
 10192  002D60  CFDE F0F9          	movff	postinc2,?_GETxAPIxVAL
 10193  002D64  CFDD F0FA          	movff	postdec2,?_GETxAPIxVAL+1
 10194  002D68  0012               	return	
 10195  002D6A                     __end_of_GETxAPIxVAL:
 10196                           	opt stack 0
 10197                           tblptru	equ	0xFF8
 10198                           tblptrh	equ	0xFF7
 10199                           tblptrl	equ	0xFF6
 10200                           tablat	equ	0xFF5
 10201                           prodh	equ	0xFF4
 10202                           prodl	equ	0xFF3
 10203                           intcon	equ	0xFF2
 10204                           postinc0	equ	0xFEE
 10205                           wreg	equ	0xFE8
 10206                           postdec1	equ	0xFE5
 10207                           fsr1l	equ	0xFE1
 10208                           postinc2	equ	0xFDE
 10209                           postdec2	equ	0xFDD
 10210                           fsr2h	equ	0xFDA
 10211                           fsr2l	equ	0xFD9
 10212                           status	equ	0xFD8
 10213                           
 10214 ;; *************** function _Init_Timers *****************
 10215 ;; Defined at:
 10216 ;;		line 181 in file "../Main.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;		None
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;		None
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  1    wreg      void 
 10223 ;; Registers used:
 10224 ;;		wreg, status,2
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10230 ;;      Params:         0       0       0       0       0       0       0       0       0
 10231 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10232 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10233 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10234 ;;Total ram usage:        0 bytes
 10235 ;; Hardware stack levels used:    1
 10236 ;; Hardware stack levels required when called:    4
 10237 ;; This function calls:
 10238 ;;		Nothing
 10239 ;; This function is called by:
 10240 ;;		_main
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           
 10244                           	psect	text22
 10245  002D6A                     __ptext22:
 10246                           	opt stack 0
 10247  002D6A                     _Init_Timers:
 10248                           	opt stack 26
 10249                           
 10250                           ;Main.c: 183: RCONbits.IPEN = 1;
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;incstack = 0
 10254  002D6A  8ED0               	bsf	4048,7,c	;volatile
 10255                           
 10256                           ;Main.c: 184: INTCON = 0xA0;
 10257  002D6C  0EA0               	movlw	160
 10258  002D6E  6EF2               	movwf	intcon,c	;volatile
 10259                           
 10260                           ;Main.c: 185: INTCON2 = 0x84;
 10261  002D70  0E84               	movlw	132
 10262  002D72  6EF1               	movwf	intcon2,c	;volatile
 10263                           
 10264                           ;Main.c: 186: TMR0H = 0x0;
 10265  002D74  0E00               	movlw	0
 10266  002D76  6ED7               	movwf	4055,c	;volatile
 10267                           
 10268                           ;Main.c: 187: TMR0L = 0x0;
 10269  002D78  0E00               	movlw	0
 10270  002D7A  6ED6               	movwf	4054,c	;volatile
 10271                           
 10272                           ;Main.c: 188: T0CON = 0xC3;
 10273  002D7C  0EC3               	movlw	195
 10274  002D7E  6ED5               	movwf	4053,c	;volatile
 10275  002D80  0012               	return		;funcret
 10276  002D82                     __end_of_Init_Timers:
 10277                           	opt stack 0
 10278                           tblptru	equ	0xFF8
 10279                           tblptrh	equ	0xFF7
 10280                           tblptrl	equ	0xFF6
 10281                           tablat	equ	0xFF5
 10282                           prodh	equ	0xFF4
 10283                           prodl	equ	0xFF3
 10284                           intcon	equ	0xFF2
 10285                           intcon2	equ	0xFF1
 10286                           postinc0	equ	0xFEE
 10287                           wreg	equ	0xFE8
 10288                           postdec1	equ	0xFE5
 10289                           fsr1l	equ	0xFE1
 10290                           postinc2	equ	0xFDE
 10291                           postdec2	equ	0xFDD
 10292                           fsr2h	equ	0xFDA
 10293                           fsr2l	equ	0xFD9
 10294                           status	equ	0xFD8
 10295                           
 10296 ;; *************** function _Init_Pwm *****************
 10297 ;; Defined at:
 10298 ;;		line 194 in file "../Main.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;		None
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;		None
 10303 ;; Return value:  Size  Location     Type
 10304 ;;                  1    wreg      void 
 10305 ;; Registers used:
 10306 ;;		wreg, status,2
 10307 ;; Tracked objects:
 10308 ;;		On entry : 0/0
 10309 ;;		On exit  : 0/0
 10310 ;;		Unchanged: 0/0
 10311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10312 ;;      Params:         0       0       0       0       0       0       0       0       0
 10313 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10314 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10315 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10316 ;;Total ram usage:        0 bytes
 10317 ;; Hardware stack levels used:    1
 10318 ;; Hardware stack levels required when called:    4
 10319 ;; This function calls:
 10320 ;;		Nothing
 10321 ;; This function is called by:
 10322 ;;		_main
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           	psect	text23
 10327  002D82                     __ptext23:
 10328                           	opt stack 0
 10329  002D82                     _Init_Pwm:
 10330                           	opt stack 26
 10331                           
 10332                           ;Main.c: 197: PORTCbits.RC0 = 1;
 10333                           
 10334                           ;incstack = 0
 10335  002D82  8082               	bsf	3970,0,c	;volatile
 10336                           
 10337                           ;Main.c: 198: PR2=0xFF;
 10338  002D84  68CB               	setf	4043,c	;volatile
 10339                           
 10340                           ;Main.c: 199: CCPR1L = 0x7F;
 10341  002D86  0E7F               	movlw	127
 10342  002D88  6EBE               	movwf	4030,c	;volatile
 10343                           
 10344                           ;Main.c: 200: CCP1CON = 0x0F;
 10345  002D8A  0E0F               	movlw	15
 10346  002D8C  6EBD               	movwf	4029,c	;volatile
 10347                           
 10348                           ;Main.c: 201: T2CON = 0x04;
 10349  002D8E  0E04               	movlw	4
 10350  002D90  6ECA               	movwf	4042,c	;volatile
 10351                           
 10352                           ;Main.c: 202: TRISCbits.TRISC2=0;TRISCbits.TRISC0=0;;
 10353  002D92  9494               	bcf	3988,2,c	;volatile
 10354  002D94  9094               	bcf	3988,0,c	;volatile
 10355  002D96  0012               	return		;funcret
 10356  002D98                     __end_of_Init_Pwm:
 10357                           	opt stack 0
 10358                           tblptru	equ	0xFF8
 10359                           tblptrh	equ	0xFF7
 10360                           tblptrl	equ	0xFF6
 10361                           tablat	equ	0xFF5
 10362                           prodh	equ	0xFF4
 10363                           prodl	equ	0xFF3
 10364                           intcon	equ	0xFF2
 10365                           intcon2	equ	0xFF1
 10366                           postinc0	equ	0xFEE
 10367                           wreg	equ	0xFE8
 10368                           postdec1	equ	0xFE5
 10369                           fsr1l	equ	0xFE1
 10370                           postinc2	equ	0xFDE
 10371                           postdec2	equ	0xFDD
 10372                           fsr2h	equ	0xFDA
 10373                           fsr2l	equ	0xFD9
 10374                           status	equ	0xFD8
 10375                           
 10376 ;; *************** function _INIT_TERMINAL *****************
 10377 ;; Defined at:
 10378 ;;		line 12 in file "../terminal.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;  i               2    0[BANK0 ] int 
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      void 
 10385 ;; Registers used:
 10386 ;;		wreg, status,2, status,0
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0
 10393 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10395 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10396 ;;Total ram usage:        2 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    4
 10399 ;; This function calls:
 10400 ;;		Nothing
 10401 ;; This function is called by:
 10402 ;;		_main
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406                           	psect	text24
 10407  002C42                     __ptext24:
 10408                           	opt stack 0
 10409  002C42                     _INIT_TERMINAL:
 10410                           	opt stack 26
 10411                           
 10412                           ;terminal.c: 13: int i = 0;
 10413                           
 10414                           ;incstack = 0
 10415  002C42  0E00               	movlw	0
 10416  002C44  0100               	movlb	0	; () banked
 10417  002C46  6FFA               	movwf	(INIT_TERMINAL@i+1)& (0+255),b
 10418  002C48  0E00               	movlw	0
 10419  002C4A  6FF9               	movwf	INIT_TERMINAL@i& (0+255),b
 10420                           
 10421                           ;terminal.c: 14: for (i=0; i<22; i++){
 10422  002C4C  0E00               	movlw	0
 10423  002C4E  0100               	movlb	0	; () banked
 10424  002C50  6FFA               	movwf	(INIT_TERMINAL@i+1)& (0+255),b
 10425  002C52  0E00               	movlw	0
 10426  002C54  6FF9               	movwf	INIT_TERMINAL@i& (0+255),b
 10427  002C56                     l7965:
 10428                           
 10429                           ; BSR set to: 0
 10430  002C56  0100               	movlb	0	; () banked
 10431  002C58  BFFA               	btfsc	(INIT_TERMINAL@i+1)& (0+255),7,b
 10432  002C5A  D008               	goto	l7969
 10433  002C5C  0100               	movlb	0	; () banked
 10434  002C5E  51FA               	movf	(INIT_TERMINAL@i+1)& (0+255),w,b
 10435  002C60  E109               	bnz	l634
 10436  002C62  0E16               	movlw	22
 10437  002C64  0100               	movlb	0	; () banked
 10438  002C66  5DF9               	subwf	INIT_TERMINAL@i& (0+255),w,b
 10439  002C68  B0D8               	btfsc	status,0,c
 10440  002C6A  0012               	return	
 10441  002C6C                     l7969:
 10442                           
 10443                           ; BSR set to: 0
 10444  002C6C  0100               	movlb	0	; () banked
 10445  002C6E  4BF9               	infsnz	INIT_TERMINAL@i& (0+255),f,b
 10446  002C70  2BFA               	incf	(INIT_TERMINAL@i+1)& (0+255),f,b
 10447  002C72  D7F1               	goto	l7965
 10448  002C74                     l634:
 10449                           
 10450                           ; BSR set to: 0
 10451  002C74  0012               	return		;funcret
 10452  002C76                     __end_of_INIT_TERMINAL:
 10453                           	opt stack 0
 10454                           tblptru	equ	0xFF8
 10455                           tblptrh	equ	0xFF7
 10456                           tblptrl	equ	0xFF6
 10457                           tablat	equ	0xFF5
 10458                           prodh	equ	0xFF4
 10459                           prodl	equ	0xFF3
 10460                           intcon	equ	0xFF2
 10461                           intcon2	equ	0xFF1
 10462                           postinc0	equ	0xFEE
 10463                           wreg	equ	0xFE8
 10464                           postdec1	equ	0xFE5
 10465                           fsr1l	equ	0xFE1
 10466                           postinc2	equ	0xFDE
 10467                           postdec2	equ	0xFDD
 10468                           fsr2h	equ	0xFDA
 10469                           fsr2l	equ	0xFD9
 10470                           status	equ	0xFD8
 10471                           
 10472 ;; *************** function _EUSART1_Initialize *****************
 10473 ;; Defined at:
 10474 ;;		line 77 in file "../eusart1.c"
 10475 ;; Parameters:    Size  Location     Type
 10476 ;;		None
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;  baud_rate       2    0[BANK0 ] unsigned int 
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  1    wreg      void 
 10481 ;; Registers used:
 10482 ;;		wreg, status,2
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10488 ;;      Params:         0       0       0       0       0       0       0       0       0
 10489 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10490 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10491 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10492 ;;Total ram usage:        2 bytes
 10493 ;; Hardware stack levels used:    1
 10494 ;; Hardware stack levels required when called:    4
 10495 ;; This function calls:
 10496 ;;		Nothing
 10497 ;; This function is called by:
 10498 ;;		_main
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text25
 10503  002B78                     __ptext25:
 10504                           	opt stack 0
 10505  002B78                     _EUSART1_Initialize:
 10506                           	opt stack 26
 10507                           
 10508                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;incstack = 0
 10512  002B78  9A9D               	bcf	3997,5,c	;volatile
 10513                           
 10514                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
 10515  002B7A  989D               	bcf	3997,4,c	;volatile
 10516                           
 10517                           ;eusart1.c: 84: BAUDCONbits.BRG16 = 1;
 10518  002B7C  86B8               	bsf	4024,3,c	;volatile
 10519                           
 10520                           ;eusart1.c: 86: RCSTAbits.SPEN = 1;
 10521  002B7E  8EAB               	bsf	4011,7,c	;volatile
 10522                           
 10523                           ;eusart1.c: 87: RCSTAbits.RX9 = 0;
 10524  002B80  9CAB               	bcf	4011,6,c	;volatile
 10525                           
 10526                           ;eusart1.c: 88: RCSTAbits.CREN = 1;
 10527  002B82  88AB               	bsf	4011,4,c	;volatile
 10528                           
 10529                           ;eusart1.c: 89: RCSTAbits.ADDEN = 0;
 10530  002B84  96AB               	bcf	4011,3,c	;volatile
 10531                           
 10532                           ;eusart1.c: 91: TXSTAbits.TX9 = 0;
 10533  002B86  9CAC               	bcf	4012,6,c	;volatile
 10534                           
 10535                           ;eusart1.c: 92: TXSTAbits.TXEN = 1;
 10536  002B88  8AAC               	bsf	4012,5,c	;volatile
 10537                           
 10538                           ;eusart1.c: 93: TXSTAbits.SYNC = 0;
 10539  002B8A  98AC               	bcf	4012,4,c	;volatile
 10540                           
 10541                           ;eusart1.c: 94: TXSTAbits.SENDB = 0;
 10542  002B8C  96AC               	bcf	4012,3,c	;volatile
 10543                           
 10544                           ;eusart1.c: 95: TXSTAbits.BRGH = 1;
 10545  002B8E  84AC               	bsf	4012,2,c	;volatile
 10546                           
 10547                           ;eusart1.c: 96: TXSTAbits.TRMT = 1;
 10548  002B90  82AC               	bsf	4012,1,c	;volatile
 10549                           
 10550                           ;eusart1.c: 97: TXSTAbits.TX9D = 0;
 10551  002B92  90AC               	bcf	4012,0,c	;volatile
 10552                           
 10553                           ;eusart1.c: 99: unsigned int baud_rate;
 10554                           ;eusart1.c: 101: baud_rate = 417;
 10555  002B94  0E01               	movlw	1
 10556  002B96  0100               	movlb	0	; () banked
 10557  002B98  6FFA               	movwf	(EUSART1_Initialize@baud_rate+1)& (0+255),b
 10558  002B9A  0EA1               	movlw	161
 10559  002B9C  6FF9               	movwf	EUSART1_Initialize@baud_rate& (0+255),b
 10560                           
 10561                           ;eusart1.c: 103: SPBRGH = baud_rate >> 8;
 10562  002B9E  0100               	movlb	0	; () banked
 10563  002BA0  51FA               	movf	(EUSART1_Initialize@baud_rate+1)& (0+255),w,b
 10564  002BA2  6EB0               	movwf	4016,c	;volatile
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;eusart1.c: 104: SPBRG = baud_rate;
 10568  002BA4  C0F9  FFAF         	movff	EUSART1_Initialize@baud_rate,4015	;volatile
 10569                           
 10570                           ;eusart1.c: 108: eusart1TxHead = 0;
 10571  002BA8  0E00               	movlw	0
 10572  002BAA  6E2A               	movwf	_eusart1TxHead,c
 10573                           
 10574                           ;eusart1.c: 109: eusart1TxTail = 0;
 10575  002BAC  0E00               	movlw	0
 10576  002BAE  6E2B               	movwf	_eusart1TxTail,c
 10577                           
 10578                           ;eusart1.c: 110: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
 10579  002BB0  0E7E               	movlw	126
 10580  002BB2  6E29               	movwf	_eusart1TxBufferRemaining,c	;volatile
 10581                           
 10582                           ;eusart1.c: 112: eusart1RxHead = 0;
 10583  002BB4  0E00               	movlw	0
 10584  002BB6  6E27               	movwf	_eusart1RxHead,c
 10585                           
 10586                           ;eusart1.c: 113: eusart1RxTail = 0;
 10587  002BB8  0E00               	movlw	0
 10588  002BBA  6E28               	movwf	_eusart1RxTail,c
 10589                           
 10590                           ;eusart1.c: 114: eusart1RxCount = 0;
 10591  002BBC  0E00               	movlw	0
 10592  002BBE  6E26               	movwf	_eusart1RxCount,c	;volatile
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;eusart1.c: 117: PIE1bits.RC1IE = 1;
 10596  002BC0  8A9D               	bsf	3997,5,c	;volatile
 10597                           
 10598                           ; BSR set to: 0
 10599  002BC2  0012               	return		;funcret
 10600  002BC4                     __end_of_EUSART1_Initialize:
 10601                           	opt stack 0
 10602                           tblptru	equ	0xFF8
 10603                           tblptrh	equ	0xFF7
 10604                           tblptrl	equ	0xFF6
 10605                           tablat	equ	0xFF5
 10606                           prodh	equ	0xFF4
 10607                           prodl	equ	0xFF3
 10608                           intcon	equ	0xFF2
 10609                           intcon2	equ	0xFF1
 10610                           postinc0	equ	0xFEE
 10611                           wreg	equ	0xFE8
 10612                           postdec1	equ	0xFE5
 10613                           fsr1l	equ	0xFE1
 10614                           postinc2	equ	0xFDE
 10615                           postdec2	equ	0xFDD
 10616                           fsr2h	equ	0xFDA
 10617                           fsr2l	equ	0xFD9
 10618                           status	equ	0xFD8
 10619                           
 10620 ;; *************** function _APIxInitialize *****************
 10621 ;; Defined at:
 10622 ;;		line 30 in file "../api.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;		None
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;  i               2    0[BANK0 ] unsigned int 
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10636 ;;      Params:         0       0       0       0       0       0       0       0       0
 10637 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10638 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10639 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10640 ;;Total ram usage:        2 bytes
 10641 ;; Hardware stack levels used:    1
 10642 ;; Hardware stack levels required when called:    4
 10643 ;; This function calls:
 10644 ;;		Nothing
 10645 ;; This function is called by:
 10646 ;;		_main
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           	psect	text26
 10651  001ABA                     __ptext26:
 10652                           	opt stack 0
 10653  001ABA                     _APIxInitialize:
 10654                           	opt stack 26
 10655                           
 10656                           ;api.c: 32: unsigned int i;
 10657                           ;api.c: 33: for(i = 0; i < (63 + 1); i++ )
 10658                           
 10659                           ; BSR set to: 0
 10660                           ;incstack = 0
 10661  001ABA  0E00               	movlw	0
 10662  001ABC  0100               	movlb	0	; () banked
 10663  001ABE  6FFA               	movwf	(APIxInitialize@i+1)& (0+255),b
 10664  001AC0  0E00               	movlw	0
 10665  001AC2  6FF9               	movwf	APIxInitialize@i& (0+255),b
 10666  001AC4                     l7931:
 10667                           
 10668                           ; BSR set to: 0
 10669  001AC4  0100               	movlb	0	; () banked
 10670  001AC6  51FA               	movf	(APIxInitialize@i+1)& (0+255),w,b
 10671  001AC8  E127               	bnz	l7941
 10672  001ACA  0E40               	movlw	64
 10673  001ACC  0100               	movlb	0	; () banked
 10674  001ACE  5DF9               	subwf	APIxInitialize@i& (0+255),w,b
 10675  001AD0  B0D8               	btfsc	status,0,c
 10676  001AD2  D022               	goto	l7941
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;api.c: 34: {
 10680                           ;api.c: 35: API_RW[i] = 0;
 10681                           
 10682                           ; BSR set to: 0
 10683                           
 10684                           ; BSR set to: 0
 10685  001AD4  90D8               	bcf	status,0,c
 10686  001AD6  0100               	movlb	0	; () banked
 10687  001AD8  35F9               	rlcf	APIxInitialize@i& (0+255),w,b
 10688  001ADA  6ED9               	movwf	fsr2l,c
 10689  001ADC  0100               	movlb	0	; () banked
 10690  001ADE  35FA               	rlcf	(APIxInitialize@i+1)& (0+255),w,b
 10691  001AE0  6EDA               	movwf	fsr2h,c
 10692  001AE2  0E00               	movlw	low _API_RW
 10693  001AE4  26D9               	addwf	fsr2l,f,c
 10694  001AE6  0E01               	movlw	high _API_RW
 10695  001AE8  22DA               	addwfc	fsr2h,f,c
 10696  001AEA  0E00               	movlw	0
 10697  001AEC  6EDE               	movwf	postinc2,c
 10698  001AEE  0E00               	movlw	0
 10699  001AF0  6EDD               	movwf	postdec2,c
 10700                           
 10701                           ;api.c: 36: API[i] = 0;
 10702  001AF2  90D8               	bcf	status,0,c
 10703  001AF4  0100               	movlb	0	; () banked
 10704  001AF6  35F9               	rlcf	APIxInitialize@i& (0+255),w,b
 10705  001AF8  6ED9               	movwf	fsr2l,c
 10706  001AFA  0100               	movlb	0	; () banked
 10707  001AFC  35FA               	rlcf	(APIxInitialize@i+1)& (0+255),w,b
 10708  001AFE  6EDA               	movwf	fsr2h,c
 10709  001B00  0E60               	movlw	low _API
 10710  001B02  26D9               	addwf	fsr2l,f,c
 10711  001B04  0E00               	movlw	high _API
 10712  001B06  22DA               	addwfc	fsr2h,f,c
 10713  001B08  0E00               	movlw	0
 10714  001B0A  6EDE               	movwf	postinc2,c
 10715  001B0C  0E00               	movlw	0
 10716  001B0E  6EDD               	movwf	postdec2,c
 10717                           
 10718                           ; BSR set to: 0
 10719  001B10  0100               	movlb	0	; () banked
 10720  001B12  4BF9               	infsnz	APIxInitialize@i& (0+255),f,b
 10721  001B14  2BFA               	incf	(APIxInitialize@i+1)& (0+255),f,b
 10722  001B16  D7D6               	goto	l7931
 10723  001B18                     l7941:
 10724                           
 10725                           ; BSR set to: 0
 10726                           ;api.c: 37: }
 10727                           ;api.c: 40: API_RW[0] = 0;
 10728  001B18  0E00               	movlw	0
 10729  001B1A  0101               	movlb	1	; () banked
 10730  001B1C  6F01               	movwf	(_API_RW+1)& (0+255),b
 10731  001B1E  0E00               	movlw	0
 10732  001B20  6F00               	movwf	_API_RW& (0+255),b
 10733                           
 10734                           ;api.c: 41: API_RW[2] = 1;
 10735  001B22  0E00               	movlw	0
 10736  001B24  0101               	movlb	1	; () banked
 10737  001B26  6F05               	movwf	(_API_RW+5)& (0+255),b
 10738  001B28  0E01               	movlw	1
 10739  001B2A  6F04               	movwf	(_API_RW+4)& (0+255),b
 10740                           
 10741                           ;api.c: 42: API_RW[3] = 1;
 10742  001B2C  0E00               	movlw	0
 10743  001B2E  0101               	movlb	1	; () banked
 10744  001B30  6F07               	movwf	(_API_RW+7)& (0+255),b
 10745  001B32  0E01               	movlw	1
 10746  001B34  6F06               	movwf	(_API_RW+6)& (0+255),b
 10747                           
 10748                           ;api.c: 43: API_RW[4] = 1;
 10749  001B36  0E00               	movlw	0
 10750  001B38  0101               	movlb	1	; () banked
 10751  001B3A  6F09               	movwf	(_API_RW+9)& (0+255),b
 10752  001B3C  0E01               	movlw	1
 10753  001B3E  6F08               	movwf	(_API_RW+8)& (0+255),b
 10754                           
 10755                           ;api.c: 44: API_RW[5] = 1;
 10756  001B40  0E00               	movlw	0
 10757  001B42  0101               	movlb	1	; () banked
 10758  001B44  6F0B               	movwf	(_API_RW+11)& (0+255),b
 10759  001B46  0E01               	movlw	1
 10760  001B48  6F0A               	movwf	(_API_RW+10)& (0+255),b
 10761                           
 10762                           ;api.c: 45: API_RW[6] = 1;
 10763  001B4A  0E00               	movlw	0
 10764  001B4C  0101               	movlb	1	; () banked
 10765  001B4E  6F0D               	movwf	(_API_RW+13)& (0+255),b
 10766  001B50  0E01               	movlw	1
 10767  001B52  6F0C               	movwf	(_API_RW+12)& (0+255),b
 10768                           
 10769                           ;api.c: 46: API_RW[7] = 1;
 10770  001B54  0E00               	movlw	0
 10771  001B56  0101               	movlb	1	; () banked
 10772  001B58  6F0F               	movwf	(_API_RW+15)& (0+255),b
 10773  001B5A  0E01               	movlw	1
 10774  001B5C  6F0E               	movwf	(_API_RW+14)& (0+255),b
 10775                           
 10776                           ;api.c: 47: API_RW[8] = 1;
 10777  001B5E  0E00               	movlw	0
 10778  001B60  0101               	movlb	1	; () banked
 10779  001B62  6F11               	movwf	(_API_RW+17)& (0+255),b
 10780  001B64  0E01               	movlw	1
 10781  001B66  6F10               	movwf	(_API_RW+16)& (0+255),b
 10782                           
 10783                           ;api.c: 48: API_RW[9] = 1;
 10784  001B68  0E00               	movlw	0
 10785  001B6A  0101               	movlb	1	; () banked
 10786  001B6C  6F13               	movwf	(_API_RW+19)& (0+255),b
 10787  001B6E  0E01               	movlw	1
 10788  001B70  6F12               	movwf	(_API_RW+18)& (0+255),b
 10789                           
 10790                           ;api.c: 49: API_RW[10] = 1;
 10791  001B72  0E00               	movlw	0
 10792  001B74  0101               	movlb	1	; () banked
 10793  001B76  6F15               	movwf	(_API_RW+21)& (0+255),b
 10794  001B78  0E01               	movlw	1
 10795  001B7A  6F14               	movwf	(_API_RW+20)& (0+255),b
 10796                           
 10797                           ;api.c: 50: API_RW[11] = 1;
 10798  001B7C  0E00               	movlw	0
 10799  001B7E  0101               	movlb	1	; () banked
 10800  001B80  6F17               	movwf	(_API_RW+23)& (0+255),b
 10801  001B82  0E01               	movlw	1
 10802  001B84  6F16               	movwf	(_API_RW+22)& (0+255),b
 10803                           
 10804                           ;api.c: 51: API_RW[12] = 0;
 10805  001B86  0E00               	movlw	0
 10806  001B88  0101               	movlb	1	; () banked
 10807  001B8A  6F19               	movwf	(_API_RW+25)& (0+255),b
 10808  001B8C  0E00               	movlw	0
 10809  001B8E  6F18               	movwf	(_API_RW+24)& (0+255),b
 10810                           
 10811                           ;api.c: 52: API_RW[13] = 0;
 10812  001B90  0E00               	movlw	0
 10813  001B92  0101               	movlb	1	; () banked
 10814  001B94  6F1B               	movwf	(_API_RW+27)& (0+255),b
 10815  001B96  0E00               	movlw	0
 10816  001B98  6F1A               	movwf	(_API_RW+26)& (0+255),b
 10817                           
 10818                           ;api.c: 53: API_RW[14] = 0;
 10819  001B9A  0E00               	movlw	0
 10820  001B9C  0101               	movlb	1	; () banked
 10821  001B9E  6F1D               	movwf	(_API_RW+29)& (0+255),b
 10822  001BA0  0E00               	movlw	0
 10823  001BA2  6F1C               	movwf	(_API_RW+28)& (0+255),b
 10824                           
 10825                           ;api.c: 54: API_RW[15] = 0;
 10826  001BA4  0E00               	movlw	0
 10827  001BA6  0101               	movlb	1	; () banked
 10828  001BA8  6F1F               	movwf	(_API_RW+31)& (0+255),b
 10829  001BAA  0E00               	movlw	0
 10830  001BAC  6F1E               	movwf	(_API_RW+30)& (0+255),b
 10831                           
 10832                           ;api.c: 55: API_RW[16] = 0;
 10833  001BAE  0E00               	movlw	0
 10834  001BB0  0101               	movlb	1	; () banked
 10835  001BB2  6F21               	movwf	(_API_RW+33)& (0+255),b
 10836  001BB4  0E00               	movlw	0
 10837  001BB6  6F20               	movwf	(_API_RW+32)& (0+255),b
 10838                           
 10839                           ;api.c: 56: API_RW[17] = 0;
 10840  001BB8  0E00               	movlw	0
 10841  001BBA  0101               	movlb	1	; () banked
 10842  001BBC  6F23               	movwf	(_API_RW+35)& (0+255),b
 10843  001BBE  0E00               	movlw	0
 10844  001BC0  6F22               	movwf	(_API_RW+34)& (0+255),b
 10845                           
 10846                           ;api.c: 57: API_RW[18] = 0;
 10847  001BC2  0E00               	movlw	0
 10848  001BC4  0101               	movlb	1	; () banked
 10849  001BC6  6F25               	movwf	(_API_RW+37)& (0+255),b
 10850  001BC8  0E00               	movlw	0
 10851  001BCA  6F24               	movwf	(_API_RW+36)& (0+255),b
 10852                           
 10853                           ;api.c: 58: API_RW[19] = 0;
 10854  001BCC  0E00               	movlw	0
 10855  001BCE  0101               	movlb	1	; () banked
 10856  001BD0  6F27               	movwf	(_API_RW+39)& (0+255),b
 10857  001BD2  0E00               	movlw	0
 10858  001BD4  6F26               	movwf	(_API_RW+38)& (0+255),b
 10859                           
 10860                           ;api.c: 59: API_RW[20] = 0;
 10861  001BD6  0E00               	movlw	0
 10862  001BD8  0101               	movlb	1	; () banked
 10863  001BDA  6F29               	movwf	(_API_RW+41)& (0+255),b
 10864  001BDC  0E00               	movlw	0
 10865  001BDE  6F28               	movwf	(_API_RW+40)& (0+255),b
 10866                           
 10867                           ;api.c: 60: API_RW[21] = 0;
 10868  001BE0  0E00               	movlw	0
 10869  001BE2  0101               	movlb	1	; () banked
 10870  001BE4  6F2B               	movwf	(_API_RW+43)& (0+255),b
 10871  001BE6  0E00               	movlw	0
 10872  001BE8  6F2A               	movwf	(_API_RW+42)& (0+255),b
 10873                           
 10874                           ;api.c: 61: API_RW[22] = 0;
 10875  001BEA  0E00               	movlw	0
 10876  001BEC  0101               	movlb	1	; () banked
 10877  001BEE  6F2D               	movwf	(_API_RW+45)& (0+255),b
 10878  001BF0  0E00               	movlw	0
 10879  001BF2  6F2C               	movwf	(_API_RW+44)& (0+255),b
 10880                           
 10881                           ;api.c: 62: API_RW[23] = 1;
 10882  001BF4  0E00               	movlw	0
 10883  001BF6  0101               	movlb	1	; () banked
 10884  001BF8  6F2F               	movwf	(_API_RW+47)& (0+255),b
 10885  001BFA  0E01               	movlw	1
 10886  001BFC  6F2E               	movwf	(_API_RW+46)& (0+255),b
 10887                           
 10888                           ;api.c: 63: API_RW[24] = 1;
 10889  001BFE  0E00               	movlw	0
 10890  001C00  0101               	movlb	1	; () banked
 10891  001C02  6F31               	movwf	(_API_RW+49)& (0+255),b
 10892  001C04  0E01               	movlw	1
 10893  001C06  6F30               	movwf	(_API_RW+48)& (0+255),b
 10894                           
 10895                           ;api.c: 64: API_RW[25] = 0;
 10896  001C08  0E00               	movlw	0
 10897  001C0A  0101               	movlb	1	; () banked
 10898  001C0C  6F33               	movwf	(_API_RW+51)& (0+255),b
 10899  001C0E  0E00               	movlw	0
 10900  001C10  6F32               	movwf	(_API_RW+50)& (0+255),b
 10901                           
 10902                           ;api.c: 65: API_RW[26] = 0;
 10903  001C12  0E00               	movlw	0
 10904  001C14  0101               	movlb	1	; () banked
 10905  001C16  6F35               	movwf	(_API_RW+53)& (0+255),b
 10906  001C18  0E00               	movlw	0
 10907  001C1A  6F34               	movwf	(_API_RW+52)& (0+255),b
 10908                           
 10909                           ;api.c: 66: API_RW[27] = 0;
 10910  001C1C  0E00               	movlw	0
 10911  001C1E  0101               	movlb	1	; () banked
 10912  001C20  6F37               	movwf	(_API_RW+55)& (0+255),b
 10913  001C22  0E00               	movlw	0
 10914  001C24  6F36               	movwf	(_API_RW+54)& (0+255),b
 10915                           
 10916                           ;api.c: 67: API_RW[28] = 0;
 10917  001C26  0E00               	movlw	0
 10918  001C28  0101               	movlb	1	; () banked
 10919  001C2A  6F39               	movwf	(_API_RW+57)& (0+255),b
 10920  001C2C  0E00               	movlw	0
 10921  001C2E  6F38               	movwf	(_API_RW+56)& (0+255),b
 10922                           
 10923                           ;api.c: 71: API[0] = 63;
 10924  001C30  0E00               	movlw	0
 10925  001C32  0100               	movlb	0	; () banked
 10926  001C34  6F61               	movwf	(_API+1)& (0+255),b
 10927  001C36  0E3F               	movlw	63
 10928  001C38  6F60               	movwf	_API& (0+255),b
 10929                           
 10930                           ;api.c: 72: API[2] = 10000;
 10931  001C3A  0E27               	movlw	39
 10932  001C3C  0100               	movlb	0	; () banked
 10933  001C3E  6F65               	movwf	(_API+5)& (0+255),b
 10934  001C40  0E10               	movlw	16
 10935  001C42  6F64               	movwf	(_API+4)& (0+255),b
 10936                           
 10937                           ;api.c: 73: API[3] = 800;
 10938  001C44  0E03               	movlw	3
 10939  001C46  0100               	movlb	0	; () banked
 10940  001C48  6F67               	movwf	(_API+7)& (0+255),b
 10941  001C4A  0E20               	movlw	32
 10942  001C4C  6F66               	movwf	(_API+6)& (0+255),b
 10943                           
 10944                           ;api.c: 74: API[4] = 5000;
 10945  001C4E  0E13               	movlw	19
 10946  001C50  0100               	movlb	0	; () banked
 10947  001C52  6F69               	movwf	(_API+9)& (0+255),b
 10948  001C54  0E88               	movlw	136
 10949  001C56  6F68               	movwf	(_API+8)& (0+255),b
 10950                           
 10951                           ;api.c: 75: API[5] = 20;
 10952  001C58  0E00               	movlw	0
 10953  001C5A  0100               	movlb	0	; () banked
 10954  001C5C  6F6B               	movwf	(_API+11)& (0+255),b
 10955  001C5E  0E14               	movlw	20
 10956  001C60  6F6A               	movwf	(_API+10)& (0+255),b
 10957                           
 10958                           ;api.c: 76: API[6] = 20;
 10959  001C62  0E00               	movlw	0
 10960  001C64  0100               	movlb	0	; () banked
 10961  001C66  6F6D               	movwf	(_API+13)& (0+255),b
 10962  001C68  0E14               	movlw	20
 10963  001C6A  6F6C               	movwf	(_API+12)& (0+255),b
 10964                           
 10965                           ;api.c: 77: API[7] = 107;
 10966  001C6C  0E00               	movlw	0
 10967  001C6E  0100               	movlb	0	; () banked
 10968  001C70  6F6F               	movwf	(_API+15)& (0+255),b
 10969  001C72  0E6B               	movlw	107
 10970  001C74  6F6E               	movwf	(_API+14)& (0+255),b
 10971                           
 10972                           ;api.c: 78: API[8] = 107;
 10973  001C76  0E00               	movlw	0
 10974  001C78  0100               	movlb	0	; () banked
 10975  001C7A  6F71               	movwf	(_API+17)& (0+255),b
 10976  001C7C  0E6B               	movlw	107
 10977  001C7E  6F70               	movwf	(_API+16)& (0+255),b
 10978                           
 10979                           ;api.c: 79: API[9] = 80;
 10980  001C80  0E00               	movlw	0
 10981  001C82  0100               	movlb	0	; () banked
 10982  001C84  6F73               	movwf	(_API+19)& (0+255),b
 10983  001C86  0E50               	movlw	80
 10984  001C88  6F72               	movwf	(_API+18)& (0+255),b
 10985                           
 10986                           ;api.c: 80: API[10] = 45;
 10987  001C8A  0E00               	movlw	0
 10988  001C8C  0100               	movlb	0	; () banked
 10989  001C8E  6F75               	movwf	(_API+21)& (0+255),b
 10990  001C90  0E2D               	movlw	45
 10991  001C92  6F74               	movwf	(_API+20)& (0+255),b
 10992                           
 10993                           ;api.c: 81: API[11] = 20;
 10994  001C94  0E00               	movlw	0
 10995  001C96  0100               	movlb	0	; () banked
 10996  001C98  6F77               	movwf	(_API+23)& (0+255),b
 10997  001C9A  0E14               	movlw	20
 10998  001C9C  6F76               	movwf	(_API+22)& (0+255),b
 10999                           
 11000                           ;api.c: 82: API[12] = 0;
 11001  001C9E  0E00               	movlw	0
 11002  001CA0  0100               	movlb	0	; () banked
 11003  001CA2  6F79               	movwf	(_API+25)& (0+255),b
 11004  001CA4  0E00               	movlw	0
 11005  001CA6  6F78               	movwf	(_API+24)& (0+255),b
 11006                           
 11007                           ;api.c: 83: API[13] = 0;
 11008  001CA8  0E00               	movlw	0
 11009  001CAA  0100               	movlb	0	; () banked
 11010  001CAC  6F7B               	movwf	(_API+27)& (0+255),b
 11011  001CAE  0E00               	movlw	0
 11012  001CB0  6F7A               	movwf	(_API+26)& (0+255),b
 11013                           
 11014                           ;api.c: 84: API[14] = 0;
 11015  001CB2  0E00               	movlw	0
 11016  001CB4  0100               	movlb	0	; () banked
 11017  001CB6  6F7D               	movwf	(_API+29)& (0+255),b
 11018  001CB8  0E00               	movlw	0
 11019  001CBA  6F7C               	movwf	(_API+28)& (0+255),b
 11020                           
 11021                           ;api.c: 85: API[15] = 0;
 11022  001CBC  0E00               	movlw	0
 11023  001CBE  0100               	movlb	0	; () banked
 11024  001CC0  6F7F               	movwf	(_API+31)& (0+255),b
 11025  001CC2  0E00               	movlw	0
 11026  001CC4  6F7E               	movwf	(_API+30)& (0+255),b
 11027                           
 11028                           ;api.c: 86: API[16] = 0;
 11029  001CC6  0E00               	movlw	0
 11030  001CC8  0100               	movlb	0	; () banked
 11031  001CCA  6F81               	movwf	(_API+33)& (0+255),b
 11032  001CCC  0E00               	movlw	0
 11033  001CCE  6F80               	movwf	(_API+32)& (0+255),b
 11034                           
 11035                           ;api.c: 87: API[17] = 0;
 11036  001CD0  0E00               	movlw	0
 11037  001CD2  0100               	movlb	0	; () banked
 11038  001CD4  6F83               	movwf	(_API+35)& (0+255),b
 11039  001CD6  0E00               	movlw	0
 11040  001CD8  6F82               	movwf	(_API+34)& (0+255),b
 11041                           
 11042                           ;api.c: 88: API[18] = 0;
 11043  001CDA  0E00               	movlw	0
 11044  001CDC  0100               	movlb	0	; () banked
 11045  001CDE  6F85               	movwf	(_API+37)& (0+255),b
 11046  001CE0  0E00               	movlw	0
 11047  001CE2  6F84               	movwf	(_API+36)& (0+255),b
 11048                           
 11049                           ;api.c: 89: API[19] = 0;
 11050  001CE4  0E00               	movlw	0
 11051  001CE6  0100               	movlb	0	; () banked
 11052  001CE8  6F87               	movwf	(_API+39)& (0+255),b
 11053  001CEA  0E00               	movlw	0
 11054  001CEC  6F86               	movwf	(_API+38)& (0+255),b
 11055                           
 11056                           ;api.c: 90: API[20] = 0;
 11057  001CEE  0E00               	movlw	0
 11058  001CF0  0100               	movlb	0	; () banked
 11059  001CF2  6F89               	movwf	(_API+41)& (0+255),b
 11060  001CF4  0E00               	movlw	0
 11061  001CF6  6F88               	movwf	(_API+40)& (0+255),b
 11062                           
 11063                           ;api.c: 91: API[21] = 0;
 11064  001CF8  0E00               	movlw	0
 11065  001CFA  0100               	movlb	0	; () banked
 11066  001CFC  6F8B               	movwf	(_API+43)& (0+255),b
 11067  001CFE  0E00               	movlw	0
 11068  001D00  6F8A               	movwf	(_API+42)& (0+255),b
 11069                           
 11070                           ;api.c: 92: API[22] = 0;
 11071  001D02  0E00               	movlw	0
 11072  001D04  0100               	movlb	0	; () banked
 11073  001D06  6F8D               	movwf	(_API+45)& (0+255),b
 11074  001D08  0E00               	movlw	0
 11075  001D0A  6F8C               	movwf	(_API+44)& (0+255),b
 11076                           
 11077                           ;api.c: 93: API[23] = 9;
 11078  001D0C  0E00               	movlw	0
 11079  001D0E  0100               	movlb	0	; () banked
 11080  001D10  6F8F               	movwf	(_API+47)& (0+255),b
 11081  001D12  0E09               	movlw	9
 11082  001D14  6F8E               	movwf	(_API+46)& (0+255),b
 11083                           
 11084                           ;api.c: 94: API[24] = 9;
 11085  001D16  0E00               	movlw	0
 11086  001D18  0100               	movlb	0	; () banked
 11087  001D1A  6F91               	movwf	(_API+49)& (0+255),b
 11088  001D1C  0E09               	movlw	9
 11089  001D1E  6F90               	movwf	(_API+48)& (0+255),b
 11090                           
 11091                           ;api.c: 95: API[25] = 0;
 11092  001D20  0E00               	movlw	0
 11093  001D22  0100               	movlb	0	; () banked
 11094  001D24  6F93               	movwf	(_API+51)& (0+255),b
 11095  001D26  0E00               	movlw	0
 11096  001D28  6F92               	movwf	(_API+50)& (0+255),b
 11097                           
 11098                           ;api.c: 96: API[26] = 0;
 11099  001D2A  0E00               	movlw	0
 11100  001D2C  0100               	movlb	0	; () banked
 11101  001D2E  6F95               	movwf	(_API+53)& (0+255),b
 11102  001D30  0E00               	movlw	0
 11103  001D32  6F94               	movwf	(_API+52)& (0+255),b
 11104                           
 11105                           ;api.c: 97: API[27] = 0;
 11106  001D34  0E00               	movlw	0
 11107  001D36  0100               	movlb	0	; () banked
 11108  001D38  6F97               	movwf	(_API+55)& (0+255),b
 11109  001D3A  0E00               	movlw	0
 11110  001D3C  6F96               	movwf	(_API+54)& (0+255),b
 11111                           
 11112                           ;api.c: 98: API[28] = 0;
 11113  001D3E  0E00               	movlw	0
 11114  001D40  0100               	movlb	0	; () banked
 11115  001D42  6F99               	movwf	(_API+57)& (0+255),b
 11116  001D44  0E00               	movlw	0
 11117  001D46  6F98               	movwf	(_API+56)& (0+255),b
 11118                           
 11119                           ;api.c: 99: API[29] = 107;
 11120  001D48  0E00               	movlw	0
 11121  001D4A  0100               	movlb	0	; () banked
 11122  001D4C  6F9B               	movwf	(_API+59)& (0+255),b
 11123  001D4E  0E6B               	movlw	107
 11124  001D50  6F9A               	movwf	(_API+58)& (0+255),b
 11125                           
 11126                           ;api.c: 100: API[30] = 107;
 11127  001D52  0E00               	movlw	0
 11128  001D54  0100               	movlb	0	; () banked
 11129  001D56  6F9D               	movwf	(_API+61)& (0+255),b
 11130  001D58  0E6B               	movlw	107
 11131  001D5A  6F9C               	movwf	(_API+60)& (0+255),b
 11132                           
 11133                           ;api.c: 101: API[31] = 107;
 11134  001D5C  0E00               	movlw	0
 11135  001D5E  0100               	movlb	0	; () banked
 11136  001D60  6F9F               	movwf	(_API+63)& (0+255),b
 11137  001D62  0E6B               	movlw	107
 11138  001D64  6F9E               	movwf	(_API+62)& (0+255),b
 11139                           
 11140                           ;api.c: 102: API[32] = 107;
 11141  001D66  0E00               	movlw	0
 11142  001D68  0100               	movlb	0	; () banked
 11143  001D6A  6FA1               	movwf	(_API+65)& (0+255),b
 11144  001D6C  0E6B               	movlw	107
 11145  001D6E  6FA0               	movwf	(_API+64)& (0+255),b
 11146                           
 11147                           ;api.c: 103: API[33] = 107;
 11148  001D70  0E00               	movlw	0
 11149  001D72  0100               	movlb	0	; () banked
 11150  001D74  6FA3               	movwf	(_API+67)& (0+255),b
 11151  001D76  0E6B               	movlw	107
 11152  001D78  6FA2               	movwf	(_API+66)& (0+255),b
 11153                           
 11154                           ;api.c: 104: API[34] = 107;
 11155  001D7A  0E00               	movlw	0
 11156  001D7C  0100               	movlb	0	; () banked
 11157  001D7E  6FA5               	movwf	(_API+69)& (0+255),b
 11158  001D80  0E6B               	movlw	107
 11159  001D82  6FA4               	movwf	(_API+68)& (0+255),b
 11160                           
 11161                           ;api.c: 105: API[35] = 107;
 11162  001D84  0E00               	movlw	0
 11163  001D86  0100               	movlb	0	; () banked
 11164  001D88  6FA7               	movwf	(_API+71)& (0+255),b
 11165  001D8A  0E6B               	movlw	107
 11166  001D8C  6FA6               	movwf	(_API+70)& (0+255),b
 11167                           
 11168                           ;api.c: 106: API[36] = 107;
 11169  001D8E  0E00               	movlw	0
 11170  001D90  0100               	movlb	0	; () banked
 11171  001D92  6FA9               	movwf	(_API+73)& (0+255),b
 11172  001D94  0E6B               	movlw	107
 11173  001D96  6FA8               	movwf	(_API+72)& (0+255),b
 11174                           
 11175                           ;api.c: 107: API[37] = 100;
 11176  001D98  0E00               	movlw	0
 11177  001D9A  0100               	movlb	0	; () banked
 11178  001D9C  6FAB               	movwf	(_API+75)& (0+255),b
 11179  001D9E  0E64               	movlw	100
 11180  001DA0  6FAA               	movwf	(_API+74)& (0+255),b
 11181                           
 11182                           ;api.c: 108: API[38] = 100;
 11183  001DA2  0E00               	movlw	0
 11184  001DA4  0100               	movlb	0	; () banked
 11185  001DA6  6FAD               	movwf	(_API+77)& (0+255),b
 11186  001DA8  0E64               	movlw	100
 11187  001DAA  6FAC               	movwf	(_API+76)& (0+255),b
 11188                           
 11189                           ;api.c: 109: API[39] = 100;
 11190  001DAC  0E00               	movlw	0
 11191  001DAE  0100               	movlb	0	; () banked
 11192  001DB0  6FAF               	movwf	(_API+79)& (0+255),b
 11193  001DB2  0E64               	movlw	100
 11194  001DB4  6FAE               	movwf	(_API+78)& (0+255),b
 11195                           
 11196                           ;api.c: 110: API[40] = 100;
 11197  001DB6  0E00               	movlw	0
 11198  001DB8  0100               	movlb	0	; () banked
 11199  001DBA  6FB1               	movwf	(_API+81)& (0+255),b
 11200  001DBC  0E64               	movlw	100
 11201  001DBE  6FB0               	movwf	(_API+80)& (0+255),b
 11202                           
 11203                           ;api.c: 111: API[41] = 100;
 11204  001DC0  0E00               	movlw	0
 11205  001DC2  0100               	movlb	0	; () banked
 11206  001DC4  6FB3               	movwf	(_API+83)& (0+255),b
 11207  001DC6  0E64               	movlw	100
 11208  001DC8  6FB2               	movwf	(_API+82)& (0+255),b
 11209                           
 11210                           ;api.c: 112: API[42] = 100;
 11211  001DCA  0E00               	movlw	0
 11212  001DCC  0100               	movlb	0	; () banked
 11213  001DCE  6FB5               	movwf	(_API+85)& (0+255),b
 11214  001DD0  0E64               	movlw	100
 11215  001DD2  6FB4               	movwf	(_API+84)& (0+255),b
 11216                           
 11217                           ;api.c: 113: API[43] = 100;
 11218  001DD4  0E00               	movlw	0
 11219  001DD6  0100               	movlb	0	; () banked
 11220  001DD8  6FB7               	movwf	(_API+87)& (0+255),b
 11221  001DDA  0E64               	movlw	100
 11222  001DDC  6FB6               	movwf	(_API+86)& (0+255),b
 11223                           
 11224                           ;api.c: 114: API[44] = 100;
 11225  001DDE  0E00               	movlw	0
 11226  001DE0  0100               	movlb	0	; () banked
 11227  001DE2  6FB9               	movwf	(_API+89)& (0+255),b
 11228  001DE4  0E64               	movlw	100
 11229  001DE6  6FB8               	movwf	(_API+88)& (0+255),b
 11230                           
 11231                           ; BSR set to: 0
 11232  001DE8  0012               	return		;funcret
 11233  001DEA                     __end_of_APIxInitialize:
 11234                           	opt stack 0
 11235                           tblptru	equ	0xFF8
 11236                           tblptrh	equ	0xFF7
 11237                           tblptrl	equ	0xFF6
 11238                           tablat	equ	0xFF5
 11239                           prodh	equ	0xFF4
 11240                           prodl	equ	0xFF3
 11241                           intcon	equ	0xFF2
 11242                           intcon2	equ	0xFF1
 11243                           postinc0	equ	0xFEE
 11244                           wreg	equ	0xFE8
 11245                           postdec1	equ	0xFE5
 11246                           fsr1l	equ	0xFE1
 11247                           postinc2	equ	0xFDE
 11248                           postdec2	equ	0xFDD
 11249                           fsr2h	equ	0xFDA
 11250                           fsr2l	equ	0xFD9
 11251                           status	equ	0xFD8
 11252                           
 11253 ;; *************** function _tc_low *****************
 11254 ;; Defined at:
 11255 ;;		line 145 in file "../Main.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;		None
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;		None
 11260 ;; Return value:  Size  Location     Type
 11261 ;;                  1    wreg      void 
 11262 ;; Registers used:
 11263 ;;		None
 11264 ;; Tracked objects:
 11265 ;;		On entry : 0/0
 11266 ;;		On exit  : 0/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11269 ;;      Params:         0       0       0       0       0       0       0       0       0
 11270 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11271 ;;      Temps:         17       0       0       0       0       0       0       0       0
 11272 ;;      Totals:        17       0       0       0       0       0       0       0       0
 11273 ;;Total ram usage:       17 bytes
 11274 ;; Hardware stack levels used:    1
 11275 ;; Hardware stack levels required when called:    3
 11276 ;; This function calls:
 11277 ;;		Nothing
 11278 ;; This function is called by:
 11279 ;;		Interrupt level 1
 11280 ;; This function uses a non-reentrant model
 11281 ;;
 11282                           
 11283                           	psect	intcodelo
 11284  000018                     __pintcodelo:
 11285                           	opt stack 0
 11286  000018                     _tc_low:
 11287                           	opt stack 22
 11288                           
 11289                           ; BSR set to: 0
 11290                           ;incstack = 0
 11291  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11292  00001A  CFD8 F03B          	movff	status,??_tc_low
 11293  00001E  CFE8 F03C          	movff	wreg,??_tc_low+1
 11294  000022  CFE0 F03D          	movff	bsr,??_tc_low+2
 11295  000026  CFFA F03E          	movff	pclath,??_tc_low+3
 11296  00002A  CFFB F03F          	movff	pclatu,??_tc_low+4
 11297  00002E  CFE9 F040          	movff	fsr0l,??_tc_low+5
 11298  000032  CFEA F041          	movff	fsr0h,??_tc_low+6
 11299  000036  CFE1 F042          	movff	fsr1l,??_tc_low+7
 11300  00003A  CFE2 F043          	movff	fsr1h,??_tc_low+8
 11301  00003E  CFD9 F044          	movff	fsr2l,??_tc_low+9
 11302  000042  CFDA F045          	movff	fsr2h,??_tc_low+10
 11303  000046  CFF3 F046          	movff	prodl,??_tc_low+11
 11304  00004A  CFF4 F047          	movff	prodh,??_tc_low+12
 11305  00004E  CFF6 F048          	movff	tblptrl,??_tc_low+13
 11306  000052  CFF7 F049          	movff	tblptrh,??_tc_low+14
 11307  000056  CFF8 F04A          	movff	tblptru,??_tc_low+15
 11308  00005A  CFF5 F04B          	movff	tablat,??_tc_low+16
 11309  00005E  C04B  FFF5         	movff	??_tc_low+16,tablat
 11310  000062  C04A  FFF8         	movff	??_tc_low+15,tblptru
 11311  000066  C049  FFF7         	movff	??_tc_low+14,tblptrh
 11312  00006A  C048  FFF6         	movff	??_tc_low+13,tblptrl
 11313  00006E  C047  FFF4         	movff	??_tc_low+12,prodh
 11314  000072  C046  FFF3         	movff	??_tc_low+11,prodl
 11315  000076  C045  FFDA         	movff	??_tc_low+10,fsr2h
 11316  00007A  C044  FFD9         	movff	??_tc_low+9,fsr2l
 11317  00007E  C043  FFE2         	movff	??_tc_low+8,fsr1h
 11318  000082  C042  FFE1         	movff	??_tc_low+7,fsr1l
 11319  000086  C041  FFEA         	movff	??_tc_low+6,fsr0h
 11320  00008A  C040  FFE9         	movff	??_tc_low+5,fsr0l
 11321  00008E  C03F  FFFB         	movff	??_tc_low+4,pclatu
 11322  000092  C03E  FFFA         	movff	??_tc_low+3,pclath
 11323  000096  C03D  FFE0         	movff	??_tc_low+2,bsr
 11324  00009A  C03C  FFE8         	movff	??_tc_low+1,wreg
 11325  00009E  C03B  FFD8         	movff	??_tc_low,status
 11326  0000A2  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11327  0000A4  0010               	retfie	
 11328  0000A6                     __end_of_tc_low:
 11329                           	opt stack 0
 11330                           pclatu	equ	0xFFB
 11331                           pclath	equ	0xFFA
 11332                           tblptru	equ	0xFF8
 11333                           tblptrh	equ	0xFF7
 11334                           tblptrl	equ	0xFF6
 11335                           tablat	equ	0xFF5
 11336                           prodh	equ	0xFF4
 11337                           prodl	equ	0xFF3
 11338                           intcon	equ	0xFF2
 11339                           intcon2	equ	0xFF1
 11340                           postinc0	equ	0xFEE
 11341                           fsr0h	equ	0xFEA
 11342                           fsr0l	equ	0xFE9
 11343                           wreg	equ	0xFE8
 11344                           postdec1	equ	0xFE5
 11345                           fsr1h	equ	0xFE2
 11346                           fsr1l	equ	0xFE1
 11347                           bsr	equ	0xFE0
 11348                           postinc2	equ	0xFDE
 11349                           postdec2	equ	0xFDD
 11350                           fsr2h	equ	0xFDA
 11351                           fsr2l	equ	0xFD9
 11352                           status	equ	0xFD8
 11353                           
 11354 ;; *************** function _tc_high *****************
 11355 ;; Defined at:
 11356 ;;		line 149 in file "../Main.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;		None
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;		None
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  1    wreg      void 
 11363 ;; Registers used:
 11364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/0
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11370 ;;      Params:         0       0       0       0       0       0       0       0       0
 11371 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11372 ;;      Temps:         14       0       0       0       0       0       0       0       0
 11373 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11374 ;;Total ram usage:       14 bytes
 11375 ;; Hardware stack levels used:    1
 11376 ;; Hardware stack levels required when called:    2
 11377 ;; This function calls:
 11378 ;;		_EUSART1_Receive_ISR
 11379 ;;		_EUSART1_Transmit_ISR
 11380 ;;		_UPDATExTERMINAL
 11381 ;; This function is called by:
 11382 ;;		Interrupt level 2
 11383 ;; This function uses a non-reentrant model
 11384 ;;
 11385                           
 11386                           	psect	intcode
 11387  000008                     __pintcode:
 11388                           	opt stack 0
 11389  000008                     _tc_high:
 11390                           	opt stack 22
 11391                           
 11392                           ;incstack = 0
 11393  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11394  00000A  CFFA F02D          	movff	pclath,??_tc_high
 11395  00000E  CFFB F02E          	movff	pclatu,??_tc_high+1
 11396  000012  ED25  F014         	call	int_func,f	;refresh shadow registers
 11397                           pclatu	equ	0xFFB
 11398                           pclath	equ	0xFFA
 11399                           tblptru	equ	0xFF8
 11400                           tblptrh	equ	0xFF7
 11401                           tblptrl	equ	0xFF6
 11402                           tablat	equ	0xFF5
 11403                           prodh	equ	0xFF4
 11404                           prodl	equ	0xFF3
 11405                           intcon	equ	0xFF2
 11406                           intcon2	equ	0xFF1
 11407                           postinc0	equ	0xFEE
 11408                           fsr0h	equ	0xFEA
 11409                           fsr0l	equ	0xFE9
 11410                           wreg	equ	0xFE8
 11411                           postdec1	equ	0xFE5
 11412                           fsr1h	equ	0xFE2
 11413                           fsr1l	equ	0xFE1
 11414                           bsr	equ	0xFE0
 11415                           postinc2	equ	0xFDE
 11416                           postdec2	equ	0xFDD
 11417                           fsr2h	equ	0xFDA
 11418                           fsr2l	equ	0xFD9
 11419                           status	equ	0xFD8
 11420                           
 11421                           	psect	intcode_body
 11422  00284A                     __pintcode_body:
 11423                           	opt stack 22
 11424  00284A                     int_func:
 11425                           	opt stack 22
 11426  00284A  0006               	pop		; remove dummy address from shadow register refresh
 11427  00284C  CFE9 F02F          	movff	fsr0l,??_tc_high+2
 11428  002850  CFEA F030          	movff	fsr0h,??_tc_high+3
 11429  002854  CFE1 F031          	movff	fsr1l,??_tc_high+4
 11430  002858  CFE2 F032          	movff	fsr1h,??_tc_high+5
 11431  00285C  CFD9 F033          	movff	fsr2l,??_tc_high+6
 11432  002860  CFDA F034          	movff	fsr2h,??_tc_high+7
 11433  002864  CFF3 F035          	movff	prodl,??_tc_high+8
 11434  002868  CFF4 F036          	movff	prodh,??_tc_high+9
 11435  00286C  CFF6 F037          	movff	tblptrl,??_tc_high+10
 11436  002870  CFF7 F038          	movff	tblptrh,??_tc_high+11
 11437  002874  CFF8 F039          	movff	tblptru,??_tc_high+12
 11438  002878  CFF5 F03A          	movff	tablat,??_tc_high+13
 11439                           
 11440                           ;Main.c: 151: if (INTCONbits.TMR0IF)
 11441  00287C  A4F2               	btfss	intcon,2,c	;volatile
 11442  00287E  D020               	goto	i2l6355
 11443                           
 11444                           ;Main.c: 152: {
 11445                           ;Main.c: 153: if(Led1_Counter <= 100)
 11446  002880  0100               	movlb	0	; () banked
 11447  002882  51EB               	movf	(_Led1_Counter+1)& (0+255),w,b
 11448  002884  E107               	bnz	i2l92
 11449  002886  0E65               	movlw	101
 11450  002888  0100               	movlb	0	; () banked
 11451  00288A  5DEA               	subwf	_Led1_Counter& (0+255),w,b
 11452  00288C  B0D8               	btfsc	status,0,c
 11453  00288E  D002               	goto	i2l92
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;Main.c: 154: {
 11457                           ;Main.c: 155: PORTAbits.RA4 = 1;
 11458  002890  8880               	bsf	3968,4,c	;volatile
 11459                           
 11460                           ;Main.c: 156: }
 11461  002892  D001               	goto	i2l6343
 11462  002894                     i2l92:
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;Main.c: 157: else
 11466                           ;Main.c: 158: {
 11467                           ;Main.c: 159: PORTAbits.RA4 = 0;
 11468  002894  9880               	bcf	3968,4,c	;volatile
 11469  002896                     i2l6343:
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;Main.c: 160: }
 11473                           ;Main.c: 161: if(Led1_Counter >= 700)
 11474  002896  0EBC               	movlw	188
 11475  002898  0100               	movlb	0	; () banked
 11476  00289A  5DEA               	subwf	_Led1_Counter& (0+255),w,b
 11477  00289C  0E02               	movlw	2
 11478  00289E  0100               	movlb	0	; () banked
 11479  0028A0  59EB               	subwfb	(_Led1_Counter+1)& (0+255),w,b
 11480  0028A2  A0D8               	btfss	status,0,c
 11481  0028A4  D007               	goto	i2l6349
 11482                           
 11483                           ; BSR set to: 0
 11484                           ;Main.c: 162: {
 11485                           ;Main.c: 163: Led1_Counter = 0;
 11486  0028A6  0E00               	movlw	0
 11487  0028A8  0100               	movlb	0	; () banked
 11488  0028AA  6FEB               	movwf	(_Led1_Counter+1)& (0+255),b
 11489  0028AC  0E00               	movlw	0
 11490  0028AE  6FEA               	movwf	_Led1_Counter& (0+255),b
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;Main.c: 164: UPDATExTERMINAL();
 11494  0028B0  ECD1  F016         	call	_UPDATExTERMINAL	;wreg free
 11495  0028B4                     i2l6349:
 11496                           
 11497                           ;Main.c: 165: }
 11498                           ;Main.c: 166: Led1_Counter++;
 11499  0028B4  0100               	movlb	0	; () banked
 11500  0028B6  4BEA               	infsnz	_Led1_Counter& (0+255),f,b
 11501  0028B8  2BEB               	incf	(_Led1_Counter+1)& (0+255),f,b
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;Main.c: 167: Update_State_Machine = 1;
 11505  0028BA  0E01               	movlw	1
 11506  0028BC  6E25               	movwf	_Update_State_Machine,c
 11507                           
 11508                           ; BSR set to: 0
 11509                           ;Main.c: 168: INTCONbits.TMR0IF = 0;
 11510  0028BE  94F2               	bcf	intcon,2,c	;volatile
 11511  0028C0                     i2l6355:
 11512                           
 11513                           ;Main.c: 169: }
 11514                           ;Main.c: 171: if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
 11515  0028C0  BA9D               	btfsc	3997,5,c	;volatile
 11516  0028C2  AA9E               	btfss	3998,5,c	;volatile
 11517  0028C4  D002               	goto	i2l6361
 11518                           
 11519                           ;Main.c: 172: EUSART1_Receive_ISR();
 11520  0028C6  EC7F  F016         	call	_EUSART1_Receive_ISR	;wreg free
 11521  0028CA                     i2l6361:
 11522                           
 11523                           ;Main.c: 173: }
 11524                           ;Main.c: 174: if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
 11525  0028CA  B89D               	btfsc	3997,4,c	;volatile
 11526  0028CC  A89E               	btfss	3998,4,c	;volatile
 11527  0028CE  D002               	goto	i2l97
 11528                           
 11529                           ;Main.c: 175: EUSART1_Transmit_ISR();
 11530  0028D0  EC52  F016         	call	_EUSART1_Transmit_ISR	;wreg free
 11531  0028D4                     i2l97:
 11532  0028D4  C03A  FFF5         	movff	??_tc_high+13,tablat
 11533  0028D8  C039  FFF8         	movff	??_tc_high+12,tblptru
 11534  0028DC  C038  FFF7         	movff	??_tc_high+11,tblptrh
 11535  0028E0  C037  FFF6         	movff	??_tc_high+10,tblptrl
 11536  0028E4  C036  FFF4         	movff	??_tc_high+9,prodh
 11537  0028E8  C035  FFF3         	movff	??_tc_high+8,prodl
 11538  0028EC  C034  FFDA         	movff	??_tc_high+7,fsr2h
 11539  0028F0  C033  FFD9         	movff	??_tc_high+6,fsr2l
 11540  0028F4  C032  FFE2         	movff	??_tc_high+5,fsr1h
 11541  0028F8  C031  FFE1         	movff	??_tc_high+4,fsr1l
 11542  0028FC  C030  FFEA         	movff	??_tc_high+3,fsr0h
 11543  002900  C02F  FFE9         	movff	??_tc_high+2,fsr0l
 11544  002904  C02E  FFFB         	movff	??_tc_high+1,pclatu
 11545  002908  C02D  FFFA         	movff	??_tc_high,pclath
 11546  00290C  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11547  00290E  0011               	retfie		f
 11548  002910                     __end_of_tc_high:
 11549                           	opt stack 0
 11550                           pclatu	equ	0xFFB
 11551                           pclath	equ	0xFFA
 11552                           tblptru	equ	0xFF8
 11553                           tblptrh	equ	0xFF7
 11554                           tblptrl	equ	0xFF6
 11555                           tablat	equ	0xFF5
 11556                           prodh	equ	0xFF4
 11557                           prodl	equ	0xFF3
 11558                           intcon	equ	0xFF2
 11559                           intcon2	equ	0xFF1
 11560                           postinc0	equ	0xFEE
 11561                           fsr0h	equ	0xFEA
 11562                           fsr0l	equ	0xFE9
 11563                           wreg	equ	0xFE8
 11564                           postdec1	equ	0xFE5
 11565                           fsr1h	equ	0xFE2
 11566                           fsr1l	equ	0xFE1
 11567                           bsr	equ	0xFE0
 11568                           postinc2	equ	0xFDE
 11569                           postdec2	equ	0xFDD
 11570                           fsr2h	equ	0xFDA
 11571                           fsr2l	equ	0xFD9
 11572                           status	equ	0xFD8
 11573                           
 11574 ;; *************** function _UPDATExTERMINAL *****************
 11575 ;; Defined at:
 11576 ;;		line 21 in file "../terminal.c"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;		None
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;		None
 11581 ;; Return value:  Size  Location     Type
 11582 ;;                  1    wreg      void 
 11583 ;; Registers used:
 11584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11585 ;; Tracked objects:
 11586 ;;		On entry : 0/0
 11587 ;;		On exit  : 0/0
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11590 ;;      Params:         0       0       0       0       0       0       0       0       0
 11591 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11592 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11593 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11594 ;;Total ram usage:        0 bytes
 11595 ;; Hardware stack levels used:    1
 11596 ;; Hardware stack levels required when called:    1
 11597 ;; This function calls:
 11598 ;;		_EUSART1_Write
 11599 ;; This function is called by:
 11600 ;;		_tc_high
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604                           	psect	text29
 11605  002DA2                     __ptext29:
 11606                           	opt stack 0
 11607  002DA2                     _UPDATExTERMINAL:
 11608                           	opt stack 22
 11609                           
 11610                           ;terminal.c: 22: EUSART1_Write('A');
 11611                           
 11612                           ;incstack = 0
 11613  002DA2  0E41               	movlw	65
 11614  002DA4  EC04  F016         	call	_EUSART1_Write
 11615  002DA8  0012               	return		;funcret
 11616  002DAA                     __end_of_UPDATExTERMINAL:
 11617                           	opt stack 0
 11618                           pclatu	equ	0xFFB
 11619                           pclath	equ	0xFFA
 11620                           tblptru	equ	0xFF8
 11621                           tblptrh	equ	0xFF7
 11622                           tblptrl	equ	0xFF6
 11623                           tablat	equ	0xFF5
 11624                           prodh	equ	0xFF4
 11625                           prodl	equ	0xFF3
 11626                           intcon	equ	0xFF2
 11627                           intcon2	equ	0xFF1
 11628                           postinc0	equ	0xFEE
 11629                           fsr0h	equ	0xFEA
 11630                           fsr0l	equ	0xFE9
 11631                           wreg	equ	0xFE8
 11632                           postdec1	equ	0xFE5
 11633                           fsr1h	equ	0xFE2
 11634                           fsr1l	equ	0xFE1
 11635                           bsr	equ	0xFE0
 11636                           postinc2	equ	0xFDE
 11637                           postdec2	equ	0xFDD
 11638                           fsr2h	equ	0xFDA
 11639                           fsr2l	equ	0xFD9
 11640                           status	equ	0xFD8
 11641                           
 11642 ;; *************** function _EUSART1_Write *****************
 11643 ;; Defined at:
 11644 ;;		line 160 in file "../eusart1.c"
 11645 ;; Parameters:    Size  Location     Type
 11646 ;;  txData          1    wreg     unsigned char 
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;  txData          1    0[COMRAM] unsigned char 
 11649 ;; Return value:  Size  Location     Type
 11650 ;;                  1    wreg      void 
 11651 ;; Registers used:
 11652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11653 ;; Tracked objects:
 11654 ;;		On entry : 0/0
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11658 ;;      Params:         0       0       0       0       0       0       0       0       0
 11659 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11660 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11661 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11662 ;;Total ram usage:        1 bytes
 11663 ;; Hardware stack levels used:    1
 11664 ;; This function calls:
 11665 ;;		Nothing
 11666 ;; This function is called by:
 11667 ;;		_UPDATExTERMINAL
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text30
 11672  002C08                     __ptext30:
 11673                           	opt stack 0
 11674  002C08                     _EUSART1_Write:
 11675                           	opt stack 22
 11676                           
 11677                           ;incstack = 0
 11678                           ;EUSART1_Write@txData stored from wreg
 11679  002C08  6E2C               	movwf	EUSART1_Write@txData,c
 11680  002C0A                     i2l5385:
 11681  002C0A  5029               	movf	_eusart1TxBufferRemaining,w,c	;volatile
 11682  002C0C  B4D8               	btfsc	status,2,c
 11683  002C0E  D7FD               	goto	i2l5385
 11684                           
 11685                           ;eusart1.c: 162: }
 11686                           ;eusart1.c: 164: if (0 == PIE1bits.TX1IE) {
 11687  002C10  B89D               	btfsc	3997,4,c	;volatile
 11688  002C12  D003               	goto	i2l613
 11689                           
 11690                           ;eusart1.c: 165: TXREG1 = txData;
 11691  002C14  C02C  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 11692                           
 11693                           ;eusart1.c: 166: } else {
 11694  002C18  D012               	goto	i2l5399
 11695  002C1A                     i2l613:
 11696                           
 11697                           ;eusart1.c: 167: PIE1bits.TX1IE = 0;
 11698  002C1A  989D               	bcf	3997,4,c	;volatile
 11699                           
 11700                           ;eusart1.c: 168: eusart1TxBuffer[eusart1TxHead++] = txData;
 11701  002C1C  502A               	movf	_eusart1TxHead,w,c
 11702  002C1E  0D01               	mullw	1
 11703  002C20  0E7E               	movlw	low _eusart1TxBuffer
 11704  002C22  24F3               	addwf	prodl,w,c
 11705  002C24  6ED9               	movwf	fsr2l,c
 11706  002C26  0E01               	movlw	high _eusart1TxBuffer
 11707  002C28  20F4               	addwfc	prodh,w,c
 11708  002C2A  6EDA               	movwf	fsr2h,c
 11709  002C2C  C02C  FFDF         	movff	EUSART1_Write@txData,indf2
 11710  002C30  2A2A               	incf	_eusart1TxHead,f,c
 11711                           
 11712                           ;eusart1.c: 169: if (sizeof (eusart1TxBuffer) <= eusart1TxHead) {
 11713  002C32  0E7D               	movlw	125
 11714  002C34  642A               	cpfsgt	_eusart1TxHead,c
 11715  002C36  D002               	goto	i2l5397
 11716                           
 11717                           ;eusart1.c: 170: eusart1TxHead = 0;
 11718  002C38  0E00               	movlw	0
 11719  002C3A  6E2A               	movwf	_eusart1TxHead,c
 11720  002C3C                     i2l5397:
 11721                           
 11722                           ;eusart1.c: 171: }
 11723                           ;eusart1.c: 172: eusart1TxBufferRemaining--;
 11724  002C3C  0629               	decf	_eusart1TxBufferRemaining,f,c	;volatile
 11725  002C3E                     i2l5399:
 11726                           
 11727                           ;eusart1.c: 173: }
 11728                           ;eusart1.c: 174: PIE1bits.TX1IE = 1;
 11729  002C3E  889D               	bsf	3997,4,c	;volatile
 11730  002C40  0012               	return		;funcret
 11731  002C42                     __end_of_EUSART1_Write:
 11732                           	opt stack 0
 11733                           pclatu	equ	0xFFB
 11734                           pclath	equ	0xFFA
 11735                           tblptru	equ	0xFF8
 11736                           tblptrh	equ	0xFF7
 11737                           tblptrl	equ	0xFF6
 11738                           tablat	equ	0xFF5
 11739                           prodh	equ	0xFF4
 11740                           prodl	equ	0xFF3
 11741                           intcon	equ	0xFF2
 11742                           intcon2	equ	0xFF1
 11743                           postinc0	equ	0xFEE
 11744                           fsr0h	equ	0xFEA
 11745                           fsr0l	equ	0xFE9
 11746                           wreg	equ	0xFE8
 11747                           postdec1	equ	0xFE5
 11748                           fsr1h	equ	0xFE2
 11749                           fsr1l	equ	0xFE1
 11750                           bsr	equ	0xFE0
 11751                           indf2	equ	0xFDF
 11752                           postinc2	equ	0xFDE
 11753                           postdec2	equ	0xFDD
 11754                           fsr2h	equ	0xFDA
 11755                           fsr2l	equ	0xFD9
 11756                           status	equ	0xFD8
 11757                           
 11758 ;; *************** function _EUSART1_Transmit_ISR *****************
 11759 ;; Defined at:
 11760 ;;		line 177 in file "../eusart1.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;		None
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;		None
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1    wreg      void 
 11767 ;; Registers used:
 11768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11774 ;;      Params:         0       0       0       0       0       0       0       0       0
 11775 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11776 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11777 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11778 ;;Total ram usage:        0 bytes
 11779 ;; Hardware stack levels used:    1
 11780 ;; This function calls:
 11781 ;;		Nothing
 11782 ;; This function is called by:
 11783 ;;		_tc_high
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           	psect	text31
 11788  002CA4                     __ptext31:
 11789                           	opt stack 0
 11790  002CA4                     _EUSART1_Transmit_ISR:
 11791                           	opt stack 23
 11792                           
 11793                           ;eusart1.c: 180: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
 11794                           
 11795                           ;incstack = 0
 11796  002CA4  0E7E               	movlw	126
 11797  002CA6  6029               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
 11798  002CA8  D012               	goto	i2l619
 11799                           
 11800                           ;eusart1.c: 181: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
 11801  002CAA  502B               	movf	_eusart1TxTail,w,c
 11802  002CAC  0D01               	mullw	1
 11803  002CAE  0E7E               	movlw	low _eusart1TxBuffer
 11804  002CB0  24F3               	addwf	prodl,w,c
 11805  002CB2  6ED9               	movwf	fsr2l,c
 11806  002CB4  0E01               	movlw	high _eusart1TxBuffer
 11807  002CB6  20F4               	addwfc	prodh,w,c
 11808  002CB8  6EDA               	movwf	fsr2h,c
 11809  002CBA  50DF               	movf	indf2,w,c
 11810  002CBC  6EAD               	movwf	4013,c	;volatile
 11811  002CBE  2A2B               	incf	_eusart1TxTail,f,c
 11812                           
 11813                           ;eusart1.c: 182: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
 11814  002CC0  0E7D               	movlw	125
 11815  002CC2  642B               	cpfsgt	_eusart1TxTail,c
 11816  002CC4  D002               	goto	i2l6265
 11817                           
 11818                           ;eusart1.c: 183: eusart1TxTail = 0;
 11819  002CC6  0E00               	movlw	0
 11820  002CC8  6E2B               	movwf	_eusart1TxTail,c
 11821  002CCA                     i2l6265:
 11822                           
 11823                           ;eusart1.c: 184: }
 11824                           ;eusart1.c: 185: eusart1TxBufferRemaining++;
 11825  002CCA  2A29               	incf	_eusart1TxBufferRemaining,f,c	;volatile
 11826                           
 11827                           ;eusart1.c: 186: } else {
 11828  002CCC  0012               	return	
 11829  002CCE                     i2l619:
 11830                           
 11831                           ;eusart1.c: 187: PIE1bits.TX1IE = 0;
 11832  002CCE  989D               	bcf	3997,4,c	;volatile
 11833  002CD0  0012               	return	
 11834  002CD2                     __end_of_EUSART1_Transmit_ISR:
 11835                           	opt stack 0
 11836                           pclatu	equ	0xFFB
 11837                           pclath	equ	0xFFA
 11838                           tblptru	equ	0xFF8
 11839                           tblptrh	equ	0xFF7
 11840                           tblptrl	equ	0xFF6
 11841                           tablat	equ	0xFF5
 11842                           prodh	equ	0xFF4
 11843                           prodl	equ	0xFF3
 11844                           intcon	equ	0xFF2
 11845                           intcon2	equ	0xFF1
 11846                           postinc0	equ	0xFEE
 11847                           fsr0h	equ	0xFEA
 11848                           fsr0l	equ	0xFE9
 11849                           wreg	equ	0xFE8
 11850                           postdec1	equ	0xFE5
 11851                           fsr1h	equ	0xFE2
 11852                           fsr1l	equ	0xFE1
 11853                           bsr	equ	0xFE0
 11854                           indf2	equ	0xFDF
 11855                           postinc2	equ	0xFDE
 11856                           postdec2	equ	0xFDD
 11857                           fsr2h	equ	0xFDA
 11858                           fsr2l	equ	0xFD9
 11859                           status	equ	0xFD8
 11860                           
 11861 ;; *************** function _EUSART1_Receive_ISR *****************
 11862 ;; Defined at:
 11863 ;;		line 191 in file "../eusart1.c"
 11864 ;; Parameters:    Size  Location     Type
 11865 ;;		None
 11866 ;; Auto vars:     Size  Location     Type
 11867 ;;		None
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  1    wreg      void 
 11870 ;; Registers used:
 11871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11872 ;; Tracked objects:
 11873 ;;		On entry : 0/0
 11874 ;;		On exit  : 0/0
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11877 ;;      Params:         0       0       0       0       0       0       0       0       0
 11878 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11879 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11880 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11881 ;;Total ram usage:        0 bytes
 11882 ;; Hardware stack levels used:    1
 11883 ;; This function calls:
 11884 ;;		Nothing
 11885 ;; This function is called by:
 11886 ;;		_tc_high
 11887 ;; This function uses a non-reentrant model
 11888 ;;
 11889                           
 11890                           	psect	text32
 11891  002CFE                     __ptext32:
 11892                           	opt stack 0
 11893  002CFE                     _EUSART1_Receive_ISR:
 11894                           	opt stack 23
 11895                           
 11896                           ;eusart1.c: 192: if (1 == RCSTA1bits.OERR) {
 11897                           
 11898                           ;incstack = 0
 11899  002CFE  A2AB               	btfss	4011,1,c	;volatile
 11900  002D00  D002               	goto	i2l6245
 11901                           
 11902                           ;eusart1.c: 195: RCSTA1bits.CREN = 0;
 11903  002D02  98AB               	bcf	4011,4,c	;volatile
 11904                           
 11905                           ;eusart1.c: 196: RCSTA1bits.CREN = 1;
 11906  002D04  88AB               	bsf	4011,4,c	;volatile
 11907  002D06                     i2l6245:
 11908                           
 11909                           ;eusart1.c: 197: }
 11910                           ;eusart1.c: 200: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 11911  002D06  5027               	movf	_eusart1RxHead,w,c
 11912  002D08  0D01               	mullw	1
 11913  002D0A  0E00               	movlw	low _eusart1RxBuffer
 11914  002D0C  24F3               	addwf	prodl,w,c
 11915  002D0E  6ED9               	movwf	fsr2l,c
 11916  002D10  0E02               	movlw	high _eusart1RxBuffer
 11917  002D12  20F4               	addwfc	prodh,w,c
 11918  002D14  6EDA               	movwf	fsr2h,c
 11919  002D16  CFAE FFDF          	movff	4014,indf2	;volatile
 11920  002D1A  2A27               	incf	_eusart1RxHead,f,c
 11921                           
 11922                           ;eusart1.c: 201: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
 11923  002D1C  0E7D               	movlw	125
 11924  002D1E  6427               	cpfsgt	_eusart1RxHead,c
 11925  002D20  D002               	goto	i2l6253
 11926                           
 11927                           ;eusart1.c: 202: eusart1RxHead = 0;
 11928  002D22  0E00               	movlw	0
 11929  002D24  6E27               	movwf	_eusart1RxHead,c
 11930  002D26                     i2l6253:
 11931                           
 11932                           ;eusart1.c: 203: }
 11933                           ;eusart1.c: 204: eusart1RxCount++;
 11934  002D26  2A26               	incf	_eusart1RxCount,f,c	;volatile
 11935  002D28  0012               	return		;funcret
 11936  002D2A                     __end_of_EUSART1_Receive_ISR:
 11937                           	opt stack 0
 11938  0000                     pclatu	equ	0xFFB
 11939                           pclath	equ	0xFFA
 11940                           tblptru	equ	0xFF8
 11941                           tblptrh	equ	0xFF7
 11942                           tblptrl	equ	0xFF6
 11943                           tablat	equ	0xFF5
 11944                           prodh	equ	0xFF4
 11945                           prodl	equ	0xFF3
 11946                           intcon	equ	0xFF2
 11947                           intcon2	equ	0xFF1
 11948                           postinc0	equ	0xFEE
 11949                           fsr0h	equ	0xFEA
 11950                           fsr0l	equ	0xFE9
 11951                           wreg	equ	0xFE8
 11952                           postdec1	equ	0xFE5
 11953                           fsr1h	equ	0xFE2
 11954                           fsr1l	equ	0xFE1
 11955                           bsr	equ	0xFE0
 11956                           indf2	equ	0xFDF
 11957                           postinc2	equ	0xFDE
 11958                           postdec2	equ	0xFDD
 11959                           fsr2h	equ	0xFDA
 11960                           fsr2l	equ	0xFD9
 11961                           status	equ	0xFD8
 11962                           pclatu	equ	0xFFB
 11963                           pclath	equ	0xFFA
 11964                           tblptru	equ	0xFF8
 11965                           tblptrh	equ	0xFF7
 11966                           tblptrl	equ	0xFF6
 11967                           tablat	equ	0xFF5
 11968                           prodh	equ	0xFF4
 11969                           prodl	equ	0xFF3
 11970                           intcon	equ	0xFF2
 11971                           intcon2	equ	0xFF1
 11972                           postinc0	equ	0xFEE
 11973                           fsr0h	equ	0xFEA
 11974                           fsr0l	equ	0xFE9
 11975                           wreg	equ	0xFE8
 11976                           postdec1	equ	0xFE5
 11977                           fsr1h	equ	0xFE2
 11978                           fsr1l	equ	0xFE1
 11979                           bsr	equ	0xFE0
 11980                           indf2	equ	0xFDF
 11981                           postinc2	equ	0xFDE
 11982                           postdec2	equ	0xFDD
 11983                           fsr2h	equ	0xFDA
 11984                           fsr2l	equ	0xFD9
 11985                           status	equ	0xFD8
 11986                           
 11987                           	psect	rparam
 11988  0000                     pclatu	equ	0xFFB
 11989                           pclath	equ	0xFFA
 11990                           tblptru	equ	0xFF8
 11991                           tblptrh	equ	0xFF7
 11992                           tblptrl	equ	0xFF6
 11993                           tablat	equ	0xFF5
 11994                           prodh	equ	0xFF4
 11995                           prodl	equ	0xFF3
 11996                           intcon	equ	0xFF2
 11997                           intcon2	equ	0xFF1
 11998                           postinc0	equ	0xFEE
 11999                           fsr0h	equ	0xFEA
 12000                           fsr0l	equ	0xFE9
 12001                           wreg	equ	0xFE8
 12002                           postdec1	equ	0xFE5
 12003                           fsr1h	equ	0xFE2
 12004                           fsr1l	equ	0xFE1
 12005                           bsr	equ	0xFE0
 12006                           indf2	equ	0xFDF
 12007                           postinc2	equ	0xFDE
 12008                           postdec2	equ	0xFDD
 12009                           fsr2h	equ	0xFDA
 12010                           fsr2l	equ	0xFD9
 12011                           status	equ	0xFD8
 12012                           
 12013                           	psect	temp
 12014  00004D                     btemp:
 12015                           	opt stack 0
 12016  00004D                     	ds	1
 12017  0000                     int$flags	set	btemp
 12018                           pclatu	equ	0xFFB
 12019                           pclath	equ	0xFFA
 12020                           tblptru	equ	0xFF8
 12021                           tblptrh	equ	0xFF7
 12022                           tblptrl	equ	0xFF6
 12023                           tablat	equ	0xFF5
 12024                           prodh	equ	0xFF4
 12025                           prodl	equ	0xFF3
 12026                           intcon	equ	0xFF2
 12027                           intcon2	equ	0xFF1
 12028                           postinc0	equ	0xFEE
 12029                           fsr0h	equ	0xFEA
 12030                           fsr0l	equ	0xFE9
 12031                           wreg	equ	0xFE8
 12032                           postdec1	equ	0xFE5
 12033                           fsr1h	equ	0xFE2
 12034                           fsr1l	equ	0xFE1
 12035                           bsr	equ	0xFE0
 12036                           indf2	equ	0xFDF
 12037                           postinc2	equ	0xFDE
 12038                           postdec2	equ	0xFDD
 12039                           fsr2h	equ	0xFDA
 12040                           fsr2l	equ	0xFD9
 12041                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         565
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      76
    BANK0           160      7     160
    BANK1           256      4     256
    BANK2           256      7     133
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _tc_low in COMRAM

    None.

Critical Paths under _tc_high in COMRAM

    _UPDATExTERMINAL->_EUSART1_Write

Critical Paths under _main in BANK0

    _Train_Path->_Left_Mountain_From_The_Left
    _Train_Path->_Left_Mountain_From_The_Right
    _Train_Path->_Right_Mountain_From_The_Left
    _Train_Path->_Right_Mountain_From_The_Right
    _SETxPWM->_SetDCPWM1
    _Junction->_GETxAPIxVAL
    _INCRxAPIxVAL->_GETxAPIxVAL
    _INCRxAPIxVAL->_SETxAPIxVAL
    _Eeprom_Store->_GETxAPIxVAL
    _Debounce_Inputs->_GETxAPIxVAL
    _Debounce_Inputs->_SETxAPIxVAL
    _DECRxAPIxVAL->_GETxAPIxVAL
    _DECRxAPIxVAL->_SETxAPIxVAL

Critical Paths under _tc_low in BANK0

    None.

Critical Paths under _tc_high in BANK0

    None.

Critical Paths under _main in BANK1

    _Update_StateMchn->_Train_Path
    _Train_Move_Right_Start->_SETxPWM
    _Train_Move_Right_Brake->_SETxPWM
    _Train_Move_Left_Start->_SETxPWM
    _Train_Move_Left_Brake->_SETxPWM
    _Right_Mountain_From_The_Right->_SETxPWM
    _Right_Mountain_From_The_Left->_SETxPWM
    _Left_Mountain_From_The_Right->_SETxPWM
    _Left_Mountain_From_The_Left->_SETxPWM

Critical Paths under _tc_low in BANK1

    None.

Critical Paths under _tc_high in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Update_StateMchn
    _Update_StateMchn->_Train_Path
    _Train_Move_Right_Start->_SETxPWM
    _Train_Move_Right_Brake->_SETxPWM
    _Train_Move_Left_Start->_SETxPWM
    _Train_Move_Left_Brake->_SETxPWM
    _Right_Mountain_From_The_Right->_SETxPWM
    _Right_Mountain_From_The_Left->_SETxPWM
    _Left_Mountain_From_The_Right->_SETxPWM
    _Left_Mountain_From_The_Left->_SETxPWM

Critical Paths under _tc_low in BANK2

    None.

Critical Paths under _tc_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_low in BANK3

    None.

Critical Paths under _tc_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_low in BANK4

    None.

Critical Paths under _tc_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_low in BANK5

    None.

Critical Paths under _tc_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tc_low in BANK6

    None.

Critical Paths under _tc_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tc_low in BANK7

    None.

Critical Paths under _tc_high in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   29223
                     _APIxInitialize
                 _EUSART1_Initialize
                      _INIT_TERMINAL
                           _Init_Pwm
                        _Init_Timers
                   _Update_StateMchn
 ---------------------------------------------------------------------------------
 (1) _Update_StateMchn                                     2     2      0   29001
                                              5 BANK2      2     2      0
                       _DECRxAPIxVAL
                    _Debounce_Inputs
                       _Eeprom_Store
                        _GETxAPIxVAL
                          _Green_Led
                       _INCRxAPIxVAL
                            _Red_Led
                        _SETxAPIxVAL
                         _Train_Path
 ---------------------------------------------------------------------------------
 (2) _Train_Path                                           2     1      1   19050
                                              3 BANK1      1     0      1
                                              4 BANK2      1     1      0
                        _GETxAPIxVAL
                           _Junction
        _Left_Mountain_From_The_Left
       _Left_Mountain_From_The_Right
       _Right_Mountain_From_The_Left
      _Right_Mountain_From_The_Right
              _Train_Move_Left_Brake
              _Train_Move_Left_Start
             _Train_Move_Right_Brake
             _Train_Move_Right_Start
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Right_Start                               0     0      0    2161
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Right_Brake                               0     0      0    2161
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Left_Start                                0     0      0    2161
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Left_Brake                                0     0      0    2161
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Right_Mountain_From_The_Right                        1     1      0    2254
                                              6 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Right_Mountain_From_The_Left                         1     1      0    2254
                                              6 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Left_Mountain_From_The_Right                         1     1      0    2254
                                              6 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Left_Mountain_From_The_Left                          1     1      0    2254
                                              6 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (4) _SETxPWM                                              7     4      3    2130
                                              0 BANK1      3     0      3
                                              0 BANK2      4     4      0
                        _GETxAPIxVAL (ARG)
                          _SetDCPWM1
 ---------------------------------------------------------------------------------
 (5) _SetDCPWM1                                            6     4      2     207
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _Junction                                             2     1      1     556
                                              3 BANK0      2     1      1
                        _GETxAPIxVAL
 ---------------------------------------------------------------------------------
 (2) _Red_Led                                              1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _INCRxAPIxVAL                                         3     3      0    2514
                                              3 BANK0      3     3      0
                        _GETxAPIxVAL
                        _SETxAPIxVAL
 ---------------------------------------------------------------------------------
 (2) _Green_Led                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Eeprom_Store                                         0     0      0      31
                        _GETxAPIxVAL
 ---------------------------------------------------------------------------------
 (2) _Debounce_Inputs                                      2     2      0    2415
                                              3 BANK0      2     2      0
                        _GETxAPIxVAL
                        _SETxAPIxVAL
 ---------------------------------------------------------------------------------
 (2) _DECRxAPIxVAL                                         3     3      0    2514
                                              3 BANK0      3     3      0
                        _GETxAPIxVAL
                        _SETxAPIxVAL
 ---------------------------------------------------------------------------------
 (2) _SETxAPIxVAL                                          3     1      2    2384
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _GETxAPIxVAL                                          3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INIT_TERMINAL                                        2     2      0      47
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Initialize                                   2     2      0      45
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _APIxInitialize                                       2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tc_low                                              17    17      0       0
                                             15 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _tc_high                                             14    14      0      44
                                              1 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                    _UPDATExTERMINAL
 ---------------------------------------------------------------------------------
 (8) _UPDATExTERMINAL                                      0     0      0      44
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APIxInitialize
   _EUSART1_Initialize
   _INIT_TERMINAL
   _Init_Pwm
   _Init_Timers
   _Update_StateMchn
     _DECRxAPIxVAL
       _GETxAPIxVAL
       _SETxAPIxVAL
     _Debounce_Inputs
       _GETxAPIxVAL
       _SETxAPIxVAL
     _Eeprom_Store
       _GETxAPIxVAL
     _GETxAPIxVAL
     _Green_Led
     _INCRxAPIxVAL
       _GETxAPIxVAL
       _SETxAPIxVAL
     _Red_Led
     _SETxAPIxVAL
     _Train_Path
       _GETxAPIxVAL
       _Junction
         _GETxAPIxVAL
       _Left_Mountain_From_The_Left
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SetDCPWM1 (ARG)
       _Left_Mountain_From_The_Right
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SetDCPWM1 (ARG)
       _Right_Mountain_From_The_Left
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SetDCPWM1 (ARG)
       _Right_Mountain_From_The_Right
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SetDCPWM1 (ARG)
       _Train_Move_Left_Brake
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SetDCPWM1 (ARG)
       _Train_Move_Left_Start
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SetDCPWM1 (ARG)
       _Train_Move_Right_Brake
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SetDCPWM1 (ARG)
       _Train_Move_Right_Start
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SetDCPWM1 (ARG)

 _tc_low (ROOT)

 _tc_high (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _UPDATExTERMINAL
     _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      7      85       9       52.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      7      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      4C       1       80.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     271      20        0.0%
DATA                 0      0     271       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Oct 10 20:12:02 2017

                  _eusart1TxBufferRemaining 0029                                          bsr 000FE0  
                               __CFG_BORV$3 000000                                __CFG_CP0$OFF 000000  
                              __CFG_CP1$OFF 000000                                __CFG_CP2$OFF 000000  
                              __CFG_CP3$OFF 000000                                         l311 0A34  
                                       l410 0EE2                                         l325 0AD6  
                                       l362 0C8A                                         l447 108C  
                                       l456 1740                                         l634 2C74  
                                       l396 0E40                                         l901 278A  
                                       l750 2A52                                         l910 27A8  
                                       l903 278E                                         l680 26CC  
                                       l745 2A22                                         l761 299E  
                                       l754 2A7E                                         l770 29FA  
                                       l683 26FA                                         l747 2A26  
                                       l763 29A2                                         l692 2770  
                                       l916 2818                                         l908 27A4  
                                       l686 271E                                         l766 29CE  
                                       l689 274C                                         _API 0060  
                              __CFG_CPB$OFF 000000                                _Stop_Program 0019  
                                       _PR2 000FCB                                __CFG_CPD$OFF 000000  
                              __CFG_BOR$OFF 000000                                         prod 000FF3  
                                       wreg 000FE8                      __size_of_INIT_TERMINAL 0034  
          Train_Move_Right_Start@Return_Val 00F8                                ?_GETxAPIxVAL 00F9  
                           APIxInitialize@i 00F9                                __CFG_LVP$OFF 000000  
       __end_of_Left_Mountain_From_The_Left 2486                 _Left_Mountain_From_The_Left 2372  
                              __CFG_WDT$OFF 000000       __end_of_Right_Mountain_From_The_Right 2142  
    __size_of_Right_Mountain_From_The_Right 011A               _Right_Mountain_From_The_Right 2028  
                                      l7003 2578                                        l7011 1F0E  
                                      l7101 1EDA                                        l7005 2592  
                                      l7111 1F06                                        l7023 1F5E  
                                      l7105 1EE4                                        l7025 1F64  
                                      l7017 1F3A                                        l7123 2398  
                                      l7203 2224                                        l7051 2000  
                                      l7043 1FCA                                        l7035 1FA0  
                                      l8003 0164                                        l7125 23A6  
                                      l7117 2378                                        l7213 2248  
                                      l7221 202E                                        l7109 1EEC  
                                      l7029 1F8E                                        l8013 0198  
                                      l7151 2450                                        l7135 23EA  
                                      l7143 2410                                        l7127 23AC  
                                      l7215 2256                                        l7231 2066  
                                      l7071 1E1E                                        l7063 1DEC  
                                      l7047 1FF6                                        l7055 2008  
                                      l8103 041A                                        l8031 0216  
                                      l7161 2472                                        l7313 2690  
                                      l7209 2242                                        l7225 203C  
                                      l7049 1FFC                                        l7057 2022  
                                      l8121 046A                                        l8113 044C  
                                      l8105 0420                                        l8009 018C  
                                      l7411 12C8                                        l7403 1276  
                                      l7139 2406                                        l7163 2480  
                                      l7307 2672                                        l7243 20C2  
                                      l7083 1E72                                        l8211 0670  
                                      l8123 046E                                        l8131 0484  
                                      l8043 0266                                        l8027 0208  
                                      l7501 1590                                        l7421 131C  
                                      l7413 12DA                                        l7405 12A2  
                                      l7341 10F6                                        l7325 1090  
                                      l7157 246C                                        l7317 2696  
                                      l7173 2156                                        l7261 2128  
                                      l7229 2060                                        l7077 1E42  
                                      l8213 067A                                        l8221 068C  
                                      l8205 062E                                        l8141 04D0  
                                      l8125 0478                                        l8117 0462  
                                      l8133 04B2                                        l8109 043E  
                                      l8061 02DE                                        l8037 023E  
                                      l7351 1132                                        l7335 10CC  
                                      l7319 26A4                                        l7191 21DA  
                                      l7255 210C                                        l7239 20A6  
                                      l7247 20CC                                        l7079 1E48  
                                      l8231 06F4                                        l8223 06BA  
                                      l8215 0680                                        l8207 065C  
                                      l8143 04D4                                        l8151 04EA  
                                      l8119 0466                                        l8071 0312  
                                      l8055 02B6                                        l7361 1172  
                                      l7345 110C                                        l7329 10A6  
                                      l7601 2A42                                        l7281 25CA  
                                      l7273 259E                                        l7177 217A  
                                      l7169 2148                                        l7265 212E  
                                      l7097 1EAE                                        l7089 1E84  
                                      l8401 0A62                                        l8241 0726  
                                      l8233 06FA                                        l8209 0666  
                                      l8161 0548                                        l8145 04DE  
                                      l8137 04C8                                        l8153 0518  
                                      l8049 028E                                        l7523 161C  
                                      l7531 1644                                        l7507 15B6  
                                      l7515 15DE                                        l7443 13BC  
                                      l7451 13E4                                        l7427 1342  
                                      l7435 136A                                        l7419 12F0  
                                      l7371 11AA                                        l7355 1144  
                                      l7339 10DE                                        l7611 2A6E  
                                      l7291 2610                                        l7283 25D0  
                                      l7187 21C0                                        l7195 21E4  
                                      l7179 2180                                        l7267 213C  
                                      l8403 0A66                                        l8251 0762  
                                      l8163 0552                                        l8139 04CC  
                                      l8067 0306                                        l7541 1694  
                                      l7533 165C                                        l7525 162E  
                                      l7517 15F6                                        l7509 15C8  
                                      l7461 144C                                        l7453 1410  
                                      l7445 13CE                                        l7437 1396  
                                      l7429 1354                                        l7373 11C2  
                                      l7357 115C                                        l7605 2A56  
                                      l7621 29A6                                        l8501 0C2A  
                                      l8421 0AB8                                        l8309 0878  
                                      l8261 07A6                                        l8253 076C  
                                      l8245 0744                                        l8237 0718  
                                      l8181 05BA                                        l8165 055C  
                                      l8173 0572                                        l8229 06C6  
                                      l8093 03E0                                        l7383 11FE  
                                      l7367 1198                                        l7631 29D2  
                                      l7295 262A                                        l7279 25BC  
                                      l8431 0AF2                                        l8423 0ABC  
                                      l8415 0A86                                        l8319 0894  
                                      l8351 08E8                                        l8247 074E  
                                      l8191 05FE                                        l8183 05C4  
                                      l8175 05A0                                        l8167 0566  
                                      l8159 0542                                        l8095 03E8  
                                      l7377 11D8                                        l7617 2A82  
                                      l6905 225E                                        l7705 181C  
                                      l8409 0A80                                        l8361 094C  
                                      l8353 091C                                        l8329 08B0  
                                      l8513 0C52                                        l8249 0758  
                                      l8193 0608                                        l8177 05AA  
                                      l8089 03B2                                        l7555 16E8  
                                      l7563 1710                                        l7539 1682  
                                      l7547 16AA                                        l7491 153A  
                                      l7475 14BA                                        l7483 14E4  
                                      l7459 143A                                        l7467 1464  
                                      l7395 124E                                        l7387 1210  
                                      l7627 29BE                                        l7643 29FE  
                                      l7299 2634                                        l6931 22EE  
                                      l6923 22B8                                        l6915 2288  
                                      l7803 19E0                                        l7723 188E  
                                      l7715 1862                                        l7707 183A  
                                      l7651 1746                                        l8603 0DFC  
                                      l8523 0C92                                        l8507 0C46  
                                      l8451 0B48                                        l8443 0B12  
                                      l8419 0A96                                        l8515 0C68  
                                      l8339 08CC                                        l8275 0818  
                                      l8259 0778                                        l8195 0612  
                                      l8179 05B0                                        l8099 0400  
                                      l8267 07B2                                        l7557 16FA  
                                      l7549 16C2                                        l7493 154C  
                                      l7485 1510                                        l7477 14CC  
                                      l7469 1490                                        l7397 1260  
                                      l7389 1228                                        l7637 29EA  
                                      l6933 22F4                                        l6909 227C  
                                      l7661 1774                                        l8605 0E06  
                                      l8533 0CB8                                        l8437 0B0C  
                                      l8429 0AEE                                        l8373 0988  
                                      l8365 0958                                        l8269 07FE  
                                      l8197 0618                                        l8189 05D0  
                                      l6927 22E2                                        l6951 236C  
                                      l7831 1A2E                                        l7823 1A1E  
                                      l7727 18A4                                        l7719 1878  
                                      l7671 17AC                                        l7655 1754  
                                      l7647 172E                                        l8703 1000  
                                      l8623 0E8C                                        l8615 0E6E  
                                      l8607 0E0E                                        l8543 0CD4  
                                      l8519 0C7E                                        l8463 0B82  
                                      l8455 0B64                                        l8447 0B22  
                                      l8391 09FA                                        l8279 0824  
                                      l8199 0622                                        l6873 2792  
                                      l6881 27BE                                        l6961 24A6  
                                      l6945 2346                                        l7809 19E6  
                                      l7817 19F8                                        l7665 1778  
                                      l8721 1052                                        l8713 1016  
                                      l8617 0E72                                        l8609 0E12  
                                      l8633 0EA2                                        l8553 0CF0  
                                      l8529 0CAC                                        l8481 0BD6  
                                      l8457 0B68                                        l8449 0B44  
                                      l8473 0B98                                        l8393 0A02  
                                      l8377 0992                                        l8289 0840  
                                      l7931 1AC4                                        l7499 1564  
                                      l7595 2A2A                                        l6883 27CE  
                                      l6859 295E                                        l6939 2324  
                                      l7851 1A5E                                        l7843 1A46  
                                      l7835 1A36                                        l7827 1A26  
                                      l7819 1A16                                        l7771 195E  
                                      l7747 18F8                                        l7691 1802  
                                      l7675 17BA                                        l7667 1796  
                                      l7659 1762                                        l8715 1036  
                                      l8651 0F18                                        l8643 0EFA  
                                      l8635 0EC4                                        l8483 0BDA  
                                      l8475 0BBA                                        l8395 0A06  
                                      l8379 099E                                        l8299 085C  
                                      l8731 1074                                        l7941 1B18  
                                      l6885 27D6                                        l6877 27AC  
                                      l6869 2782                                        l6981 2516  
                                      l6965 24B0                                        l6957 2488  
                                      l6949 2352                                        l7781 199C  
                                      l7773 1970                                        l7685 17DE  
                                      l8709 1006                                        l8645 0EFE  
                                      l8637 0EC8                                        l8629 0E92  
                                      l8661 0F2E                                        l8565 0D0C  
                                      l8477 0BBE                                        l8469 0B88  
                                      l8389 09F0                                        l6975 24E6  
                                      l6967 24B8                                        l7847 1A4E  
                                      l7839 1A3E                                        l7791 19D4  
                                      l7783 19A0                                        l7775 1974  
                                      l7767 1948                                        l7695 1808  
                                      l7687 17FC                                        l7679 17C8  
                                      l7855 1A64                                        l8671 0F74  
                                      l8663 0F50                                        l8591 0D9E  
                                      l8575 0D58                                        l8567 0D28  
                                      l8727 105E                                        l8495 0BFA  
                                      l6889 2804                                        l6897 282E  
                                      l6993 2550                                        l6985 251A  
                                      l7777 1986                                        l7769 195A  
                                      l7857 1AB6                                        l8665 0F54  
                                      l8657 0F1E                                        l8593 0DAA  
                                      l8489 0BF4                                        l6899 2844  
                                      l6979 2510                                        l7779 198A  
                                      l7699 180E                                        l8691 0FCA  
                                      l8683 0F94                                        l8587 0D94  
                                      l8579 0D64                                        l8499 0C0A  
                                      l7965 2C56                                        l7797 19DA  
                                      l7789 19B6                                        l8677 0F8E  
                                      l8669 0F70                                        l6999 2572  
                                      l8695 0FE2                                        l8687 0FA4  
                                      l7991 0114                                        l7975 00B2  
                                      l7969 2C6C                                        l8697 0FE6  
                                      l8689 0FC6                                        l7985 00EC  
                                      l7979 00C4                                        l7997 013C  
                                      l8893 2B68              Right_Mountain_From_The_Left@rc 00FF  
                                      u6000 13EE                                        u6020 146C  
                                      u6110 15E6                                        u6030 146E  
                                      u6130 164C                                        u6050 14EC  
                                      u6116 15E8                                        u6060 14EE  
                                      u6150 16B2                                        u7030 03DC  
                                      u6136 164E                                        u6080 156C  
                                      u6170 1718                                        u6090 156E  
                                      u6156 16B4                                        u5295 2BCE  
                                      u6176 171A                                        u5900 127E  
                                      u5820 10E6                                        u7420 0AFE  
                                      u5910 1280                                        u5840 114C  
                                      u7440 0B74                                        u5930 12F8  
                                      u5826 10E8                                        i2l92 2894  
                                      u5940 12FA                                        u5860 11B2  
                                      u7460 0BE6                                        u5846 114E  
                                      u7710 0F0A                                        u7390 0A72  
                                      u5960 1372                                        u5880 1218  
                                      i2l97 28D4                                        u5970 1374  
                                      u5866 11B4                                        u7730 0F80  
                                      u5990 13EC                                        u5886 121A  
                                      u7750 0FF2                                        u7680 0E7E  
                              __CFG_WDTPS$1 000000                                __CFG_PWRT$ON 000000  
                    __end_of_APIxInitialize 1DEA              __size_of_Train_Move_Left_Brake 0122  
                             _EUSART1_Write 2C08               __end_of_Train_Move_Left_Brake 1F0C  
                                      _main 2B10              __size_of_Train_Move_Left_Start 0112  
                           __end_of_SETxPWM 2998                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        fsr0l 000FE9  
                                      fsr2h 000FDA                                        fsr1l 000FE1  
                                      indf2 000FDF                                        fsr2l 000FD9  
                                      btemp 004D               __end_of_Train_Move_Left_Start 2598  
                                      pclat 000FFA                                        prodh 000FF4  
                                      prodl 000FF3                                        start 00A6  
                             __CFG_IESO$OFF 000000                 EUSART1_Initialize@baud_rate 00F9  
                        Green_Led@Operation 00F9                              INIT_TERMINAL@i 00F9  
                             __CFG_MCLRE$ON 000000                                ___param_bank 000010  
                             ??_Init_Timers 00F9                             __end_of_Red_Led 2A1C  
                             __CFG_PLLDIV$5 000000                               ?_INCRxAPIxVAL 002C  
                            __CFG_CCP2MX$ON 000000                     __end_of_UPDATExTERMINAL 2DAA  
                                     ?_main 002C                                       _EEADR 000FA9  
                                     _CMCON 000FB4                            Red_Led@Operation 00F9  
                                     _T0CON 000FD5                                       _T2CON 000FCA  
                              SETxPWM@speed 01FC                                       i2l613 2C1A  
                                     i2l619 2CCE                                       _TMR0H 000FD7  
                                     _TMR0L 000FD6                                       _SPBRG 000FAF  
                             __CFG_USBDIV$2 000000                                       _TRISA 000F92  
                                     _TRISB 000F93                                       _TRISC 000F94  
                                     _TRISD 000F95                                       _TRISE 000F96  
                             __CFG_WRT0$OFF 000000                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                               __CFG_WRT3$OFF 000000  
                      _EUSART1_Transmit_ISR 2CA4                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
                             __CFG_WRTB$OFF 000000                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                              __CFG_EBTRB$OFF 000000  
                           __end_of_tc_high 2910                              ?_EUSART1_Write 002C  
                                     tablat 000FF5                             ?_APIxInitialize 002C  
                                     status 000FD8   Train_Move_Left_Brake@Train_Move_Wait_Time 00E0  
                            __CFG_ICPRT$OFF 000000                        __end_of_Eeprom_Store 277C  
                             _INIT_TERMINAL 2C42                             __initialization 2AA0  
                __end_of_EUSART1_Initialize 2BC4                                __end_of_main 2B78  
                            ??_INCRxAPIxVAL 00FC                            __end_of_Init_Pwm 2D98  
                                    ??_main 0100                         __end_of_Init_Timers 2D82  
                             __activetblptr 000002                            __end_of_Junction 284A  
                              _Led1_Counter 00EA                           _Green_Led_Counter 0003  
                     ?_EUSART1_Transmit_ISR 002C                           ?_Update_StateMchn 002C  
                        ??_Update_StateMchn 0283                                      _ADCON1 000FC1  
                                    _EEDATA 000FA8                                      _CCPR1L 000FBE  
                                 ??_SETxPWM 027E                                      _EECON2 000FA7  
                                    _API_RW 0100                          __size_of_Green_Led 0084  
                     __size_of_DECRxAPIxVAL 002E                                      i2l6253 2D26  
                                    i2l6245 2D06                                      i2l6343 2896  
                                    _INTCON 000FF2                                      i2l6265 2CCA  
                                    i2l5385 2C0A                                      i2l6361 28CA  
                                    i2l6355 28C0                                      i2l5397 2C3C  
                                    i2l6349 28B4                                      i2l5399 2C3E  
                   ?_Train_Move_Right_Brake 002C                                      _RCREG1 000FAE  
                                    _SPBRGH 000FB0                          __size_of_SetDCPWM1 0044  
                   ?_Train_Move_Right_Start 002C                                      _TXREG1 000FAD  
            ?_Right_Mountain_From_The_Right 002C                                   ??_Red_Led 00F9  
                            ?_INIT_TERMINAL 002C                              __CFG_XINST$OFF 000000  
           Train_Move_Left_Brake@Return_Val 00F5                              __CFG_STVREN$ON 000000  
                                    clear_0 2AA6                                      clear_1 2AB2  
                                    clear_2 2ABE                                      clear_3 2ACA  
                                    _tc_low 0018                            ?_UPDATExTERMINAL 002C  
                            _Switch_Moutain 0021                                  _Train_Path 1728  
   Right_Mountain_From_The_Right@Return_Val 00F4      Left_Mountain_From_The_Right@Return_Val 00F2  
                              __pdataCOMRAM 004C                              _Switch_Program 0022  
                              _DECRxAPIxVAL 2C76                                   ??_tc_high 002D  
                 _Activate_Controls_Counter 00E8                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                              ?_SETxAPIxVAL 00F9                             ??_EUSART1_Write 002C  
                 _Button_Contact_Counter_LB 000D                   _Button_Contact_Counter_LF 00EC  
                 _Button_Contact_Counter_RB 00ED                   _Button_Contact_Counter_RF 00EE  
            __end_of_Train_Move_Right_Brake 2028                             _eusart1RxBuffer 0200  
                      __size_of_GETxAPIxVAL 0020                             _eusart1TxBuffer 017E  
            __end_of_Train_Move_Right_Start 2372                        _Train_Move_Pwm_Count 0009  
                                __accesstop 0060                     __end_of__initialization 2B02  
                           __CFG_PBADEN$OFF 000000                               ___rparam_used 000001  
                            __pcstackCOMRAM 002C                                __pidataBANK0 2D98  
                               _Init_Timers 2D6A                           __end_of_Green_Led 2AA0  
                         __end_of_SetDCPWM1 2C08                             _Red_Led_Counter 0007  
                    ??_EUSART1_Transmit_ISR 002C  Train_Move_Right_Start@Train_Move_Wait_Time 00E6  
                  __size_of_Debounce_Inputs 069A                 __end_of_EUSART1_Receive_ISR 2D2A  
          Train_Move_Right_Brake@Return_Val 00F7                               _eusart1RxHead 0027  
                             _eusart1TxHead 002A                       __size_of_Eeprom_Store 00D2  
               Junction@Junction_Left_Right 00FD                               _eusart1RxTail 0028  
                                __pbssBANK0 0060                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                               _eusart1TxTail 002B  
                      __end_of_INCRxAPIxVAL 2CFE                                   ?_Init_Pwm 002C  
                           ??_INIT_TERMINAL 00F9                            GETxAPIxVAL@index 00FB  
                          SETxAPIxVAL@index 00FB                                   ?_Junction 00FC  
                          SETxAPIxVAL@value 00F9        __size_of_Left_Mountain_From_The_Left 0114  
                                   _CCP1CON 000FBD                                     ?_tc_low 002C  
                               ?_Train_Path 01FF                                _Eeprom_Store 26AA  
                                   _INTCON2 000FF1   Train_Move_Left_Start@Train_Move_Wait_Time 00E2  
                          ??_APIxInitialize 00F9                                     _SETxPWM 2910  
                          SETxPWM@direction 01FE                             __CFG_VREGEN$OFF 000000  
                                ??_Init_Pwm 00F9                                     _Red_Led 2998  
                     _Train_Move_Left_Brake 1DEA                                  ??_Junction 00FD  
                                   __Hparam 0000                       _Train_Move_Left_Start 2486  
                                   __Lparam 0000                                     __pcinit 2AA0  
                                   __ramtop 0800                             __size_of_tc_low 008E  
                                   __ptext0 2B10                                     __ptext1 00AA  
                                   __ptext2 1728                                     __ptext3 225C  
                                   __ptext4 1F0C                                     __ptext5 2486  
                                   __ptext6 1DEA                                     __ptext7 2028  
                                   __ptext8 2142                                     __ptext9 2598  
                      Train_Path@Return_Val 004C                                     _tc_high 0008  
                        _EUSART1_Initialize 2B78                   _Train_Move_Pwm_Fast_Count 000B  
                            __pintcode_body 284A                        end_of_initialization 2B02  
                           _Switch_Junction 00EF                           ??_Debounce_Inputs 00FC  
                       ?_EUSART1_Initialize 002C                        __size_of_SETxAPIxVAL 0020  
                             __Lmediumconst 0000                                     int_func 284A  
                          SETxPWM@pwm_speed 0280                           INCRxAPIxVAL@index 00FE  
                 __size_of_Update_StateMchn 0FE4                           INCRxAPIxVAL@value 00FC  
                       __size_of_Train_Path 0392                                   _RCSTAbits 000FAB  
                                   postdec1 000FE5                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc2 000FDE  
            Left_Mountain_From_The_Right@rc 00FF                        ??_EUSART1_Initialize 00F9  
                                 _PORTAbits 000F80                                   _PORTBbits 000F81  
                                 _PORTCbits 000F82                                   _PORTDbits 000F83  
                                 _TRISAbits 000F92                                   _TRISBbits 000F93  
                                 _TRISCbits 000F94                                   _TRISDbits 000F95  
                     __size_of_INCRxAPIxVAL 002C                Junction@Junction_Switch_Time 00DE  
                       EUSART1_Write@txData 002C                      ?_Train_Move_Left_Brake 002C  
                                 _TXSTAbits 000FAC                      ?_Train_Move_Left_Start 002C  
                               _Switch_Main 0020                                 _Switch_Init 001F  
                              ?_Init_Timers 002C                          Junction@Return_Val 00F0  
                               _BAUDCONbits 000FB8                               __pidataCOMRAM 2DAA  
                              _INCRxAPIxVAL 2CD2                        _Update_State_Machine 0025  
                            __end_of_tc_low 00A6                 _Button_Contact_Counter_Stop 0010  
                                 _Green_Led 2A1C                         start_initialization 2AA0  
                             ??_GETxAPIxVAL 00FB                                   _SetDCPWM1 2BC4  
                           SetDCPWM1@DCycle 00FD                    __size_of_UPDATExTERMINAL 0008  
                    _Mountain_Delay_Counter 0005                       __end_of_EUSART1_Write 2C42  
              ?_Left_Mountain_From_The_Left 002C                           __size_of_Init_Pwm 0016  
                         __size_of_Junction 00CE                                 __pdataBANK0 00F0  
                          __CFG_LPT1OSC$OFF 000000                                    ??_tc_low 003B  
                            _eusart1RxCount 0026                                ??_Train_Path 0100  
                                ?_Green_Led 002C                                 __pbssCOMRAM 0001  
             __size_of_EUSART1_Transmit_ISR 002E                               __pcstackBANK0 00F9  
                             __pcstackBANK1 01FC                               __pcstackBANK2 027E  
                                ?_SetDCPWM1 00F9  Train_Move_Right_Brake@Train_Move_Wait_Time 00E4  
                                  ?_SETxPWM 01FC                __size_of_EUSART1_Receive_ISR 002C  
                       __end_of_GETxAPIxVAL 2D6A               ??_Left_Mountain_From_The_Left 00FF  
                                  ?_Red_Led 002C                            _Update_StateMchn 00AA  
                     __end_of_INIT_TERMINAL 2C76      Right_Mountain_From_The_Left@Return_Val 00F3  
     Left_Mountain_From_The_Left@Return_Val 00F1                          __end_of_Train_Path 1ABA  
                                 __pintcode 0008        __end_of_Left_Mountain_From_The_Right 26AA  
     __size_of_Left_Mountain_From_The_Right 0112                _Left_Mountain_From_The_Right 2598  
                               __pintcodelo 0018                             _Debounce_Inputs 108E  
                  ??_Train_Move_Right_Brake 00FF                                    ?_tc_high 002C  
           Right_Mountain_From_The_Right@rc 00FF                    ??_Train_Move_Right_Start 00FF  
                     Junction@Straight_Bend 00FC                _Button_Contact_Counter_Start 000F  
                  _Reed_Contact_LMD_Counter 0013                           ??_UPDATExTERMINAL 002D  
      __end_of_Right_Mountain_From_The_Left 225C       __size_of_Right_Mountain_From_The_Left 011A  
              _Right_Mountain_From_The_Left 2142                                    _PIE1bits 000F9D  
                            _Adjust_Counter 0001               Left_Mountain_From_The_Left@rc 00FF  
                                  _PIR1bits 000F9E                                    _PIR2bits 000FA1  
                                  _RCONbits 000FD0                              Train_Path@From 0282  
                      __size_of_Init_Timers 0018               ?_Left_Mountain_From_The_Right 002C  
                               ??_Green_Led 00F9                               ?_DECRxAPIxVAL 002C  
                               ??_SetDCPWM1 00FB                                 _GETxAPIxVAL 2D4A  
                             ??_SETxAPIxVAL 00FB                                   copy_data0 2AE4  
                   ??_Train_Move_Left_Brake 00FF                    _Reed_Contact_LMU_Counter 0014  
                          __size_of_SETxPWM 0088                     ??_Train_Move_Left_Start 00FF  
                        SetDCPWM1@dutycycle 00F9                                    _Init_Pwm 2D82  
                                _EECON1bits 000FA6                     __size_of_APIxInitialize 0330  
                                  __Hrparam 0000                                    _Junction 277C  
                          __size_of_Red_Led 0084               ?_Right_Mountain_From_The_Left 002C  
                                  __Lrparam 0000                    _Reed_Contact_RMD_Counter 0017  
                   __end_of_Debounce_Inputs 1728                 __size_of_EUSART1_Initialize 004C  
                         _Switch_Train_Path 0024                           _Switch_Train_Move 0023  
                          _Switch_Adjust_LB 001B                            _Switch_Adjust_LF 001C  
                          _Switch_Adjust_RB 001D                            _Switch_Adjust_RF 001E  
                            ??_DECRxAPIxVAL 00FC             __size_of_Train_Move_Right_Brake 011C  
                          __size_of_tc_high 2908             __size_of_Train_Move_Right_Start 0116  
                                  __ptext10 2372                                    __ptext11 2910  
                                  __ptext20 2D2A                                    __ptext12 2BC4  
                                  __ptext21 2D4A                                    __ptext13 277C  
                                  __ptext30 2C08                                    __ptext22 2D6A  
                                  __ptext14 2998                                    __ptext31 2CA4  
                                  __ptext23 2D82                                    __ptext15 2CD2  
                                  __ptext32 2CFE                                    __ptext24 2C42  
                                  __ptext16 2A1C                                    __ptext25 2B78  
                                  __ptext17 26AA                                    __ptext26 1ABA  
                                  __ptext18 108E                                    __ptext19 2C76  
                                  __ptext29 2DA2                               __size_of_main 0068  
                       __end_of_SETxAPIxVAL 2D4A                     _Reed_Contact_LB_Counter 0011  
                                  int$flags 004D                     _Reed_Contact_LF_Counter 0012  
                         DECRxAPIxVAL@index 00FE                           DECRxAPIxVAL@value 00FC  
                  _Reed_Contact_RMU_Counter 0018                         _EUSART1_Receive_ISR 2CFE  
                     __CFG_CPUDIV$OSC2_PLL3 000000                               ?_Eeprom_Store 002C  
                  __end_of_Update_StateMchn 108E                                  _INTCONbits 000FF2  
           ??_Right_Mountain_From_The_Right 00FF              ??_Left_Mountain_From_The_Right 00FF  
                   _Reed_Contact_RB_Counter 0015                                    intlevel1 0000  
                                  intlevel2 0000                        ?_EUSART1_Receive_ISR 002C  
                                _RCSTA1bits 000FAB                     _Reed_Contact_RF_Counter 0016  
                    _Train_Move_Right_Brake 1F0C                __end_of_EUSART1_Transmit_ISR 2CD2  
                    _Train_Move_Right_Start 225C             Train_Move_Left_Start@Return_Val 00F6  
                              Train_Path@To 01FF                            ?_Debounce_Inputs 002C  
                  _Switch_Activate_Controls 001A              ??_Right_Mountain_From_The_Left 00FF  
                    __size_of_EUSART1_Write 003A                              ??_Eeprom_Store 00FC  
                           _UPDATExTERMINAL 2DA2                                 _SETxAPIxVAL 2D2A  
                        __CFG_FOSC$HSPLL_HS 000000                       ??_EUSART1_Receive_ISR 002C  
                            _APIxInitialize 1ABA               _Button_Contact_Counter_Middle 000E  
                      __end_of_DECRxAPIxVAL 2CA4  
