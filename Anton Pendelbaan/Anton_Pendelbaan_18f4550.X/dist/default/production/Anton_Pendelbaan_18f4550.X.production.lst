

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu Nov 23 20:07:58 2017

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  0041E8                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _Switch_Main
    71  0041E8  01                 	db	1
    72                           
    73                           	psect	idataBANK0
    74  0041DE                     __pidataBANK0:
    75                           	opt stack 0
    76                           
    77                           ;initializer for Junction@Return_Val
    78  0041DE  01                 	db	1
    79                           
    80                           ;initializer for Left_Mountain_From_The_Left@Return_Val
    81  0041DF  01                 	db	1
    82                           
    83                           ;initializer for Left_Mountain_From_The_Right@Return_Val
    84  0041E0  01                 	db	1
    85                           
    86                           ;initializer for Right_Mountain_From_The_Left@Return_Val
    87  0041E1  01                 	db	1
    88                           
    89                           ;initializer for Right_Mountain_From_The_Right@Return_Val
    90  0041E2  01                 	db	1
    91                           
    92                           ;initializer for Train_Move_Left_Brake@Return_Val
    93  0041E3  01                 	db	1
    94                           
    95                           ;initializer for Train_Move_Left_Start@Return_Val
    96  0041E4  01                 	db	1
    97                           
    98                           ;initializer for Train_Move_Right_Brake@Return_Val
    99  0041E5  01                 	db	1
   100                           
   101                           ;initializer for Train_Move_Right_Start@Return_Val
   102  0041E6  01                 	db	1
   103                           
   104                           ;initializer for Train_Path@Return_Val
   105  0041E7  01                 	db	1
   106                           
   107                           	psect	smallconst
   108  000800                     __psmallconst:
   109                           	opt stack 0
   110  000800  00                 	db	0
   111  000801                     _dpowers:
   112                           	opt stack 0
   113  000801  0001               	dw	1
   114  000803  000A               	dw	10
   115  000805  0064               	dw	100
   116  000807  03E8               	dw	1000
   117  000809  2710               	dw	10000
   118  00080B                     __end_of_dpowers:
   119                           	opt stack 0
   120  00080B                     _DataLen:
   121                           	opt stack 0
   122  00080B  0A                 	db	10
   123  00080C                     __end_of_DataLen:
   124                           	opt stack 0
   125  0000                     _ADCON1	set	4033
   126  0000                     _BAUDCONbits	set	4024
   127  0000                     _CCP1CON	set	4029
   128  0000                     _CCPR1L	set	4030
   129  0000                     _CMCON	set	4020
   130  0000                     _EEADR	set	4009
   131  0000                     _EECON1bits	set	4006
   132  0000                     _EECON2	set	4007
   133  0000                     _EEDATA	set	4008
   134  0000                     _INTCON	set	4082
   135  0000                     _INTCON2	set	4081
   136  0000                     _INTCONbits	set	4082
   137  0000                     _PIE1bits	set	3997
   138  0000                     _PIR1bits	set	3998
   139  0000                     _PIR2bits	set	4001
   140  0000                     _PORTAbits	set	3968
   141  0000                     _PORTBbits	set	3969
   142  0000                     _PORTCbits	set	3970
   143  0000                     _PORTDbits	set	3971
   144  0000                     _PORTEbits	set	3972
   145  0000                     _PR2	set	4043
   146  0000                     _RCONbits	set	4048
   147  0000                     _RCREG1	set	4014
   148  0000                     _RCSTA1bits	set	4011
   149  0000                     _RCSTAbits	set	4011
   150  0000                     _SPBRG	set	4015
   151  0000                     _SPBRGH	set	4016
   152  0000                     _T0CON	set	4053
   153  0000                     _T2CON	set	4042
   154  0000                     _TMR0H	set	4055
   155  0000                     _TMR0L	set	4054
   156  0000                     _TRISA	set	3986
   157  0000                     _TRISAbits	set	3986
   158  0000                     _TRISB	set	3987
   159  0000                     _TRISBbits	set	3987
   160  0000                     _TRISC	set	3988
   161  0000                     _TRISCbits	set	3988
   162  0000                     _TRISD	set	3989
   163  0000                     _TRISDbits	set	3989
   164  0000                     _TRISE	set	3990
   165  0000                     _TRISEbits	set	3990
   166  0000                     _TXREG1	set	4013
   167  0000                     _TXSTAbits	set	4012
   168  0000                     _TXIF	set	31988
   169  00080C                     STR_8:
   170  00080C  4D                 	db	77	;'M'
   171  00080D  23                 	db	35
   172  00080E  25                 	db	37
   173  00080F  64                 	db	100	;'d'
   174  000810  20                 	db	32
   175  000811  25                 	db	37
   176  000812  64                 	db	100	;'d'
   177  000813  0D                 	db	13
   178  000814  0A                 	db	10
   179  000815  00                 	db	0
   180  000816                     STR_1:
   181  000816  45                 	db	69	;'E'
   182  000817  23                 	db	35
   183  000818  31                 	db	49	;'1'
   184  000819  30                 	db	48	;'0'
   185  00081A  0D                 	db	13
   186  00081B  0A                 	db	10
   187  00081C  00                 	db	0
   188  00081D                     STR_2:
   189  00081D  45                 	db	69	;'E'
   190  00081E  23                 	db	35
   191  00081F  31                 	db	49	;'1'
   192  000820  31                 	db	49	;'1'
   193  000821  0D                 	db	13
   194  000822  0A                 	db	10
   195  000823  00                 	db	0
   196  000824                     STR_3:
   197  000824  45                 	db	69	;'E'
   198  000825  23                 	db	35
   199  000826  31                 	db	49	;'1'
   200  000827  32                 	db	50	;'2'
   201  000828  0D                 	db	13
   202  000829  0A                 	db	10
   203  00082A  00                 	db	0
   204  00082B                     STR_4:
   205  00082B  45                 	db	69	;'E'
   206  00082C  23                 	db	35
   207  00082D  31                 	db	49	;'1'
   208  00082E  33                 	db	51	;'3'
   209  00082F  0D                 	db	13
   210  000830  0A                 	db	10
   211  000831  00                 	db	0
   212  000832                     STR_5:
   213  000832  45                 	db	69	;'E'
   214  000833  23                 	db	35
   215  000834  31                 	db	49	;'1'
   216  000835  34                 	db	52	;'4'
   217  000836  0D                 	db	13
   218  000837  0A                 	db	10
   219  000838  00                 	db	0
   220  0000                     
   221                           ; #config settings
   222  000839  00                 	db	0	; dummy byte at the end
   223  0000                     
   224                           	psect	cinit
   225  003D44                     __pcinit:
   226                           	opt stack 0
   227  003D44                     start_initialization:
   228                           	opt stack 0
   229  003D44                     __initialization:
   230                           	opt stack 0
   231                           
   232                           ; Clear objects allocated to BANK3 (252 bytes)
   233  003D44  EE03  F000         	lfsr	0,__pbssBANK3
   234  003D48  0EFC               	movlw	252
   235  003D4A                     clear_0:
   236  003D4A  6AEE               	clrf	postinc0,c
   237  003D4C  06E8               	decf	wreg,f,c
   238  003D4E  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BANK2 (174 bytes)
   241  003D50  EE02  F000         	lfsr	0,__pbssBANK2
   242  003D54  0EAE               	movlw	174
   243  003D56                     clear_1:
   244  003D56  6AEE               	clrf	postinc0,c
   245  003D58  06E8               	decf	wreg,f,c
   246  003D5A  E1FD               	bnz	clear_1
   247                           
   248                           ; Clear objects allocated to BANK1 (174 bytes)
   249  003D5C  EE01  F000         	lfsr	0,__pbssBANK1
   250  003D60  0EAE               	movlw	174
   251  003D62                     clear_2:
   252  003D62  6AEE               	clrf	postinc0,c
   253  003D64  06E8               	decf	wreg,f,c
   254  003D66  E1FD               	bnz	clear_2
   255                           
   256                           ; Clear objects allocated to BANK0 (89 bytes)
   257  003D68  EE00  F060         	lfsr	0,__pbssBANK0
   258  003D6C  0E59               	movlw	89
   259  003D6E                     clear_3:
   260  003D6E  6AEE               	clrf	postinc0,c
   261  003D70  06E8               	decf	wreg,f,c
   262  003D72  E1FD               	bnz	clear_3
   263                           
   264                           ; Clear objects allocated to COMRAM (31 bytes)
   265  003D74  EE00  F001         	lfsr	0,__pbssCOMRAM
   266  003D78  0E1F               	movlw	31
   267  003D7A                     clear_4:
   268  003D7A  6AEE               	clrf	postinc0,c
   269  003D7C  06E8               	decf	wreg,f,c
   270  003D7E  E1FD               	bnz	clear_4
   271                           
   272                           ; Initialize objects allocated to BANK0 (10 bytes)
   273                           ; load TBLPTR registers with __pidataBANK0
   274  003D80  0EDE               	movlw	low __pidataBANK0
   275  003D82  6EF6               	movwf	tblptrl,c
   276  003D84  0E41               	movlw	high __pidataBANK0
   277  003D86  6EF7               	movwf	tblptrh,c
   278  003D88  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   279  003D8A  6EF8               	movwf	tblptru,c
   280  003D8C  EE00  F0DB         	lfsr	0,__pdataBANK0
   281  003D90  EE10 F00A          	lfsr	1,10
   282  003D94                     copy_data0:
   283  003D94  0009               	tblrd		*+
   284  003D96  CFF5 FFEE          	movff	tablat,postinc0
   285  003D9A  50E5               	movf	postdec1,w,c
   286  003D9C  50E1               	movf	fsr1l,w,c
   287  003D9E  E1FA               	bnz	copy_data0
   288                           
   289                           ; Initialize objects allocated to COMRAM (1 bytes)
   290                           ; load TBLPTR registers with __pidataCOMRAM
   291  003DA0  0EE8               	movlw	low __pidataCOMRAM
   292  003DA2  6EF6               	movwf	tblptrl,c
   293  003DA4  0E41               	movlw	high __pidataCOMRAM
   294  003DA6  6EF7               	movwf	tblptrh,c
   295  003DA8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   296  003DAA  6EF8               	movwf	tblptru,c
   297  003DAC  0009               	tblrd		*+	;fetch initializer
   298  003DAE  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   299  003DB2                     end_of_initialization:
   300                           	opt stack 0
   301  003DB2                     __end_of__initialization:
   302                           	opt stack 0
   303  003DB2  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   304  003DB4  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   305  003DB6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   306  003DB8  6EF8               	movwf	tblptru,c
   307  003DBA  0100               	movlb	0
   308  003DBC  EFE0  F01E         	goto	_main	;jump to C main() function
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           postdec1	equ	0xFE5
   316                           fsr1l	equ	0xFE1
   317                           
   318                           	psect	bssCOMRAM
   319  000001                     __pbssCOMRAM:
   320                           	opt stack 0
   321  000001                     _Pcomm_List:
   322                           	opt stack 0
   323  000001                     	ds	2
   324  000003                     _Pcomm_List2:
   325                           	opt stack 0
   326  000003                     	ds	2
   327  000005                     _Train_Move_Pwm_Count:
   328                           	opt stack 0
   329  000005                     	ds	2
   330  000007                     _Train_Move_Pwm_Fast_Count:
   331                           	opt stack 0
   332  000007                     	ds	2
   333  000009                     _pData:
   334                           	opt stack 0
   335  000009                     	ds	2
   336  00000B                     _Button_Contact_Counter_Start:
   337                           	opt stack 0
   338  00000B                     	ds	1
   339  00000C                     _Button_Contact_Counter_Stop:
   340                           	opt stack 0
   341  00000C                     	ds	1
   342  00000D                     _Received_Data:
   343                           	opt stack 0
   344  00000D                     	ds	1
   345  00000E                     _Reed_Contact_LB_Counter:
   346                           	opt stack 0
   347  00000E                     	ds	1
   348  00000F                     _Reed_Contact_LF_Counter:
   349                           	opt stack 0
   350  00000F                     	ds	1
   351  000010                     _Reed_Contact_LMD_Counter:
   352                           	opt stack 0
   353  000010                     	ds	1
   354  000011                     _Reed_Contact_LMU_Counter:
   355                           	opt stack 0
   356  000011                     	ds	1
   357  000012                     _Reed_Contact_RB_Counter:
   358                           	opt stack 0
   359  000012                     	ds	1
   360  000013                     _Reed_Contact_RF_Counter:
   361                           	opt stack 0
   362  000013                     	ds	1
   363  000014                     _Reed_Contact_RMD_Counter:
   364                           	opt stack 0
   365  000014                     	ds	1
   366  000015                     _Reed_Contact_RMU_Counter:
   367                           	opt stack 0
   368  000015                     	ds	1
   369  000016                     _Stop_Program:
   370                           	opt stack 0
   371  000016                     	ds	1
   372  000017                     _Switch_Moutain:
   373                           	opt stack 0
   374  000017                     	ds	1
   375  000018                     _Switch_Program:
   376                           	opt stack 0
   377  000018                     	ds	1
   378  000019                     _Switch_Train_Move:
   379                           	opt stack 0
   380  000019                     	ds	1
   381  00001A                     _eusart1RxCount:
   382                           	opt stack 0
   383  00001A                     	ds	1
   384  00001B                     _eusart1RxHead:
   385                           	opt stack 0
   386  00001B                     	ds	1
   387  00001C                     _eusart1RxTail:
   388                           	opt stack 0
   389  00001C                     	ds	1
   390  00001D                     _eusart1TxBufferRemaining:
   391                           	opt stack 0
   392  00001D                     	ds	1
   393  00001E                     _eusart1TxHead:
   394                           	opt stack 0
   395  00001E                     	ds	1
   396  00001F                     _eusart1TxTail:
   397                           	opt stack 0
   398  00001F                     	ds	1
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           postdec1	equ	0xFE5
   406                           fsr1l	equ	0xFE1
   407                           
   408                           	psect	dataCOMRAM
   409  00003F                     __pdataCOMRAM:
   410                           	opt stack 0
   411  00003F                     _Switch_Main:
   412                           	opt stack 0
   413  00003F                     	ds	1
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           postdec1	equ	0xFE5
   421                           fsr1l	equ	0xFE1
   422                           
   423                           	psect	bssBANK0
   424  000060                     __pbssBANK0:
   425                           	opt stack 0
   426  000060                     Junction@Junction_Switch_Time:
   427                           	opt stack 0
   428  000060                     	ds	2
   429  000062                     Train_Move_Left_Brake@Train_Move_Wait_Time:
   430                           	opt stack 0
   431  000062                     	ds	2
   432  000064                     Train_Move_Left_Start@Train_Move_Wait_Time:
   433                           	opt stack 0
   434  000064                     	ds	2
   435  000066                     Train_Move_Right_Brake@Train_Move_Wait_Time:
   436                           	opt stack 0
   437  000066                     	ds	2
   438  000068                     Train_Move_Right_Start@Train_Move_Wait_Time:
   439                           	opt stack 0
   440  000068                     	ds	2
   441  00006A                     _Activate_Controls_Counter:
   442                           	opt stack 0
   443  00006A                     	ds	2
   444  00006C                     _Adjust_Counter:
   445                           	opt stack 0
   446  00006C                     	ds	2
   447  00006E                     _DelayCounter:
   448                           	opt stack 0
   449  00006E                     	ds	2
   450  000070                     _Diag_Comm:
   451                           	opt stack 0
   452  000070                     	ds	2
   453  000072                     _Diag_Comm2:
   454                           	opt stack 0
   455  000072                     	ds	2
   456  000074                     _Green_Led_Counter:
   457                           	opt stack 0
   458  000074                     	ds	2
   459  000076                     _Led1_Counter:
   460                           	opt stack 0
   461  000076                     	ds	2
   462  000078                     _Mountain_Delay_Counter:
   463                           	opt stack 0
   464  000078                     	ds	2
   465  00007A                     _Red_Led_Counter:
   466                           	opt stack 0
   467  00007A                     	ds	2
   468  00007C                     _pLen:
   469                           	opt stack 0
   470  00007C                     	ds	2
   471  00007E                     _Button_Contact_Counter_LB:
   472                           	opt stack 0
   473  00007E                     	ds	1
   474  00007F                     _Button_Contact_Counter_LF:
   475                           	opt stack 0
   476  00007F                     	ds	1
   477  000080                     _Button_Contact_Counter_Middle:
   478                           	opt stack 0
   479  000080                     	ds	1
   480  000081                     _Button_Contact_Counter_RB:
   481                           	opt stack 0
   482  000081                     	ds	1
   483  000082                     _Button_Contact_Counter_RF:
   484                           	opt stack 0
   485  000082                     	ds	1
   486  000083                     _Message_To_Translate:
   487                           	opt stack 0
   488  000083                     	ds	1
   489  000084                     _RxSwitch:
   490                           	opt stack 0
   491  000084                     	ds	1
   492  000085                     _Switch_Activate_Controls:
   493                           	opt stack 0
   494  000085                     	ds	1
   495  000086                     _Switch_Adjust_LB:
   496                           	opt stack 0
   497  000086                     	ds	1
   498  000087                     _Switch_Adjust_LF:
   499                           	opt stack 0
   500  000087                     	ds	1
   501  000088                     _Switch_Adjust_RB:
   502                           	opt stack 0
   503  000088                     	ds	1
   504  000089                     _Switch_Adjust_RF:
   505                           	opt stack 0
   506  000089                     	ds	1
   507  00008A                     _Switch_Init:
   508                           	opt stack 0
   509  00008A                     	ds	1
   510  00008B                     _Switch_Junction:
   511                           	opt stack 0
   512  00008B                     	ds	1
   513  00008C                     _Switch_Train_Path:
   514                           	opt stack 0
   515  00008C                     	ds	1
   516  00008D                     _TrSwitch:
   517                           	opt stack 0
   518  00008D                     	ds	1
   519  00008E                     _Update_State_Machine:
   520                           	opt stack 0
   521  00008E                     	ds	1
   522  00008F                     _Comm_List:
   523                           	opt stack 0
   524  00008F                     	ds	32
   525  0000AF                     _Data:
   526                           	opt stack 0
   527  0000AF                     	ds	10
   528                           tblptru	equ	0xFF8
   529                           tblptrh	equ	0xFF7
   530                           tblptrl	equ	0xFF6
   531                           tablat	equ	0xFF5
   532                           postinc0	equ	0xFEE
   533                           wreg	equ	0xFE8
   534                           postdec1	equ	0xFE5
   535                           fsr1l	equ	0xFE1
   536                           
   537                           	psect	dataBANK0
   538  0000DB                     __pdataBANK0:
   539                           	opt stack 0
   540  0000DB                     Junction@Return_Val:
   541                           	opt stack 0
   542  0000DB                     	ds	1
   543  0000DC                     Left_Mountain_From_The_Left@Return_Val:
   544                           	opt stack 0
   545  0000DC                     	ds	1
   546  0000DD                     Left_Mountain_From_The_Right@Return_Val:
   547                           	opt stack 0
   548  0000DD                     	ds	1
   549  0000DE                     Right_Mountain_From_The_Left@Return_Val:
   550                           	opt stack 0
   551  0000DE                     	ds	1
   552  0000DF                     Right_Mountain_From_The_Right@Return_Val:
   553                           	opt stack 0
   554  0000DF                     	ds	1
   555  0000E0                     Train_Move_Left_Brake@Return_Val:
   556                           	opt stack 0
   557  0000E0                     	ds	1
   558  0000E1                     Train_Move_Left_Start@Return_Val:
   559                           	opt stack 0
   560  0000E1                     	ds	1
   561  0000E2                     Train_Move_Right_Brake@Return_Val:
   562                           	opt stack 0
   563  0000E2                     	ds	1
   564  0000E3                     Train_Move_Right_Start@Return_Val:
   565                           	opt stack 0
   566  0000E3                     	ds	1
   567  0000E4                     Train_Path@Return_Val:
   568                           	opt stack 0
   569  0000E4                     	ds	1
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           postinc0	equ	0xFEE
   575                           wreg	equ	0xFE8
   576                           postdec1	equ	0xFE5
   577                           fsr1l	equ	0xFE1
   578                           
   579                           	psect	bssBANK1
   580  000100                     __pbssBANK1:
   581                           	opt stack 0
   582  000100                     _API:
   583                           	opt stack 0
   584  000100                     	ds	174
   585                           tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           postinc0	equ	0xFEE
   590                           wreg	equ	0xFE8
   591                           postdec1	equ	0xFE5
   592                           fsr1l	equ	0xFE1
   593                           
   594                           	psect	bssBANK2
   595  000200                     __pbssBANK2:
   596                           	opt stack 0
   597  000200                     _API_RW:
   598                           	opt stack 0
   599  000200                     	ds	174
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           postinc0	equ	0xFEE
   605                           wreg	equ	0xFE8
   606                           postdec1	equ	0xFE5
   607                           fsr1l	equ	0xFE1
   608                           
   609                           	psect	bssBANK3
   610  000300                     __pbssBANK3:
   611                           	opt stack 0
   612  000300                     _eusart1RxBuffer:
   613                           	opt stack 0
   614  000300                     	ds	126
   615  00037E                     _eusart1TxBuffer:
   616                           	opt stack 0
   617  00037E                     	ds	126
   618                           tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           postdec1	equ	0xFE5
   625                           fsr1l	equ	0xFE1
   626                           
   627                           	psect	cstackBANK0
   628  0000B9                     __pcstackBANK0:
   629                           	opt stack 0
   630  0000B9                     ??_isdigit:
   631  0000B9                     ?_GETxAPIxVAL:
   632                           	opt stack 0
   633  0000B9                     ?_GETxAPIxRW:
   634                           	opt stack 0
   635  0000B9                     ?___wmul:
   636                           	opt stack 0
   637  0000B9                     ?___lwdiv:
   638                           	opt stack 0
   639  0000B9                     EUSART1_Read@readValue:
   640                           	opt stack 0
   641  0000B9                     putch@data:
   642                           	opt stack 0
   643  0000B9                     Green_Led@Operation:
   644                           	opt stack 0
   645  0000B9                     Red_Led@Operation:
   646                           	opt stack 0
   647  0000B9                     EUSART1_Initialize@baud_rate:
   648                           	opt stack 0
   649  0000B9                     SENDxMESSAGE@value:
   650                           	opt stack 0
   651  0000B9                     APIxInitialize@i:
   652                           	opt stack 0
   653  0000B9                     ___wmul@multiplier:
   654                           	opt stack 0
   655  0000B9                     ___lwdiv@dividend:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x0
   659  0000B9                     	ds	1
   660  0000BA                     _isdigit$1885:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x1
   664  0000BA                     	ds	1
   665  0000BB                     ??_SENDxMESSAGE:
   666  0000BB                     GETxAPIxRW@index:
   667                           	opt stack 0
   668  0000BB                     GETxAPIxVAL@index:
   669                           	opt stack 0
   670  0000BB                     isdigit@c:
   671                           	opt stack 0
   672  0000BB                     ___wmul@multiplicand:
   673                           	opt stack 0
   674  0000BB                     ___lwdiv@divisor:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x2
   678  0000BB                     	ds	1
   679  0000BC                     SETxAPIxVALxNoxRET@value:
   680                           	opt stack 0
   681  0000BC                     SetDCPWM1@dutycycle:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x3
   685  0000BC                     	ds	1
   686  0000BD                     SENDxMESSAGE@index:
   687                           	opt stack 0
   688  0000BD                     ___lwdiv@counter:
   689                           	opt stack 0
   690  0000BD                     ___wmul@product:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x4
   694  0000BD                     	ds	1
   695  0000BE                     ??_SetDCPWM1:
   696  0000BE                     SETxAPIxVAL@value:
   697                           	opt stack 0
   698  0000BE                     ___lwdiv@quotient:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x5
   702  0000BE                     	ds	1
   703  0000BF                     ?_atoi:
   704                           	opt stack 0
   705  0000BF                     atoi@s:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x6
   709  0000BF                     	ds	1
   710  0000C0                     ?___lwmod:
   711                           	opt stack 0
   712  0000C0                     SETxAPIxVALxNoxRET@index:
   713                           	opt stack 0
   714  0000C0                     SetDCPWM1@DCycle:
   715                           	opt stack 0
   716  0000C0                     ___lwmod@dividend:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x7
   720  0000C0                     	ds	1
   721  0000C1                     ??_atoi:
   722                           
   723                           ; 1 bytes @ 0x8
   724  0000C1                     	ds	1
   725  0000C2                     SETxAPIxVAL@index:
   726                           	opt stack 0
   727  0000C2                     ___lwmod@divisor:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x9
   731  0000C2                     	ds	1
   732  0000C3                     ??_Debounce_Inputs:
   733  0000C3                     Junction@Straight_Bend:
   734                           	opt stack 0
   735  0000C3                     atoi@sign:
   736                           	opt stack 0
   737  0000C3                     SETxPWM@speed:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0xA
   741  0000C3                     	ds	1
   742  0000C4                     Junction@Junction_Left_Right:
   743                           	opt stack 0
   744  0000C4                     ___lwmod@counter:
   745                           	opt stack 0
   746  0000C4                     atoi@a:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0xB
   750  0000C4                     	ds	1
   751  0000C5                     ?_printf:
   752                           	opt stack 0
   753  0000C5                     SETxPWM@direction:
   754                           	opt stack 0
   755  0000C5                     printf@f:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0xC
   759  0000C5                     	ds	1
   760  0000C6                     ??_SETxPWM:
   761                           
   762                           ; 1 bytes @ 0xD
   763  0000C6                     	ds	2
   764  0000C8                     SETxPWM@pwm_speed:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0xF
   768  0000C8                     	ds	2
   769  0000CA                     Right_Mountain_From_The_Right@rc:
   770                           	opt stack 0
   771  0000CA                     Left_Mountain_From_The_Right@rc:
   772                           	opt stack 0
   773  0000CA                     Left_Mountain_From_The_Left@rc:
   774                           	opt stack 0
   775  0000CA                     Right_Mountain_From_The_Left@rc:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x11
   779  0000CA                     	ds	1
   780  0000CB                     ??_printf:
   781  0000CB                     Train_Path@To:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x12
   785  0000CB                     	ds	1
   786  0000CC                     Train_Path@From:
   787                           	opt stack 0
   788  0000CC                     printf@ap:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x13
   792  0000CC                     	ds	1
   793  0000CD                     ??_Update_StateMchn:
   794                           
   795                           ; 1 bytes @ 0x14
   796  0000CD                     	ds	1
   797  0000CE                     printf@flag:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x15
   801  0000CE                     	ds	1
   802  0000CF                     printf@prec:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x16
   806  0000CF                     	ds	1
   807  0000D0                     printf@val:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x17
   811  0000D0                     	ds	2
   812  0000D2                     printf@c:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x19
   816  0000D2                     	ds	1
   817  0000D3                     TranslateMessage@Value:
   818                           	opt stack 0
   819  0000D3                     SendMessage@value:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x1A
   823  0000D3                     	ds	2
   824  0000D5                     SendMessage@index:
   825                           	opt stack 0
   826  0000D5                     TranslateMessage@Index:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x1C
   830  0000D5                     	ds	1
   831  0000D6                     ??_DIAGNOSTICxTOxPC:
   832                           
   833                           ; 1 bytes @ 0x1D
   834  0000D6                     	ds	1
   835  0000D7                     ??_READxRECEIVEDxMESSAGE:
   836                           
   837                           ; 1 bytes @ 0x1E
   838  0000D7                     	ds	4
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           postdec1	equ	0xFE5
   846                           fsr1l	equ	0xFE1
   847                           
   848                           	psect	cstackCOMRAM
   849  000020                     __pcstackCOMRAM:
   850                           	opt stack 0
   851  000020                     ??_tc_high:
   852  000020                     
   853                           ; 1 bytes @ 0x0
   854  000020                     	ds	14
   855  00002E                     ??_tc_low:
   856                           
   857                           ; 1 bytes @ 0xE
   858  00002E                     	ds	17
   859  00003F                     tblptru	equ	0xFF8
   860                           tblptrh	equ	0xFF7
   861                           tblptrl	equ	0xFF6
   862                           tablat	equ	0xFF5
   863                           postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           postdec1	equ	0xFE5
   866                           fsr1l	equ	0xFE1
   867                           
   868                           ; 1 bytes @ 0x1F
   869 ;;
   870 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   871 ;;
   872 ;; *************** function _main *****************
   873 ;; Defined at:
   874 ;;		line 105 in file "../Main.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   888 ;;      Params:         0       0       0       0       0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels required when called:    9
   894 ;; This function calls:
   895 ;;		_APIxInitialize
   896 ;;		_DIAGNOSTICxTOxPC
   897 ;;		_EUSART1_Initialize
   898 ;;		_Init_Pwm
   899 ;;		_Init_Timers
   900 ;;		_READxRECEIVEDxMESSAGE
   901 ;;		_Update_StateMchn
   902 ;; This function is called by:
   903 ;;		Startup code after reset
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text0
   908  003DC0                     __ptext0:
   909                           	opt stack 0
   910  003DC0                     _main:
   911                           	opt stack 22
   912                           
   913                           ;Main.c: 107: TRISA = 0xFF;TRISB = 0xFF;TRISC = 0xFF;TRISD = 0xFF;TRISE = 0xFF;
   914                           
   915                           ;incstack = 0
   916  003DC0  6892               	setf	3986,c	;volatile
   917  003DC2  6893               	setf	3987,c	;volatile
   918  003DC4  6894               	setf	3988,c	;volatile
   919  003DC6  6895               	setf	3989,c	;volatile
   920  003DC8  6896               	setf	3990,c	;volatile
   921                           
   922                           ;Main.c: 108: ADCON1=0x0F;
   923  003DCA  0E0F               	movlw	15
   924  003DCC  6EC1               	movwf	4033,c	;volatile
   925                           
   926                           ;Main.c: 109: CMCON=0x07;
   927  003DCE  0E07               	movlw	7
   928  003DD0  6EB4               	movwf	4020,c	;volatile
   929                           
   930                           ;Main.c: 110: TRISAbits.TRISA4=0;TRISDbits.TRISD5=0;TRISDbits.TRISD6=0;;
   931  003DD2  9892               	bcf	3986,4,c	;volatile
   932  003DD4  9A95               	bcf	3989,5,c	;volatile
   933  003DD6  9C95               	bcf	3989,6,c	;volatile
   934                           
   935                           ;Main.c: 111: PORTAbits.RA4 = 0;
   936  003DD8  9880               	bcf	3968,4,c	;volatile
   937                           
   938                           ;Main.c: 112: PORTDbits.RD6 = 0;
   939  003DDA  9C83               	bcf	3971,6,c	;volatile
   940                           
   941                           ;Main.c: 113: PORTDbits.RD5 = 0;
   942  003DDC  9A83               	bcf	3971,5,c	;volatile
   943                           
   944                           ;Main.c: 115: TRISAbits.TRISA0=0;TRISAbits.TRISA1=0;TRISAbits.TRISA2=0;TRISAbits.TRISA3=
      +                          0;;
   945  003DDE  9092               	bcf	3986,0,c	;volatile
   946  003DE0  9292               	bcf	3986,1,c	;volatile
   947  003DE2  9492               	bcf	3986,2,c	;volatile
   948  003DE4  9692               	bcf	3986,3,c	;volatile
   949                           
   950                           ;Main.c: 116: PORTAbits.RA3 = 0;
   951  003DE6  9680               	bcf	3968,3,c	;volatile
   952                           
   953                           ;Main.c: 117: PORTAbits.RA2 = 0;
   954  003DE8  9480               	bcf	3968,2,c	;volatile
   955                           
   956                           ;Main.c: 118: PORTAbits.RA1 = 0;
   957  003DEA  9280               	bcf	3968,1,c	;volatile
   958                           
   959                           ;Main.c: 119: PORTAbits.RA0 = 0;
   960  003DEC  9080               	bcf	3968,0,c	;volatile
   961                           
   962                           ;Main.c: 121: TRISDbits.TRISD2=1;TRISDbits.TRISD3=1;TRISDbits.TRISD0=1;TRISDbits.TRISD1=
      +                          1;TRISCbits.TRISC1=1;TRISDbits.TRISD4=1;TRISEbits.TRISE0=1;TRISEbits.TRISE1=1;;
   963  003DEE  8495               	bsf	3989,2,c	;volatile
   964  003DF0  8695               	bsf	3989,3,c	;volatile
   965  003DF2  8095               	bsf	3989,0,c	;volatile
   966  003DF4  8295               	bsf	3989,1,c	;volatile
   967  003DF6  8294               	bsf	3988,1,c	;volatile
   968  003DF8  8895               	bsf	3989,4,c	;volatile
   969  003DFA  8096               	bsf	3990,0,c	;volatile
   970  003DFC  8296               	bsf	3990,1,c	;volatile
   971                           
   972                           ;Main.c: 122: TRISBbits.TRISB0=1;TRISBbits.TRISB1=1;TRISBbits.TRISB2=1;TRISBbits.TRISB3=
      +                          1;TRISBbits.TRISB4=1;TRISBbits.TRISB5=1;TRISDbits.TRISD7=1;;
   973  003DFE  8093               	bsf	3987,0,c	;volatile
   974  003E00  8293               	bsf	3987,1,c	;volatile
   975  003E02  8493               	bsf	3987,2,c	;volatile
   976  003E04  8693               	bsf	3987,3,c	;volatile
   977  003E06  8893               	bsf	3987,4,c	;volatile
   978  003E08  8A93               	bsf	3987,5,c	;volatile
   979  003E0A  8E95               	bsf	3989,7,c	;volatile
   980                           
   981                           ;Main.c: 123: APIxInitialize();
   982  003E0C  ECFA  F00D         	call	_APIxInitialize	;wreg free
   983                           
   984                           ;Main.c: 124: Init_Pwm();
   985  003E10  ECAA  F020         	call	_Init_Pwm	;wreg free
   986                           
   987                           ;Main.c: 125: Init_Timers();
   988  003E14  ECDC  F020         	call	_Init_Timers	;wreg free
   989                           
   990                           ;Main.c: 126: EUSART1_Initialize();
   991  003E18  ECB3  F01F         	call	_EUSART1_Initialize	;wreg free
   992  003E1C                     l9538:
   993                           
   994                           ;Main.c: 129: {
   995                           ;Main.c: 130: if (1 == Update_State_Machine)
   996  003E1C  0100               	movlb	0	; () banked
   997  003E1E  058E               	decf	_Update_State_Machine& (0+255),w,b
   998  003E20  A4D8               	btfss	status,2,c
   999  003E22  D005               	goto	l9544
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;Main.c: 131: {
  1003                           ;Main.c: 132: Update_State_Machine = 0;
  1004  003E24  0E00               	movlw	0
  1005  003E26  0100               	movlb	0	; () banked
  1006  003E28  6F8E               	movwf	_Update_State_Machine& (0+255),b
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;Main.c: 133: Update_StateMchn();
  1010  003E2A  EC1D  F004         	call	_Update_StateMchn	;wreg free
  1011  003E2E                     l9544:
  1012                           
  1013                           ;Main.c: 134: }
  1014                           ;Main.c: 136: READxRECEIVEDxMESSAGE();
  1015  003E2E  EC5B  F017         	call	_READxRECEIVEDxMESSAGE	;wreg free
  1016                           
  1017                           ;Main.c: 137: DIAGNOSTICxTOxPC();
  1018  003E32  EC0A  F014         	call	_DIAGNOSTICxTOxPC	;wreg free
  1019  003E36  D7F2               	goto	l9538
  1020  003E38                     __end_of_main:
  1021                           	opt stack 0
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           postinc0	equ	0xFEE
  1027                           wreg	equ	0xFE8
  1028                           postdec1	equ	0xFE5
  1029                           fsr1l	equ	0xFE1
  1030                           status	equ	0xFD8
  1031                           
  1032 ;; *************** function _Update_StateMchn *****************
  1033 ;; Defined at:
  1034 ;;		line 41 in file "../State_Mchn.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1050 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1051 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1052 ;;Total ram usage:        2 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    8
  1055 ;; This function calls:
  1056 ;;		_Debounce_Inputs
  1057 ;;		_Eeprom_Store
  1058 ;;		_GETxAPIxVAL
  1059 ;;		_Green_Led
  1060 ;;		_Junction
  1061 ;;		_Red_Led
  1062 ;;		_SETxAPIxVAL
  1063 ;;		_SETxAPIxVALxNoxRET
  1064 ;;		_SETxPWM
  1065 ;;		_Train_Path
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text1
  1072  00083A                     __ptext1:
  1073                           	opt stack 0
  1074  00083A                     _Update_StateMchn:
  1075                           	opt stack 22
  1076                           
  1077                           ;State_Mchn.c: 43: if (GETxAPIxVAL(72)){
  1078                           
  1079                           ;incstack = 0
  1080  00083A  0E48               	movlw	72
  1081  00083C  ECBC  F020         	call	_GETxAPIxVAL
  1082  000840  0100               	movlb	0	; () banked
  1083  000842  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1084  000844  0100               	movlb	0	; () banked
  1085  000846  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1086  000848  B4D8               	btfsc	status,2,c
  1087  00084A  D009               	goto	l170
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;State_Mchn.c: 44: SETxAPIxVAL(72, 0);
  1091  00084C  0E00               	movlw	0
  1092  00084E  0100               	movlb	0	; () banked
  1093  000850  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1094  000852  0E00               	movlw	0
  1095  000854  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1096  000856  0E48               	movlw	72
  1097  000858  EC89  F01F         	call	_SETxAPIxVAL
  1098  00085C  00FF               	reset		;# 
  1099  00085E                     l170:
  1100                           
  1101                           ;State_Mchn.c: 46: }
  1102                           ;State_Mchn.c: 48: Debounce_Inputs();
  1103  00085E  EC29  F00A         	call	_Debounce_Inputs	;wreg free
  1104                           
  1105                           ;State_Mchn.c: 50: switch (Switch_Main)
  1106  000862  EF0F  F00A         	goto	l9282
  1107  000866                     l8774:
  1108                           
  1109                           ;State_Mchn.c: 53: if (GETxAPIxVAL(74)){
  1110  000866  0E4A               	movlw	74
  1111  000868  ECBC  F020         	call	_GETxAPIxVAL
  1112  00086C  0100               	movlb	0	; () banked
  1113  00086E  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1114  000870  0100               	movlb	0	; () banked
  1115  000872  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1116  000874  B4D8               	btfsc	status,2,c
  1117  000876  D014               	goto	l8780
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;State_Mchn.c: 54: if(Junction(0, 1) == 0){
  1121  000878  0E01               	movlw	1
  1122  00087A  0100               	movlb	0	; () banked
  1123  00087C  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  1124  00087E  0E00               	movlw	0
  1125  000880  EC1D  F015         	call	_Junction
  1126  000884  0900               	iorlw	0
  1127  000886  A4D8               	btfss	status,2,c
  1128  000888  EF1A  F00A         	goto	l9284
  1129                           
  1130                           ;State_Mchn.c: 55: SETxAPIxVAL(74, 0);
  1131  00088C  0E00               	movlw	0
  1132  00088E  0100               	movlb	0	; () banked
  1133  000890  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1134  000892  0E00               	movlw	0
  1135  000894  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1136  000896  0E4A               	movlw	74
  1137  000898  EC89  F01F         	call	_SETxAPIxVAL
  1138                           
  1139                           ;State_Mchn.c: 56: }
  1140                           ;State_Mchn.c: 57: }
  1141  00089C  EF1A  F00A         	goto	l9284
  1142  0008A0                     l8780:
  1143                           
  1144                           ;State_Mchn.c: 58: else if (GETxAPIxVAL(73)){
  1145  0008A0  0E49               	movlw	73
  1146  0008A2  ECBC  F020         	call	_GETxAPIxVAL
  1147  0008A6  0100               	movlb	0	; () banked
  1148  0008A8  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1149  0008AA  0100               	movlb	0	; () banked
  1150  0008AC  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1151  0008AE  B4D8               	btfsc	status,2,c
  1152  0008B0  D014               	goto	l8786
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;State_Mchn.c: 59: if(Junction(0, 0) == 0){
  1156  0008B2  0E00               	movlw	0
  1157  0008B4  0100               	movlb	0	; () banked
  1158  0008B6  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  1159  0008B8  0E00               	movlw	0
  1160  0008BA  EC1D  F015         	call	_Junction
  1161  0008BE  0900               	iorlw	0
  1162  0008C0  A4D8               	btfss	status,2,c
  1163  0008C2  EF1A  F00A         	goto	l9284
  1164                           
  1165                           ;State_Mchn.c: 60: SETxAPIxVAL(73, 0);
  1166  0008C6  0E00               	movlw	0
  1167  0008C8  0100               	movlb	0	; () banked
  1168  0008CA  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1169  0008CC  0E00               	movlw	0
  1170  0008CE  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1171  0008D0  0E49               	movlw	73
  1172  0008D2  EC89  F01F         	call	_SETxAPIxVAL
  1173                           
  1174                           ;State_Mchn.c: 61: }
  1175                           ;State_Mchn.c: 62: }
  1176  0008D6  EF1A  F00A         	goto	l9284
  1177  0008DA                     l8786:
  1178                           
  1179                           ;State_Mchn.c: 63: else if (GETxAPIxVAL(76)){
  1180  0008DA  0E4C               	movlw	76
  1181  0008DC  ECBC  F020         	call	_GETxAPIxVAL
  1182  0008E0  0100               	movlb	0	; () banked
  1183  0008E2  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1184  0008E4  0100               	movlb	0	; () banked
  1185  0008E6  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1186  0008E8  B4D8               	btfsc	status,2,c
  1187  0008EA  D014               	goto	l8792
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;State_Mchn.c: 64: if(Junction(1, 1) == 0){
  1191  0008EC  0E01               	movlw	1
  1192  0008EE  0100               	movlb	0	; () banked
  1193  0008F0  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  1194  0008F2  0E01               	movlw	1
  1195  0008F4  EC1D  F015         	call	_Junction
  1196  0008F8  0900               	iorlw	0
  1197  0008FA  A4D8               	btfss	status,2,c
  1198  0008FC  EF1A  F00A         	goto	l9284
  1199                           
  1200                           ;State_Mchn.c: 65: SETxAPIxVAL(76, 0);
  1201  000900  0E00               	movlw	0
  1202  000902  0100               	movlb	0	; () banked
  1203  000904  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1204  000906  0E00               	movlw	0
  1205  000908  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1206  00090A  0E4C               	movlw	76
  1207  00090C  EC89  F01F         	call	_SETxAPIxVAL
  1208                           
  1209                           ;State_Mchn.c: 66: }
  1210                           ;State_Mchn.c: 67: }
  1211  000910  EF1A  F00A         	goto	l9284
  1212  000914                     l8792:
  1213                           
  1214                           ;State_Mchn.c: 68: else if (GETxAPIxVAL(75)){
  1215  000914  0E4B               	movlw	75
  1216  000916  ECBC  F020         	call	_GETxAPIxVAL
  1217  00091A  0100               	movlb	0	; () banked
  1218  00091C  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1219  00091E  0100               	movlb	0	; () banked
  1220  000920  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1221  000922  B4D8               	btfsc	status,2,c
  1222  000924  D014               	goto	l8798
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;State_Mchn.c: 69: if(Junction(1, 0) == 0){
  1226  000926  0E00               	movlw	0
  1227  000928  0100               	movlb	0	; () banked
  1228  00092A  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  1229  00092C  0E01               	movlw	1
  1230  00092E  EC1D  F015         	call	_Junction
  1231  000932  0900               	iorlw	0
  1232  000934  A4D8               	btfss	status,2,c
  1233  000936  EF1A  F00A         	goto	l9284
  1234                           
  1235                           ;State_Mchn.c: 70: SETxAPIxVAL(75, 0);
  1236  00093A  0E00               	movlw	0
  1237  00093C  0100               	movlb	0	; () banked
  1238  00093E  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1239  000940  0E00               	movlw	0
  1240  000942  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1241  000944  0E4B               	movlw	75
  1242  000946  EC89  F01F         	call	_SETxAPIxVAL
  1243                           
  1244                           ;State_Mchn.c: 71: }
  1245                           ;State_Mchn.c: 72: }
  1246  00094A  EF1A  F00A         	goto	l9284
  1247  00094E                     l8798:
  1248                           
  1249                           ;State_Mchn.c: 73: else if (GETxAPIxVAL(77)){
  1250  00094E  0E4D               	movlw	77
  1251  000950  ECBC  F020         	call	_GETxAPIxVAL
  1252  000954  0100               	movlb	0	; () banked
  1253  000956  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1254  000958  0100               	movlb	0	; () banked
  1255  00095A  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1256  00095C  B4D8               	btfsc	status,2,c
  1257  00095E  D012               	goto	l8802
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;State_Mchn.c: 74: SETxAPIxVAL(69, 1);
  1261  000960  0E00               	movlw	0
  1262  000962  0100               	movlb	0	; () banked
  1263  000964  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1264  000966  0E01               	movlw	1
  1265  000968  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1266  00096A  0E45               	movlw	69
  1267  00096C  EC89  F01F         	call	_SETxAPIxVAL
  1268                           
  1269                           ;State_Mchn.c: 75: SETxAPIxVAL(77, 0);
  1270  000970  0E00               	movlw	0
  1271  000972  0100               	movlb	0	; () banked
  1272  000974  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1273  000976  0E00               	movlw	0
  1274  000978  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1275  00097A  0E4D               	movlw	77
  1276  00097C  EC89  F01F         	call	_SETxAPIxVAL
  1277                           
  1278                           ;State_Mchn.c: 76: }
  1279  000980  EF1A  F00A         	goto	l9284
  1280  000984                     l8802:
  1281                           
  1282                           ;State_Mchn.c: 77: else if (GETxAPIxVAL(78)){
  1283  000984  0E4E               	movlw	78
  1284  000986  ECBC  F020         	call	_GETxAPIxVAL
  1285  00098A  0100               	movlb	0	; () banked
  1286  00098C  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1287  00098E  0100               	movlb	0	; () banked
  1288  000990  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1289  000992  B4D8               	btfsc	status,2,c
  1290  000994  D012               	goto	l8806
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;State_Mchn.c: 78: SETxAPIxVAL(69, 0);
  1294  000996  0E00               	movlw	0
  1295  000998  0100               	movlb	0	; () banked
  1296  00099A  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1297  00099C  0E00               	movlw	0
  1298  00099E  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1299  0009A0  0E45               	movlw	69
  1300  0009A2  EC89  F01F         	call	_SETxAPIxVAL
  1301                           
  1302                           ;State_Mchn.c: 79: SETxAPIxVAL(78, 0);
  1303  0009A6  0E00               	movlw	0
  1304  0009A8  0100               	movlb	0	; () banked
  1305  0009AA  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1306  0009AC  0E00               	movlw	0
  1307  0009AE  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1308  0009B0  0E4E               	movlw	78
  1309  0009B2  EC89  F01F         	call	_SETxAPIxVAL
  1310                           
  1311                           ;State_Mchn.c: 80: }
  1312  0009B6  EF1A  F00A         	goto	l9284
  1313  0009BA                     l8806:
  1314                           
  1315                           ;State_Mchn.c: 81: else if (GETxAPIxVAL(68) != GETxAPIxVAL(79)){
  1316  0009BA  0E44               	movlw	68
  1317  0009BC  ECBC  F020         	call	_GETxAPIxVAL
  1318  0009C0  C0B9  F0CD         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  1319  0009C4  C0BA  F0CE         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  1320  0009C8  0E4F               	movlw	79
  1321  0009CA  ECBC  F020         	call	_GETxAPIxVAL
  1322  0009CE  0100               	movlb	0	; () banked
  1323  0009D0  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1324  0009D2  0100               	movlb	0	; () banked
  1325  0009D4  19CD               	xorwf	??_Update_StateMchn& (0+255),w,b
  1326  0009D6  E106               	bnz	u8420
  1327  0009D8  0100               	movlb	0	; () banked
  1328  0009DA  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1329  0009DC  0100               	movlb	0	; () banked
  1330  0009DE  19CE               	xorwf	(??_Update_StateMchn+1)& (0+255),w,b
  1331  0009E0  B4D8               	btfsc	status,2,c
  1332  0009E2  D02A               	goto	l8810
  1333  0009E4                     u8420:
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;State_Mchn.c: 82: SETxAPIxVALxNoxRET(68, GETxAPIxVAL(79));
  1337  0009E4  0E4F               	movlw	79
  1338  0009E6  ECBC  F020         	call	_GETxAPIxVAL
  1339  0009EA  C0B9  F0BC         	movff	?_GETxAPIxVAL,SETxAPIxVALxNoxRET@value
  1340  0009EE  C0BA  F0BD         	movff	?_GETxAPIxVAL+1,SETxAPIxVALxNoxRET@value+1
  1341  0009F2  0E44               	movlw	68
  1342  0009F4  ECFB  F01F         	call	_SETxAPIxVALxNoxRET
  1343                           
  1344                           ;State_Mchn.c: 83: SETxAPIxVALxNoxRET(GETxAPIxVAL(68), GETxAPIxVAL(81));
  1345  0009F8  0E51               	movlw	81
  1346  0009FA  ECBC  F020         	call	_GETxAPIxVAL
  1347  0009FE  C0B9  F0BC         	movff	?_GETxAPIxVAL,SETxAPIxVALxNoxRET@value
  1348  000A02  C0BA  F0BD         	movff	?_GETxAPIxVAL+1,SETxAPIxVALxNoxRET@value+1
  1349  000A06  0E44               	movlw	68
  1350  000A08  ECBC  F020         	call	_GETxAPIxVAL
  1351  000A0C  0100               	movlb	0	; () banked
  1352  000A0E  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1353  000A10  ECFB  F01F         	call	_SETxAPIxVALxNoxRET
  1354                           
  1355                           ;State_Mchn.c: 84: SETxPWM(GETxAPIxVAL(68),GETxAPIxVAL(86));
  1356  000A14  0E44               	movlw	68
  1357  000A16  ECBC  F020         	call	_GETxAPIxVAL
  1358  000A1A  C0B9  F0C3         	movff	?_GETxAPIxVAL,SETxPWM@speed
  1359  000A1E  C0BA  F0C4         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  1360  000A22  0E56               	movlw	86
  1361  000A24  ECBC  F020         	call	_GETxAPIxVAL
  1362  000A28  0100               	movlb	0	; () banked
  1363  000A2A  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1364  000A2C  0100               	movlb	0	; () banked
  1365  000A2E  6FC5               	movwf	SETxPWM@direction& (0+255),b
  1366  000A30  ECB4  F01D         	call	_SETxPWM	;wreg free
  1367                           
  1368                           ;State_Mchn.c: 85: }
  1369  000A34  EF1A  F00A         	goto	l9284
  1370  000A38                     l8810:
  1371                           
  1372                           ;State_Mchn.c: 86: else if (GETxAPIxVAL(86) != GETxAPIxVAL(81)){
  1373  000A38  0E56               	movlw	86
  1374  000A3A  ECBC  F020         	call	_GETxAPIxVAL
  1375  000A3E  C0B9  F0CD         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  1376  000A42  C0BA  F0CE         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  1377  000A46  0E51               	movlw	81
  1378  000A48  ECBC  F020         	call	_GETxAPIxVAL
  1379  000A4C  0100               	movlb	0	; () banked
  1380  000A4E  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1381  000A50  0100               	movlb	0	; () banked
  1382  000A52  19CD               	xorwf	??_Update_StateMchn& (0+255),w,b
  1383  000A54  E106               	bnz	u8430
  1384  000A56  0100               	movlb	0	; () banked
  1385  000A58  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1386  000A5A  0100               	movlb	0	; () banked
  1387  000A5C  19CE               	xorwf	(??_Update_StateMchn+1)& (0+255),w,b
  1388  000A5E  B4D8               	btfsc	status,2,c
  1389  000A60  D393               	goto	l9126
  1390  000A62                     u8430:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;State_Mchn.c: 87: SETxAPIxVALxNoxRET(86, GETxAPIxVAL(81));
  1394  000A62  0E51               	movlw	81
  1395  000A64  ECBC  F020         	call	_GETxAPIxVAL
  1396  000A68  C0B9  F0BC         	movff	?_GETxAPIxVAL,SETxAPIxVALxNoxRET@value
  1397  000A6C  C0BA  F0BD         	movff	?_GETxAPIxVAL+1,SETxAPIxVALxNoxRET@value+1
  1398  000A70  0E56               	movlw	86
  1399  000A72  ECFB  F01F         	call	_SETxAPIxVALxNoxRET
  1400                           
  1401                           ;State_Mchn.c: 88: }
  1402  000A76  EF1A  F00A         	goto	l9284
  1403  000A7A                     l8814:
  1404  000A7A  0E00               	movlw	0
  1405  000A7C  EC54  F01E         	call	_Green_Led
  1406                           
  1407                           ;State_Mchn.c: 94: Red_Led(0);
  1408  000A80  0E00               	movlw	0
  1409  000A82  EC06  F01E         	call	_Red_Led
  1410                           
  1411                           ;State_Mchn.c: 95: Switch_Init = 1;
  1412  000A86  0E01               	movlw	1
  1413  000A88  D012               	goto	L1
  1414  000A8A                     l8818:
  1415                           
  1416                           ; BSR set to: 0
  1417  000A8A  0E23               	movlw	35
  1418  000A8C  ECBC  F020         	call	_GETxAPIxVAL
  1419  000A90  0100               	movlb	0	; () banked
  1420  000A92  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1421  000A94  0100               	movlb	0	; () banked
  1422  000A96  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1423  000A98  B4D8               	btfsc	status,2,c
  1424  000A9A  D00D               	goto	l8824
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;State_Mchn.c: 99: {
  1428                           ;State_Mchn.c: 100: SETxAPIxVAL(39, 1);
  1429  000A9C  0E00               	movlw	0
  1430  000A9E  0100               	movlb	0	; () banked
  1431  000AA0  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1432  000AA2  0E01               	movlw	1
  1433  000AA4  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1434  000AA6  0E27               	movlw	39
  1435  000AA8  EC89  F01F         	call	_SETxAPIxVAL
  1436  000AAC  D04B               	goto	l8846
  1437  000AAE                     L1:
  1438  000AAE  0100               	movlb	0	; () banked
  1439  000AB0  6F8A               	movwf	_Switch_Init& (0+255),b
  1440                           
  1441                           ;State_Mchn.c: 102: break;
  1442  000AB2  EF1A  F00A         	goto	l9284
  1443  000AB6                     l8824:
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;State_Mchn.c: 103: }
  1447                           ;State_Mchn.c: 104: if(GETxAPIxVAL(36))
  1448  000AB6  0E24               	movlw	36
  1449  000AB8  ECBC  F020         	call	_GETxAPIxVAL
  1450  000ABC  0100               	movlb	0	; () banked
  1451  000ABE  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1452  000AC0  0100               	movlb	0	; () banked
  1453  000AC2  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1454  000AC4  B4D8               	btfsc	status,2,c
  1455  000AC6  D009               	goto	l8830
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;State_Mchn.c: 105: {
  1459                           ;State_Mchn.c: 106: SETxAPIxVAL(39, 2);
  1460  000AC8  0E00               	movlw	0
  1461  000ACA  0100               	movlb	0	; () banked
  1462  000ACC  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1463  000ACE  0E02               	movlw	2
  1464  000AD0  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1465  000AD2  0E27               	movlw	39
  1466  000AD4  EC89  F01F         	call	_SETxAPIxVAL
  1467  000AD8  D035               	goto	l8846
  1468  000ADA                     l8830:
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;State_Mchn.c: 109: }
  1472                           ;State_Mchn.c: 110: if(GETxAPIxVAL(37))
  1473  000ADA  0E25               	movlw	37
  1474  000ADC  ECBC  F020         	call	_GETxAPIxVAL
  1475  000AE0  0100               	movlb	0	; () banked
  1476  000AE2  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1477  000AE4  0100               	movlb	0	; () banked
  1478  000AE6  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1479  000AE8  B4D8               	btfsc	status,2,c
  1480  000AEA  D009               	goto	l8836
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;State_Mchn.c: 111: {
  1484                           ;State_Mchn.c: 112: SETxAPIxVAL(39, 3);
  1485  000AEC  0E00               	movlw	0
  1486  000AEE  0100               	movlb	0	; () banked
  1487  000AF0  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1488  000AF2  0E03               	movlw	3
  1489  000AF4  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1490  000AF6  0E27               	movlw	39
  1491  000AF8  EC89  F01F         	call	_SETxAPIxVAL
  1492  000AFC  D023               	goto	l8846
  1493  000AFE                     l8836:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;State_Mchn.c: 115: }
  1497                           ;State_Mchn.c: 116: if(GETxAPIxVAL(38))
  1498  000AFE  0E26               	movlw	38
  1499  000B00  ECBC  F020         	call	_GETxAPIxVAL
  1500  000B04  0100               	movlb	0	; () banked
  1501  000B06  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1502  000B08  0100               	movlb	0	; () banked
  1503  000B0A  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1504  000B0C  B4D8               	btfsc	status,2,c
  1505  000B0E  D009               	goto	l8842
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;State_Mchn.c: 117: {
  1509                           ;State_Mchn.c: 118: SETxAPIxVAL(39, 4);
  1510  000B10  0E00               	movlw	0
  1511  000B12  0100               	movlb	0	; () banked
  1512  000B14  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1513  000B16  0E04               	movlw	4
  1514  000B18  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1515  000B1A  0E27               	movlw	39
  1516  000B1C  EC89  F01F         	call	_SETxAPIxVAL
  1517  000B20  D011               	goto	l8846
  1518  000B22                     l8842:
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;State_Mchn.c: 121: }
  1522                           ;State_Mchn.c: 122: if(GETxAPIxVAL(34))
  1523  000B22  0E22               	movlw	34
  1524  000B24  ECBC  F020         	call	_GETxAPIxVAL
  1525  000B28  0100               	movlb	0	; () banked
  1526  000B2A  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1527  000B2C  0100               	movlb	0	; () banked
  1528  000B2E  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1529  000B30  B4D8               	btfsc	status,2,c
  1530  000B32  D00A               	goto	l8848
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;State_Mchn.c: 123: {
  1534                           ;State_Mchn.c: 124: SETxAPIxVAL(39, 5);
  1535  000B34  0E00               	movlw	0
  1536  000B36  0100               	movlb	0	; () banked
  1537  000B38  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1538  000B3A  0E05               	movlw	5
  1539  000B3C  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1540  000B3E  0E27               	movlw	39
  1541  000B40  EC89  F01F         	call	_SETxAPIxVAL
  1542  000B44                     l8846:
  1543                           
  1544                           ;State_Mchn.c: 125: Switch_Init = 2;
  1545  000B44  0E02               	movlw	2
  1546  000B46  D7B3               	goto	L1
  1547  000B48                     l8848:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;State_Mchn.c: 127: }
  1551                           ;State_Mchn.c: 128: if(GETxAPIxVAL(39) > 0 && GETxAPIxVAL(40) > 0){
  1552  000B48  0E27               	movlw	39
  1553  000B4A  ECBC  F020         	call	_GETxAPIxVAL
  1554  000B4E  0100               	movlb	0	; () banked
  1555  000B50  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1556  000B52  0100               	movlb	0	; () banked
  1557  000B54  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1558  000B56  B4D8               	btfsc	status,2,c
  1559  000B58  D009               	goto	l8854
  1560                           
  1561                           ; BSR set to: 0
  1562  000B5A  0E28               	movlw	40
  1563  000B5C  ECBC  F020         	call	_GETxAPIxVAL
  1564  000B60  0100               	movlb	0	; () banked
  1565  000B62  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1566  000B64  0100               	movlb	0	; () banked
  1567  000B66  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1568  000B68  A4D8               	btfss	status,2,c
  1569  000B6A  D0C7               	goto	l8916
  1570  000B6C                     l8854:
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;State_Mchn.c: 131: }
  1574                           ;State_Mchn.c: 132: Switch_Init = 1;
  1575  000B6C  0E01               	movlw	1
  1576  000B6E  0100               	movlb	0	; () banked
  1577  000B70  6F8A               	movwf	_Switch_Init& (0+255),b
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;State_Mchn.c: 133: Green_Led(2);
  1581  000B72  0E02               	movlw	2
  1582  000B74  EC54  F01E         	call	_Green_Led
  1583                           
  1584                           ;State_Mchn.c: 134: break;
  1585  000B78  EF1A  F00A         	goto	l9284
  1586  000B7C                     l8858:
  1587  000B7C  0E23               	movlw	35
  1588  000B7E  ECBC  F020         	call	_GETxAPIxVAL
  1589  000B82  0100               	movlb	0	; () banked
  1590  000B84  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1591  000B86  0100               	movlb	0	; () banked
  1592  000B88  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1593  000B8A  A4D8               	btfss	status,2,c
  1594  000B8C  D030               	goto	l8872
  1595                           
  1596                           ; BSR set to: 0
  1597  000B8E  0E24               	movlw	36
  1598  000B90  ECBC  F020         	call	_GETxAPIxVAL
  1599  000B94  0100               	movlb	0	; () banked
  1600  000B96  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1601  000B98  0100               	movlb	0	; () banked
  1602  000B9A  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1603  000B9C  A4D8               	btfss	status,2,c
  1604  000B9E  D027               	goto	l8872
  1605                           
  1606                           ; BSR set to: 0
  1607  000BA0  0E25               	movlw	37
  1608  000BA2  ECBC  F020         	call	_GETxAPIxVAL
  1609  000BA6  0100               	movlb	0	; () banked
  1610  000BA8  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1611  000BAA  0100               	movlb	0	; () banked
  1612  000BAC  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1613  000BAE  A4D8               	btfss	status,2,c
  1614  000BB0  D01E               	goto	l8872
  1615                           
  1616                           ; BSR set to: 0
  1617  000BB2  0E26               	movlw	38
  1618  000BB4  ECBC  F020         	call	_GETxAPIxVAL
  1619  000BB8  0100               	movlb	0	; () banked
  1620  000BBA  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1621  000BBC  0100               	movlb	0	; () banked
  1622  000BBE  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1623  000BC0  A4D8               	btfss	status,2,c
  1624  000BC2  D015               	goto	l8872
  1625                           
  1626                           ; BSR set to: 0
  1627  000BC4  0E22               	movlw	34
  1628  000BC6  ECBC  F020         	call	_GETxAPIxVAL
  1629  000BCA  0100               	movlb	0	; () banked
  1630  000BCC  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1631  000BCE  0100               	movlb	0	; () banked
  1632  000BD0  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1633  000BD2  A4D8               	btfss	status,2,c
  1634  000BD4  D00C               	goto	l8872
  1635                           
  1636                           ; BSR set to: 0
  1637  000BD6  0E20               	movlw	32
  1638  000BD8  ECBC  F020         	call	_GETxAPIxVAL
  1639  000BDC  0100               	movlb	0	; () banked
  1640  000BDE  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1641  000BE0  0100               	movlb	0	; () banked
  1642  000BE2  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1643  000BE4  A4D8               	btfss	status,2,c
  1644  000BE6  D003               	goto	l8872
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;State_Mchn.c: 137: {
  1648                           ;State_Mchn.c: 138: Switch_Init = 3;
  1649  000BE8  0E03               	movlw	3
  1650  000BEA  0100               	movlb	0	; () banked
  1651  000BEC  6F8A               	movwf	_Switch_Init& (0+255),b
  1652  000BEE                     l8872:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;State_Mchn.c: 139: }
  1656                           ;State_Mchn.c: 140: Red_Led(0);
  1657  000BEE  0E00               	movlw	0
  1658  000BF0  EC06  F01E         	call	_Red_Led
  1659                           
  1660                           ;State_Mchn.c: 141: Green_Led(2);
  1661  000BF4  0E02               	movlw	2
  1662  000BF6  EC54  F01E         	call	_Green_Led
  1663                           
  1664                           ;State_Mchn.c: 142: break;
  1665  000BFA  EF1A  F00A         	goto	l9284
  1666  000BFE                     l8876:
  1667  000BFE  0E23               	movlw	35
  1668  000C00  ECBC  F020         	call	_GETxAPIxVAL
  1669  000C04  0100               	movlb	0	; () banked
  1670  000C06  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1671  000C08  0100               	movlb	0	; () banked
  1672  000C0A  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1673  000C0C  B4D8               	btfsc	status,2,c
  1674  000C0E  D009               	goto	l8882
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;State_Mchn.c: 145: {
  1678                           ;State_Mchn.c: 146: SETxAPIxVAL(40, 1);
  1679  000C10  0E00               	movlw	0
  1680  000C12  0100               	movlb	0	; () banked
  1681  000C14  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1682  000C16  0E01               	movlw	1
  1683  000C18  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1684  000C1A  0E28               	movlw	40
  1685  000C1C  EC89  F01F         	call	_SETxAPIxVAL
  1686  000C20  D06C               	goto	l8916
  1687  000C22                     l8882:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;State_Mchn.c: 149: }
  1691                           ;State_Mchn.c: 150: if(GETxAPIxVAL(36))
  1692  000C22  0E24               	movlw	36
  1693  000C24  ECBC  F020         	call	_GETxAPIxVAL
  1694  000C28  0100               	movlb	0	; () banked
  1695  000C2A  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1696  000C2C  0100               	movlb	0	; () banked
  1697  000C2E  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1698  000C30  B4D8               	btfsc	status,2,c
  1699  000C32  D009               	goto	l8888
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;State_Mchn.c: 151: {
  1703                           ;State_Mchn.c: 152: SETxAPIxVAL(40, 2);
  1704  000C34  0E00               	movlw	0
  1705  000C36  0100               	movlb	0	; () banked
  1706  000C38  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1707  000C3A  0E02               	movlw	2
  1708  000C3C  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1709  000C3E  0E28               	movlw	40
  1710  000C40  EC89  F01F         	call	_SETxAPIxVAL
  1711  000C44  D05A               	goto	l8916
  1712  000C46                     l8888:
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;State_Mchn.c: 155: }
  1716                           ;State_Mchn.c: 156: if(GETxAPIxVAL(37))
  1717  000C46  0E25               	movlw	37
  1718  000C48  ECBC  F020         	call	_GETxAPIxVAL
  1719  000C4C  0100               	movlb	0	; () banked
  1720  000C4E  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1721  000C50  0100               	movlb	0	; () banked
  1722  000C52  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1723  000C54  B4D8               	btfsc	status,2,c
  1724  000C56  D009               	goto	l8894
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;State_Mchn.c: 157: {
  1728                           ;State_Mchn.c: 158: SETxAPIxVAL(40, 3);
  1729  000C58  0E00               	movlw	0
  1730  000C5A  0100               	movlb	0	; () banked
  1731  000C5C  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1732  000C5E  0E03               	movlw	3
  1733  000C60  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1734  000C62  0E28               	movlw	40
  1735  000C64  EC89  F01F         	call	_SETxAPIxVAL
  1736  000C68  D048               	goto	l8916
  1737  000C6A                     l8894:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;State_Mchn.c: 161: }
  1741                           ;State_Mchn.c: 162: if(GETxAPIxVAL(38))
  1742  000C6A  0E26               	movlw	38
  1743  000C6C  ECBC  F020         	call	_GETxAPIxVAL
  1744  000C70  0100               	movlb	0	; () banked
  1745  000C72  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1746  000C74  0100               	movlb	0	; () banked
  1747  000C76  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1748  000C78  B4D8               	btfsc	status,2,c
  1749  000C7A  D009               	goto	l8900
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;State_Mchn.c: 163: {
  1753                           ;State_Mchn.c: 164: SETxAPIxVAL(40, 4);
  1754  000C7C  0E00               	movlw	0
  1755  000C7E  0100               	movlb	0	; () banked
  1756  000C80  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1757  000C82  0E04               	movlw	4
  1758  000C84  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1759  000C86  0E28               	movlw	40
  1760  000C88  EC89  F01F         	call	_SETxAPIxVAL
  1761  000C8C  D036               	goto	l8916
  1762  000C8E                     l8900:
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;State_Mchn.c: 167: }
  1766                           ;State_Mchn.c: 168: if(GETxAPIxVAL(34))
  1767  000C8E  0E22               	movlw	34
  1768  000C90  ECBC  F020         	call	_GETxAPIxVAL
  1769  000C94  0100               	movlb	0	; () banked
  1770  000C96  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1771  000C98  0100               	movlb	0	; () banked
  1772  000C9A  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1773  000C9C  B4D8               	btfsc	status,2,c
  1774  000C9E  D009               	goto	l8906
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;State_Mchn.c: 169: {
  1778                           ;State_Mchn.c: 170: SETxAPIxVAL(40, 5);
  1779  000CA0  0E00               	movlw	0
  1780  000CA2  0100               	movlb	0	; () banked
  1781  000CA4  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1782  000CA6  0E05               	movlw	5
  1783  000CA8  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1784  000CAA  0E28               	movlw	40
  1785  000CAC  EC89  F01F         	call	_SETxAPIxVAL
  1786  000CB0  D024               	goto	l8916
  1787  000CB2                     l8906:
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;State_Mchn.c: 173: }
  1791                           ;State_Mchn.c: 174: if(GETxAPIxVAL(32))
  1792  000CB2  0E20               	movlw	32
  1793  000CB4  ECBC  F020         	call	_GETxAPIxVAL
  1794  000CB8  0100               	movlb	0	; () banked
  1795  000CBA  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1796  000CBC  0100               	movlb	0	; () banked
  1797  000CBE  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1798  000CC0  B4D8               	btfsc	status,2,c
  1799  000CC2  D009               	goto	l8912
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;State_Mchn.c: 175: {
  1803                           ;State_Mchn.c: 176: SETxAPIxVAL(40, 9);
  1804  000CC4  0E00               	movlw	0
  1805  000CC6  0100               	movlb	0	; () banked
  1806  000CC8  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1807  000CCA  0E09               	movlw	9
  1808  000CCC  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1809  000CCE  0E28               	movlw	40
  1810  000CD0  EC89  F01F         	call	_SETxAPIxVAL
  1811  000CD4  D012               	goto	l8916
  1812  000CD6                     l8912:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;State_Mchn.c: 179: }
  1816                           ;State_Mchn.c: 180: if(GETxAPIxVAL(39) > 0 && GETxAPIxVAL(40) > 0){
  1817  000CD6  0E27               	movlw	39
  1818  000CD8  ECBC  F020         	call	_GETxAPIxVAL
  1819  000CDC  0100               	movlb	0	; () banked
  1820  000CDE  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1821  000CE0  0100               	movlb	0	; () banked
  1822  000CE2  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1823  000CE4  B4D8               	btfsc	status,2,c
  1824  000CE6  D00B               	goto	l8918
  1825                           
  1826                           ; BSR set to: 0
  1827  000CE8  0E28               	movlw	40
  1828  000CEA  ECBC  F020         	call	_GETxAPIxVAL
  1829  000CEE  0100               	movlb	0	; () banked
  1830  000CF0  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1831  000CF2  0100               	movlb	0	; () banked
  1832  000CF4  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1833  000CF6  B4D8               	btfsc	status,2,c
  1834  000CF8  D002               	goto	l8918
  1835  000CFA                     l8916:
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;State_Mchn.c: 181: Switch_Init = 4;
  1839  000CFA  0E04               	movlw	4
  1840  000CFC  D6D8               	goto	L1
  1841  000CFE                     l8918:
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;State_Mchn.c: 183: }
  1845                           ;State_Mchn.c: 184: Green_Led(2);
  1846  000CFE  0E02               	movlw	2
  1847  000D00  EC54  F01E         	call	_Green_Led
  1848                           
  1849                           ;State_Mchn.c: 185: Switch_Init = 3;
  1850  000D04  0E03               	movlw	3
  1851  000D06  D6D3               	goto	L1
  1852  000D08                     l8922:
  1853                           
  1854                           ; BSR set to: 0
  1855  000D08  0E23               	movlw	35
  1856  000D0A  ECBC  F020         	call	_GETxAPIxVAL
  1857  000D0E  0100               	movlb	0	; () banked
  1858  000D10  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1859  000D12  0100               	movlb	0	; () banked
  1860  000D14  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1861  000D16  A4D8               	btfss	status,2,c
  1862  000D18  D070               	goto	l8946
  1863                           
  1864                           ; BSR set to: 0
  1865  000D1A  0E24               	movlw	36
  1866  000D1C  ECBC  F020         	call	_GETxAPIxVAL
  1867  000D20  0100               	movlb	0	; () banked
  1868  000D22  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1869  000D24  0100               	movlb	0	; () banked
  1870  000D26  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1871  000D28  A4D8               	btfss	status,2,c
  1872  000D2A  D067               	goto	l8946
  1873                           
  1874                           ; BSR set to: 0
  1875  000D2C  0E25               	movlw	37
  1876  000D2E  ECBC  F020         	call	_GETxAPIxVAL
  1877  000D32  0100               	movlb	0	; () banked
  1878  000D34  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1879  000D36  0100               	movlb	0	; () banked
  1880  000D38  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1881  000D3A  A4D8               	btfss	status,2,c
  1882  000D3C  D05E               	goto	l8946
  1883                           
  1884                           ; BSR set to: 0
  1885  000D3E  0E26               	movlw	38
  1886  000D40  ECBC  F020         	call	_GETxAPIxVAL
  1887  000D44  0100               	movlb	0	; () banked
  1888  000D46  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1889  000D48  0100               	movlb	0	; () banked
  1890  000D4A  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1891  000D4C  A4D8               	btfss	status,2,c
  1892  000D4E  D055               	goto	l8946
  1893                           
  1894                           ; BSR set to: 0
  1895  000D50  0E22               	movlw	34
  1896  000D52  ECBC  F020         	call	_GETxAPIxVAL
  1897  000D56  0100               	movlb	0	; () banked
  1898  000D58  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1899  000D5A  0100               	movlb	0	; () banked
  1900  000D5C  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1901  000D5E  A4D8               	btfss	status,2,c
  1902  000D60  D04C               	goto	l8946
  1903                           
  1904                           ; BSR set to: 0
  1905  000D62  0E20               	movlw	32
  1906  000D64  ECBC  F020         	call	_GETxAPIxVAL
  1907  000D68  0100               	movlb	0	; () banked
  1908  000D6A  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1909  000D6C  0100               	movlb	0	; () banked
  1910  000D6E  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1911  000D70  A4D8               	btfss	status,2,c
  1912  000D72  D043               	goto	l8946
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;State_Mchn.c: 189: {
  1916                           ;State_Mchn.c: 190: if(GETxAPIxVAL(39) == GETxAPIxVAL(40))
  1917  000D74  0E27               	movlw	39
  1918  000D76  ECBC  F020         	call	_GETxAPIxVAL
  1919  000D7A  C0B9  F0CD         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  1920  000D7E  C0BA  F0CE         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  1921  000D82  0E28               	movlw	40
  1922  000D84  ECBC  F020         	call	_GETxAPIxVAL
  1923  000D88  0100               	movlb	0	; () banked
  1924  000D8A  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1925  000D8C  0100               	movlb	0	; () banked
  1926  000D8E  19CD               	xorwf	??_Update_StateMchn& (0+255),w,b
  1927  000D90  E11C               	bnz	l8942
  1928  000D92  0100               	movlb	0	; () banked
  1929  000D94  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1930  000D96  0100               	movlb	0	; () banked
  1931  000D98  19CE               	xorwf	(??_Update_StateMchn+1)& (0+255),w,b
  1932  000D9A  A4D8               	btfss	status,2,c
  1933  000D9C  D016               	goto	l8942
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;State_Mchn.c: 191: {
  1937                           ;State_Mchn.c: 192: SETxAPIxVAL(40, 0);
  1938  000D9E  0E00               	movlw	0
  1939  000DA0  0100               	movlb	0	; () banked
  1940  000DA2  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1941  000DA4  0E00               	movlw	0
  1942  000DA6  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1943  000DA8  0E28               	movlw	40
  1944  000DAA  EC89  F01F         	call	_SETxAPIxVAL
  1945                           
  1946                           ;State_Mchn.c: 193: SETxAPIxVAL(39, 0);
  1947  000DAE  0E00               	movlw	0
  1948  000DB0  0100               	movlb	0	; () banked
  1949  000DB2  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  1950  000DB4  0E00               	movlw	0
  1951  000DB6  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  1952  000DB8  0E27               	movlw	39
  1953  000DBA  EC89  F01F         	call	_SETxAPIxVAL
  1954                           
  1955                           ;State_Mchn.c: 194: Red_Led(1);
  1956  000DBE  0E01               	movlw	1
  1957  000DC0  EC06  F01E         	call	_Red_Led
  1958                           
  1959                           ;State_Mchn.c: 195: Switch_Init = 1;
  1960  000DC4  0E01               	movlw	1
  1961  000DC6  0100               	movlb	0	; () banked
  1962  000DC8  6F8A               	movwf	_Switch_Init& (0+255),b
  1963  000DCA                     l8942:
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;State_Mchn.c: 197: }
  1967                           ;State_Mchn.c: 198: if(GETxAPIxVAL(39) != GETxAPIxVAL(40))
  1968  000DCA  0E27               	movlw	39
  1969  000DCC  ECBC  F020         	call	_GETxAPIxVAL
  1970  000DD0  C0B9  F0CD         	movff	?_GETxAPIxVAL,??_Update_StateMchn
  1971  000DD4  C0BA  F0CE         	movff	?_GETxAPIxVAL+1,??_Update_StateMchn+1
  1972  000DD8  0E28               	movlw	40
  1973  000DDA  ECBC  F020         	call	_GETxAPIxVAL
  1974  000DDE  0100               	movlb	0	; () banked
  1975  000DE0  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  1976  000DE2  0100               	movlb	0	; () banked
  1977  000DE4  19CD               	xorwf	??_Update_StateMchn& (0+255),w,b
  1978  000DE6  E106               	bnz	u8720
  1979  000DE8  0100               	movlb	0	; () banked
  1980  000DEA  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  1981  000DEC  0100               	movlb	0	; () banked
  1982  000DEE  19CE               	xorwf	(??_Update_StateMchn+1)& (0+255),w,b
  1983  000DF0  B4D8               	btfsc	status,2,c
  1984  000DF2  D003               	goto	l8946
  1985  000DF4                     u8720:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;State_Mchn.c: 199: {
  1989                           ;State_Mchn.c: 200: Switch_Init = 5;
  1990  000DF4  0E05               	movlw	5
  1991  000DF6  0100               	movlb	0	; () banked
  1992  000DF8  6F8A               	movwf	_Switch_Init& (0+255),b
  1993  000DFA                     l8946:
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;State_Mchn.c: 201: }
  1997                           ;State_Mchn.c: 202: }
  1998                           ;State_Mchn.c: 203: Green_Led(2);
  1999  000DFA  0E02               	movlw	2
  2000  000DFC  EC54  F01E         	call	_Green_Led
  2001                           
  2002                           ;State_Mchn.c: 204: break;
  2003  000E00  D319               	goto	l9284
  2004  000E02                     l8948:
  2005  000E02  0E28               	movlw	40
  2006  000E04  ECBC  F020         	call	_GETxAPIxVAL
  2007  000E08  0E09               	movlw	9
  2008  000E0A  0100               	movlb	0	; () banked
  2009  000E0C  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2010  000E0E  0100               	movlb	0	; () banked
  2011  000E10  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2012  000E12  B4D8               	btfsc	status,2,c
  2013  000E14  D003               	goto	l8952
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;State_Mchn.c: 207: {
  2017                           ;State_Mchn.c: 208: Switch_Init = 6;
  2018  000E16  0E06               	movlw	6
  2019  000E18  0100               	movlb	0	; () banked
  2020  000E1A  6F8A               	movwf	_Switch_Init& (0+255),b
  2021  000E1C                     l8952:
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;State_Mchn.c: 209: }
  2025                           ;State_Mchn.c: 210: if(GETxAPIxVAL(40) == 9)
  2026  000E1C  0E28               	movlw	40
  2027  000E1E  ECBC  F020         	call	_GETxAPIxVAL
  2028  000E22  0E09               	movlw	9
  2029  000E24  0100               	movlb	0	; () banked
  2030  000E26  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2031  000E28  0100               	movlb	0	; () banked
  2032  000E2A  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2033  000E2C  A4D8               	btfss	status,2,c
  2034  000E2E  D302               	goto	l9284
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;State_Mchn.c: 211: {
  2038                           ;State_Mchn.c: 212: Switch_Init = 9;
  2039  000E30  0E09               	movlw	9
  2040  000E32  D63D               	goto	L1
  2041  000E34                     l8956:
  2042                           
  2043                           ; BSR set to: 0
  2044  000E34  0E08               	movlw	8
  2045  000E36  D63B               	goto	L1
  2046  000E38                     l8958:
  2047                           
  2048                           ; BSR set to: 0
  2049  000E38  0E20               	movlw	32
  2050  000E3A  ECBC  F020         	call	_GETxAPIxVAL
  2051  000E3E  0100               	movlb	0	; () banked
  2052  000E40  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2053  000E42  0100               	movlb	0	; () banked
  2054  000E44  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2055  000E46  A4D8               	btfss	status,2,c
  2056  000E48  D009               	goto	l8962
  2057                           
  2058                           ; BSR set to: 0
  2059  000E4A  0E46               	movlw	70
  2060  000E4C  ECBC  F020         	call	_GETxAPIxVAL
  2061  000E50  0100               	movlb	0	; () banked
  2062  000E52  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2063  000E54  0100               	movlb	0	; () banked
  2064  000E56  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2065  000E58  B4D8               	btfsc	status,2,c
  2066  000E5A  D00F               	goto	l8966
  2067  000E5C                     l8962:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;State_Mchn.c: 220: {
  2071                           ;State_Mchn.c: 221: Switch_Main = 2;
  2072  000E5C  0E02               	movlw	2
  2073  000E5E  6E3F               	movwf	_Switch_Main,c
  2074                           
  2075                           ;State_Mchn.c: 222: Switch_Init = 0;
  2076  000E60  0E00               	movlw	0
  2077  000E62  0100               	movlb	0	; () banked
  2078  000E64  6F8A               	movwf	_Switch_Init& (0+255),b
  2079                           
  2080                           ;State_Mchn.c: 223: Stop_Program = 0;
  2081  000E66  0E00               	movlw	0
  2082  000E68  6E16               	movwf	_Stop_Program,c
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;State_Mchn.c: 224: SETxAPIxVAL(70, 0);
  2086  000E6A  0E00               	movlw	0
  2087  000E6C  0100               	movlb	0	; () banked
  2088  000E6E  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  2089  000E70  0E00               	movlw	0
  2090  000E72  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  2091  000E74  0E46               	movlw	70
  2092  000E76  EC89  F01F         	call	_SETxAPIxVAL
  2093  000E7A                     l8966:
  2094                           
  2095                           ;State_Mchn.c: 225: }
  2096                           ;State_Mchn.c: 226: Green_Led(3);
  2097  000E7A  0E03               	movlw	3
  2098  000E7C  EC54  F01E         	call	_Green_Led
  2099                           
  2100                           ;State_Mchn.c: 227: Red_Led(0);
  2101  000E80  0E00               	movlw	0
  2102  000E82  EC06  F01E         	call	_Red_Led
  2103                           
  2104                           ;State_Mchn.c: 228: break;
  2105  000E86  D2D6               	goto	l9284
  2106  000E88                     l8970:
  2107  000E88  0E27               	movlw	39
  2108  000E8A  ECBC  F020         	call	_GETxAPIxVAL
  2109  000E8E  0E05               	movlw	5
  2110  000E90  0100               	movlb	0	; () banked
  2111  000E92  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2112  000E94  0100               	movlb	0	; () banked
  2113  000E96  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2114  000E98  B4D8               	btfsc	status,2,c
  2115  000E9A  D014               	goto	l8988
  2116  000E9C  D02A               	goto	l8990
  2117  000E9E                     l8974:
  2118                           
  2119                           ; BSR set to: 0
  2120  000E9E  0E01               	movlw	1
  2121  000EA0  D005               	goto	L4
  2122  000EA2                     l8976:
  2123                           
  2124                           ; BSR set to: 0
  2125  000EA2  0E05               	movlw	5
  2126  000EA4  D003               	goto	L4
  2127  000EA6                     l8978:
  2128                           
  2129                           ; BSR set to: 0
  2130  000EA6  0E02               	movlw	2
  2131  000EA8  D001               	goto	L4
  2132  000EAA                     l8980:
  2133                           
  2134                           ; BSR set to: 0
  2135  000EAA  0E03               	movlw	3
  2136  000EAC                     L4:
  2137  000EAC  6E18               	movwf	_Switch_Program,c
  2138                           
  2139                           ;State_Mchn.c: 244: Switch_Init = 7;
  2140  000EAE  0E07               	movlw	7
  2141  000EB0  0100               	movlb	0	; () banked
  2142  000EB2  6F8A               	movwf	_Switch_Init& (0+255),b
  2143                           
  2144                           ;State_Mchn.c: 245: break;
  2145  000EB4  D01E               	goto	l8990
  2146  000EB6                     l8982:
  2147                           
  2148                           ; BSR set to: 0
  2149  000EB6  0E08               	movlw	8
  2150  000EB8  0100               	movlb	0	; () banked
  2151  000EBA  6F8A               	movwf	_Switch_Init& (0+255),b
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;State_Mchn.c: 247: Red_Led(1);
  2155  000EBC  0E01               	movlw	1
  2156  000EBE  EC06  F01E         	call	_Red_Led
  2157                           
  2158                           ;State_Mchn.c: 249: }
  2159                           
  2160                           ;State_Mchn.c: 248: break;
  2161  000EC2  D017               	goto	l8990
  2162  000EC4                     l8988:
  2163  000EC4  0E28               	movlw	40
  2164  000EC6  ECBC  F020         	call	_GETxAPIxVAL
  2165                           
  2166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2167                           ; Switch size 1, requested type "space"
  2168                           ; Number of cases is 1, Range of values is 0 to 0
  2169                           ; switch strategies available:
  2170                           ; Name         Instructions Cycles
  2171                           ; simple_byte            4     3 (average)
  2172                           ;	Chosen strategy is simple_byte
  2173  000ECA  0100               	movlb	0	; () banked
  2174  000ECC  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2175  000ECE  0A00               	xorlw	0	; case 0
  2176  000ED0  A4D8               	btfss	status,2,c
  2177  000ED2  D7F1               	goto	l8982
  2178                           
  2179                           ; BSR set to: 0
  2180                           ; Switch size 1, requested type "space"
  2181                           ; Number of cases is 4, Range of values is 1 to 4
  2182                           ; switch strategies available:
  2183                           ; Name         Instructions Cycles
  2184                           ; simple_byte           13     7 (average)
  2185                           ;	Chosen strategy is simple_byte
  2186  000ED4  0100               	movlb	0	; () banked
  2187  000ED6  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2188  000ED8  0A01               	xorlw	1	; case 1
  2189  000EDA  B4D8               	btfsc	status,2,c
  2190  000EDC  D7E0               	goto	l8974
  2191  000EDE  0A03               	xorlw	3	; case 2
  2192  000EE0  B4D8               	btfsc	status,2,c
  2193  000EE2  D7DF               	goto	l8976
  2194  000EE4  0A01               	xorlw	1	; case 3
  2195  000EE6  B4D8               	btfsc	status,2,c
  2196  000EE8  D7DE               	goto	l8978
  2197  000EEA  0A07               	xorlw	7	; case 4
  2198  000EEC  B4D8               	btfsc	status,2,c
  2199  000EEE  D7DD               	goto	l8980
  2200  000EF0  D7E2               	goto	l8982
  2201  000EF2                     l8990:
  2202                           
  2203                           ;State_Mchn.c: 250: }
  2204                           ;State_Mchn.c: 251: if(GETxAPIxVAL(40) == 5)
  2205  000EF2  0E28               	movlw	40
  2206  000EF4  ECBC  F020         	call	_GETxAPIxVAL
  2207  000EF8  0E05               	movlw	5
  2208  000EFA  0100               	movlb	0	; () banked
  2209  000EFC  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2210  000EFE  0100               	movlb	0	; () banked
  2211  000F00  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2212  000F02  B4D8               	btfsc	status,2,c
  2213  000F04  D014               	goto	l9008
  2214  000F06  D02A               	goto	l9010
  2215  000F08                     l8994:
  2216                           
  2217                           ; BSR set to: 0
  2218  000F08  0E01               	movlw	1
  2219  000F0A  D005               	goto	L7
  2220  000F0C                     l8996:
  2221                           
  2222                           ; BSR set to: 0
  2223  000F0C  0E05               	movlw	5
  2224  000F0E  D003               	goto	L7
  2225  000F10                     l8998:
  2226                           
  2227                           ; BSR set to: 0
  2228  000F10  0E02               	movlw	2
  2229  000F12  D001               	goto	L7
  2230  000F14                     l9000:
  2231                           
  2232                           ; BSR set to: 0
  2233  000F14  0E03               	movlw	3
  2234  000F16                     L7:
  2235  000F16  6E18               	movwf	_Switch_Program,c
  2236                           
  2237                           ;State_Mchn.c: 265: Switch_Init = 7;
  2238  000F18  0E07               	movlw	7
  2239  000F1A  0100               	movlb	0	; () banked
  2240  000F1C  6F8A               	movwf	_Switch_Init& (0+255),b
  2241                           
  2242                           ;State_Mchn.c: 266: break;
  2243  000F1E  D01E               	goto	l9010
  2244  000F20                     l9002:
  2245                           
  2246                           ; BSR set to: 0
  2247  000F20  0E08               	movlw	8
  2248  000F22  0100               	movlb	0	; () banked
  2249  000F24  6F8A               	movwf	_Switch_Init& (0+255),b
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;State_Mchn.c: 268: Red_Led(1);
  2253  000F26  0E01               	movlw	1
  2254  000F28  EC06  F01E         	call	_Red_Led
  2255                           
  2256                           ;State_Mchn.c: 270: }
  2257                           
  2258                           ;State_Mchn.c: 269: break;
  2259  000F2C  D017               	goto	l9010
  2260  000F2E                     l9008:
  2261  000F2E  0E27               	movlw	39
  2262  000F30  ECBC  F020         	call	_GETxAPIxVAL
  2263                           
  2264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2265                           ; Switch size 1, requested type "space"
  2266                           ; Number of cases is 1, Range of values is 0 to 0
  2267                           ; switch strategies available:
  2268                           ; Name         Instructions Cycles
  2269                           ; simple_byte            4     3 (average)
  2270                           ;	Chosen strategy is simple_byte
  2271  000F34  0100               	movlb	0	; () banked
  2272  000F36  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2273  000F38  0A00               	xorlw	0	; case 0
  2274  000F3A  A4D8               	btfss	status,2,c
  2275  000F3C  D7F1               	goto	l9002
  2276                           
  2277                           ; BSR set to: 0
  2278                           ; Switch size 1, requested type "space"
  2279                           ; Number of cases is 4, Range of values is 1 to 4
  2280                           ; switch strategies available:
  2281                           ; Name         Instructions Cycles
  2282                           ; simple_byte           13     7 (average)
  2283                           ;	Chosen strategy is simple_byte
  2284  000F3E  0100               	movlb	0	; () banked
  2285  000F40  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2286  000F42  0A01               	xorlw	1	; case 1
  2287  000F44  B4D8               	btfsc	status,2,c
  2288  000F46  D7E0               	goto	l8994
  2289  000F48  0A03               	xorlw	3	; case 2
  2290  000F4A  B4D8               	btfsc	status,2,c
  2291  000F4C  D7DF               	goto	l8996
  2292  000F4E  0A01               	xorlw	1	; case 3
  2293  000F50  B4D8               	btfsc	status,2,c
  2294  000F52  D7DE               	goto	l8998
  2295  000F54  0A07               	xorlw	7	; case 4
  2296  000F56  B4D8               	btfsc	status,2,c
  2297  000F58  D7DD               	goto	l9000
  2298  000F5A  D7E2               	goto	l9002
  2299  000F5C                     l9010:
  2300                           
  2301                           ;State_Mchn.c: 271: }
  2302                           ;State_Mchn.c: 272: if((GETxAPIxVAL(39) != 5) && (GETxAPIxVAL(40) != 5))
  2303  000F5C  0E27               	movlw	39
  2304  000F5E  ECBC  F020         	call	_GETxAPIxVAL
  2305  000F62  0E05               	movlw	5
  2306  000F64  0100               	movlb	0	; () banked
  2307  000F66  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2308  000F68  0100               	movlb	0	; () banked
  2309  000F6A  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2310  000F6C  B4D8               	btfsc	status,2,c
  2311  000F6E  D262               	goto	l9284
  2312                           
  2313                           ; BSR set to: 0
  2314  000F70  0E28               	movlw	40
  2315  000F72  ECBC  F020         	call	_GETxAPIxVAL
  2316  000F76  0E05               	movlw	5
  2317  000F78  0100               	movlb	0	; () banked
  2318  000F7A  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2319  000F7C  0100               	movlb	0	; () banked
  2320  000F7E  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2321  000F80  A4D8               	btfss	status,2,c
  2322  000F82  D090               	goto	l9086
  2323  000F84  D257               	goto	l9284
  2324  000F86                     l9018:
  2325                           
  2326                           ; BSR set to: 0
  2327  000F86  0E01               	movlw	1
  2328  000F88  D063               	goto	L18
  2329  000F8A                     l9020:
  2330                           
  2331                           ; BSR set to: 0
  2332  000F8A  0E02               	movlw	2
  2333  000F8C  D061               	goto	L18
  2334  000F8E                     l9022:
  2335                           
  2336                           ; BSR set to: 0
  2337  000F8E  0E04               	movlw	4
  2338  000F90  D05F               	goto	L18
  2339  000F92                     l9024:
  2340                           
  2341                           ; BSR set to: 0
  2342  000F92  0E08               	movlw	8
  2343  000F94  0100               	movlb	0	; () banked
  2344  000F96  6F8A               	movwf	_Switch_Init& (0+255),b
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;State_Mchn.c: 290: Red_Led(1);
  2348  000F98  0E01               	movlw	1
  2349  000F9A  EC06  F01E         	call	_Red_Led
  2350                           
  2351                           ;State_Mchn.c: 292: }
  2352                           
  2353                           ;State_Mchn.c: 291: break;
  2354  000F9E  D24A               	goto	l9284
  2355  000FA0                     l9030:
  2356  000FA0  0E28               	movlw	40
  2357  000FA2  ECBC  F020         	call	_GETxAPIxVAL
  2358                           
  2359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2360                           ; Switch size 1, requested type "space"
  2361                           ; Number of cases is 1, Range of values is 0 to 0
  2362                           ; switch strategies available:
  2363                           ; Name         Instructions Cycles
  2364                           ; simple_byte            4     3 (average)
  2365                           ;	Chosen strategy is simple_byte
  2366  000FA6  0100               	movlb	0	; () banked
  2367  000FA8  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2368  000FAA  0A00               	xorlw	0	; case 0
  2369  000FAC  A4D8               	btfss	status,2,c
  2370  000FAE  D7F1               	goto	l9024
  2371                           
  2372                           ; BSR set to: 0
  2373                           ; Switch size 1, requested type "space"
  2374                           ; Number of cases is 4, Range of values is 1 to 4
  2375                           ; switch strategies available:
  2376                           ; Name         Instructions Cycles
  2377                           ; simple_byte           13     7 (average)
  2378                           ;	Chosen strategy is simple_byte
  2379  000FB0  0100               	movlb	0	; () banked
  2380  000FB2  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2381  000FB4  0A01               	xorlw	1	; case 1
  2382  000FB6  B4D8               	btfsc	status,2,c
  2383  000FB8  D04E               	goto	l9070
  2384  000FBA  0A03               	xorlw	3	; case 2
  2385  000FBC  B4D8               	btfsc	status,2,c
  2386  000FBE  D7E3               	goto	l9018
  2387  000FC0  0A01               	xorlw	1	; case 3
  2388  000FC2  B4D8               	btfsc	status,2,c
  2389  000FC4  D7E2               	goto	l9020
  2390  000FC6  0A07               	xorlw	7	; case 4
  2391  000FC8  B4D8               	btfsc	status,2,c
  2392  000FCA  D7E1               	goto	l9022
  2393  000FCC  D7E2               	goto	l9024
  2394  000FCE                     l9036:
  2395                           
  2396                           ; BSR set to: 0
  2397  000FCE  0E00               	movlw	0
  2398  000FD0  D03F               	goto	L18
  2399  000FD2                     l9040:
  2400                           
  2401                           ; BSR set to: 0
  2402  000FD2  0E08               	movlw	8
  2403  000FD4  0100               	movlb	0	; () banked
  2404  000FD6  6F8A               	movwf	_Switch_Init& (0+255),b
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;State_Mchn.c: 308: Red_Led(1);
  2408  000FD8  0E01               	movlw	1
  2409  000FDA  EC06  F01E         	call	_Red_Led
  2410                           
  2411                           ;State_Mchn.c: 310: }
  2412                           
  2413                           ;State_Mchn.c: 309: break;
  2414  000FDE  D22A               	goto	l9284
  2415  000FE0                     l9046:
  2416  000FE0  0E28               	movlw	40
  2417  000FE2  ECBC  F020         	call	_GETxAPIxVAL
  2418                           
  2419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2420                           ; Switch size 1, requested type "space"
  2421                           ; Number of cases is 1, Range of values is 0 to 0
  2422                           ; switch strategies available:
  2423                           ; Name         Instructions Cycles
  2424                           ; simple_byte            4     3 (average)
  2425                           ;	Chosen strategy is simple_byte
  2426  000FE6  0100               	movlb	0	; () banked
  2427  000FE8  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2428  000FEA  0A00               	xorlw	0	; case 0
  2429  000FEC  A4D8               	btfss	status,2,c
  2430  000FEE  D7F1               	goto	l9040
  2431                           
  2432                           ; BSR set to: 0
  2433                           ; Switch size 1, requested type "space"
  2434                           ; Number of cases is 4, Range of values is 1 to 4
  2435                           ; switch strategies available:
  2436                           ; Name         Instructions Cycles
  2437                           ; simple_byte           13     7 (average)
  2438                           ;	Chosen strategy is simple_byte
  2439  000FF0  0100               	movlb	0	; () banked
  2440  000FF2  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2441  000FF4  0A01               	xorlw	1	; case 1
  2442  000FF6  B4D8               	btfsc	status,2,c
  2443  000FF8  D7C6               	goto	l9018
  2444  000FFA  0A03               	xorlw	3	; case 2
  2445  000FFC  B4D8               	btfsc	status,2,c
  2446  000FFE  D02B               	goto	l9070
  2447  001000  0A01               	xorlw	1	; case 3
  2448  001002  B4D8               	btfsc	status,2,c
  2449  001004  D7E4               	goto	l9036
  2450  001006  0A07               	xorlw	7	; case 4
  2451  001008  B4D8               	btfsc	status,2,c
  2452  00100A  D01F               	goto	l9066
  2453  00100C  D7E2               	goto	l9040
  2454  00100E                     l9056:
  2455                           
  2456                           ; BSR set to: 0
  2457  00100E  0E08               	movlw	8
  2458  001010  0100               	movlb	0	; () banked
  2459  001012  6F8A               	movwf	_Switch_Init& (0+255),b
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;State_Mchn.c: 326: Red_Led(1);
  2463  001014  0E01               	movlw	1
  2464  001016  EC06  F01E         	call	_Red_Led
  2465                           
  2466                           ;State_Mchn.c: 328: }
  2467                           
  2468                           ;State_Mchn.c: 327: break;
  2469  00101A  D20C               	goto	l9284
  2470  00101C                     l9062:
  2471  00101C  0E28               	movlw	40
  2472  00101E  ECBC  F020         	call	_GETxAPIxVAL
  2473                           
  2474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2475                           ; Switch size 1, requested type "space"
  2476                           ; Number of cases is 1, Range of values is 0 to 0
  2477                           ; switch strategies available:
  2478                           ; Name         Instructions Cycles
  2479                           ; simple_byte            4     3 (average)
  2480                           ;	Chosen strategy is simple_byte
  2481  001022  0100               	movlb	0	; () banked
  2482  001024  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2483  001026  0A00               	xorlw	0	; case 0
  2484  001028  A4D8               	btfss	status,2,c
  2485  00102A  D7F1               	goto	l9056
  2486                           
  2487                           ; BSR set to: 0
  2488                           ; Switch size 1, requested type "space"
  2489                           ; Number of cases is 4, Range of values is 1 to 4
  2490                           ; switch strategies available:
  2491                           ; Name         Instructions Cycles
  2492                           ; simple_byte           13     7 (average)
  2493                           ;	Chosen strategy is simple_byte
  2494  00102C  0100               	movlb	0	; () banked
  2495  00102E  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2496  001030  0A01               	xorlw	1	; case 1
  2497  001032  B4D8               	btfsc	status,2,c
  2498  001034  D7AA               	goto	l9020
  2499  001036  0A03               	xorlw	3	; case 2
  2500  001038  B4D8               	btfsc	status,2,c
  2501  00103A  D7C9               	goto	l9036
  2502  00103C  0A01               	xorlw	1	; case 3
  2503  00103E  B4D8               	btfsc	status,2,c
  2504  001040  D00A               	goto	l9070
  2505  001042  0A07               	xorlw	7	; case 4
  2506  001044  B4D8               	btfsc	status,2,c
  2507  001046  D003               	goto	l9068
  2508  001048  D7E2               	goto	l9056
  2509  00104A                     l9066:
  2510                           
  2511                           ; BSR set to: 0
  2512  00104A  0E06               	movlw	6
  2513  00104C  D001               	goto	L18
  2514  00104E                     l9068:
  2515                           
  2516                           ; BSR set to: 0
  2517  00104E  0E03               	movlw	3
  2518  001050                     L18:
  2519  001050  6E18               	movwf	_Switch_Program,c
  2520                           
  2521                           ;State_Mchn.c: 339: Switch_Init = 7;
  2522  001052  0E07               	movlw	7
  2523  001054  D52C               	goto	L1
  2524  001056                     l9070:
  2525                           
  2526                           ; BSR set to: 0
  2527  001056  0E00               	movlw	0
  2528  001058  D52A               	goto	L1
  2529  00105A                     l9072:
  2530                           
  2531                           ; BSR set to: 0
  2532  00105A  0E08               	movlw	8
  2533  00105C  0100               	movlb	0	; () banked
  2534  00105E  6F8A               	movwf	_Switch_Init& (0+255),b
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;State_Mchn.c: 344: Red_Led(1);
  2538  001060  0E01               	movlw	1
  2539  001062  EC06  F01E         	call	_Red_Led
  2540                           
  2541                           ;State_Mchn.c: 346: }
  2542                           
  2543                           ;State_Mchn.c: 345: break;
  2544  001066  D1E6               	goto	l9284
  2545  001068                     l9078:
  2546  001068  0E28               	movlw	40
  2547  00106A  ECBC  F020         	call	_GETxAPIxVAL
  2548                           
  2549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2550                           ; Switch size 1, requested type "space"
  2551                           ; Number of cases is 1, Range of values is 0 to 0
  2552                           ; switch strategies available:
  2553                           ; Name         Instructions Cycles
  2554                           ; simple_byte            4     3 (average)
  2555                           ;	Chosen strategy is simple_byte
  2556  00106E  0100               	movlb	0	; () banked
  2557  001070  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2558  001072  0A00               	xorlw	0	; case 0
  2559  001074  A4D8               	btfss	status,2,c
  2560  001076  D7F1               	goto	l9072
  2561                           
  2562                           ; BSR set to: 0
  2563                           ; Switch size 1, requested type "space"
  2564                           ; Number of cases is 4, Range of values is 1 to 4
  2565                           ; switch strategies available:
  2566                           ; Name         Instructions Cycles
  2567                           ; simple_byte           13     7 (average)
  2568                           ;	Chosen strategy is simple_byte
  2569  001078  0100               	movlb	0	; () banked
  2570  00107A  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2571  00107C  0A01               	xorlw	1	; case 1
  2572  00107E  B4D8               	btfsc	status,2,c
  2573  001080  D786               	goto	l9022
  2574  001082  0A03               	xorlw	3	; case 2
  2575  001084  B4D8               	btfsc	status,2,c
  2576  001086  D7E1               	goto	l9066
  2577  001088  0A01               	xorlw	1	; case 3
  2578  00108A  B4D8               	btfsc	status,2,c
  2579  00108C  D7E0               	goto	l9068
  2580  00108E  0A07               	xorlw	7	; case 4
  2581  001090  B4D8               	btfsc	status,2,c
  2582  001092  D7E1               	goto	l9070
  2583  001094  D7E2               	goto	l9072
  2584  001096                     l9080:
  2585                           
  2586                           ; BSR set to: 0
  2587  001096  0E08               	movlw	8
  2588  001098  0100               	movlb	0	; () banked
  2589  00109A  6F8A               	movwf	_Switch_Init& (0+255),b
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;State_Mchn.c: 349: Red_Led(1);
  2593  00109C  0E01               	movlw	1
  2594  00109E  EC06  F01E         	call	_Red_Led
  2595                           
  2596                           ;State_Mchn.c: 351: }
  2597                           
  2598                           ;State_Mchn.c: 350: break;
  2599  0010A2  D1C8               	goto	l9284
  2600  0010A4                     l9086:
  2601  0010A4  0E27               	movlw	39
  2602  0010A6  ECBC  F020         	call	_GETxAPIxVAL
  2603                           
  2604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2605                           ; Switch size 1, requested type "space"
  2606                           ; Number of cases is 1, Range of values is 0 to 0
  2607                           ; switch strategies available:
  2608                           ; Name         Instructions Cycles
  2609                           ; simple_byte            4     3 (average)
  2610                           ;	Chosen strategy is simple_byte
  2611  0010AA  0100               	movlb	0	; () banked
  2612  0010AC  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2613  0010AE  0A00               	xorlw	0	; case 0
  2614  0010B0  A4D8               	btfss	status,2,c
  2615  0010B2  D7F1               	goto	l9080
  2616                           
  2617                           ; BSR set to: 0
  2618                           ; Switch size 1, requested type "space"
  2619                           ; Number of cases is 4, Range of values is 1 to 4
  2620                           ; switch strategies available:
  2621                           ; Name         Instructions Cycles
  2622                           ; simple_byte           13     7 (average)
  2623                           ;	Chosen strategy is simple_byte
  2624  0010B4  0100               	movlb	0	; () banked
  2625  0010B6  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2626  0010B8  0A01               	xorlw	1	; case 1
  2627  0010BA  B4D8               	btfsc	status,2,c
  2628  0010BC  D771               	goto	l9030
  2629  0010BE  0A03               	xorlw	3	; case 2
  2630  0010C0  B4D8               	btfsc	status,2,c
  2631  0010C2  D78E               	goto	l9046
  2632  0010C4  0A01               	xorlw	1	; case 3
  2633  0010C6  B4D8               	btfsc	status,2,c
  2634  0010C8  D7A9               	goto	l9062
  2635  0010CA  0A07               	xorlw	7	; case 4
  2636  0010CC  B4D8               	btfsc	status,2,c
  2637  0010CE  D7CC               	goto	l9078
  2638  0010D0  D7E2               	goto	l9080
  2639  0010D2                     l9088:
  2640                           
  2641                           ; BSR set to: 0
  2642  0010D2  0E0B               	movlw	11
  2643  0010D4  D4EC               	goto	L1
  2644  0010D6                     l9090:
  2645                           
  2646                           ; BSR set to: 0
  2647  0010D6  0E20               	movlw	32
  2648  0010D8  ECBC  F020         	call	_GETxAPIxVAL
  2649  0010DC  0100               	movlb	0	; () banked
  2650  0010DE  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2651  0010E0  0100               	movlb	0	; () banked
  2652  0010E2  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2653  0010E4  A4D8               	btfss	status,2,c
  2654  0010E6  D009               	goto	l9094
  2655                           
  2656                           ; BSR set to: 0
  2657  0010E8  0E46               	movlw	70
  2658  0010EA  ECBC  F020         	call	_GETxAPIxVAL
  2659  0010EE  0100               	movlb	0	; () banked
  2660  0010F0  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2661  0010F2  0100               	movlb	0	; () banked
  2662  0010F4  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2663  0010F6  B4D8               	btfsc	status,2,c
  2664  0010F8  D007               	goto	l9096
  2665  0010FA                     l9094:
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;State_Mchn.c: 359: {
  2669                           ;State_Mchn.c: 360: Switch_Main = 3;
  2670  0010FA  0E03               	movlw	3
  2671  0010FC  6E3F               	movwf	_Switch_Main,c
  2672                           
  2673                           ;State_Mchn.c: 361: Switch_Init = 0;
  2674  0010FE  0E00               	movlw	0
  2675  001100  0100               	movlb	0	; () banked
  2676  001102  6F8A               	movwf	_Switch_Init& (0+255),b
  2677                           
  2678                           ;State_Mchn.c: 362: Stop_Program = 0;
  2679  001104  0E00               	movlw	0
  2680  001106  6E16               	movwf	_Stop_Program,c
  2681  001108                     l9096:
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;State_Mchn.c: 363: }
  2685                           ;State_Mchn.c: 364: Green_Led(3);
  2686  001108  0E03               	movlw	3
  2687  00110A  EC54  F01E         	call	_Green_Led
  2688                           
  2689                           ;State_Mchn.c: 365: Red_Led(0);
  2690  00110E  0E00               	movlw	0
  2691  001110  EC06  F01E         	call	_Red_Led
  2692                           
  2693                           ;State_Mchn.c: 366: break;
  2694  001114  D18F               	goto	l9284
  2695  001116                     l9100:
  2696  001116  0E27               	movlw	39
  2697  001118  ECBC  F020         	call	_GETxAPIxVAL
  2698  00111C  0E05               	movlw	5
  2699  00111E  0100               	movlb	0	; () banked
  2700  001120  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  2701  001122  0100               	movlb	0	; () banked
  2702  001124  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2703  001126  A4D8               	btfss	status,2,c
  2704  001128  D011               	goto	l9118
  2705  00112A                     l9102:
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;State_Mchn.c: 369: {
  2709                           ;State_Mchn.c: 370: Switch_Program = 0;
  2710  00112A  0E00               	movlw	0
  2711  00112C  D005               	goto	L22
  2712  00112E                     l9104:
  2713                           
  2714                           ; BSR set to: 0
  2715  00112E  0E01               	movlw	1
  2716  001130  D003               	goto	L22
  2717  001132                     l9106:
  2718                           
  2719                           ; BSR set to: 0
  2720  001132  0E03               	movlw	3
  2721  001134  D001               	goto	L22
  2722  001136                     l9110:
  2723                           
  2724                           ; BSR set to: 0
  2725  001136  0E02               	movlw	2
  2726  001138                     L22:
  2727  001138  6E18               	movwf	_Switch_Program,c
  2728  00113A  0E0A               	movlw	10
  2729  00113C  D4B8               	goto	L1
  2730  00113E                     l9112:
  2731                           
  2732                           ; BSR set to: 0
  2733  00113E  0E0B               	movlw	11
  2734  001140  0100               	movlb	0	; () banked
  2735  001142  6F8A               	movwf	_Switch_Init& (0+255),b
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;State_Mchn.c: 380: Red_Led(1);
  2739  001144  0E01               	movlw	1
  2740  001146  EC06  F01E         	call	_Red_Led
  2741                           
  2742                           ;State_Mchn.c: 382: }
  2743                           
  2744                           ;State_Mchn.c: 381: break;
  2745  00114A  D174               	goto	l9284
  2746  00114C                     l9118:
  2747  00114C  0E27               	movlw	39
  2748  00114E  ECBC  F020         	call	_GETxAPIxVAL
  2749                           
  2750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2751                           ; Switch size 1, requested type "space"
  2752                           ; Number of cases is 1, Range of values is 0 to 0
  2753                           ; switch strategies available:
  2754                           ; Name         Instructions Cycles
  2755                           ; simple_byte            4     3 (average)
  2756                           ;	Chosen strategy is simple_byte
  2757  001152  0100               	movlb	0	; () banked
  2758  001154  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  2759  001156  0A00               	xorlw	0	; case 0
  2760  001158  A4D8               	btfss	status,2,c
  2761  00115A  D7F1               	goto	l9112
  2762                           
  2763                           ; BSR set to: 0
  2764                           ; Switch size 1, requested type "space"
  2765                           ; Number of cases is 4, Range of values is 1 to 4
  2766                           ; switch strategies available:
  2767                           ; Name         Instructions Cycles
  2768                           ; simple_byte           13     7 (average)
  2769                           ;	Chosen strategy is simple_byte
  2770  00115C  0100               	movlb	0	; () banked
  2771  00115E  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  2772  001160  0A01               	xorlw	1	; case 1
  2773  001162  B4D8               	btfsc	status,2,c
  2774  001164  D7E4               	goto	l9104
  2775  001166  0A03               	xorlw	3	; case 2
  2776  001168  B4D8               	btfsc	status,2,c
  2777  00116A  D7E3               	goto	l9106
  2778  00116C  0A01               	xorlw	1	; case 3
  2779  00116E  B4D8               	btfsc	status,2,c
  2780  001170  D7DC               	goto	l9102
  2781  001172  0A07               	xorlw	7	; case 4
  2782  001174  B4D8               	btfsc	status,2,c
  2783  001176  D7DF               	goto	l9110
  2784  001178  D7E2               	goto	l9112
  2785  00117A                     l9120:
  2786                           
  2787                           ; BSR set to: 0
  2788  00117A  0E00               	movlw	0
  2789  00117C  0100               	movlb	0	; () banked
  2790  00117E  6F8A               	movwf	_Switch_Init& (0+255),b
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;State_Mchn.c: 386: Red_Led(1);
  2794  001180  0E01               	movlw	1
  2795  001182  EC06  F01E         	call	_Red_Led
  2796                           
  2797                           ;State_Mchn.c: 388: }
  2798                           
  2799                           ;State_Mchn.c: 387: break;
  2800  001186  D156               	goto	l9284
  2801  001188                     l9126:
  2802  001188  0100               	movlb	0	; () banked
  2803  00118A  518A               	movf	_Switch_Init& (0+255),w,b
  2804                           
  2805                           ; Switch size 1, requested type "space"
  2806                           ; Number of cases is 12, Range of values is 0 to 11
  2807                           ; switch strategies available:
  2808                           ; Name         Instructions Cycles
  2809                           ; simple_byte           37    19 (average)
  2810                           ;	Chosen strategy is simple_byte
  2811  00118C  0A00               	xorlw	0	; case 0
  2812  00118E  B4D8               	btfsc	status,2,c
  2813  001190  D474               	goto	l8814
  2814  001192  0A01               	xorlw	1	; case 1
  2815  001194  B4D8               	btfsc	status,2,c
  2816  001196  D479               	goto	l8818
  2817  001198  0A03               	xorlw	3	; case 2
  2818  00119A  B4D8               	btfsc	status,2,c
  2819  00119C  D4EF               	goto	l8858
  2820  00119E  0A01               	xorlw	1	; case 3
  2821  0011A0  B4D8               	btfsc	status,2,c
  2822  0011A2  D52D               	goto	l8876
  2823  0011A4  0A07               	xorlw	7	; case 4
  2824  0011A6  B4D8               	btfsc	status,2,c
  2825  0011A8  D5AF               	goto	l8922
  2826  0011AA  0A01               	xorlw	1	; case 5
  2827  0011AC  B4D8               	btfsc	status,2,c
  2828  0011AE  D629               	goto	l8948
  2829  0011B0  0A03               	xorlw	3	; case 6
  2830  0011B2  B4D8               	btfsc	status,2,c
  2831  0011B4  D63F               	goto	l8956
  2832  0011B6  0A01               	xorlw	1	; case 7
  2833  0011B8  B4D8               	btfsc	status,2,c
  2834  0011BA  D63E               	goto	l8958
  2835  0011BC  0A0F               	xorlw	15	; case 8
  2836  0011BE  B4D8               	btfsc	status,2,c
  2837  0011C0  D663               	goto	l8970
  2838  0011C2  0A01               	xorlw	1	; case 9
  2839  0011C4  B4D8               	btfsc	status,2,c
  2840  0011C6  D785               	goto	l9088
  2841  0011C8  0A03               	xorlw	3	; case 10
  2842  0011CA  B4D8               	btfsc	status,2,c
  2843  0011CC  D784               	goto	l9090
  2844  0011CE  0A01               	xorlw	1	; case 11
  2845  0011D0  B4D8               	btfsc	status,2,c
  2846  0011D2  D7A1               	goto	l9100
  2847  0011D4  D7D2               	goto	l9120
  2848  0011D6                     l9128:
  2849  0011D6  0E01               	movlw	1
  2850  0011D8  0100               	movlb	0	; () banked
  2851  0011DA  6FCB               	movwf	Train_Path@To& (0+255),b
  2852  0011DC  0E03               	movlw	3
  2853  0011DE  ECE4  F010         	call	_Train_Path
  2854  0011E2  0900               	iorlw	0
  2855  0011E4  A4D8               	btfss	status,2,c
  2856  0011E6  D085               	goto	l9212
  2857                           
  2858                           ;State_Mchn.c: 395: {
  2859                           ;State_Mchn.c: 396: Switch_Program = 1;
  2860  0011E8  0E01               	movlw	1
  2861  0011EA  6E18               	movwf	_Switch_Program,c
  2862                           
  2863                           ;State_Mchn.c: 397: Eeprom_Store();
  2864  0011EC  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  2865  0011F0                     l9134:
  2866                           
  2867                           ;State_Mchn.c: 398: if(Stop_Program == 1)
  2868  0011F0  0416               	decf	_Stop_Program,w,c
  2869  0011F2  A4D8               	btfss	status,2,c
  2870  0011F4  D07E               	goto	l9212
  2871                           
  2872                           ;State_Mchn.c: 399: {
  2873                           ;State_Mchn.c: 400: Switch_Main = 1;
  2874  0011F6  0E01               	movlw	1
  2875  0011F8  6E3F               	movwf	_Switch_Main,c
  2876                           
  2877                           ;State_Mchn.c: 402: }
  2878                           ;State_Mchn.c: 403: }
  2879                           ;State_Mchn.c: 404: break;
  2880  0011FA  D07B               	goto	l9212
  2881  0011FC                     l9138:
  2882  0011FC  0E03               	movlw	3
  2883  0011FE  0100               	movlb	0	; () banked
  2884  001200  6FCB               	movwf	Train_Path@To& (0+255),b
  2885  001202  0E02               	movlw	2
  2886  001204  ECE4  F010         	call	_Train_Path
  2887  001208  0900               	iorlw	0
  2888  00120A  A4D8               	btfss	status,2,c
  2889  00120C  D072               	goto	l9212
  2890                           
  2891                           ;State_Mchn.c: 407: {
  2892                           ;State_Mchn.c: 408: Switch_Program = 2;
  2893  00120E  0E02               	movlw	2
  2894  001210  6E18               	movwf	_Switch_Program,c
  2895                           
  2896                           ;State_Mchn.c: 409: Eeprom_Store();
  2897  001212  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  2898  001216  D7EC               	goto	l9134
  2899  001218                     l9148:
  2900  001218  0E04               	movlw	4
  2901  00121A  0100               	movlb	0	; () banked
  2902  00121C  6FCB               	movwf	Train_Path@To& (0+255),b
  2903  00121E  0E01               	movlw	1
  2904  001220  ECE4  F010         	call	_Train_Path
  2905  001224  0900               	iorlw	0
  2906  001226  A4D8               	btfss	status,2,c
  2907  001228  D064               	goto	l9212
  2908                           
  2909                           ;State_Mchn.c: 419: {
  2910                           ;State_Mchn.c: 420: Switch_Program = 3;
  2911  00122A  0E03               	movlw	3
  2912  00122C  6E18               	movwf	_Switch_Program,c
  2913                           
  2914                           ;State_Mchn.c: 421: Eeprom_Store();
  2915  00122E  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  2916  001232  D7DE               	goto	l9134
  2917  001234                     l9158:
  2918  001234  0E01               	movlw	1
  2919  001236  0100               	movlb	0	; () banked
  2920  001238  6FCB               	movwf	Train_Path@To& (0+255),b
  2921  00123A  0E03               	movlw	3
  2922  00123C  ECE4  F010         	call	_Train_Path
  2923  001240  0900               	iorlw	0
  2924  001242  A4D8               	btfss	status,2,c
  2925  001244  D056               	goto	l9212
  2926                           
  2927                           ;State_Mchn.c: 431: {
  2928                           ;State_Mchn.c: 432: Switch_Program = 4;
  2929  001246  0E04               	movlw	4
  2930  001248  6E18               	movwf	_Switch_Program,c
  2931                           
  2932                           ;State_Mchn.c: 433: Eeprom_Store();
  2933  00124A  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  2934  00124E  D7D0               	goto	l9134
  2935  001250                     l9168:
  2936  001250  0E02               	movlw	2
  2937  001252  0100               	movlb	0	; () banked
  2938  001254  6FCB               	movwf	Train_Path@To& (0+255),b
  2939  001256  0E04               	movlw	4
  2940  001258  ECE4  F010         	call	_Train_Path
  2941  00125C  0900               	iorlw	0
  2942  00125E  A4D8               	btfss	status,2,c
  2943  001260  D048               	goto	l9212
  2944                           
  2945                           ;State_Mchn.c: 443: {
  2946                           ;State_Mchn.c: 444: Switch_Program = 5;
  2947  001262  0E05               	movlw	5
  2948  001264  6E18               	movwf	_Switch_Program,c
  2949                           
  2950                           ;State_Mchn.c: 445: Eeprom_Store();
  2951  001266  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  2952  00126A  D7C2               	goto	l9134
  2953  00126C                     l9178:
  2954  00126C  0E04               	movlw	4
  2955  00126E  0100               	movlb	0	; () banked
  2956  001270  6FCB               	movwf	Train_Path@To& (0+255),b
  2957  001272  0E01               	movlw	1
  2958  001274  ECE4  F010         	call	_Train_Path
  2959  001278  0900               	iorlw	0
  2960  00127A  A4D8               	btfss	status,2,c
  2961  00127C  D03A               	goto	l9212
  2962                           
  2963                           ;State_Mchn.c: 455: {
  2964                           ;State_Mchn.c: 456: Switch_Program = 6;
  2965  00127E  0E06               	movlw	6
  2966  001280  6E18               	movwf	_Switch_Program,c
  2967                           
  2968                           ;State_Mchn.c: 457: Eeprom_Store();
  2969  001282  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  2970  001286  D7B4               	goto	l9134
  2971  001288                     l9188:
  2972  001288  0E03               	movlw	3
  2973  00128A  0100               	movlb	0	; () banked
  2974  00128C  6FCB               	movwf	Train_Path@To& (0+255),b
  2975  00128E  0E02               	movlw	2
  2976  001290  ECE4  F010         	call	_Train_Path
  2977  001294  0900               	iorlw	0
  2978  001296  A4D8               	btfss	status,2,c
  2979  001298  D02C               	goto	l9212
  2980                           
  2981                           ;State_Mchn.c: 467: {
  2982                           ;State_Mchn.c: 468: Switch_Program = 7;
  2983  00129A  0E07               	movlw	7
  2984  00129C  6E18               	movwf	_Switch_Program,c
  2985                           
  2986                           ;State_Mchn.c: 469: Eeprom_Store();
  2987  00129E  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  2988  0012A2  D7A6               	goto	l9134
  2989  0012A4                     l9198:
  2990  0012A4  0E02               	movlw	2
  2991  0012A6  0100               	movlb	0	; () banked
  2992  0012A8  6FCB               	movwf	Train_Path@To& (0+255),b
  2993  0012AA  0E04               	movlw	4
  2994  0012AC  ECE4  F010         	call	_Train_Path
  2995  0012B0  0900               	iorlw	0
  2996  0012B2  A4D8               	btfss	status,2,c
  2997  0012B4  D01E               	goto	l9212
  2998                           
  2999                           ;State_Mchn.c: 479: {
  3000                           ;State_Mchn.c: 480: Switch_Program = 0;
  3001  0012B6  0E00               	movlw	0
  3002  0012B8  6E18               	movwf	_Switch_Program,c
  3003                           
  3004                           ;State_Mchn.c: 481: Eeprom_Store();
  3005  0012BA  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  3006  0012BE  D798               	goto	l9134
  3007  0012C0                     l9210:
  3008  0012C0  5018               	movf	_Switch_Program,w,c
  3009                           
  3010                           ; Switch size 1, requested type "space"
  3011                           ; Number of cases is 8, Range of values is 0 to 7
  3012                           ; switch strategies available:
  3013                           ; Name         Instructions Cycles
  3014                           ; simple_byte           25    13 (average)
  3015                           ;	Chosen strategy is simple_byte
  3016  0012C2  0A00               	xorlw	0	; case 0
  3017  0012C4  B4D8               	btfsc	status,2,c
  3018  0012C6  D787               	goto	l9128
  3019  0012C8  0A01               	xorlw	1	; case 1
  3020  0012CA  B4D8               	btfsc	status,2,c
  3021  0012CC  D797               	goto	l9138
  3022  0012CE  0A03               	xorlw	3	; case 2
  3023  0012D0  B4D8               	btfsc	status,2,c
  3024  0012D2  D7A2               	goto	l9148
  3025  0012D4  0A01               	xorlw	1	; case 3
  3026  0012D6  B4D8               	btfsc	status,2,c
  3027  0012D8  D7AD               	goto	l9158
  3028  0012DA  0A07               	xorlw	7	; case 4
  3029  0012DC  B4D8               	btfsc	status,2,c
  3030  0012DE  D7B8               	goto	l9168
  3031  0012E0  0A01               	xorlw	1	; case 5
  3032  0012E2  B4D8               	btfsc	status,2,c
  3033  0012E4  D7C3               	goto	l9178
  3034  0012E6  0A03               	xorlw	3	; case 6
  3035  0012E8  B4D8               	btfsc	status,2,c
  3036  0012EA  D7CE               	goto	l9188
  3037  0012EC  0A01               	xorlw	1	; case 7
  3038  0012EE  B4D8               	btfsc	status,2,c
  3039  0012F0  D7D9               	goto	l9198
  3040  0012F2                     l9212:
  3041                           
  3042                           ;State_Mchn.c: 677: if(GETxAPIxVAL(33) || GETxAPIxVAL(71))
  3043  0012F2  0E21               	movlw	33
  3044  0012F4  ECBC  F020         	call	_GETxAPIxVAL
  3045  0012F8  0100               	movlb	0	; () banked
  3046  0012FA  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3047  0012FC  0100               	movlb	0	; () banked
  3048  0012FE  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3049  001300  A4D8               	btfss	status,2,c
  3050  001302  D009               	goto	l9216
  3051                           
  3052                           ; BSR set to: 0
  3053  001304  0E47               	movlw	71
  3054  001306  ECBC  F020         	call	_GETxAPIxVAL
  3055  00130A  0100               	movlb	0	; () banked
  3056  00130C  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3057  00130E  0100               	movlb	0	; () banked
  3058  001310  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3059  001312  B4D8               	btfsc	status,2,c
  3060  001314  D00A               	goto	l9220
  3061  001316                     l9216:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;State_Mchn.c: 678: {
  3065                           ;State_Mchn.c: 679: Stop_Program = 1;
  3066  001316  0E01               	movlw	1
  3067  001318  6E16               	movwf	_Stop_Program,c
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;State_Mchn.c: 680: SETxAPIxVAL(71, 0);
  3071  00131A  0E00               	movlw	0
  3072  00131C  0100               	movlb	0	; () banked
  3073  00131E  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  3074  001320  0E00               	movlw	0
  3075  001322  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  3076  001324  0E47               	movlw	71
  3077  001326  EC89  F01F         	call	_SETxAPIxVAL
  3078  00132A                     l9220:
  3079                           
  3080                           ;State_Mchn.c: 681: }
  3081                           ;State_Mchn.c: 683: if(Stop_Program == 1)
  3082  00132A  0416               	decf	_Stop_Program,w,c
  3083  00132C  A4D8               	btfss	status,2,c
  3084  00132E  D003               	goto	l326
  3085                           
  3086                           ;State_Mchn.c: 684: {
  3087                           ;State_Mchn.c: 685: Red_Led(2);
  3088  001330  0E02               	movlw	2
  3089  001332  EC06  F01E         	call	_Red_Led
  3090  001336                     l326:
  3091                           
  3092                           ;State_Mchn.c: 686: }
  3093                           ;State_Mchn.c: 688: Green_Led(1);
  3094  001336  0E01               	movlw	1
  3095  001338  EC54  F01E         	call	_Green_Led
  3096                           
  3097                           ;State_Mchn.c: 690: break;
  3098  00133C  D07B               	goto	l9284
  3099  00133E                     l9224:
  3100  00133E  0E01               	movlw	1
  3101  001340  0100               	movlb	0	; () banked
  3102  001342  6FCB               	movwf	Train_Path@To& (0+255),b
  3103  001344  0E03               	movlw	3
  3104  001346  ECE4  F010         	call	_Train_Path
  3105  00134A  0900               	iorlw	0
  3106  00134C  A4D8               	btfss	status,2,c
  3107  00134E  D041               	goto	l9268
  3108                           
  3109                           ;State_Mchn.c: 696: {
  3110                           ;State_Mchn.c: 697: Switch_Program = 1;
  3111  001350  0E01               	movlw	1
  3112  001352  6E18               	movwf	_Switch_Program,c
  3113                           
  3114                           ;State_Mchn.c: 698: Eeprom_Store();
  3115  001354  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  3116  001358                     l9230:
  3117                           
  3118                           ;State_Mchn.c: 699: if(Stop_Program == 1)
  3119  001358  0416               	decf	_Stop_Program,w,c
  3120  00135A  A4D8               	btfss	status,2,c
  3121  00135C  D03A               	goto	l9268
  3122                           
  3123                           ;State_Mchn.c: 700: {
  3124                           ;State_Mchn.c: 701: Switch_Main = 1;
  3125  00135E  0E01               	movlw	1
  3126  001360  6E3F               	movwf	_Switch_Main,c
  3127                           
  3128                           ;State_Mchn.c: 703: }
  3129                           ;State_Mchn.c: 704: }
  3130                           ;State_Mchn.c: 705: break;
  3131  001362  D037               	goto	l9268
  3132  001364                     l9234:
  3133  001364  0E04               	movlw	4
  3134  001366  0100               	movlb	0	; () banked
  3135  001368  6FCB               	movwf	Train_Path@To& (0+255),b
  3136  00136A  0E01               	movlw	1
  3137  00136C  ECE4  F010         	call	_Train_Path
  3138  001370  0900               	iorlw	0
  3139  001372  A4D8               	btfss	status,2,c
  3140  001374  D02E               	goto	l9268
  3141                           
  3142                           ;State_Mchn.c: 708: {
  3143                           ;State_Mchn.c: 709: Switch_Program = 2;
  3144  001376  0E02               	movlw	2
  3145  001378  6E18               	movwf	_Switch_Program,c
  3146                           
  3147                           ;State_Mchn.c: 710: Eeprom_Store();
  3148  00137A  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  3149  00137E  D7EC               	goto	l9230
  3150  001380                     l9244:
  3151  001380  0E02               	movlw	2
  3152  001382  0100               	movlb	0	; () banked
  3153  001384  6FCB               	movwf	Train_Path@To& (0+255),b
  3154  001386  0E04               	movlw	4
  3155  001388  ECE4  F010         	call	_Train_Path
  3156  00138C  0900               	iorlw	0
  3157  00138E  A4D8               	btfss	status,2,c
  3158  001390  D020               	goto	l9268
  3159                           
  3160                           ;State_Mchn.c: 720: {
  3161                           ;State_Mchn.c: 721: Switch_Program = 3;
  3162  001392  0E03               	movlw	3
  3163  001394  6E18               	movwf	_Switch_Program,c
  3164                           
  3165                           ;State_Mchn.c: 722: Eeprom_Store();
  3166  001396  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  3167  00139A  D7DE               	goto	l9230
  3168  00139C                     l9254:
  3169  00139C  0E03               	movlw	3
  3170  00139E  0100               	movlb	0	; () banked
  3171  0013A0  6FCB               	movwf	Train_Path@To& (0+255),b
  3172  0013A2  0E02               	movlw	2
  3173  0013A4  ECE4  F010         	call	_Train_Path
  3174  0013A8  0900               	iorlw	0
  3175  0013AA  A4D8               	btfss	status,2,c
  3176  0013AC  D012               	goto	l9268
  3177                           
  3178                           ;State_Mchn.c: 732: {
  3179                           ;State_Mchn.c: 733: Switch_Program = 0;
  3180  0013AE  0E00               	movlw	0
  3181  0013B0  6E18               	movwf	_Switch_Program,c
  3182                           
  3183                           ;State_Mchn.c: 734: Eeprom_Store();
  3184  0013B2  ECE9  F01C         	call	_Eeprom_Store	;wreg free
  3185  0013B6  D7D0               	goto	l9230
  3186  0013B8                     l9266:
  3187  0013B8  5018               	movf	_Switch_Program,w,c
  3188                           
  3189                           ; Switch size 1, requested type "space"
  3190                           ; Number of cases is 4, Range of values is 0 to 3
  3191                           ; switch strategies available:
  3192                           ; Name         Instructions Cycles
  3193                           ; simple_byte           13     7 (average)
  3194                           ;	Chosen strategy is simple_byte
  3195  0013BA  0A00               	xorlw	0	; case 0
  3196  0013BC  B4D8               	btfsc	status,2,c
  3197  0013BE  D7BF               	goto	l9224
  3198  0013C0  0A01               	xorlw	1	; case 1
  3199  0013C2  B4D8               	btfsc	status,2,c
  3200  0013C4  D7CF               	goto	l9234
  3201  0013C6  0A03               	xorlw	3	; case 2
  3202  0013C8  B4D8               	btfsc	status,2,c
  3203  0013CA  D7DA               	goto	l9244
  3204  0013CC  0A01               	xorlw	1	; case 3
  3205  0013CE  B4D8               	btfsc	status,2,c
  3206  0013D0  D7E5               	goto	l9254
  3207  0013D2                     l9268:
  3208                           
  3209                           ;State_Mchn.c: 928: if(GETxAPIxVAL(33) || GETxAPIxVAL(71))
  3210  0013D2  0E21               	movlw	33
  3211  0013D4  ECBC  F020         	call	_GETxAPIxVAL
  3212  0013D8  0100               	movlb	0	; () banked
  3213  0013DA  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3214  0013DC  0100               	movlb	0	; () banked
  3215  0013DE  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3216  0013E0  A4D8               	btfss	status,2,c
  3217  0013E2  D009               	goto	l9272
  3218                           
  3219                           ; BSR set to: 0
  3220  0013E4  0E47               	movlw	71
  3221  0013E6  ECBC  F020         	call	_GETxAPIxVAL
  3222  0013EA  0100               	movlb	0	; () banked
  3223  0013EC  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  3224  0013EE  0100               	movlb	0	; () banked
  3225  0013F0  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3226  0013F2  B4D8               	btfsc	status,2,c
  3227  0013F4  D00A               	goto	l9276
  3228  0013F6                     l9272:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;State_Mchn.c: 929: {
  3232                           ;State_Mchn.c: 930: Stop_Program = 1;
  3233  0013F6  0E01               	movlw	1
  3234  0013F8  6E16               	movwf	_Stop_Program,c
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;State_Mchn.c: 931: SETxAPIxVAL(71, 0);
  3238  0013FA  0E00               	movlw	0
  3239  0013FC  0100               	movlb	0	; () banked
  3240  0013FE  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  3241  001400  0E00               	movlw	0
  3242  001402  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  3243  001404  0E47               	movlw	71
  3244  001406  EC89  F01F         	call	_SETxAPIxVAL
  3245  00140A                     l9276:
  3246                           
  3247                           ;State_Mchn.c: 932: }
  3248                           ;State_Mchn.c: 934: if(Stop_Program == 1)
  3249  00140A  0416               	decf	_Stop_Program,w,c
  3250  00140C  A4D8               	btfss	status,2,c
  3251  00140E  D003               	goto	l346
  3252                           
  3253                           ;State_Mchn.c: 935: {
  3254                           ;State_Mchn.c: 936: Red_Led(2);
  3255  001410  0E02               	movlw	2
  3256  001412  EC06  F01E         	call	_Red_Led
  3257  001416                     l346:
  3258                           
  3259                           ;State_Mchn.c: 937: }
  3260                           ;State_Mchn.c: 939: Green_Led(1);
  3261  001416  0E01               	movlw	1
  3262  001418  EC54  F01E         	call	_Green_Led
  3263                           
  3264                           ;State_Mchn.c: 944: }
  3265                           
  3266                           ;State_Mchn.c: 943: default : break;
  3267                           
  3268                           ;State_Mchn.c: 941: break;
  3269  00141C  D00B               	goto	l9284
  3270  00141E                     l9282:
  3271  00141E  503F               	movf	_Switch_Main,w,c
  3272                           
  3273                           ; Switch size 1, requested type "space"
  3274                           ; Number of cases is 3, Range of values is 1 to 3
  3275                           ; switch strategies available:
  3276                           ; Name         Instructions Cycles
  3277                           ; simple_byte           10     6 (average)
  3278                           ;	Chosen strategy is simple_byte
  3279  001420  0A01               	xorlw	1	; case 1
  3280  001422  B4D8               	btfsc	status,2,c
  3281  001424  EF33  F004         	goto	l8774
  3282  001428  0A03               	xorlw	3	; case 2
  3283  00142A  B4D8               	btfsc	status,2,c
  3284  00142C  D749               	goto	l9210
  3285  00142E  0A01               	xorlw	1	; case 3
  3286  001430  B4D8               	btfsc	status,2,c
  3287  001432  D7C2               	goto	l9266
  3288  001434                     l9284:
  3289                           
  3290                           ;State_Mchn.c: 945: SETxAPIxVAL(63, Switch_Main);
  3291  001434  C03F  F0BE         	movff	_Switch_Main,SETxAPIxVAL@value
  3292  001438  0100               	movlb	0	; () banked
  3293  00143A  6BBF               	clrf	(SETxAPIxVAL@value+1)& (0+255),b
  3294  00143C  0E3F               	movlw	63
  3295  00143E  EC89  F01F         	call	_SETxAPIxVAL
  3296                           
  3297                           ;State_Mchn.c: 946: SETxAPIxVAL(80, Switch_Program);
  3298  001442  C018  F0BE         	movff	_Switch_Program,SETxAPIxVAL@value
  3299  001446  0100               	movlb	0	; () banked
  3300  001448  6BBF               	clrf	(SETxAPIxVAL@value+1)& (0+255),b
  3301  00144A  0E50               	movlw	80
  3302  00144C  EC89  F01F         	call	_SETxAPIxVAL
  3303  001450  0012               	return		;funcret
  3304  001452                     __end_of_Update_StateMchn:
  3305                           	opt stack 0
  3306                           tblptru	equ	0xFF8
  3307                           tblptrh	equ	0xFF7
  3308                           tblptrl	equ	0xFF6
  3309                           tablat	equ	0xFF5
  3310                           postinc0	equ	0xFEE
  3311                           wreg	equ	0xFE8
  3312                           postdec1	equ	0xFE5
  3313                           fsr1l	equ	0xFE1
  3314                           status	equ	0xFD8
  3315                           
  3316 ;; *************** function _Train_Path *****************
  3317 ;; Defined at:
  3318 ;;		line 964 in file "../State_Mchn.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  From            1    wreg     unsigned char 
  3321 ;;  To              1   18[BANK0 ] unsigned char 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;  From            1   19[BANK0 ] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      unsigned char 
  3326 ;; Registers used:
  3327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3333 ;;      Params:         0       1       0       0       0       0       0       0       0
  3334 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3336 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3337 ;;Total ram usage:        2 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    7
  3340 ;; This function calls:
  3341 ;;		_GETxAPIxVAL
  3342 ;;		_Junction
  3343 ;;		_Left_Mountain_From_The_Left
  3344 ;;		_Left_Mountain_From_The_Right
  3345 ;;		_Right_Mountain_From_The_Left
  3346 ;;		_Right_Mountain_From_The_Right
  3347 ;;		_SETxAPIxVAL
  3348 ;;		_Train_Move_Left_Brake
  3349 ;;		_Train_Move_Left_Start
  3350 ;;		_Train_Move_Right_Brake
  3351 ;;		_Train_Move_Right_Start
  3352 ;; This function is called by:
  3353 ;;		_Update_StateMchn
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text2
  3358  0021C8                     __ptext2:
  3359                           	opt stack 0
  3360  0021C8                     _Train_Path:
  3361                           	opt stack 22
  3362                           
  3363                           ;incstack = 0
  3364                           ;Train_Path@From stored from wreg
  3365  0021C8  0100               	movlb	0	; () banked
  3366  0021CA  6FCC               	movwf	Train_Path@From& (0+255),b
  3367                           
  3368                           ;State_Mchn.c: 966: static char Return_Val = 1;
  3369                           ;State_Mchn.c: 968: SETxAPIxVAL(61, From);
  3370  0021CC  C0CC  F0BE         	movff	Train_Path@From,SETxAPIxVAL@value
  3371  0021D0  0100               	movlb	0	; () banked
  3372  0021D2  6BBF               	clrf	(SETxAPIxVAL@value+1)& (0+255),b
  3373  0021D4  0E3D               	movlw	61
  3374  0021D6  EC89  F01F         	call	_SETxAPIxVAL
  3375                           
  3376                           ;State_Mchn.c: 969: SETxAPIxVAL(62, To);
  3377  0021DA  C0CB  F0BE         	movff	Train_Path@To,SETxAPIxVAL@value
  3378  0021DE  0100               	movlb	0	; () banked
  3379  0021E0  6BBF               	clrf	(SETxAPIxVAL@value+1)& (0+255),b
  3380  0021E2  0E3E               	movlw	62
  3381  0021E4  EC89  F01F         	call	_SETxAPIxVAL
  3382                           
  3383                           ;State_Mchn.c: 971: switch(Switch_Train_Path)
  3384  0021E8  D1A1               	goto	l8608
  3385  0021EA                     l8400:
  3386  0021EA  0E00               	movlw	0
  3387  0021EC  0100               	movlb	0	; () banked
  3388  0021EE  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  3389  0021F0  0E01               	movlw	1
  3390  0021F2  EC1D  F015         	call	_Junction
  3391  0021F6  0900               	iorlw	0
  3392  0021F8  B4D8               	btfsc	status,2,c
  3393  0021FA  D01B               	goto	l8414
  3394  0021FC                     l357:
  3395                           
  3396                           ;State_Mchn.c: 979: }
  3397                           ;State_Mchn.c: 980: Return_Val = 1;
  3398  0021FC  0E01               	movlw	1
  3399  0021FE                     L39:
  3400  0021FE  0100               	movlb	0	; () banked
  3401  002200  6FE4               	movwf	Train_Path@Return_Val& (0+255),b
  3402                           
  3403                           ;State_Mchn.c: 981: break;
  3404  002202  D1BE               	goto	l8610
  3405  002204                     l8404:
  3406                           
  3407                           ; BSR set to: 0
  3408  002204  0E01               	movlw	1
  3409  002206  0100               	movlb	0	; () banked
  3410  002208  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  3411  00220A  0E01               	movlw	1
  3412  00220C  EC1D  F015         	call	_Junction
  3413  002210  D7F2               	goto	L58
  3414  002212                     l8408:
  3415                           
  3416                           ; BSR set to: 0
  3417  002212  0E01               	movlw	1
  3418  002214  0100               	movlb	0	; () banked
  3419  002216  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  3420  002218  0E00               	movlw	0
  3421  00221A  EC1D  F015         	call	_Junction
  3422  00221E  D7EB               	goto	L58
  3423  002220                     l8412:
  3424                           
  3425                           ; BSR set to: 0
  3426  002220  0E00               	movlw	0
  3427  002222  0100               	movlb	0	; () banked
  3428  002224  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  3429  002226  0E00               	movlw	0
  3430  002228  EC1D  F015         	call	_Junction
  3431  00222C  0900               	iorlw	0
  3432  00222E  A4D8               	btfss	status,2,c
  3433  002230  D7E5               	goto	l357
  3434  002232                     l8414:
  3435                           
  3436                           ;State_Mchn.c: 997: {
  3437                           ;State_Mchn.c: 998: Switch_Train_Path = 1;
  3438  002232  0E01               	movlw	1
  3439  002234  D016               	goto	L40
  3440  002236                     l8418:
  3441  002236  0100               	movlb	0	; () banked
  3442  002238  51CC               	movf	Train_Path@From& (0+255),w,b
  3443                           
  3444                           ; Switch size 1, requested type "space"
  3445                           ; Number of cases is 4, Range of values is 1 to 4
  3446                           ; switch strategies available:
  3447                           ; Name         Instructions Cycles
  3448                           ; simple_byte           13     7 (average)
  3449                           ;	Chosen strategy is simple_byte
  3450  00223A  0A01               	xorlw	1	; case 1
  3451  00223C  B4D8               	btfsc	status,2,c
  3452  00223E  D7E9               	goto	l8408
  3453  002240  0A03               	xorlw	3	; case 2
  3454  002242  B4D8               	btfsc	status,2,c
  3455  002244  D7ED               	goto	l8412
  3456  002246  0A01               	xorlw	1	; case 3
  3457  002248  B4D8               	btfsc	status,2,c
  3458  00224A  D7CF               	goto	l8400
  3459  00224C  0A07               	xorlw	7	; case 4
  3460  00224E  B4D8               	btfsc	status,2,c
  3461  002250  D7D9               	goto	l8404
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;State_Mchn.c: 1005: break;
  3465  002252  D196               	goto	l8610
  3466  002254                     l8420:
  3467                           
  3468                           ; BSR set to: 0
  3469  002254  0E00               	movlw	0
  3470  002256  0100               	movlb	0	; () banked
  3471  002258  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  3472  00225A  0E01               	movlw	1
  3473  00225C  EC1D  F015         	call	_Junction
  3474  002260  D01A               	goto	L45
  3475  002262                     L40:
  3476  002262  0100               	movlb	0	; () banked
  3477  002264  6F8C               	movwf	_Switch_Train_Path& (0+255),b
  3478                           
  3479                           ;State_Mchn.c: 1012: Return_Val = 1;
  3480  002266  0E01               	movlw	1
  3481  002268  0100               	movlb	0	; () banked
  3482  00226A  6FE4               	movwf	Train_Path@Return_Val& (0+255),b
  3483  00226C  D7C7               	goto	l357
  3484  00226E                     l8424:
  3485                           
  3486                           ; BSR set to: 0
  3487  00226E  0E01               	movlw	1
  3488  002270  0100               	movlb	0	; () banked
  3489  002272  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  3490  002274  0E01               	movlw	1
  3491  002276  EC1D  F015         	call	_Junction
  3492  00227A  D00D               	goto	L45
  3493  00227C                     l8428:
  3494                           
  3495                           ; BSR set to: 0
  3496  00227C  0E01               	movlw	1
  3497  00227E  0100               	movlb	0	; () banked
  3498  002280  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  3499  002282  0E00               	movlw	0
  3500  002284  EC1D  F015         	call	_Junction
  3501  002288  D006               	goto	L45
  3502  00228A                     l8432:
  3503                           
  3504                           ; BSR set to: 0
  3505  00228A  0E00               	movlw	0
  3506  00228C  0100               	movlb	0	; () banked
  3507  00228E  6FC3               	movwf	Junction@Straight_Bend& (0+255),b
  3508  002290  0E00               	movlw	0
  3509  002292  EC1D  F015         	call	_Junction
  3510  002296                     L45:
  3511  002296  0900               	iorlw	0
  3512  002298  A4D8               	btfss	status,2,c
  3513  00229A  D7B0               	goto	l357
  3514                           
  3515                           ;State_Mchn.c: 1031: {
  3516                           ;State_Mchn.c: 1032: Switch_Train_Path = 2;
  3517  00229C  0E02               	movlw	2
  3518  00229E  D7E1               	goto	L40
  3519  0022A0                     l8438:
  3520                           
  3521                           ; BSR set to: 0
  3522  0022A0  0100               	movlb	0	; () banked
  3523  0022A2  51CB               	movf	Train_Path@To& (0+255),w,b
  3524                           
  3525                           ; Switch size 1, requested type "space"
  3526                           ; Number of cases is 4, Range of values is 1 to 4
  3527                           ; switch strategies available:
  3528                           ; Name         Instructions Cycles
  3529                           ; simple_byte           13     7 (average)
  3530                           ;	Chosen strategy is simple_byte
  3531  0022A4  0A01               	xorlw	1	; case 1
  3532  0022A6  B4D8               	btfsc	status,2,c
  3533  0022A8  D7E9               	goto	l8428
  3534  0022AA  0A03               	xorlw	3	; case 2
  3535  0022AC  B4D8               	btfsc	status,2,c
  3536  0022AE  D7ED               	goto	l8432
  3537  0022B0  0A01               	xorlw	1	; case 3
  3538  0022B2  B4D8               	btfsc	status,2,c
  3539  0022B4  D7CF               	goto	l8420
  3540  0022B6  0A07               	xorlw	7	; case 4
  3541  0022B8  B4D8               	btfsc	status,2,c
  3542  0022BA  D7D9               	goto	l8424
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;State_Mchn.c: 1039: break;
  3546  0022BC  D161               	goto	l8610
  3547  0022BE                     l8440:
  3548                           
  3549                           ; BSR set to: 0
  3550  0022BE  EC28  F019         	call	_Train_Move_Right_Start	;wreg free
  3551  0022C2  D008               	goto	L48
  3552  0022C4                     l8444:
  3553                           
  3554                           ; BSR set to: 0
  3555  0022C4  EC28  F019         	call	_Train_Move_Right_Start	;wreg free
  3556  0022C8  D005               	goto	L48
  3557  0022CA                     l8448:
  3558                           
  3559                           ; BSR set to: 0
  3560  0022CA  ECBA  F019         	call	_Train_Move_Left_Start	;wreg free
  3561  0022CE  D002               	goto	L48
  3562  0022D0                     l8452:
  3563                           
  3564                           ; BSR set to: 0
  3565  0022D0  ECBA  F019         	call	_Train_Move_Left_Start	;wreg free
  3566  0022D4                     L48:
  3567  0022D4  0900               	iorlw	0
  3568  0022D6  A4D8               	btfss	status,2,c
  3569  0022D8  D791               	goto	l357
  3570                           
  3571                           ;State_Mchn.c: 1065: {
  3572                           ;State_Mchn.c: 1066: Switch_Train_Path = 3;
  3573  0022DA  0E03               	movlw	3
  3574  0022DC  D7C2               	goto	L40
  3575  0022DE                     l8458:
  3576                           
  3577                           ; BSR set to: 0
  3578  0022DE  0100               	movlb	0	; () banked
  3579  0022E0  51CB               	movf	Train_Path@To& (0+255),w,b
  3580                           
  3581                           ; Switch size 1, requested type "space"
  3582                           ; Number of cases is 4, Range of values is 1 to 4
  3583                           ; switch strategies available:
  3584                           ; Name         Instructions Cycles
  3585                           ; simple_byte           13     7 (average)
  3586                           ;	Chosen strategy is simple_byte
  3587  0022E2  0A01               	xorlw	1	; case 1
  3588  0022E4  B4D8               	btfsc	status,2,c
  3589  0022E6  D7F1               	goto	l8448
  3590  0022E8  0A03               	xorlw	3	; case 2
  3591  0022EA  B4D8               	btfsc	status,2,c
  3592  0022EC  D7F1               	goto	l8452
  3593  0022EE  0A01               	xorlw	1	; case 3
  3594  0022F0  B4D8               	btfsc	status,2,c
  3595  0022F2  D7E5               	goto	l8440
  3596  0022F4  0A07               	xorlw	7	; case 4
  3597  0022F6  B4D8               	btfsc	status,2,c
  3598  0022F8  D7E5               	goto	l8444
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;State_Mchn.c: 1073: break;
  3602  0022FA  D142               	goto	l8610
  3603  0022FC                     l8460:
  3604                           
  3605                           ; BSR set to: 0
  3606  0022FC  0E1C               	movlw	28
  3607  0022FE  ECBC  F020         	call	_GETxAPIxVAL
  3608  002302  0100               	movlb	0	; () banked
  3609  002304  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3610  002306  0100               	movlb	0	; () banked
  3611  002308  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3612  00230A  B4D8               	btfsc	status,2,c
  3613  00230C  D088               	goto	l8522
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;State_Mchn.c: 1080: else if(GETxAPIxVAL(41) == 1){
  3617                           
  3618                           ; BSR set to: 0
  3619                           
  3620                           ;State_Mchn.c: 1079: }
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;State_Mchn.c: 1078: Switch_Train_Path = 4;
  3624  00230E  0E29               	movlw	41
  3625  002310  ECBC  F020         	call	_GETxAPIxVAL
  3626  002314  0100               	movlb	0	; () banked
  3627  002316  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3628  002318  0100               	movlb	0	; () banked
  3629  00231A  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3630  00231C  A4D8               	btfss	status,2,c
  3631  00231E  D002               	goto	l8468
  3632  002320                     
  3633                           ; BSR set to: 0
  3634                           ;State_Mchn.c: 1081: Switch_Train_Path = 5;
  3635  002320  0E05               	movlw	5
  3636  002322  D049               	goto	L30
  3637  002324                     l8468:
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;State_Mchn.c: 1083: else if(GETxAPIxVAL(42) == 1){
  3641  002324  0E2A               	movlw	42
  3642  002326  ECBC  F020         	call	_GETxAPIxVAL
  3643  00232A  0100               	movlb	0	; () banked
  3644  00232C  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3645  00232E  0100               	movlb	0	; () banked
  3646  002330  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3647  002332  A4D8               	btfss	status,2,c
  3648  002334  D002               	goto	l8472
  3649  002336                     
  3650                           ; BSR set to: 0
  3651                           ;State_Mchn.c: 1084: Switch_Train_Path = 6;
  3652  002336  0E06               	movlw	6
  3653  002338  D03E               	goto	L30
  3654  00233A                     l8472:
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;State_Mchn.c: 1086: else if(GETxAPIxVAL(44) == 1){
  3658  00233A  0E2C               	movlw	44
  3659  00233C  ECBC  F020         	call	_GETxAPIxVAL
  3660  002340  0100               	movlb	0	; () banked
  3661  002342  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3662  002344  0100               	movlb	0	; () banked
  3663  002346  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3664  002348  A4D8               	btfss	status,2,c
  3665  00234A  D002               	goto	l8476
  3666  00234C                     
  3667                           ; BSR set to: 0
  3668                           ;State_Mchn.c: 1087: Switch_Train_Path = 7;
  3669  00234C  0E07               	movlw	7
  3670  00234E  D033               	goto	L30
  3671  002350                     l8476:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;State_Mchn.c: 1089: else if(GETxAPIxVAL(43) == 1){
  3675  002350  0E2B               	movlw	43
  3676  002352  ECBC  F020         	call	_GETxAPIxVAL
  3677  002356  0100               	movlb	0	; () banked
  3678  002358  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3679  00235A  0100               	movlb	0	; () banked
  3680  00235C  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3681  00235E  A4D8               	btfss	status,2,c
  3682  002360  D74D               	goto	l357
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;State_Mchn.c: 1090: Switch_Train_Path = 8;
  3686  002362  0E08               	movlw	8
  3687  002364  D028               	goto	L30
  3688  002366                     l8480:
  3689                           
  3690                           ; BSR set to: 0
  3691  002366  0E1D               	movlw	29
  3692  002368  ECBC  F020         	call	_GETxAPIxVAL
  3693  00236C  0100               	movlb	0	; () banked
  3694  00236E  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3695  002370  0100               	movlb	0	; () banked
  3696  002372  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3697  002374  B4D8               	btfsc	status,2,c
  3698  002376  D053               	goto	l8522
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;State_Mchn.c: 1097: else if(GETxAPIxVAL(41) == 1){
  3702                           
  3703                           ; BSR set to: 0
  3704                           
  3705                           ;State_Mchn.c: 1096: }
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;State_Mchn.c: 1095: Switch_Train_Path = 4;
  3709  002378  0E29               	movlw	41
  3710  00237A  ECBC  F020         	call	_GETxAPIxVAL
  3711  00237E  0100               	movlb	0	; () banked
  3712  002380  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3713  002382  0100               	movlb	0	; () banked
  3714  002384  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3715  002386  B4D8               	btfsc	status,2,c
  3716  002388  D7CB               	goto	L94
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;State_Mchn.c: 1100: else if(GETxAPIxVAL(42) == 1){
  3720                           
  3721                           ; BSR set to: 0
  3722                           
  3723                           ;State_Mchn.c: 1099: }
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;State_Mchn.c: 1098: Switch_Train_Path = 5;
  3727  00238A  0E2A               	movlw	42
  3728  00238C  ECBC  F020         	call	_GETxAPIxVAL
  3729  002390  0100               	movlb	0	; () banked
  3730  002392  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3731  002394  0100               	movlb	0	; () banked
  3732  002396  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3733  002398  B4D8               	btfsc	status,2,c
  3734  00239A  D7CD               	goto	L95
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;State_Mchn.c: 1103: else if(GETxAPIxVAL(44) == 1){
  3738                           
  3739                           ; BSR set to: 0
  3740                           
  3741                           ;State_Mchn.c: 1102: }
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;State_Mchn.c: 1101: Switch_Train_Path = 6;
  3745  00239C  0E2C               	movlw	44
  3746  00239E  ECBC  F020         	call	_GETxAPIxVAL
  3747  0023A2  0100               	movlb	0	; () banked
  3748  0023A4  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3749  0023A6  0100               	movlb	0	; () banked
  3750  0023A8  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3751  0023AA  B4D8               	btfsc	status,2,c
  3752  0023AC  D7CF               	goto	L96
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;State_Mchn.c: 1106: else if(GETxAPIxVAL(43) == 1){
  3756                           
  3757                           ; BSR set to: 0
  3758                           
  3759                           ;State_Mchn.c: 1105: }
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;State_Mchn.c: 1104: Switch_Train_Path = 7;
  3763  0023AE  0E2B               	movlw	43
  3764  0023B0  ECBC  F020         	call	_GETxAPIxVAL
  3765  0023B4  D7D0               	goto	L41
  3766  0023B6                     L30:
  3767  0023B6  0100               	movlb	0	; () banked
  3768  0023B8  6F8C               	movwf	_Switch_Train_Path& (0+255),b
  3769                           
  3770                           ; BSR set to: 0
  3771                           
  3772                           ; BSR set to: 0
  3773                           
  3774                           ; BSR set to: 0
  3775  0023BA  D720               	goto	l357
  3776  0023BC                     l8500:
  3777                           
  3778                           ; BSR set to: 0
  3779  0023BC  0E1E               	movlw	30
  3780  0023BE  ECBC  F020         	call	_GETxAPIxVAL
  3781  0023C2  0100               	movlb	0	; () banked
  3782  0023C4  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3783  0023C6  0100               	movlb	0	; () banked
  3784  0023C8  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3785  0023CA  B4D8               	btfsc	status,2,c
  3786  0023CC  D028               	goto	l8522
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;State_Mchn.c: 1115: else if(GETxAPIxVAL(41) == 1){
  3790                           
  3791                           ; BSR set to: 0
  3792                           
  3793                           ;State_Mchn.c: 1114: }
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;State_Mchn.c: 1112: {
  3797                           ;State_Mchn.c: 1113: Switch_Train_Path = 4;
  3798  0023CE  0E29               	movlw	41
  3799  0023D0  ECBC  F020         	call	_GETxAPIxVAL
  3800  0023D4  0100               	movlb	0	; () banked
  3801  0023D6  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3802  0023D8  0100               	movlb	0	; () banked
  3803  0023DA  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3804  0023DC  B4D8               	btfsc	status,2,c
  3805  0023DE  D02A               	goto	l8526
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;State_Mchn.c: 1118: else if(GETxAPIxVAL(42) == 1){
  3809                           
  3810                           ; BSR set to: 0
  3811                           
  3812                           ;State_Mchn.c: 1117: }
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;State_Mchn.c: 1116: Switch_Train_Path = 12;
  3816  0023E0  0E2A               	movlw	42
  3817  0023E2  ECBC  F020         	call	_GETxAPIxVAL
  3818  0023E6  0100               	movlb	0	; () banked
  3819  0023E8  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3820  0023EA  0100               	movlb	0	; () banked
  3821  0023EC  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3822  0023EE  B4D8               	btfsc	status,2,c
  3823  0023F0  D02C               	goto	l8530
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;State_Mchn.c: 1121: else if(GETxAPIxVAL(44) == 1){
  3827                           
  3828                           ; BSR set to: 0
  3829                           
  3830                           ;State_Mchn.c: 1120: }
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;State_Mchn.c: 1119: Switch_Train_Path = 11;
  3834  0023F2  0E2C               	movlw	44
  3835  0023F4  ECBC  F020         	call	_GETxAPIxVAL
  3836  0023F8  0100               	movlb	0	; () banked
  3837  0023FA  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3838  0023FC  0100               	movlb	0	; () banked
  3839  0023FE  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3840  002400  B4D8               	btfsc	status,2,c
  3841  002402  D02E               	goto	l8534
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;State_Mchn.c: 1124: else if(GETxAPIxVAL(43) == 1){
  3845                           
  3846                           ; BSR set to: 0
  3847                           
  3848                           ;State_Mchn.c: 1123: }
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;State_Mchn.c: 1122: Switch_Train_Path = 10;
  3852  002404  0E2B               	movlw	43
  3853  002406  ECBC  F020         	call	_GETxAPIxVAL
  3854  00240A  D02F               	goto	L49
  3855  00240C                     l8520:
  3856                           
  3857                           ; BSR set to: 0
  3858  00240C  0E1F               	movlw	31
  3859  00240E  ECBC  F020         	call	_GETxAPIxVAL
  3860  002412  0100               	movlb	0	; () banked
  3861  002414  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3862  002416  0100               	movlb	0	; () banked
  3863  002418  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3864  00241A  A4D8               	btfss	status,2,c
  3865  00241C  D002               	goto	l8524
  3866  00241E                     l8522:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;State_Mchn.c: 1130: {
  3870                           ;State_Mchn.c: 1131: Switch_Train_Path = 4;
  3871  00241E  0E04               	movlw	4
  3872  002420  D7CA               	goto	L30
  3873  002422                     l8524:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;State_Mchn.c: 1133: else if(GETxAPIxVAL(41) == 1){
  3877  002422  0E29               	movlw	41
  3878  002424  ECBC  F020         	call	_GETxAPIxVAL
  3879  002428  0100               	movlb	0	; () banked
  3880  00242A  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3881  00242C  0100               	movlb	0	; () banked
  3882  00242E  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3883  002430  A4D8               	btfss	status,2,c
  3884  002432  D002               	goto	l8528
  3885  002434                     l8526:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;State_Mchn.c: 1134: Switch_Train_Path = 12;
  3889  002434  0E0C               	movlw	12
  3890  002436  D7BF               	goto	L30
  3891  002438                     l8528:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;State_Mchn.c: 1136: else if(GETxAPIxVAL(42) == 1){
  3895  002438  0E2A               	movlw	42
  3896  00243A  ECBC  F020         	call	_GETxAPIxVAL
  3897  00243E  0100               	movlb	0	; () banked
  3898  002440  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3899  002442  0100               	movlb	0	; () banked
  3900  002444  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3901  002446  A4D8               	btfss	status,2,c
  3902  002448  D002               	goto	l8532
  3903  00244A                     l8530:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;State_Mchn.c: 1137: Switch_Train_Path = 11;
  3907  00244A  0E0B               	movlw	11
  3908  00244C  D7B4               	goto	L30
  3909  00244E                     l8532:
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;State_Mchn.c: 1139: else if(GETxAPIxVAL(44) == 1){
  3913  00244E  0E2C               	movlw	44
  3914  002450  ECBC  F020         	call	_GETxAPIxVAL
  3915  002454  0100               	movlb	0	; () banked
  3916  002456  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3917  002458  0100               	movlb	0	; () banked
  3918  00245A  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3919  00245C  A4D8               	btfss	status,2,c
  3920  00245E  D002               	goto	l8536
  3921  002460                     l8534:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;State_Mchn.c: 1140: Switch_Train_Path = 10;
  3925  002460  0E0A               	movlw	10
  3926  002462  D7A9               	goto	L30
  3927  002464                     l8536:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;State_Mchn.c: 1142: else if(GETxAPIxVAL(43) == 1){
  3931  002464  0E2B               	movlw	43
  3932  002466  ECBC  F020         	call	_GETxAPIxVAL
  3933  00246A                     L49:
  3934  00246A  0100               	movlb	0	; () banked
  3935  00246C  05B9               	decf	?_GETxAPIxVAL& (0+255),w,b
  3936  00246E  0100               	movlb	0	; () banked
  3937  002470  11BA               	iorwf	(?_GETxAPIxVAL+1)& (0+255),w,b
  3938  002472  A4D8               	btfss	status,2,c
  3939  002474  D6C3               	goto	l357
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;State_Mchn.c: 1143: Switch_Train_Path = 9;
  3943  002476  0E09               	movlw	9
  3944  002478  D79E               	goto	L30
  3945  00247A                     l8542:
  3946                           
  3947                           ; BSR set to: 0
  3948  00247A  0100               	movlb	0	; () banked
  3949  00247C  51CB               	movf	Train_Path@To& (0+255),w,b
  3950                           
  3951                           ; Switch size 1, requested type "space"
  3952                           ; Number of cases is 4, Range of values is 1 to 4
  3953                           ; switch strategies available:
  3954                           ; Name         Instructions Cycles
  3955                           ; simple_byte           13     7 (average)
  3956                           ;	Chosen strategy is simple_byte
  3957  00247E  0A01               	xorlw	1	; case 1
  3958  002480  B4D8               	btfsc	status,2,c
  3959  002482  D79C               	goto	l8500
  3960  002484  0A03               	xorlw	3	; case 2
  3961  002486  B4D8               	btfsc	status,2,c
  3962  002488  D7C1               	goto	l8520
  3963  00248A  0A01               	xorlw	1	; case 3
  3964  00248C  B4D8               	btfsc	status,2,c
  3965  00248E  D736               	goto	l8460
  3966  002490  0A07               	xorlw	7	; case 4
  3967  002492  B4D8               	btfsc	status,2,c
  3968  002494  D768               	goto	l8480
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;State_Mchn.c: 1149: break;
  3972  002496  D074               	goto	l8610
  3973  002498                     l8544:
  3974                           
  3975                           ; BSR set to: 0
  3976  002498  EC92  F018         	call	_Train_Move_Right_Brake	;wreg free
  3977  00249C  D008               	goto	L92
  3978  00249E                     l8550:
  3979                           
  3980                           ; BSR set to: 0
  3981  00249E  EC92  F018         	call	_Train_Move_Right_Brake	;wreg free
  3982  0024A2  D005               	goto	L92
  3983  0024A4                     l8556:
  3984                           
  3985                           ; BSR set to: 0
  3986  0024A4  ECF9  F017         	call	_Train_Move_Left_Brake	;wreg free
  3987  0024A8  D002               	goto	L92
  3988  0024AA                     l8562:
  3989                           
  3990                           ; BSR set to: 0
  3991  0024AA  ECF9  F017         	call	_Train_Move_Left_Brake	;wreg free
  3992  0024AE                     L92:
  3993  0024AE  0900               	iorlw	0
  3994  0024B0  A4D8               	btfss	status,2,c
  3995  0024B2  D6A4               	goto	l357
  3996                           
  3997                           ;State_Mchn.c: 1178: {
  3998                           ;State_Mchn.c: 1179: Switch_Train_Path = 0;
  3999  0024B4  0E00               	movlw	0
  4000  0024B6  0100               	movlb	0	; () banked
  4001  0024B8  6F8C               	movwf	_Switch_Train_Path& (0+255),b
  4002                           
  4003                           ;State_Mchn.c: 1180: Return_Val = 0;
  4004  0024BA  0E00               	movlw	0
  4005  0024BC  D6A0               	goto	L39
  4006  0024BE                     l8570:
  4007                           
  4008                           ; BSR set to: 0
  4009  0024BE  0100               	movlb	0	; () banked
  4010  0024C0  51CB               	movf	Train_Path@To& (0+255),w,b
  4011                           
  4012                           ; Switch size 1, requested type "space"
  4013                           ; Number of cases is 4, Range of values is 1 to 4
  4014                           ; switch strategies available:
  4015                           ; Name         Instructions Cycles
  4016                           ; simple_byte           13     7 (average)
  4017                           ;	Chosen strategy is simple_byte
  4018  0024C2  0A01               	xorlw	1	; case 1
  4019  0024C4  B4D8               	btfsc	status,2,c
  4020  0024C6  D7EE               	goto	l8556
  4021  0024C8  0A03               	xorlw	3	; case 2
  4022  0024CA  B4D8               	btfsc	status,2,c
  4023  0024CC  D7EE               	goto	l8562
  4024  0024CE  0A01               	xorlw	1	; case 3
  4025  0024D0  B4D8               	btfsc	status,2,c
  4026  0024D2  D7E2               	goto	l8544
  4027  0024D4  0A07               	xorlw	7	; case 4
  4028  0024D6  B4D8               	btfsc	status,2,c
  4029  0024D8  D7E2               	goto	l8550
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;State_Mchn.c: 1187: break;
  4033  0024DA  D052               	goto	l8610
  4034  0024DC                     l8572:
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;State_Mchn.c: 1190: if(Left_Mountain_From_The_Left(1) == 0){
  4038  0024DC  0E01               	movlw	1
  4039  0024DE  EC5F  F01B         	call	_Left_Mountain_From_The_Left
  4040  0024E2  D01B               	goto	L93
  4041  0024E4                     l8576:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;State_Mchn.c: 1197: if(Left_Mountain_From_The_Left(2) == 0){
  4045  0024E4  0E02               	movlw	2
  4046  0024E6  EC5F  F01B         	call	_Left_Mountain_From_The_Left
  4047  0024EA  D017               	goto	L93
  4048  0024EC                     l8580:
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;State_Mchn.c: 1204: if(Right_Mountain_From_The_Left(3) == 0){
  4052  0024EC  0E03               	movlw	3
  4053  0024EE  ECD5  F01A         	call	_Right_Mountain_From_The_Left
  4054  0024F2  D013               	goto	L93
  4055  0024F4                     l8584:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;State_Mchn.c: 1211: if(Right_Mountain_From_The_Left(4) == 0){
  4059  0024F4  0E04               	movlw	4
  4060  0024F6  ECD5  F01A         	call	_Right_Mountain_From_The_Left
  4061  0024FA  D00F               	goto	L93
  4062  0024FC                     l8588:
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;State_Mchn.c: 1218: if(Right_Mountain_From_The_Right(4) == 0){
  4066  0024FC  0E04               	movlw	4
  4067  0024FE  EC4B  F01A         	call	_Right_Mountain_From_The_Right
  4068  002502  D00B               	goto	L93
  4069  002504                     l8592:
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;State_Mchn.c: 1225: if(Right_Mountain_From_The_Right(3) == 0){
  4073  002504  0E03               	movlw	3
  4074  002506  EC4B  F01A         	call	_Right_Mountain_From_The_Right
  4075  00250A  D007               	goto	L93
  4076  00250C                     l8596:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;State_Mchn.c: 1232: if(Left_Mountain_From_The_Right(2) == 0){
  4080  00250C  0E02               	movlw	2
  4081  00250E  ECE8  F01B         	call	_Left_Mountain_From_The_Right
  4082  002512  D003               	goto	L93
  4083  002514                     l8600:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;State_Mchn.c: 1239: if(Left_Mountain_From_The_Right(1) == 0){
  4087  002514  0E01               	movlw	1
  4088  002516  ECE8  F01B         	call	_Left_Mountain_From_The_Right
  4089  00251A                     L93:
  4090  00251A  0900               	iorlw	0
  4091  00251C  A4D8               	btfss	status,2,c
  4092  00251E  D66E               	goto	l357
  4093                           
  4094                           ;State_Mchn.c: 1240: Switch_Train_Path = 3;
  4095  002520  0E03               	movlw	3
  4096  002522  D001               	goto	L42
  4097  002524                     l8604:
  4098                           
  4099                           ; BSR set to: 0
  4100  002524  0E00               	movlw	0
  4101  002526                     L42:
  4102  002526  0100               	movlb	0	; () banked
  4103  002528  6F8C               	movwf	_Switch_Train_Path& (0+255),b
  4104  00252A  D668               	goto	l357
  4105  00252C                     l8608:
  4106  00252C  0100               	movlb	0	; () banked
  4107  00252E  518C               	movf	_Switch_Train_Path& (0+255),w,b
  4108                           
  4109                           ; Switch size 1, requested type "space"
  4110                           ; Number of cases is 13, Range of values is 0 to 12
  4111                           ; switch strategies available:
  4112                           ; Name         Instructions Cycles
  4113                           ; simple_byte           40    21 (average)
  4114                           ;	Chosen strategy is simple_byte
  4115  002530  0A00               	xorlw	0	; case 0
  4116  002532  B4D8               	btfsc	status,2,c
  4117  002534  D680               	goto	l8418
  4118  002536  0A01               	xorlw	1	; case 1
  4119  002538  B4D8               	btfsc	status,2,c
  4120  00253A  D6B2               	goto	l8438
  4121  00253C  0A03               	xorlw	3	; case 2
  4122  00253E  B4D8               	btfsc	status,2,c
  4123  002540  D6CE               	goto	l8458
  4124  002542  0A01               	xorlw	1	; case 3
  4125  002544  B4D8               	btfsc	status,2,c
  4126  002546  D799               	goto	l8542
  4127  002548  0A07               	xorlw	7	; case 4
  4128  00254A  B4D8               	btfsc	status,2,c
  4129  00254C  D7B8               	goto	l8570
  4130  00254E  0A01               	xorlw	1	; case 5
  4131  002550  B4D8               	btfsc	status,2,c
  4132  002552  D7C4               	goto	l8572
  4133  002554  0A03               	xorlw	3	; case 6
  4134  002556  B4D8               	btfsc	status,2,c
  4135  002558  D7C5               	goto	l8576
  4136  00255A  0A01               	xorlw	1	; case 7
  4137  00255C  B4D8               	btfsc	status,2,c
  4138  00255E  D7C6               	goto	l8580
  4139  002560  0A0F               	xorlw	15	; case 8
  4140  002562  B4D8               	btfsc	status,2,c
  4141  002564  D7C7               	goto	l8584
  4142  002566  0A01               	xorlw	1	; case 9
  4143  002568  B4D8               	btfsc	status,2,c
  4144  00256A  D7C8               	goto	l8588
  4145  00256C  0A03               	xorlw	3	; case 10
  4146  00256E  B4D8               	btfsc	status,2,c
  4147  002570  D7C9               	goto	l8592
  4148  002572  0A01               	xorlw	1	; case 11
  4149  002574  B4D8               	btfsc	status,2,c
  4150  002576  D7CA               	goto	l8596
  4151  002578  0A07               	xorlw	7	; case 12
  4152  00257A  B4D8               	btfsc	status,2,c
  4153  00257C  D7CB               	goto	l8600
  4154  00257E  D7D2               	goto	l8604
  4155  002580                     l8610:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;State_Mchn.c: 1248: return(Return_Val);
  4159  002580  0100               	movlb	0	; () banked
  4160  002582  51E4               	movf	Train_Path@Return_Val& (0+255),w,b
  4161  002584  0012               	return	
  4162  002586                     __end_of_Train_Path:
  4163                           	opt stack 0
  4164                           tblptru	equ	0xFF8
  4165                           tblptrh	equ	0xFF7
  4166                           tblptrl	equ	0xFF6
  4167                           tablat	equ	0xFF5
  4168                           postinc0	equ	0xFEE
  4169                           wreg	equ	0xFE8
  4170                           postdec1	equ	0xFE5
  4171                           fsr1l	equ	0xFE1
  4172                           status	equ	0xFD8
  4173                           
  4174 ;; *************** function _Train_Move_Right_Start *****************
  4175 ;; Defined at:
  4176 ;;		line 27 in file "../train_move_right.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      unsigned char 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4193 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    6
  4197 ;; This function calls:
  4198 ;;		_GETxAPIxVAL
  4199 ;;		_SETxAPIxVAL
  4200 ;;		_SETxPWM
  4201 ;; This function is called by:
  4202 ;;		_Train_Path
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text3
  4207  003250                     __ptext3:
  4208                           	opt stack 0
  4209  003250                     _Train_Move_Right_Start:
  4210                           	opt stack 22
  4211                           
  4212                           ;train_move_right.c: 29: static char Return_Val = 1;
  4213                           ;train_move_right.c: 30: static unsigned int Train_Move_Wait_Time = 0;
  4214                           ;train_move_right.c: 32: switch(Switch_Train_Move)
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;incstack = 0
  4218  003250  D081               	goto	l7544
  4219  003252                     l7504:
  4220  003252  0E14               	movlw	20
  4221  003254  ECBC  F020         	call	_GETxAPIxVAL
  4222  003258  0100               	movlb	0	; () banked
  4223  00325A  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4224  00325C  0100               	movlb	0	; () banked
  4225  00325E  5D68               	subwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),w,b
  4226  003260  0100               	movlb	0	; () banked
  4227  003262  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4228  003264  0100               	movlb	0	; () banked
  4229  003266  5969               	subwfb	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  4230  003268  A0D8               	btfss	status,0,c
  4231  00326A  D002               	goto	l7508
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;train_move_right.c: 37: {
  4235                           ;train_move_right.c: 38: Switch_Train_Move = 1;
  4236  00326C  0E01               	movlw	1
  4237  00326E  D033               	goto	L62
  4238  003270                     l7508:
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;train_move_right.c: 42: }
  4242                           ;train_move_right.c: 43: Train_Move_Wait_Time++;
  4243  003270  0100               	movlb	0	; () banked
  4244  003272  4B68               	infsnz	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),f,b
  4245  003274  2B69               	incf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;train_move_right.c: 44: Switch_Train_Move = 0;
  4249  003276  0E00               	movlw	0
  4250  003278  6E19               	movwf	_Switch_Train_Move,c
  4251  00327A  D068               	goto	L63
  4252  00327C                     l7514:
  4253  00327C  0E16               	movlw	22
  4254  00327E  ECBC  F020         	call	_GETxAPIxVAL
  4255  003282  C0B9  F0C3         	movff	?_GETxAPIxVAL,SETxPWM@speed
  4256  003286  C0BA  F0C4         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  4257  00328A  0E01               	movlw	1
  4258  00328C  0100               	movlb	0	; () banked
  4259  00328E  6FC5               	movwf	SETxPWM@direction& (0+255),b
  4260  003290  ECB4  F01D         	call	_SETxPWM	;wreg free
  4261                           
  4262                           ;train_move_right.c: 49: Train_Move_Pwm_Count = GETxAPIxVAL(22);
  4263  003294  0E16               	movlw	22
  4264  003296  ECBC  F020         	call	_GETxAPIxVAL
  4265  00329A  C0B9  F005         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  4266  00329E  C0BA  F006         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  4267                           
  4268                           ;train_move_right.c: 50: SETxAPIxVAL(69, 0);;
  4269  0032A2  0E00               	movlw	0
  4270  0032A4  0100               	movlb	0	; () banked
  4271  0032A6  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  4272  0032A8  0E00               	movlw	0
  4273  0032AA  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  4274  0032AC  0E45               	movlw	69
  4275  0032AE  EC89  F01F         	call	_SETxAPIxVAL
  4276                           
  4277                           ;train_move_right.c: 51: Return_Val = 1;
  4278  0032B2  0E01               	movlw	1
  4279  0032B4  0100               	movlb	0	; () banked
  4280  0032B6  6FE3               	movwf	Train_Move_Right_Start@Return_Val& (0+255),b
  4281  0032B8  D01B               	goto	l7528
  4282  0032BA                     l7520:
  4283  0032BA  0E12               	movlw	18
  4284  0032BC  ECBC  F020         	call	_GETxAPIxVAL
  4285  0032C0  0100               	movlb	0	; () banked
  4286  0032C2  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4287  0032C4  0100               	movlb	0	; () banked
  4288  0032C6  5D68               	subwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),w,b
  4289  0032C8  0100               	movlb	0	; () banked
  4290  0032CA  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4291  0032CC  0100               	movlb	0	; () banked
  4292  0032CE  5969               	subwfb	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  4293  0032D0  A0D8               	btfss	status,0,c
  4294  0032D2  D008               	goto	l7524
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;train_move_right.c: 56: {
  4298                           ;train_move_right.c: 57: Switch_Train_Move = 3;
  4299  0032D4  0E03               	movlw	3
  4300  0032D6                     L62:
  4301  0032D6  6E19               	movwf	_Switch_Train_Move,c
  4302                           
  4303                           ;train_move_right.c: 58: Train_Move_Wait_Time = 0;
  4304  0032D8  0E00               	movlw	0
  4305  0032DA  0100               	movlb	0	; () banked
  4306  0032DC  6F69               	movwf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),b
  4307  0032DE  0E00               	movlw	0
  4308  0032E0  6F68               	movwf	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),b
  4309  0032E2  D034               	goto	L63
  4310  0032E4                     l7524:
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;train_move_right.c: 61: }
  4314                           ;train_move_right.c: 62: Return_Val = 1;
  4315  0032E4  0E01               	movlw	1
  4316  0032E6  0100               	movlb	0	; () banked
  4317  0032E8  6FE3               	movwf	Train_Move_Right_Start@Return_Val& (0+255),b
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;train_move_right.c: 63: Train_Move_Wait_Time++;
  4321  0032EA  0100               	movlb	0	; () banked
  4322  0032EC  4B68               	infsnz	Train_Move_Right_Start@Train_Move_Wait_Time& (0+255),f,b
  4323  0032EE  2B69               	incf	(Train_Move_Right_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  4324  0032F0                     l7528:
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;train_move_right.c: 64: Switch_Train_Move = 2;
  4328  0032F0  0E02               	movlw	2
  4329  0032F2  6E19               	movwf	_Switch_Train_Move,c
  4330                           
  4331                           ;train_move_right.c: 65: break;
  4332  0032F4  D03C               	goto	l7546
  4333  0032F6                     l7530:
  4334  0032F6  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  4335  0032FA  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  4336  0032FE  0E01               	movlw	1
  4337  003300  0100               	movlb	0	; () banked
  4338  003302  6FC5               	movwf	SETxPWM@direction& (0+255),b
  4339  003304  ECB4  F01D         	call	_SETxPWM	;wreg free
  4340                           
  4341                           ;train_move_right.c: 68: if (Train_Move_Pwm_Count >= GETxAPIxVAL(23))
  4342  003308  0E17               	movlw	23
  4343  00330A  ECBC  F020         	call	_GETxAPIxVAL
  4344  00330E  0100               	movlb	0	; () banked
  4345  003310  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4346  003312  5C05               	subwf	_Train_Move_Pwm_Count,w,c
  4347  003314  0100               	movlb	0	; () banked
  4348  003316  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4349  003318  5806               	subwfb	_Train_Move_Pwm_Count+1,w,c
  4350  00331A  A0D8               	btfss	status,0,c
  4351  00331C  D004               	goto	l7534
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;train_move_right.c: 69: {
  4355                           ;train_move_right.c: 70: Switch_Train_Move = 0;
  4356  00331E  0E00               	movlw	0
  4357  003320  6E19               	movwf	_Switch_Train_Move,c
  4358                           
  4359                           ;train_move_right.c: 71: Return_Val = 0;
  4360  003322  0E00               	movlw	0
  4361  003324  D014               	goto	L61
  4362  003326                     l7534:
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;train_move_right.c: 73: }
  4366                           ;train_move_right.c: 74: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  4367  003326  0E1A               	movlw	26
  4368  003328  ECBC  F020         	call	_GETxAPIxVAL
  4369  00332C  0100               	movlb	0	; () banked
  4370  00332E  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4371  003330  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  4372  003332  0100               	movlb	0	; () banked
  4373  003334  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4374  003336  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  4375  003338  A0D8               	btfss	status,0,c
  4376  00333A  D006               	goto	l7540
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;train_move_right.c: 75: {
  4380                           ;train_move_right.c: 76: Train_Move_Pwm_Count++;
  4381  00333C  4A05               	infsnz	_Train_Move_Pwm_Count,f,c
  4382  00333E  2A06               	incf	_Train_Move_Pwm_Count+1,f,c
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;train_move_right.c: 77: Train_Move_Pwm_Fast_Count = 0;
  4386  003340  0E00               	movlw	0
  4387  003342  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  4388  003344  0E00               	movlw	0
  4389  003346  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  4390  003348                     l7540:
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;train_move_right.c: 78: }
  4394                           ;train_move_right.c: 79: Train_Move_Pwm_Fast_Count++;
  4395  003348  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  4396  00334A  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  4397  00334C                     L63:
  4398                           
  4399                           ;train_move_right.c: 80: Return_Val = 1;
  4400  00334C  0E01               	movlw	1
  4401  00334E                     L61:
  4402  00334E  0100               	movlb	0	; () banked
  4403  003350  6FE3               	movwf	Train_Move_Right_Start@Return_Val& (0+255),b
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;train_move_right.c: 84: }
  4407                           
  4408                           ; BSR set to: 0
  4409                           
  4410                           ;train_move_right.c: 83: default : break;
  4411                           
  4412                           ;train_move_right.c: 81: break;
  4413  003352  D00D               	goto	l7546
  4414  003354                     l7544:
  4415  003354  5019               	movf	_Switch_Train_Move,w,c
  4416                           
  4417                           ; Switch size 1, requested type "space"
  4418                           ; Number of cases is 4, Range of values is 0 to 3
  4419                           ; switch strategies available:
  4420                           ; Name         Instructions Cycles
  4421                           ; simple_byte           13     7 (average)
  4422                           ;	Chosen strategy is simple_byte
  4423  003356  0A00               	xorlw	0	; case 0
  4424  003358  B4D8               	btfsc	status,2,c
  4425  00335A  D77B               	goto	l7504
  4426  00335C  0A01               	xorlw	1	; case 1
  4427  00335E  B4D8               	btfsc	status,2,c
  4428  003360  D78D               	goto	l7514
  4429  003362  0A03               	xorlw	3	; case 2
  4430  003364  B4D8               	btfsc	status,2,c
  4431  003366  D7A9               	goto	l7520
  4432  003368  0A01               	xorlw	1	; case 3
  4433  00336A  B4D8               	btfsc	status,2,c
  4434  00336C  D7C4               	goto	l7530
  4435  00336E                     l7546:
  4436                           
  4437                           ;train_move_right.c: 86: return(Return_Val);
  4438  00336E  0100               	movlb	0	; () banked
  4439  003370  51E3               	movf	Train_Move_Right_Start@Return_Val& (0+255),w,b
  4440  003372  0012               	return	
  4441  003374                     __end_of_Train_Move_Right_Start:
  4442                           	opt stack 0
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           postinc0	equ	0xFEE
  4448                           wreg	equ	0xFE8
  4449                           postdec1	equ	0xFE5
  4450                           fsr1l	equ	0xFE1
  4451                           status	equ	0xFD8
  4452                           
  4453 ;; *************** function _Train_Move_Right_Brake *****************
  4454 ;; Defined at:
  4455 ;;		line 254 in file "../train_move_right.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      unsigned char 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4472 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4473 ;;Total ram usage:        0 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    6
  4476 ;; This function calls:
  4477 ;;		_GETxAPIxVAL
  4478 ;;		_SETxAPIxVAL
  4479 ;;		_SETxPWM
  4480 ;; This function is called by:
  4481 ;;		_Train_Path
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text4
  4486  003124                     __ptext4:
  4487                           	opt stack 0
  4488  003124                     _Train_Move_Right_Brake:
  4489                           	opt stack 22
  4490                           
  4491                           ;train_move_right.c: 256: static char Return_Val = 1;
  4492                           ;train_move_right.c: 257: static unsigned int Train_Move_Wait_Time = 0;
  4493                           ;train_move_right.c: 259: switch(Switch_Train_Move)
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;incstack = 0
  4497  003124  D085               	goto	l7648
  4498  003126                     l7606:
  4499  003126  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  4500  00312A  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  4501  00312E  0E01               	movlw	1
  4502  003130  0100               	movlb	0	; () banked
  4503  003132  6FC5               	movwf	SETxPWM@direction& (0+255),b
  4504  003134  ECB4  F01D         	call	_SETxPWM	;wreg free
  4505                           
  4506                           ;train_move_right.c: 262: if (Train_Move_Pwm_Count <= GETxAPIxVAL(22))
  4507  003138  0E16               	movlw	22
  4508  00313A  ECBC  F020         	call	_GETxAPIxVAL
  4509  00313E  5005               	movf	_Train_Move_Pwm_Count,w,c
  4510  003140  0100               	movlb	0	; () banked
  4511  003142  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  4512  003144  5006               	movf	_Train_Move_Pwm_Count+1,w,c
  4513  003146  0100               	movlb	0	; () banked
  4514  003148  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  4515  00314A  A0D8               	btfss	status,0,c
  4516  00314C  D002               	goto	l7610
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;train_move_right.c: 263: {
  4520                           ;train_move_right.c: 264: Switch_Train_Move = 1;
  4521  00314E  0E01               	movlw	1
  4522  003150  D06A               	goto	L68
  4523  003152                     l7610:
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;train_move_right.c: 267: }
  4527                           ;train_move_right.c: 268: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(25))
  4528  003152  0E19               	movlw	25
  4529  003154  ECBC  F020         	call	_GETxAPIxVAL
  4530  003158  0100               	movlb	0	; () banked
  4531  00315A  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4532  00315C  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  4533  00315E  0100               	movlb	0	; () banked
  4534  003160  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4535  003162  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  4536  003164  A0D8               	btfss	status,0,c
  4537  003166  D008               	goto	l7616
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;train_move_right.c: 269: {
  4541                           ;train_move_right.c: 270: Train_Move_Pwm_Count--;
  4542  003168  0605               	decf	_Train_Move_Pwm_Count,f,c
  4543  00316A  A0D8               	btfss	status,0,c
  4544  00316C  0606               	decf	_Train_Move_Pwm_Count+1,f,c
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;train_move_right.c: 271: Train_Move_Pwm_Fast_Count = 0;
  4548  00316E  0E00               	movlw	0
  4549  003170  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  4550  003172  0E00               	movlw	0
  4551  003174  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  4552                           
  4553                           ;train_move_right.c: 272: }
  4554  003176  D058               	goto	l7644
  4555  003178                     l7616:
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;train_move_right.c: 273: else{Train_Move_Pwm_Fast_Count++;}
  4559  003178  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  4560  00317A  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  4561  00317C  D055               	goto	l7644
  4562  00317E                     l7620:
  4563  00317E  0E12               	movlw	18
  4564  003180  ECBC  F020         	call	_GETxAPIxVAL
  4565  003184  0100               	movlb	0	; () banked
  4566  003186  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4567  003188  0100               	movlb	0	; () banked
  4568  00318A  5D66               	subwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),w,b
  4569  00318C  0100               	movlb	0	; () banked
  4570  00318E  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4571  003190  0100               	movlb	0	; () banked
  4572  003192  5967               	subwfb	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  4573  003194  A0D8               	btfss	status,0,c
  4574  003196  D008               	goto	l7624
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;train_move_right.c: 278: {
  4578                           ;train_move_right.c: 279: Switch_Train_Move = 2;
  4579  003198  0E02               	movlw	2
  4580  00319A  6E19               	movwf	_Switch_Train_Move,c
  4581                           
  4582                           ;train_move_right.c: 280: Train_Move_Wait_Time = 0;
  4583  00319C  0E00               	movlw	0
  4584  00319E  0100               	movlb	0	; () banked
  4585  0031A0  6F67               	movwf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),b
  4586  0031A2  0E00               	movlw	0
  4587  0031A4  6F66               	movwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),b
  4588  0031A6  D040               	goto	l7644
  4589  0031A8                     l7624:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;train_move_right.c: 283: }
  4593                           ;train_move_right.c: 284: Return_Val = 1;
  4594  0031A8  0E01               	movlw	1
  4595  0031AA  0100               	movlb	0	; () banked
  4596  0031AC  6FE2               	movwf	Train_Move_Right_Brake@Return_Val& (0+255),b
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;train_move_right.c: 285: Train_Move_Wait_Time++;
  4600  0031AE  0100               	movlb	0	; () banked
  4601  0031B0  4B66               	infsnz	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),f,b
  4602  0031B2  2B67               	incf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;train_move_right.c: 286: Switch_Train_Move = 1;
  4606  0031B4  0E01               	movlw	1
  4607  0031B6  6E19               	movwf	_Switch_Train_Move,c
  4608                           
  4609                           ;train_move_right.c: 287: break;
  4610  0031B8  D048               	goto	l7650
  4611  0031BA                     l7630:
  4612  0031BA  0E16               	movlw	22
  4613  0031BC  ECBC  F020         	call	_GETxAPIxVAL
  4614  0031C0  C0B9  F0C3         	movff	?_GETxAPIxVAL,SETxPWM@speed
  4615  0031C4  C0BA  F0C4         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  4616  0031C8  0E01               	movlw	1
  4617  0031CA  0100               	movlb	0	; () banked
  4618  0031CC  6FC5               	movwf	SETxPWM@direction& (0+255),b
  4619  0031CE  ECB4  F01D         	call	_SETxPWM	;wreg free
  4620                           
  4621                           ;train_move_right.c: 290: SETxAPIxVAL(69, 1);;
  4622  0031D2  0E00               	movlw	0
  4623  0031D4  0100               	movlb	0	; () banked
  4624  0031D6  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  4625  0031D8  0E01               	movlw	1
  4626  0031DA  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  4627  0031DC  0E45               	movlw	69
  4628  0031DE  EC89  F01F         	call	_SETxAPIxVAL
  4629                           
  4630                           ;train_move_right.c: 291: Train_Move_Pwm_Count = GETxAPIxVAL(22);
  4631  0031E2  0E16               	movlw	22
  4632  0031E4  ECBC  F020         	call	_GETxAPIxVAL
  4633  0031E8  C0B9  F005         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  4634  0031EC  C0BA  F006         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  4635  0031F0  D019               	goto	l7642
  4636  0031F2                     l7636:
  4637  0031F2  0E14               	movlw	20
  4638  0031F4  ECBC  F020         	call	_GETxAPIxVAL
  4639  0031F8  0100               	movlb	0	; () banked
  4640  0031FA  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4641  0031FC  0100               	movlb	0	; () banked
  4642  0031FE  5D66               	subwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),w,b
  4643  003200  0100               	movlb	0	; () banked
  4644  003202  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4645  003204  0100               	movlb	0	; () banked
  4646  003206  5967               	subwfb	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  4647  003208  A0D8               	btfss	status,0,c
  4648  00320A  D009               	goto	l7640
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;train_move_right.c: 297: {
  4652                           ;train_move_right.c: 298: Switch_Train_Move = 0;
  4653  00320C  0E00               	movlw	0
  4654  00320E  6E19               	movwf	_Switch_Train_Move,c
  4655                           
  4656                           ;train_move_right.c: 299: Train_Move_Wait_Time = 0;
  4657  003210  0E00               	movlw	0
  4658  003212  0100               	movlb	0	; () banked
  4659  003214  6F67               	movwf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),b
  4660  003216  0E00               	movlw	0
  4661  003218  6F66               	movwf	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),b
  4662                           
  4663                           ;train_move_right.c: 300: Return_Val = 0;
  4664  00321A  0E00               	movlw	0
  4665  00321C  D006               	goto	L66
  4666  00321E                     l7640:
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;train_move_right.c: 302: }
  4670                           ;train_move_right.c: 303: Train_Move_Wait_Time++;
  4671  00321E  0100               	movlb	0	; () banked
  4672  003220  4B66               	infsnz	Train_Move_Right_Brake@Train_Move_Wait_Time& (0+255),f,b
  4673  003222  2B67               	incf	(Train_Move_Right_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  4674  003224                     l7642:
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;train_move_right.c: 304: Switch_Train_Move = 3;
  4678  003224  0E03               	movlw	3
  4679  003226                     L68:
  4680  003226  6E19               	movwf	_Switch_Train_Move,c
  4681  003228                     l7644:
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;train_move_right.c: 305: Return_Val = 1;
  4685  003228  0E01               	movlw	1
  4686  00322A                     L66:
  4687  00322A  0100               	movlb	0	; () banked
  4688  00322C  6FE2               	movwf	Train_Move_Right_Brake@Return_Val& (0+255),b
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;train_move_right.c: 309: }
  4692                           
  4693                           ; BSR set to: 0
  4694                           
  4695                           ;train_move_right.c: 308: default : break;
  4696                           
  4697                           ;train_move_right.c: 306: break;
  4698  00322E  D00D               	goto	l7650
  4699  003230                     l7648:
  4700  003230  5019               	movf	_Switch_Train_Move,w,c
  4701                           
  4702                           ; Switch size 1, requested type "space"
  4703                           ; Number of cases is 4, Range of values is 0 to 3
  4704                           ; switch strategies available:
  4705                           ; Name         Instructions Cycles
  4706                           ; simple_byte           13     7 (average)
  4707                           ;	Chosen strategy is simple_byte
  4708  003232  0A00               	xorlw	0	; case 0
  4709  003234  B4D8               	btfsc	status,2,c
  4710  003236  D777               	goto	l7606
  4711  003238  0A01               	xorlw	1	; case 1
  4712  00323A  B4D8               	btfsc	status,2,c
  4713  00323C  D7A0               	goto	l7620
  4714  00323E  0A03               	xorlw	3	; case 2
  4715  003240  B4D8               	btfsc	status,2,c
  4716  003242  D7BB               	goto	l7630
  4717  003244  0A01               	xorlw	1	; case 3
  4718  003246  B4D8               	btfsc	status,2,c
  4719  003248  D7D4               	goto	l7636
  4720  00324A                     l7650:
  4721                           
  4722                           ;train_move_right.c: 311: return(Return_Val);
  4723  00324A  0100               	movlb	0	; () banked
  4724  00324C  51E2               	movf	Train_Move_Right_Brake@Return_Val& (0+255),w,b
  4725  00324E  0012               	return	
  4726  003250                     __end_of_Train_Move_Right_Brake:
  4727                           	opt stack 0
  4728                           tblptru	equ	0xFF8
  4729                           tblptrh	equ	0xFF7
  4730                           tblptrl	equ	0xFF6
  4731                           tablat	equ	0xFF5
  4732                           postinc0	equ	0xFEE
  4733                           wreg	equ	0xFE8
  4734                           postdec1	equ	0xFE5
  4735                           fsr1l	equ	0xFE1
  4736                           status	equ	0xFD8
  4737                           
  4738 ;; *************** function _Train_Move_Left_Start *****************
  4739 ;; Defined at:
  4740 ;;		line 27 in file "../train_move_left.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;		None
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      unsigned char 
  4747 ;; Registers used:
  4748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4754 ;;      Params:         0       0       0       0       0       0       0       0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4757 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4758 ;;Total ram usage:        0 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    6
  4761 ;; This function calls:
  4762 ;;		_GETxAPIxVAL
  4763 ;;		_SETxAPIxVAL
  4764 ;;		_SETxPWM
  4765 ;; This function is called by:
  4766 ;;		_Train_Path
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text5
  4771  003374                     __ptext5:
  4772                           	opt stack 0
  4773  003374                     _Train_Move_Left_Start:
  4774                           	opt stack 22
  4775                           
  4776                           ;train_move_left.c: 29: static char Return_Val = 1;
  4777                           ;train_move_left.c: 30: static unsigned int Train_Move_Wait_Time = 0;
  4778                           ;train_move_left.c: 32: switch(Switch_Train_Move)
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;incstack = 0
  4782  003374  D080               	goto	l7598
  4783  003376                     l7552:
  4784  003376  0E14               	movlw	20
  4785  003378  ECBC  F020         	call	_GETxAPIxVAL
  4786  00337C  0100               	movlb	0	; () banked
  4787  00337E  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4788  003380  0100               	movlb	0	; () banked
  4789  003382  5D64               	subwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),w,b
  4790  003384  0100               	movlb	0	; () banked
  4791  003386  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4792  003388  0100               	movlb	0	; () banked
  4793  00338A  5965               	subwfb	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  4794  00338C  A0D8               	btfss	status,0,c
  4795  00338E  D002               	goto	l7556
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;train_move_left.c: 37: {
  4799                           ;train_move_left.c: 38: Switch_Train_Move = 1;
  4800  003390  0E01               	movlw	1
  4801  003392  D035               	goto	L71
  4802  003394                     l7556:
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;train_move_left.c: 42: }
  4806                           ;train_move_left.c: 43: Train_Move_Wait_Time++;
  4807  003394  0100               	movlb	0	; () banked
  4808  003396  4B64               	infsnz	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),f,b
  4809  003398  2B65               	incf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;train_move_left.c: 44: Switch_Train_Move = 0;
  4813  00339A  0E00               	movlw	0
  4814  00339C  D020               	goto	L69
  4815  00339E                     l7560:
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;train_move_left.c: 45: Return_Val = 1;
  4819  00339E  0E01               	movlw	1
  4820  0033A0  0100               	movlb	0	; () banked
  4821  0033A2  6FE1               	movwf	Train_Move_Left_Start@Return_Val& (0+255),b
  4822                           
  4823                           ;train_move_left.c: 46: break;
  4824  0033A4  D075               	goto	l7600
  4825  0033A6                     l7562:
  4826  0033A6  0E15               	movlw	21
  4827  0033A8  ECBC  F020         	call	_GETxAPIxVAL
  4828  0033AC  C0B9  F0C3         	movff	?_GETxAPIxVAL,SETxPWM@speed
  4829  0033B0  C0BA  F0C4         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  4830  0033B4  0E00               	movlw	0
  4831  0033B6  0100               	movlb	0	; () banked
  4832  0033B8  6FC5               	movwf	SETxPWM@direction& (0+255),b
  4833  0033BA  ECB4  F01D         	call	_SETxPWM	;wreg free
  4834                           
  4835                           ;train_move_left.c: 49: Train_Move_Pwm_Count = GETxAPIxVAL(21);
  4836  0033BE  0E15               	movlw	21
  4837  0033C0  ECBC  F020         	call	_GETxAPIxVAL
  4838  0033C4  C0B9  F005         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  4839  0033C8  C0BA  F006         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  4840                           
  4841                           ;train_move_left.c: 50: SETxAPIxVAL(69, 0);
  4842  0033CC  0E00               	movlw	0
  4843  0033CE  0100               	movlb	0	; () banked
  4844  0033D0  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  4845  0033D2  0E00               	movlw	0
  4846  0033D4  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  4847  0033D6  0E45               	movlw	69
  4848  0033D8  EC89  F01F         	call	_SETxAPIxVAL
  4849  0033DC  D01A               	goto	l7574
  4850  0033DE                     L69:
  4851  0033DE  6E19               	movwf	_Switch_Train_Move,c
  4852  0033E0  D7DE               	goto	l7560
  4853  0033E2                     l7568:
  4854  0033E2  0E12               	movlw	18
  4855  0033E4  ECBC  F020         	call	_GETxAPIxVAL
  4856  0033E8  0100               	movlb	0	; () banked
  4857  0033EA  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4858  0033EC  0100               	movlb	0	; () banked
  4859  0033EE  5D64               	subwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),w,b
  4860  0033F0  0100               	movlb	0	; () banked
  4861  0033F2  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4862  0033F4  0100               	movlb	0	; () banked
  4863  0033F6  5965               	subwfb	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),w,b
  4864  0033F8  A0D8               	btfss	status,0,c
  4865  0033FA  D008               	goto	l7572
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;train_move_left.c: 56: {
  4869                           ;train_move_left.c: 57: Switch_Train_Move = 3;
  4870  0033FC  0E03               	movlw	3
  4871  0033FE                     L71:
  4872  0033FE  6E19               	movwf	_Switch_Train_Move,c
  4873                           
  4874                           ;train_move_left.c: 58: Train_Move_Wait_Time = 0;
  4875  003400  0E00               	movlw	0
  4876  003402  0100               	movlb	0	; () banked
  4877  003404  6F65               	movwf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),b
  4878  003406  0E00               	movlw	0
  4879  003408  6F64               	movwf	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),b
  4880  00340A  D7C9               	goto	l7560
  4881  00340C                     l7572:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;train_move_left.c: 61: }
  4885                           ;train_move_left.c: 62: Train_Move_Wait_Time++;
  4886  00340C  0100               	movlb	0	; () banked
  4887  00340E  4B64               	infsnz	Train_Move_Left_Start@Train_Move_Wait_Time& (0+255),f,b
  4888  003410  2B65               	incf	(Train_Move_Left_Start@Train_Move_Wait_Time+1)& (0+255),f,b
  4889  003412                     l7574:
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;train_move_left.c: 63: Switch_Train_Move = 2;
  4893  003412  0E02               	movlw	2
  4894  003414  D7E4               	goto	L69
  4895  003416                     l7578:
  4896  003416  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  4897  00341A  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  4898  00341E  0E00               	movlw	0
  4899  003420  0100               	movlb	0	; () banked
  4900  003422  6FC5               	movwf	SETxPWM@direction& (0+255),b
  4901  003424  ECB4  F01D         	call	_SETxPWM	;wreg free
  4902                           
  4903                           ;train_move_left.c: 68: Return_Val = 1;
  4904  003428  0E01               	movlw	1
  4905  00342A  0100               	movlb	0	; () banked
  4906  00342C  6FE1               	movwf	Train_Move_Left_Start@Return_Val& (0+255),b
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;train_move_left.c: 69: if (Train_Move_Pwm_Count >= GETxAPIxVAL(24))
  4910  00342E  0E18               	movlw	24
  4911  003430  ECBC  F020         	call	_GETxAPIxVAL
  4912  003434  0100               	movlb	0	; () banked
  4913  003436  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4914  003438  5C05               	subwf	_Train_Move_Pwm_Count,w,c
  4915  00343A  0100               	movlb	0	; () banked
  4916  00343C  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4917  00343E  5806               	subwfb	_Train_Move_Pwm_Count+1,w,c
  4918  003440  A0D8               	btfss	status,0,c
  4919  003442  D004               	goto	l7588
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;train_move_left.c: 70: {
  4923                           ;train_move_left.c: 71: Switch_Train_Move = 0;
  4924  003444  0E00               	movlw	0
  4925  003446  6E19               	movwf	_Switch_Train_Move,c
  4926                           
  4927                           ;train_move_left.c: 72: Return_Val = 0;
  4928  003448  0E00               	movlw	0
  4929  00344A  D7AA               	goto	L70
  4930  00344C                     l7588:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;train_move_left.c: 75: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  4934  00344C  0E1A               	movlw	26
  4935  00344E  ECBC  F020         	call	_GETxAPIxVAL
  4936  003452  0100               	movlb	0	; () banked
  4937  003454  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  4938  003456  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  4939  003458  0100               	movlb	0	; () banked
  4940  00345A  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  4941  00345C  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  4942  00345E  A0D8               	btfss	status,0,c
  4943  003460  D007               	goto	l7594
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;train_move_left.c: 76: {
  4947                           ;train_move_left.c: 77: Train_Move_Pwm_Count++;
  4948  003462  4A05               	infsnz	_Train_Move_Pwm_Count,f,c
  4949  003464  2A06               	incf	_Train_Move_Pwm_Count+1,f,c
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;train_move_left.c: 78: Train_Move_Pwm_Fast_Count = 0;
  4953  003466  0E00               	movlw	0
  4954  003468  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  4955  00346A  0E00               	movlw	0
  4956  00346C  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  4957                           
  4958                           ;train_move_left.c: 79: }
  4959  00346E  D010               	goto	l7600
  4960  003470                     l7594:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;train_move_left.c: 80: else{Train_Move_Pwm_Fast_Count++;}
  4964  003470  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  4965  003472  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;train_move_left.c: 83: }
  4969                           
  4970                           ; BSR set to: 0
  4971                           
  4972                           ;train_move_left.c: 82: default : break;
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;train_move_left.c: 81: break;
  4976                           
  4977                           ; BSR set to: 0
  4978  003474  D00D               	goto	l7600
  4979  003476                     l7598:
  4980  003476  5019               	movf	_Switch_Train_Move,w,c
  4981                           
  4982                           ; Switch size 1, requested type "space"
  4983                           ; Number of cases is 4, Range of values is 0 to 3
  4984                           ; switch strategies available:
  4985                           ; Name         Instructions Cycles
  4986                           ; simple_byte           13     7 (average)
  4987                           ;	Chosen strategy is simple_byte
  4988  003478  0A00               	xorlw	0	; case 0
  4989  00347A  B4D8               	btfsc	status,2,c
  4990  00347C  D77C               	goto	l7552
  4991  00347E  0A01               	xorlw	1	; case 1
  4992  003480  B4D8               	btfsc	status,2,c
  4993  003482  D791               	goto	l7562
  4994  003484  0A03               	xorlw	3	; case 2
  4995  003486  B4D8               	btfsc	status,2,c
  4996  003488  D7AC               	goto	l7568
  4997  00348A  0A01               	xorlw	1	; case 3
  4998  00348C  B4D8               	btfsc	status,2,c
  4999  00348E  D7C3               	goto	l7578
  5000  003490                     l7600:
  5001                           
  5002                           ;train_move_left.c: 85: return(Return_Val);
  5003  003490  0100               	movlb	0	; () banked
  5004  003492  51E1               	movf	Train_Move_Left_Start@Return_Val& (0+255),w,b
  5005  003494  0012               	return	
  5006  003496                     __end_of_Train_Move_Left_Start:
  5007                           	opt stack 0
  5008                           tblptru	equ	0xFF8
  5009                           tblptrh	equ	0xFF7
  5010                           tblptrl	equ	0xFF6
  5011                           tablat	equ	0xFF5
  5012                           postinc0	equ	0xFEE
  5013                           wreg	equ	0xFE8
  5014                           postdec1	equ	0xFE5
  5015                           fsr1l	equ	0xFE1
  5016                           status	equ	0xFD8
  5017                           
  5018 ;; *************** function _Train_Move_Left_Brake *****************
  5019 ;; Defined at:
  5020 ;;		line 254 in file "../train_move_left.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      unsigned char 
  5027 ;; Registers used:
  5028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5037 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    6
  5041 ;; This function calls:
  5042 ;;		_GETxAPIxVAL
  5043 ;;		_SETxAPIxVAL
  5044 ;;		_SETxPWM
  5045 ;; This function is called by:
  5046 ;;		_Train_Path
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text6
  5051  002FF2                     __ptext6:
  5052                           	opt stack 0
  5053  002FF2                     _Train_Move_Left_Brake:
  5054                           	opt stack 22
  5055                           
  5056                           ;train_move_left.c: 256: static char Return_Val = 1;
  5057                           ;train_move_left.c: 257: static unsigned int Train_Move_Wait_Time = 0;
  5058                           ;train_move_left.c: 259: switch(Switch_Train_Move)
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;incstack = 0
  5062  002FF2  D088               	goto	l7700
  5063  002FF4                     l7656:
  5064  002FF4  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5065  002FF8  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5066  002FFC  0E00               	movlw	0
  5067  002FFE  0100               	movlb	0	; () banked
  5068  003000  6FC5               	movwf	SETxPWM@direction& (0+255),b
  5069  003002  ECB4  F01D         	call	_SETxPWM	;wreg free
  5070                           
  5071                           ;train_move_left.c: 262: Return_Val = 1;
  5072  003006  0E01               	movlw	1
  5073  003008  0100               	movlb	0	; () banked
  5074  00300A  6FE0               	movwf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;train_move_left.c: 263: if (Train_Move_Pwm_Count <= GETxAPIxVAL(21))
  5078  00300C  0E15               	movlw	21
  5079  00300E  ECBC  F020         	call	_GETxAPIxVAL
  5080  003012  5005               	movf	_Train_Move_Pwm_Count,w,c
  5081  003014  0100               	movlb	0	; () banked
  5082  003016  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  5083  003018  5006               	movf	_Train_Move_Pwm_Count+1,w,c
  5084  00301A  0100               	movlb	0	; () banked
  5085  00301C  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  5086  00301E  A0D8               	btfss	status,0,c
  5087  003020  D002               	goto	l7664
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;train_move_left.c: 264: {
  5091                           ;train_move_left.c: 265: Switch_Train_Move = 1;
  5092  003022  0E01               	movlw	1
  5093  003024  D06A               	goto	L97
  5094  003026                     l7664:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;train_move_left.c: 268: }
  5098                           ;train_move_left.c: 269: if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(25))
  5099  003026  0E19               	movlw	25
  5100  003028  ECBC  F020         	call	_GETxAPIxVAL
  5101  00302C  0100               	movlb	0	; () banked
  5102  00302E  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5103  003030  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  5104  003032  0100               	movlb	0	; () banked
  5105  003034  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5106  003036  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  5107  003038  A0D8               	btfss	status,0,c
  5108  00303A  D008               	goto	l7670
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;train_move_left.c: 270: {
  5112                           ;train_move_left.c: 271: Train_Move_Pwm_Count--;
  5113  00303C  0605               	decf	_Train_Move_Pwm_Count,f,c
  5114  00303E  A0D8               	btfss	status,0,c
  5115  003040  0606               	decf	_Train_Move_Pwm_Count+1,f,c
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;train_move_left.c: 272: Train_Move_Pwm_Fast_Count = 0;
  5119  003042  0E00               	movlw	0
  5120  003044  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  5121  003046  0E00               	movlw	0
  5122  003048  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  5123                           
  5124                           ;train_move_left.c: 273: }
  5125  00304A  D069               	goto	l7702
  5126  00304C                     l7670:
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;train_move_left.c: 274: else{Train_Move_Pwm_Fast_Count++;}
  5130  00304C  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  5131  00304E  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;train_move_left.c: 275: break;
  5135  003050  D066               	goto	l7702
  5136  003052                     l7672:
  5137  003052  0E12               	movlw	18
  5138  003054  ECBC  F020         	call	_GETxAPIxVAL
  5139  003058  0100               	movlb	0	; () banked
  5140  00305A  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5141  00305C  0100               	movlb	0	; () banked
  5142  00305E  5D62               	subwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),w,b
  5143  003060  0100               	movlb	0	; () banked
  5144  003062  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5145  003064  0100               	movlb	0	; () banked
  5146  003066  5963               	subwfb	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  5147  003068  A0D8               	btfss	status,0,c
  5148  00306A  D008               	goto	l7676
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;train_move_left.c: 278: {
  5152                           ;train_move_left.c: 279: Switch_Train_Move = 2;
  5153  00306C  0E02               	movlw	2
  5154  00306E  6E19               	movwf	_Switch_Train_Move,c
  5155                           
  5156                           ;train_move_left.c: 280: Train_Move_Wait_Time = 0;
  5157  003070  0E00               	movlw	0
  5158  003072  0100               	movlb	0	; () banked
  5159  003074  6F63               	movwf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),b
  5160  003076  0E00               	movlw	0
  5161  003078  6F62               	movwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),b
  5162  00307A  D040               	goto	l7696
  5163  00307C                     l7676:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;train_move_left.c: 283: }
  5167                           ;train_move_left.c: 284: Return_Val = 1;
  5168  00307C  0E01               	movlw	1
  5169  00307E  0100               	movlb	0	; () banked
  5170  003080  6FE0               	movwf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;train_move_left.c: 285: Train_Move_Wait_Time++;
  5174  003082  0100               	movlb	0	; () banked
  5175  003084  4B62               	infsnz	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),f,b
  5176  003086  2B63               	incf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;train_move_left.c: 286: Switch_Train_Move = 1;
  5180  003088  0E01               	movlw	1
  5181  00308A  6E19               	movwf	_Switch_Train_Move,c
  5182                           
  5183                           ;train_move_left.c: 287: break;
  5184  00308C  D048               	goto	l7702
  5185  00308E                     l7682:
  5186  00308E  0E15               	movlw	21
  5187  003090  ECBC  F020         	call	_GETxAPIxVAL
  5188  003094  C0B9  F0C3         	movff	?_GETxAPIxVAL,SETxPWM@speed
  5189  003098  C0BA  F0C4         	movff	?_GETxAPIxVAL+1,SETxPWM@speed+1
  5190  00309C  0E00               	movlw	0
  5191  00309E  0100               	movlb	0	; () banked
  5192  0030A0  6FC5               	movwf	SETxPWM@direction& (0+255),b
  5193  0030A2  ECB4  F01D         	call	_SETxPWM	;wreg free
  5194                           
  5195                           ;train_move_left.c: 290: SETxAPIxVAL(69, 1);;
  5196  0030A6  0E00               	movlw	0
  5197  0030A8  0100               	movlb	0	; () banked
  5198  0030AA  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  5199  0030AC  0E01               	movlw	1
  5200  0030AE  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  5201  0030B0  0E45               	movlw	69
  5202  0030B2  EC89  F01F         	call	_SETxAPIxVAL
  5203                           
  5204                           ;train_move_left.c: 291: Train_Move_Pwm_Count = GETxAPIxVAL(21);
  5205  0030B6  0E15               	movlw	21
  5206  0030B8  ECBC  F020         	call	_GETxAPIxVAL
  5207  0030BC  C0B9  F005         	movff	?_GETxAPIxVAL,_Train_Move_Pwm_Count
  5208  0030C0  C0BA  F006         	movff	?_GETxAPIxVAL+1,_Train_Move_Pwm_Count+1
  5209  0030C4  D019               	goto	L98
  5210  0030C6                     l7688:
  5211  0030C6  0E14               	movlw	20
  5212  0030C8  ECBC  F020         	call	_GETxAPIxVAL
  5213  0030CC  0100               	movlb	0	; () banked
  5214  0030CE  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5215  0030D0  0100               	movlb	0	; () banked
  5216  0030D2  5D62               	subwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),w,b
  5217  0030D4  0100               	movlb	0	; () banked
  5218  0030D6  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5219  0030D8  0100               	movlb	0	; () banked
  5220  0030DA  5963               	subwfb	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),w,b
  5221  0030DC  A0D8               	btfss	status,0,c
  5222  0030DE  D009               	goto	l7692
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;train_move_left.c: 297: {
  5226                           ;train_move_left.c: 298: Switch_Train_Move = 0;
  5227  0030E0  0E00               	movlw	0
  5228  0030E2  6E19               	movwf	_Switch_Train_Move,c
  5229                           
  5230                           ;train_move_left.c: 299: Train_Move_Wait_Time = 0;
  5231  0030E4  0E00               	movlw	0
  5232  0030E6  0100               	movlb	0	; () banked
  5233  0030E8  6F63               	movwf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),b
  5234  0030EA  0E00               	movlw	0
  5235  0030EC  6F62               	movwf	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),b
  5236                           
  5237                           ;train_move_left.c: 300: Return_Val = 0;
  5238  0030EE  0E00               	movlw	0
  5239  0030F0  D006               	goto	L74
  5240  0030F2                     l7692:
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;train_move_left.c: 302: }
  5244                           ;train_move_left.c: 303: Train_Move_Wait_Time++;
  5245  0030F2  0100               	movlb	0	; () banked
  5246  0030F4  4B62               	infsnz	Train_Move_Left_Brake@Train_Move_Wait_Time& (0+255),f,b
  5247  0030F6  2B63               	incf	(Train_Move_Left_Brake@Train_Move_Wait_Time+1)& (0+255),f,b
  5248  0030F8                     L98:
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;train_move_left.c: 304: Switch_Train_Move = 3;
  5252  0030F8  0E03               	movlw	3
  5253  0030FA                     L97:
  5254  0030FA  6E19               	movwf	_Switch_Train_Move,c
  5255  0030FC                     l7696:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;train_move_left.c: 305: Return_Val = 1;
  5259  0030FC  0E01               	movlw	1
  5260  0030FE                     L74:
  5261  0030FE  0100               	movlb	0	; () banked
  5262  003100  6FE0               	movwf	Train_Move_Left_Brake@Return_Val& (0+255),b
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;train_move_left.c: 309: }
  5266                           
  5267                           ; BSR set to: 0
  5268                           
  5269                           ;train_move_left.c: 308: default : break;
  5270                           
  5271                           ;train_move_left.c: 306: break;
  5272  003102  D00D               	goto	l7702
  5273  003104                     l7700:
  5274  003104  5019               	movf	_Switch_Train_Move,w,c
  5275                           
  5276                           ; Switch size 1, requested type "space"
  5277                           ; Number of cases is 4, Range of values is 0 to 3
  5278                           ; switch strategies available:
  5279                           ; Name         Instructions Cycles
  5280                           ; simple_byte           13     7 (average)
  5281                           ;	Chosen strategy is simple_byte
  5282  003106  0A00               	xorlw	0	; case 0
  5283  003108  B4D8               	btfsc	status,2,c
  5284  00310A  D774               	goto	l7656
  5285  00310C  0A01               	xorlw	1	; case 1
  5286  00310E  B4D8               	btfsc	status,2,c
  5287  003110  D7A0               	goto	l7672
  5288  003112  0A03               	xorlw	3	; case 2
  5289  003114  B4D8               	btfsc	status,2,c
  5290  003116  D7BB               	goto	l7682
  5291  003118  0A01               	xorlw	1	; case 3
  5292  00311A  B4D8               	btfsc	status,2,c
  5293  00311C  D7D4               	goto	l7688
  5294  00311E                     l7702:
  5295                           
  5296                           ;train_move_left.c: 311: return(Return_Val);
  5297  00311E  0100               	movlb	0	; () banked
  5298  003120  51E0               	movf	Train_Move_Left_Brake@Return_Val& (0+255),w,b
  5299  003122  0012               	return	
  5300  003124                     __end_of_Train_Move_Left_Brake:
  5301                           	opt stack 0
  5302                           tblptru	equ	0xFF8
  5303                           tblptrh	equ	0xFF7
  5304                           tblptrl	equ	0xFF6
  5305                           tablat	equ	0xFF5
  5306                           postinc0	equ	0xFEE
  5307                           wreg	equ	0xFE8
  5308                           postdec1	equ	0xFE5
  5309                           fsr1l	equ	0xFE1
  5310                           status	equ	0xFD8
  5311                           
  5312 ;; *************** function _Right_Mountain_From_The_Right *****************
  5313 ;; Defined at:
  5314 ;;		line 103 in file "../train_move_left.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  rc              1    wreg     unsigned char 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  rc              1   17[BANK0 ] unsigned char 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      unsigned char 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0
  5329 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5331 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5332 ;;Total ram usage:        1 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:    6
  5335 ;; This function calls:
  5336 ;;		_GETxAPIxVAL
  5337 ;;		_SETxPWM
  5338 ;; This function is called by:
  5339 ;;		_Train_Path
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text7
  5344  003496                     __ptext7:
  5345                           	opt stack 0
  5346  003496                     _Right_Mountain_From_The_Right:
  5347                           	opt stack 22
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;incstack = 0
  5351                           ;Right_Mountain_From_The_Right@rc stored from wreg
  5352  003496  0100               	movlb	0	; () banked
  5353  003498  6FCA               	movwf	Right_Mountain_From_The_Right@rc& (0+255),b
  5354                           
  5355                           ;train_move_left.c: 105: static char Return_Val = 1;
  5356                           ;train_move_left.c: 107: switch (Switch_Moutain){
  5357  00349A  D07D               	goto	l7868
  5358  00349C                     l7820:
  5359  00349C  0E03               	movlw	3
  5360  00349E  0100               	movlb	0	; () banked
  5361  0034A0  19CA               	xorwf	Right_Mountain_From_The_Right@rc& (0+255),w,b
  5362  0034A2  B4D8               	btfsc	status,2,c
  5363  0034A4  D00D               	goto	l7826
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;train_move_left.c: 112: else if(Mountain_Delay_Counter >= GETxAPIxVAL(53)){
  5367                           
  5368                           ; BSR set to: 0
  5369                           
  5370                           ;train_move_left.c: 111: }
  5371                           
  5372                           ;train_move_left.c: 110: Mountain_Delay_Counter = 0;
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;train_move_left.c: 109: Switch_Moutain = 1;
  5376  0034A6  0E35               	movlw	53
  5377  0034A8  ECBC  F020         	call	_GETxAPIxVAL
  5378  0034AC  0100               	movlb	0	; () banked
  5379  0034AE  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5380  0034B0  0100               	movlb	0	; () banked
  5381  0034B2  5D78               	subwf	_Mountain_Delay_Counter& (0+255),w,b
  5382  0034B4  0100               	movlb	0	; () banked
  5383  0034B6  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5384  0034B8  0100               	movlb	0	; () banked
  5385  0034BA  5979               	subwfb	(_Mountain_Delay_Counter+1)& (0+255),w,b
  5386  0034BC  A0D8               	btfss	status,0,c
  5387  0034BE  D008               	goto	l7828
  5388  0034C0                     l7826:
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;train_move_left.c: 113: Switch_Moutain = 1;
  5392  0034C0  0E01               	movlw	1
  5393  0034C2  6E17               	movwf	_Switch_Moutain,c
  5394                           
  5395                           ;train_move_left.c: 114: Mountain_Delay_Counter = 0;
  5396  0034C4  0E00               	movlw	0
  5397  0034C6  0100               	movlb	0	; () banked
  5398  0034C8  6F79               	movwf	(_Mountain_Delay_Counter+1)& (0+255),b
  5399  0034CA  0E00               	movlw	0
  5400  0034CC  6F78               	movwf	_Mountain_Delay_Counter& (0+255),b
  5401                           
  5402                           ;train_move_left.c: 115: }
  5403  0034CE  D05F               	goto	l7864
  5404  0034D0                     l7828:
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;train_move_left.c: 116: else{
  5408                           ;train_move_left.c: 117: Mountain_Delay_Counter++;
  5409  0034D0  0100               	movlb	0	; () banked
  5410  0034D2  4B78               	infsnz	_Mountain_Delay_Counter& (0+255),f,b
  5411  0034D4  2B79               	incf	(_Mountain_Delay_Counter+1)& (0+255),f,b
  5412                           
  5413                           ; BSR set to: 0
  5414  0034D6  D05B               	goto	l7864
  5415  0034D8                     l7832:
  5416  0034D8  0E04               	movlw	4
  5417  0034DA  0100               	movlb	0	; () banked
  5418  0034DC  19CA               	xorwf	Right_Mountain_From_The_Right@rc& (0+255),w,b
  5419  0034DE  A4D8               	btfss	status,2,c
  5420  0034E0  D023               	goto	l7848
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;train_move_left.c: 123: SETxPWM(Train_Move_Pwm_Count, 0);
  5424  0034E2  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5425  0034E6  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5426  0034EA  0E00               	movlw	0
  5427  0034EC  0100               	movlb	0	; () banked
  5428  0034EE  6FC5               	movwf	SETxPWM@direction& (0+255),b
  5429  0034F0  ECB4  F01D         	call	_SETxPWM	;wreg free
  5430                           
  5431                           ;train_move_left.c: 124: if (Train_Move_Pwm_Count <= GETxAPIxVAL(46))
  5432  0034F4  0E2E               	movlw	46
  5433  0034F6  ECBC  F020         	call	_GETxAPIxVAL
  5434  0034FA  5005               	movf	_Train_Move_Pwm_Count,w,c
  5435  0034FC  0100               	movlb	0	; () banked
  5436  0034FE  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  5437  003500  5006               	movf	_Train_Move_Pwm_Count+1,w,c
  5438  003502  0100               	movlb	0	; () banked
  5439  003504  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  5440  003506  B0D8               	btfsc	status,0,c
  5441  003508  D028               	goto	l7852
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;train_move_left.c: 131: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  5445                           
  5446                           ; BSR set to: 0
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;train_move_left.c: 130: }
  5450                           
  5451                           ;train_move_left.c: 129: break;
  5452                           
  5453                           ;train_move_left.c: 128: Return_Val = 0;
  5454                           
  5455                           ;train_move_left.c: 127: Switch_Moutain = 0;
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;train_move_left.c: 125: {
  5459                           ;train_move_left.c: 126: Switch_Train_Move = 0;
  5460  00350A  0E1A               	movlw	26
  5461  00350C  ECBC  F020         	call	_GETxAPIxVAL
  5462  003510  0100               	movlb	0	; () banked
  5463  003512  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5464  003514  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  5465  003516  0100               	movlb	0	; () banked
  5466  003518  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5467  00351A  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  5468  00351C  A0D8               	btfss	status,0,c
  5469  00351E  D035               	goto	l7862
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;train_move_left.c: 132: {
  5473                           ;train_move_left.c: 133: Train_Move_Pwm_Count--;
  5474  003520  0605               	decf	_Train_Move_Pwm_Count,f,c
  5475  003522  A0D8               	btfss	status,0,c
  5476  003524  0606               	decf	_Train_Move_Pwm_Count+1,f,c
  5477  003526  D02C               	goto	l7860
  5478  003528                     l7848:
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;train_move_left.c: 138: else if (rc == 3){
  5482  003528  0E03               	movlw	3
  5483  00352A  0100               	movlb	0	; () banked
  5484  00352C  19CA               	xorwf	Right_Mountain_From_The_Right@rc& (0+255),w,b
  5485  00352E  A4D8               	btfss	status,2,c
  5486  003530  D02E               	goto	l7864
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;train_move_left.c: 139: SETxPWM(Train_Move_Pwm_Count, 0);
  5490  003532  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5491  003536  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5492  00353A  0E00               	movlw	0
  5493  00353C  0100               	movlb	0	; () banked
  5494  00353E  6FC5               	movwf	SETxPWM@direction& (0+255),b
  5495  003540  ECB4  F01D         	call	_SETxPWM	;wreg free
  5496                           
  5497                           ;train_move_left.c: 140: if (Train_Move_Pwm_Count >= GETxAPIxVAL(24))
  5498  003544  0E18               	movlw	24
  5499  003546  ECBC  F020         	call	_GETxAPIxVAL
  5500  00354A  0100               	movlb	0	; () banked
  5501  00354C  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5502  00354E  5C05               	subwf	_Train_Move_Pwm_Count,w,c
  5503  003550  0100               	movlb	0	; () banked
  5504  003552  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5505  003554  5806               	subwfb	_Train_Move_Pwm_Count+1,w,c
  5506  003556  A0D8               	btfss	status,0,c
  5507  003558  D006               	goto	l7856
  5508  00355A                     l7852:
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;train_move_left.c: 141: {
  5512                           ;train_move_left.c: 142: Switch_Train_Move = 0;
  5513  00355A  0E00               	movlw	0
  5514  00355C  6E19               	movwf	_Switch_Train_Move,c
  5515                           
  5516                           ;train_move_left.c: 143: Switch_Moutain = 0;
  5517  00355E  0E00               	movlw	0
  5518  003560  6E17               	movwf	_Switch_Moutain,c
  5519                           
  5520                           ;train_move_left.c: 144: Return_Val = 0;
  5521  003562  0E00               	movlw	0
  5522  003564  D015               	goto	L78
  5523  003566                     l7856:
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;train_move_left.c: 147: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  5527  003566  0E1A               	movlw	26
  5528  003568  ECBC  F020         	call	_GETxAPIxVAL
  5529  00356C  0100               	movlb	0	; () banked
  5530  00356E  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5531  003570  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  5532  003572  0100               	movlb	0	; () banked
  5533  003574  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5534  003576  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  5535  003578  A0D8               	btfss	status,0,c
  5536  00357A  D007               	goto	l7862
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;train_move_left.c: 148: {
  5540                           ;train_move_left.c: 149: Train_Move_Pwm_Count++;
  5541  00357C  4A05               	infsnz	_Train_Move_Pwm_Count,f,c
  5542  00357E  2A06               	incf	_Train_Move_Pwm_Count+1,f,c
  5543  003580                     l7860:
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;train_move_left.c: 150: Train_Move_Pwm_Fast_Count = 0;
  5547  003580  0E00               	movlw	0
  5548  003582  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  5549  003584  0E00               	movlw	0
  5550  003586  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  5551                           
  5552                           ;train_move_left.c: 151: }
  5553  003588  D002               	goto	l7864
  5554  00358A                     l7862:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;train_move_left.c: 152: else{Train_Move_Pwm_Fast_Count++;}
  5558  00358A  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  5559  00358C  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  5560  00358E                     l7864:
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;train_move_left.c: 153: }
  5564                           ;train_move_left.c: 154: Return_Val = 1;
  5565  00358E  0E01               	movlw	1
  5566  003590                     L78:
  5567  003590  0100               	movlb	0	; () banked
  5568  003592  6FDF               	movwf	Right_Mountain_From_The_Right@Return_Val& (0+255),b
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;train_move_left.c: 159: }
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;train_move_left.c: 158: break;
  5575                           
  5576                           ;train_move_left.c: 157: default:
  5577                           
  5578                           ;train_move_left.c: 155: break;
  5579  003594  D007               	goto	l7870
  5580  003596                     l7868:
  5581  003596  5017               	movf	_Switch_Moutain,w,c
  5582                           
  5583                           ; Switch size 1, requested type "space"
  5584                           ; Number of cases is 2, Range of values is 0 to 1
  5585                           ; switch strategies available:
  5586                           ; Name         Instructions Cycles
  5587                           ; simple_byte            7     4 (average)
  5588                           ;	Chosen strategy is simple_byte
  5589  003598  0A00               	xorlw	0	; case 0
  5590  00359A  B4D8               	btfsc	status,2,c
  5591  00359C  D77F               	goto	l7820
  5592  00359E  0A01               	xorlw	1	; case 1
  5593  0035A0  B4D8               	btfsc	status,2,c
  5594  0035A2  D79A               	goto	l7832
  5595  0035A4                     l7870:
  5596                           
  5597                           ;train_move_left.c: 161: return(Return_Val);
  5598  0035A4  0100               	movlb	0	; () banked
  5599  0035A6  51DF               	movf	Right_Mountain_From_The_Right@Return_Val& (0+255),w,b
  5600  0035A8  0012               	return	
  5601  0035AA                     __end_of_Right_Mountain_From_The_Right:
  5602                           	opt stack 0
  5603                           tblptru	equ	0xFF8
  5604                           tblptrh	equ	0xFF7
  5605                           tblptrl	equ	0xFF6
  5606                           tablat	equ	0xFF5
  5607                           postinc0	equ	0xFEE
  5608                           wreg	equ	0xFE8
  5609                           postdec1	equ	0xFE5
  5610                           fsr1l	equ	0xFE1
  5611                           status	equ	0xFD8
  5612                           
  5613 ;; *************** function _Right_Mountain_From_The_Left *****************
  5614 ;; Defined at:
  5615 ;;		line 179 in file "../train_move_right.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  rc              1    wreg     unsigned char 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  rc              1   17[BANK0 ] unsigned char 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      unsigned char 
  5622 ;; Registers used:
  5623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5629 ;;      Params:         0       0       0       0       0       0       0       0       0
  5630 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5632 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5633 ;;Total ram usage:        1 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    6
  5636 ;; This function calls:
  5637 ;;		_GETxAPIxVAL
  5638 ;;		_SETxPWM
  5639 ;; This function is called by:
  5640 ;;		_Train_Path
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text8
  5645  0035AA                     __ptext8:
  5646                           	opt stack 0
  5647  0035AA                     _Right_Mountain_From_The_Left:
  5648                           	opt stack 22
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;incstack = 0
  5652                           ;Right_Mountain_From_The_Left@rc stored from wreg
  5653  0035AA  0100               	movlb	0	; () banked
  5654  0035AC  6FCA               	movwf	Right_Mountain_From_The_Left@rc& (0+255),b
  5655                           
  5656                           ;train_move_right.c: 181: static char Return_Val = 1;
  5657                           ;train_move_right.c: 183: switch (Switch_Moutain){
  5658  0035AE  D07D               	goto	l7812
  5659  0035B0                     l7764:
  5660  0035B0  0E04               	movlw	4
  5661  0035B2  0100               	movlb	0	; () banked
  5662  0035B4  19CA               	xorwf	Right_Mountain_From_The_Left@rc& (0+255),w,b
  5663  0035B6  B4D8               	btfsc	status,2,c
  5664  0035B8  D00D               	goto	l7770
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;train_move_right.c: 188: else if(Mountain_Delay_Counter >= GETxAPIxVAL(56)){
  5668                           
  5669                           ; BSR set to: 0
  5670                           
  5671                           ;train_move_right.c: 187: }
  5672                           
  5673                           ;train_move_right.c: 186: Mountain_Delay_Counter = 0;
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;train_move_right.c: 185: Switch_Moutain = 1;
  5677  0035BA  0E38               	movlw	56
  5678  0035BC  ECBC  F020         	call	_GETxAPIxVAL
  5679  0035C0  0100               	movlb	0	; () banked
  5680  0035C2  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5681  0035C4  0100               	movlb	0	; () banked
  5682  0035C6  5D78               	subwf	_Mountain_Delay_Counter& (0+255),w,b
  5683  0035C8  0100               	movlb	0	; () banked
  5684  0035CA  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5685  0035CC  0100               	movlb	0	; () banked
  5686  0035CE  5979               	subwfb	(_Mountain_Delay_Counter+1)& (0+255),w,b
  5687  0035D0  A0D8               	btfss	status,0,c
  5688  0035D2  D008               	goto	l7772
  5689  0035D4                     l7770:
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;train_move_right.c: 189: Switch_Moutain = 1;
  5693  0035D4  0E01               	movlw	1
  5694  0035D6  6E17               	movwf	_Switch_Moutain,c
  5695                           
  5696                           ;train_move_right.c: 190: Mountain_Delay_Counter = 0;
  5697  0035D8  0E00               	movlw	0
  5698  0035DA  0100               	movlb	0	; () banked
  5699  0035DC  6F79               	movwf	(_Mountain_Delay_Counter+1)& (0+255),b
  5700  0035DE  0E00               	movlw	0
  5701  0035E0  6F78               	movwf	_Mountain_Delay_Counter& (0+255),b
  5702                           
  5703                           ;train_move_right.c: 191: }
  5704  0035E2  D05F               	goto	l7808
  5705  0035E4                     l7772:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;train_move_right.c: 192: else{
  5709                           ;train_move_right.c: 193: Mountain_Delay_Counter++;
  5710  0035E4  0100               	movlb	0	; () banked
  5711  0035E6  4B78               	infsnz	_Mountain_Delay_Counter& (0+255),f,b
  5712  0035E8  2B79               	incf	(_Mountain_Delay_Counter+1)& (0+255),f,b
  5713                           
  5714                           ; BSR set to: 0
  5715  0035EA  D05B               	goto	l7808
  5716  0035EC                     l7776:
  5717  0035EC  0E03               	movlw	3
  5718  0035EE  0100               	movlb	0	; () banked
  5719  0035F0  19CA               	xorwf	Right_Mountain_From_The_Left@rc& (0+255),w,b
  5720  0035F2  A4D8               	btfss	status,2,c
  5721  0035F4  D022               	goto	l7792
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;train_move_right.c: 199: SETxPWM(Train_Move_Pwm_Count, 1);
  5725  0035F6  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5726  0035FA  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5727  0035FE  0E01               	movlw	1
  5728  003600  0100               	movlb	0	; () banked
  5729  003602  6FC5               	movwf	SETxPWM@direction& (0+255),b
  5730  003604  ECB4  F01D         	call	_SETxPWM	;wreg free
  5731                           
  5732                           ;train_move_right.c: 200: if (Train_Move_Pwm_Count >= GETxAPIxVAL(47))
  5733  003608  0E2F               	movlw	47
  5734  00360A  ECBC  F020         	call	_GETxAPIxVAL
  5735  00360E  0100               	movlb	0	; () banked
  5736  003610  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5737  003612  5C05               	subwf	_Train_Move_Pwm_Count,w,c
  5738  003614  0100               	movlb	0	; () banked
  5739  003616  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5740  003618  5806               	subwfb	_Train_Move_Pwm_Count+1,w,c
  5741  00361A  B0D8               	btfsc	status,0,c
  5742  00361C  D027               	goto	l7796
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;train_move_right.c: 207: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  5746                           
  5747                           ; BSR set to: 0
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;train_move_right.c: 206: }
  5751                           
  5752                           ;train_move_right.c: 205: break;
  5753                           
  5754                           ;train_move_right.c: 204: Return_Val = 0;
  5755                           
  5756                           ;train_move_right.c: 203: Switch_Moutain = 0;
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;train_move_right.c: 201: {
  5760                           ;train_move_right.c: 202: Switch_Train_Move = 0;
  5761  00361E  0E1A               	movlw	26
  5762  003620  ECBC  F020         	call	_GETxAPIxVAL
  5763  003624  0100               	movlb	0	; () banked
  5764  003626  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5765  003628  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  5766  00362A  0100               	movlb	0	; () banked
  5767  00362C  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5768  00362E  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  5769  003630  A0D8               	btfss	status,0,c
  5770  003632  D035               	goto	l7806
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;train_move_right.c: 208: {
  5774                           ;train_move_right.c: 209: Train_Move_Pwm_Count++;
  5775  003634  4A05               	infsnz	_Train_Move_Pwm_Count,f,c
  5776  003636  2A06               	incf	_Train_Move_Pwm_Count+1,f,c
  5777  003638  D02D               	goto	l7804
  5778  00363A                     l7792:
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;train_move_right.c: 214: else if (rc == 4){
  5782  00363A  0E04               	movlw	4
  5783  00363C  0100               	movlb	0	; () banked
  5784  00363E  19CA               	xorwf	Right_Mountain_From_The_Left@rc& (0+255),w,b
  5785  003640  A4D8               	btfss	status,2,c
  5786  003642  D02F               	goto	l7808
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;train_move_right.c: 215: SETxPWM(Train_Move_Pwm_Count, 1);
  5790  003644  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  5791  003648  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  5792  00364C  0E01               	movlw	1
  5793  00364E  0100               	movlb	0	; () banked
  5794  003650  6FC5               	movwf	SETxPWM@direction& (0+255),b
  5795  003652  ECB4  F01D         	call	_SETxPWM	;wreg free
  5796                           
  5797                           ;train_move_right.c: 216: if (Train_Move_Pwm_Count <= GETxAPIxVAL(23))
  5798  003656  0E17               	movlw	23
  5799  003658  ECBC  F020         	call	_GETxAPIxVAL
  5800  00365C  5005               	movf	_Train_Move_Pwm_Count,w,c
  5801  00365E  0100               	movlb	0	; () banked
  5802  003660  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  5803  003662  5006               	movf	_Train_Move_Pwm_Count+1,w,c
  5804  003664  0100               	movlb	0	; () banked
  5805  003666  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  5806  003668  A0D8               	btfss	status,0,c
  5807  00366A  D006               	goto	l7800
  5808  00366C                     l7796:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;train_move_right.c: 217: {
  5812                           ;train_move_right.c: 218: Switch_Train_Move = 0;
  5813  00366C  0E00               	movlw	0
  5814  00366E  6E19               	movwf	_Switch_Train_Move,c
  5815                           
  5816                           ;train_move_right.c: 219: Switch_Moutain = 0;
  5817  003670  0E00               	movlw	0
  5818  003672  6E17               	movwf	_Switch_Moutain,c
  5819                           
  5820                           ;train_move_right.c: 220: Return_Val = 0;
  5821  003674  0E00               	movlw	0
  5822  003676  D016               	goto	L81
  5823  003678                     l7800:
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;train_move_right.c: 223: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  5827  003678  0E1A               	movlw	26
  5828  00367A  ECBC  F020         	call	_GETxAPIxVAL
  5829  00367E  0100               	movlb	0	; () banked
  5830  003680  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5831  003682  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  5832  003684  0100               	movlb	0	; () banked
  5833  003686  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5834  003688  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  5835  00368A  A0D8               	btfss	status,0,c
  5836  00368C  D008               	goto	l7806
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;train_move_right.c: 224: {
  5840                           ;train_move_right.c: 225: Train_Move_Pwm_Count--;
  5841  00368E  0605               	decf	_Train_Move_Pwm_Count,f,c
  5842  003690  A0D8               	btfss	status,0,c
  5843  003692  0606               	decf	_Train_Move_Pwm_Count+1,f,c
  5844  003694                     l7804:
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;train_move_right.c: 226: Train_Move_Pwm_Fast_Count = 0;
  5848  003694  0E00               	movlw	0
  5849  003696  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  5850  003698  0E00               	movlw	0
  5851  00369A  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  5852                           
  5853                           ;train_move_right.c: 227: }
  5854  00369C  D002               	goto	l7808
  5855  00369E                     l7806:
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;train_move_right.c: 228: else{Train_Move_Pwm_Fast_Count++;}
  5859  00369E  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  5860  0036A0  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  5861  0036A2                     l7808:
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;train_move_right.c: 229: }
  5865                           ;train_move_right.c: 230: Return_Val = 1;
  5866  0036A2  0E01               	movlw	1
  5867  0036A4                     L81:
  5868  0036A4  0100               	movlb	0	; () banked
  5869  0036A6  6FDE               	movwf	Right_Mountain_From_The_Left@Return_Val& (0+255),b
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;train_move_right.c: 235: }
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;train_move_right.c: 234: break;
  5876                           
  5877                           ;train_move_right.c: 233: default:
  5878                           
  5879                           ;train_move_right.c: 231: break;
  5880  0036A8  D007               	goto	l7814
  5881  0036AA                     l7812:
  5882  0036AA  5017               	movf	_Switch_Moutain,w,c
  5883                           
  5884                           ; Switch size 1, requested type "space"
  5885                           ; Number of cases is 2, Range of values is 0 to 1
  5886                           ; switch strategies available:
  5887                           ; Name         Instructions Cycles
  5888                           ; simple_byte            7     4 (average)
  5889                           ;	Chosen strategy is simple_byte
  5890  0036AC  0A00               	xorlw	0	; case 0
  5891  0036AE  B4D8               	btfsc	status,2,c
  5892  0036B0  D77F               	goto	l7764
  5893  0036B2  0A01               	xorlw	1	; case 1
  5894  0036B4  B4D8               	btfsc	status,2,c
  5895  0036B6  D79A               	goto	l7776
  5896  0036B8                     l7814:
  5897                           
  5898                           ;train_move_right.c: 237: return(Return_Val);
  5899  0036B8  0100               	movlb	0	; () banked
  5900  0036BA  51DE               	movf	Right_Mountain_From_The_Left@Return_Val& (0+255),w,b
  5901  0036BC  0012               	return	
  5902  0036BE                     __end_of_Right_Mountain_From_The_Left:
  5903                           	opt stack 0
  5904                           tblptru	equ	0xFF8
  5905                           tblptrh	equ	0xFF7
  5906                           tblptrl	equ	0xFF6
  5907                           tablat	equ	0xFF5
  5908                           postinc0	equ	0xFEE
  5909                           wreg	equ	0xFE8
  5910                           postdec1	equ	0xFE5
  5911                           fsr1l	equ	0xFE1
  5912                           status	equ	0xFD8
  5913                           
  5914 ;; *************** function _Left_Mountain_From_The_Right *****************
  5915 ;; Defined at:
  5916 ;;		line 178 in file "../train_move_left.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  rc              1    wreg     unsigned char 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  rc              1   17[BANK0 ] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      unsigned char 
  5923 ;; Registers used:
  5924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5930 ;;      Params:         0       0       0       0       0       0       0       0       0
  5931 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5933 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5934 ;;Total ram usage:        1 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    6
  5937 ;; This function calls:
  5938 ;;		_GETxAPIxVAL
  5939 ;;		_SETxPWM
  5940 ;; This function is called by:
  5941 ;;		_Train_Path
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text9
  5946  0037D0                     __ptext9:
  5947                           	opt stack 0
  5948  0037D0                     _Left_Mountain_From_The_Right:
  5949                           	opt stack 22
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;incstack = 0
  5953                           ;Left_Mountain_From_The_Right@rc stored from wreg
  5954  0037D0  0100               	movlb	0	; () banked
  5955  0037D2  6FCA               	movwf	Left_Mountain_From_The_Right@rc& (0+255),b
  5956                           
  5957                           ;train_move_left.c: 180: static char Return_Val = 1;
  5958                           ;train_move_left.c: 182: switch (Switch_Moutain){
  5959  0037D4  D07B               	goto	l7924
  5960  0037D6                     l7876:
  5961  0037D6  0100               	movlb	0	; () banked
  5962  0037D8  05CA               	decf	Left_Mountain_From_The_Right@rc& (0+255),w,b
  5963  0037DA  B4D8               	btfsc	status,2,c
  5964  0037DC  D00D               	goto	l7882
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;train_move_left.c: 187: else if(Mountain_Delay_Counter >= GETxAPIxVAL(58)){
  5968                           
  5969                           ; BSR set to: 0
  5970                           
  5971                           ;train_move_left.c: 186: }
  5972                           
  5973                           ;train_move_left.c: 185: Mountain_Delay_Counter = 0;
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;train_move_left.c: 184: Switch_Moutain = 1;
  5977  0037DE  0E3A               	movlw	58
  5978  0037E0  ECBC  F020         	call	_GETxAPIxVAL
  5979  0037E4  0100               	movlb	0	; () banked
  5980  0037E6  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  5981  0037E8  0100               	movlb	0	; () banked
  5982  0037EA  5D78               	subwf	_Mountain_Delay_Counter& (0+255),w,b
  5983  0037EC  0100               	movlb	0	; () banked
  5984  0037EE  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  5985  0037F0  0100               	movlb	0	; () banked
  5986  0037F2  5979               	subwfb	(_Mountain_Delay_Counter+1)& (0+255),w,b
  5987  0037F4  A0D8               	btfss	status,0,c
  5988  0037F6  D008               	goto	l7884
  5989  0037F8                     l7882:
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;train_move_left.c: 188: Switch_Moutain = 1;
  5993  0037F8  0E01               	movlw	1
  5994  0037FA  6E17               	movwf	_Switch_Moutain,c
  5995                           
  5996                           ;train_move_left.c: 189: Mountain_Delay_Counter = 0;
  5997  0037FC  0E00               	movlw	0
  5998  0037FE  0100               	movlb	0	; () banked
  5999  003800  6F79               	movwf	(_Mountain_Delay_Counter+1)& (0+255),b
  6000  003802  0E00               	movlw	0
  6001  003804  6F78               	movwf	_Mountain_Delay_Counter& (0+255),b
  6002                           
  6003                           ;train_move_left.c: 190: }
  6004  003806  D05E               	goto	l7920
  6005  003808                     l7884:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;train_move_left.c: 191: else{
  6009                           ;train_move_left.c: 192: Mountain_Delay_Counter++;
  6010  003808  0100               	movlb	0	; () banked
  6011  00380A  4B78               	infsnz	_Mountain_Delay_Counter& (0+255),f,b
  6012  00380C  2B79               	incf	(_Mountain_Delay_Counter+1)& (0+255),f,b
  6013                           
  6014                           ; BSR set to: 0
  6015  00380E  D05A               	goto	l7920
  6016  003810                     l7888:
  6017  003810  0E02               	movlw	2
  6018  003812  0100               	movlb	0	; () banked
  6019  003814  19CA               	xorwf	Left_Mountain_From_The_Right@rc& (0+255),w,b
  6020  003816  A4D8               	btfss	status,2,c
  6021  003818  D022               	goto	l7904
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;train_move_left.c: 198: SETxPWM(Train_Move_Pwm_Count, 0);
  6025  00381A  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6026  00381E  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6027  003822  0E00               	movlw	0
  6028  003824  0100               	movlb	0	; () banked
  6029  003826  6FC5               	movwf	SETxPWM@direction& (0+255),b
  6030  003828  ECB4  F01D         	call	_SETxPWM	;wreg free
  6031                           
  6032                           ;train_move_left.c: 199: if (Train_Move_Pwm_Count >= GETxAPIxVAL(52))
  6033  00382C  0E34               	movlw	52
  6034  00382E  ECBC  F020         	call	_GETxAPIxVAL
  6035  003832  0100               	movlb	0	; () banked
  6036  003834  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6037  003836  5C05               	subwf	_Train_Move_Pwm_Count,w,c
  6038  003838  0100               	movlb	0	; () banked
  6039  00383A  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6040  00383C  5806               	subwfb	_Train_Move_Pwm_Count+1,w,c
  6041  00383E  B0D8               	btfsc	status,0,c
  6042  003840  D026               	goto	l7908
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;train_move_left.c: 206: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  6046                           
  6047                           ; BSR set to: 0
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;train_move_left.c: 205: }
  6051                           
  6052                           ;train_move_left.c: 204: break;
  6053                           
  6054                           ;train_move_left.c: 203: Return_Val = 0;
  6055                           
  6056                           ;train_move_left.c: 202: Switch_Moutain = 0;
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;train_move_left.c: 200: {
  6060                           ;train_move_left.c: 201: Switch_Train_Move = 0;
  6061  003842  0E1A               	movlw	26
  6062  003844  ECBC  F020         	call	_GETxAPIxVAL
  6063  003848  0100               	movlb	0	; () banked
  6064  00384A  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6065  00384C  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  6066  00384E  0100               	movlb	0	; () banked
  6067  003850  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6068  003852  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  6069  003854  A0D8               	btfss	status,0,c
  6070  003856  D034               	goto	l7918
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;train_move_left.c: 207: {
  6074                           ;train_move_left.c: 208: Train_Move_Pwm_Count++;
  6075  003858  4A05               	infsnz	_Train_Move_Pwm_Count,f,c
  6076  00385A  2A06               	incf	_Train_Move_Pwm_Count+1,f,c
  6077  00385C  D02C               	goto	l7916
  6078  00385E                     l7904:
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;train_move_left.c: 213: else if (rc == 1){
  6082  00385E  0100               	movlb	0	; () banked
  6083  003860  05CA               	decf	Left_Mountain_From_The_Right@rc& (0+255),w,b
  6084  003862  A4D8               	btfss	status,2,c
  6085  003864  D02F               	goto	l7920
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;train_move_left.c: 214: SETxPWM(Train_Move_Pwm_Count, 0);
  6089  003866  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6090  00386A  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6091  00386E  0E00               	movlw	0
  6092  003870  0100               	movlb	0	; () banked
  6093  003872  6FC5               	movwf	SETxPWM@direction& (0+255),b
  6094  003874  ECB4  F01D         	call	_SETxPWM	;wreg free
  6095                           
  6096                           ;train_move_left.c: 215: if (Train_Move_Pwm_Count <= GETxAPIxVAL(24))
  6097  003878  0E18               	movlw	24
  6098  00387A  ECBC  F020         	call	_GETxAPIxVAL
  6099  00387E  5005               	movf	_Train_Move_Pwm_Count,w,c
  6100  003880  0100               	movlb	0	; () banked
  6101  003882  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  6102  003884  5006               	movf	_Train_Move_Pwm_Count+1,w,c
  6103  003886  0100               	movlb	0	; () banked
  6104  003888  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  6105  00388A  A0D8               	btfss	status,0,c
  6106  00388C  D006               	goto	l7912
  6107  00388E                     l7908:
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;train_move_left.c: 216: {
  6111                           ;train_move_left.c: 217: Switch_Train_Move = 0;
  6112  00388E  0E00               	movlw	0
  6113  003890  6E19               	movwf	_Switch_Train_Move,c
  6114                           
  6115                           ;train_move_left.c: 218: Switch_Moutain = 0;
  6116  003892  0E00               	movlw	0
  6117  003894  6E17               	movwf	_Switch_Moutain,c
  6118                           
  6119                           ;train_move_left.c: 219: Return_Val = 0;
  6120  003896  0E00               	movlw	0
  6121  003898  D016               	goto	L84
  6122  00389A                     l7912:
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;train_move_left.c: 222: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  6126  00389A  0E1A               	movlw	26
  6127  00389C  ECBC  F020         	call	_GETxAPIxVAL
  6128  0038A0  0100               	movlb	0	; () banked
  6129  0038A2  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6130  0038A4  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  6131  0038A6  0100               	movlb	0	; () banked
  6132  0038A8  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6133  0038AA  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  6134  0038AC  A0D8               	btfss	status,0,c
  6135  0038AE  D008               	goto	l7918
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;train_move_left.c: 223: {
  6139                           ;train_move_left.c: 224: Train_Move_Pwm_Count--;
  6140  0038B0  0605               	decf	_Train_Move_Pwm_Count,f,c
  6141  0038B2  A0D8               	btfss	status,0,c
  6142  0038B4  0606               	decf	_Train_Move_Pwm_Count+1,f,c
  6143  0038B6                     l7916:
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;train_move_left.c: 225: Train_Move_Pwm_Fast_Count = 0;
  6147  0038B6  0E00               	movlw	0
  6148  0038B8  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  6149  0038BA  0E00               	movlw	0
  6150  0038BC  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  6151                           
  6152                           ;train_move_left.c: 226: }
  6153  0038BE  D002               	goto	l7920
  6154  0038C0                     l7918:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;train_move_left.c: 227: else{Train_Move_Pwm_Fast_Count++;}
  6158  0038C0  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  6159  0038C2  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  6160  0038C4                     l7920:
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;train_move_left.c: 228: }
  6164                           ;train_move_left.c: 229: Return_Val = 1;
  6165  0038C4  0E01               	movlw	1
  6166  0038C6                     L84:
  6167  0038C6  0100               	movlb	0	; () banked
  6168  0038C8  6FDD               	movwf	Left_Mountain_From_The_Right@Return_Val& (0+255),b
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;train_move_left.c: 234: }
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;train_move_left.c: 233: break;
  6175                           
  6176                           ;train_move_left.c: 232: default:
  6177                           
  6178                           ;train_move_left.c: 230: break;
  6179  0038CA  D007               	goto	l7926
  6180  0038CC                     l7924:
  6181  0038CC  5017               	movf	_Switch_Moutain,w,c
  6182                           
  6183                           ; Switch size 1, requested type "space"
  6184                           ; Number of cases is 2, Range of values is 0 to 1
  6185                           ; switch strategies available:
  6186                           ; Name         Instructions Cycles
  6187                           ; simple_byte            7     4 (average)
  6188                           ;	Chosen strategy is simple_byte
  6189  0038CE  0A00               	xorlw	0	; case 0
  6190  0038D0  B4D8               	btfsc	status,2,c
  6191  0038D2  D781               	goto	l7876
  6192  0038D4  0A01               	xorlw	1	; case 1
  6193  0038D6  B4D8               	btfsc	status,2,c
  6194  0038D8  D79B               	goto	l7888
  6195  0038DA                     l7926:
  6196                           
  6197                           ;train_move_left.c: 236: return(Return_Val);
  6198  0038DA  0100               	movlb	0	; () banked
  6199  0038DC  51DD               	movf	Left_Mountain_From_The_Right@Return_Val& (0+255),w,b
  6200  0038DE  0012               	return	
  6201  0038E0                     __end_of_Left_Mountain_From_The_Right:
  6202                           	opt stack 0
  6203                           tblptru	equ	0xFF8
  6204                           tblptrh	equ	0xFF7
  6205                           tblptrl	equ	0xFF6
  6206                           tablat	equ	0xFF5
  6207                           postinc0	equ	0xFEE
  6208                           wreg	equ	0xFE8
  6209                           postdec1	equ	0xFE5
  6210                           fsr1l	equ	0xFE1
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function _Left_Mountain_From_The_Left *****************
  6214 ;; Defined at:
  6215 ;;		line 104 in file "../train_move_right.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  rc              1    wreg     unsigned char 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  rc              1   17[BANK0 ] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  1    wreg      unsigned char 
  6222 ;; Registers used:
  6223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6229 ;;      Params:         0       0       0       0       0       0       0       0       0
  6230 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6232 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6233 ;;Total ram usage:        1 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    6
  6236 ;; This function calls:
  6237 ;;		_GETxAPIxVAL
  6238 ;;		_SETxPWM
  6239 ;; This function is called by:
  6240 ;;		_Train_Path
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text10
  6245  0036BE                     __ptext10:
  6246                           	opt stack 0
  6247  0036BE                     _Left_Mountain_From_The_Left:
  6248                           	opt stack 22
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;incstack = 0
  6252                           ;Left_Mountain_From_The_Left@rc stored from wreg
  6253  0036BE  0100               	movlb	0	; () banked
  6254  0036C0  6FCA               	movwf	Left_Mountain_From_The_Left@rc& (0+255),b
  6255                           
  6256                           ;train_move_right.c: 106: static char Return_Val = 1;
  6257                           ;train_move_right.c: 108: switch (Switch_Moutain){
  6258  0036C2  D07C               	goto	l7756
  6259  0036C4                     l7708:
  6260  0036C4  0E02               	movlw	2
  6261  0036C6  0100               	movlb	0	; () banked
  6262  0036C8  19CA               	xorwf	Left_Mountain_From_The_Left@rc& (0+255),w,b
  6263  0036CA  B4D8               	btfsc	status,2,c
  6264  0036CC  D00D               	goto	l7714
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;train_move_right.c: 113: else if(Mountain_Delay_Counter >= GETxAPIxVAL(59)){
  6268                           
  6269                           ; BSR set to: 0
  6270                           
  6271                           ;train_move_right.c: 112: }
  6272                           
  6273                           ;train_move_right.c: 111: Mountain_Delay_Counter = 0;
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;train_move_right.c: 110: Switch_Moutain = 1;
  6277  0036CE  0E3B               	movlw	59
  6278  0036D0  ECBC  F020         	call	_GETxAPIxVAL
  6279  0036D4  0100               	movlb	0	; () banked
  6280  0036D6  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6281  0036D8  0100               	movlb	0	; () banked
  6282  0036DA  5D78               	subwf	_Mountain_Delay_Counter& (0+255),w,b
  6283  0036DC  0100               	movlb	0	; () banked
  6284  0036DE  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6285  0036E0  0100               	movlb	0	; () banked
  6286  0036E2  5979               	subwfb	(_Mountain_Delay_Counter+1)& (0+255),w,b
  6287  0036E4  A0D8               	btfss	status,0,c
  6288  0036E6  D008               	goto	l7716
  6289  0036E8                     l7714:
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;train_move_right.c: 114: Switch_Moutain = 1;
  6293  0036E8  0E01               	movlw	1
  6294  0036EA  6E17               	movwf	_Switch_Moutain,c
  6295                           
  6296                           ;train_move_right.c: 115: Mountain_Delay_Counter = 0;
  6297  0036EC  0E00               	movlw	0
  6298  0036EE  0100               	movlb	0	; () banked
  6299  0036F0  6F79               	movwf	(_Mountain_Delay_Counter+1)& (0+255),b
  6300  0036F2  0E00               	movlw	0
  6301  0036F4  6F78               	movwf	_Mountain_Delay_Counter& (0+255),b
  6302                           
  6303                           ;train_move_right.c: 116: }
  6304  0036F6  D05E               	goto	l7752
  6305  0036F8                     l7716:
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;train_move_right.c: 117: else{
  6309                           ;train_move_right.c: 118: Mountain_Delay_Counter++;
  6310  0036F8  0100               	movlb	0	; () banked
  6311  0036FA  4B78               	infsnz	_Mountain_Delay_Counter& (0+255),f,b
  6312  0036FC  2B79               	incf	(_Mountain_Delay_Counter+1)& (0+255),f,b
  6313                           
  6314                           ; BSR set to: 0
  6315  0036FE  D05A               	goto	l7752
  6316  003700                     l7720:
  6317  003700  0100               	movlb	0	; () banked
  6318  003702  05CA               	decf	Left_Mountain_From_The_Left@rc& (0+255),w,b
  6319  003704  A4D8               	btfss	status,2,c
  6320  003706  D023               	goto	l7736
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;train_move_right.c: 124: SETxPWM(Train_Move_Pwm_Count, 1);
  6324  003708  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6325  00370C  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6326  003710  0E01               	movlw	1
  6327  003712  0100               	movlb	0	; () banked
  6328  003714  6FC5               	movwf	SETxPWM@direction& (0+255),b
  6329  003716  ECB4  F01D         	call	_SETxPWM	;wreg free
  6330                           
  6331                           ;train_move_right.c: 125: if (Train_Move_Pwm_Count <= GETxAPIxVAL(49))
  6332  00371A  0E31               	movlw	49
  6333  00371C  ECBC  F020         	call	_GETxAPIxVAL
  6334  003720  5005               	movf	_Train_Move_Pwm_Count,w,c
  6335  003722  0100               	movlb	0	; () banked
  6336  003724  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  6337  003726  5006               	movf	_Train_Move_Pwm_Count+1,w,c
  6338  003728  0100               	movlb	0	; () banked
  6339  00372A  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  6340  00372C  B0D8               	btfsc	status,0,c
  6341  00372E  D028               	goto	l7740
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;train_move_right.c: 132: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  6345                           
  6346                           ; BSR set to: 0
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;train_move_right.c: 131: }
  6350                           
  6351                           ;train_move_right.c: 130: break;
  6352                           
  6353                           ;train_move_right.c: 129: Return_Val = 0;
  6354                           
  6355                           ;train_move_right.c: 128: Switch_Moutain = 0;
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;train_move_right.c: 126: {
  6359                           ;train_move_right.c: 127: Switch_Train_Move = 0;
  6360  003730  0E1A               	movlw	26
  6361  003732  ECBC  F020         	call	_GETxAPIxVAL
  6362  003736  0100               	movlb	0	; () banked
  6363  003738  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6364  00373A  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  6365  00373C  0100               	movlb	0	; () banked
  6366  00373E  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6367  003740  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  6368  003742  A0D8               	btfss	status,0,c
  6369  003744  D035               	goto	l7750
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;train_move_right.c: 133: {
  6373                           ;train_move_right.c: 134: Train_Move_Pwm_Count--;
  6374  003746  0605               	decf	_Train_Move_Pwm_Count,f,c
  6375  003748  A0D8               	btfss	status,0,c
  6376  00374A  0606               	decf	_Train_Move_Pwm_Count+1,f,c
  6377  00374C  D02C               	goto	l7748
  6378  00374E                     l7736:
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;train_move_right.c: 139: else if (rc == 2){
  6382  00374E  0E02               	movlw	2
  6383  003750  0100               	movlb	0	; () banked
  6384  003752  19CA               	xorwf	Left_Mountain_From_The_Left@rc& (0+255),w,b
  6385  003754  A4D8               	btfss	status,2,c
  6386  003756  D02E               	goto	l7752
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;train_move_right.c: 140: SETxPWM(Train_Move_Pwm_Count, 1);
  6390  003758  C005  F0C3         	movff	_Train_Move_Pwm_Count,SETxPWM@speed
  6391  00375C  C006  F0C4         	movff	_Train_Move_Pwm_Count+1,SETxPWM@speed+1
  6392  003760  0E01               	movlw	1
  6393  003762  0100               	movlb	0	; () banked
  6394  003764  6FC5               	movwf	SETxPWM@direction& (0+255),b
  6395  003766  ECB4  F01D         	call	_SETxPWM	;wreg free
  6396                           
  6397                           ;train_move_right.c: 141: if (Train_Move_Pwm_Count >= GETxAPIxVAL(23))
  6398  00376A  0E17               	movlw	23
  6399  00376C  ECBC  F020         	call	_GETxAPIxVAL
  6400  003770  0100               	movlb	0	; () banked
  6401  003772  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6402  003774  5C05               	subwf	_Train_Move_Pwm_Count,w,c
  6403  003776  0100               	movlb	0	; () banked
  6404  003778  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6405  00377A  5806               	subwfb	_Train_Move_Pwm_Count+1,w,c
  6406  00377C  A0D8               	btfss	status,0,c
  6407  00377E  D006               	goto	l7744
  6408  003780                     l7740:
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;train_move_right.c: 142: {
  6412                           ;train_move_right.c: 143: Switch_Train_Move = 0;
  6413  003780  0E00               	movlw	0
  6414  003782  6E19               	movwf	_Switch_Train_Move,c
  6415                           
  6416                           ;train_move_right.c: 144: Switch_Moutain = 0;
  6417  003784  0E00               	movlw	0
  6418  003786  6E17               	movwf	_Switch_Moutain,c
  6419                           
  6420                           ;train_move_right.c: 145: Return_Val = 0;
  6421  003788  0E00               	movlw	0
  6422  00378A  D015               	goto	L87
  6423  00378C                     l7744:
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;train_move_right.c: 148: else if (Train_Move_Pwm_Fast_Count >= GETxAPIxVAL(26))
  6427  00378C  0E1A               	movlw	26
  6428  00378E  ECBC  F020         	call	_GETxAPIxVAL
  6429  003792  0100               	movlb	0	; () banked
  6430  003794  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6431  003796  5C07               	subwf	_Train_Move_Pwm_Fast_Count,w,c
  6432  003798  0100               	movlb	0	; () banked
  6433  00379A  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6434  00379C  5808               	subwfb	_Train_Move_Pwm_Fast_Count+1,w,c
  6435  00379E  A0D8               	btfss	status,0,c
  6436  0037A0  D007               	goto	l7750
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;train_move_right.c: 149: {
  6440                           ;train_move_right.c: 150: Train_Move_Pwm_Count++;
  6441  0037A2  4A05               	infsnz	_Train_Move_Pwm_Count,f,c
  6442  0037A4  2A06               	incf	_Train_Move_Pwm_Count+1,f,c
  6443  0037A6                     l7748:
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;train_move_right.c: 151: Train_Move_Pwm_Fast_Count = 0;
  6447  0037A6  0E00               	movlw	0
  6448  0037A8  6E08               	movwf	_Train_Move_Pwm_Fast_Count+1,c
  6449  0037AA  0E00               	movlw	0
  6450  0037AC  6E07               	movwf	_Train_Move_Pwm_Fast_Count,c
  6451                           
  6452                           ;train_move_right.c: 152: }
  6453  0037AE  D002               	goto	l7752
  6454  0037B0                     l7750:
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;train_move_right.c: 153: else {Train_Move_Pwm_Fast_Count++;}
  6458  0037B0  4A07               	infsnz	_Train_Move_Pwm_Fast_Count,f,c
  6459  0037B2  2A08               	incf	_Train_Move_Pwm_Fast_Count+1,f,c
  6460  0037B4                     l7752:
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;train_move_right.c: 154: }
  6464                           ;train_move_right.c: 155: Return_Val = 1;
  6465  0037B4  0E01               	movlw	1
  6466  0037B6                     L87:
  6467  0037B6  0100               	movlb	0	; () banked
  6468  0037B8  6FDC               	movwf	Left_Mountain_From_The_Left@Return_Val& (0+255),b
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;train_move_right.c: 160: }
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;train_move_right.c: 159: break;
  6475                           
  6476                           ;train_move_right.c: 158: default:
  6477                           
  6478                           ;train_move_right.c: 156: break;
  6479  0037BA  D007               	goto	l7758
  6480  0037BC                     l7756:
  6481  0037BC  5017               	movf	_Switch_Moutain,w,c
  6482                           
  6483                           ; Switch size 1, requested type "space"
  6484                           ; Number of cases is 2, Range of values is 0 to 1
  6485                           ; switch strategies available:
  6486                           ; Name         Instructions Cycles
  6487                           ; simple_byte            7     4 (average)
  6488                           ;	Chosen strategy is simple_byte
  6489  0037BE  0A00               	xorlw	0	; case 0
  6490  0037C0  B4D8               	btfsc	status,2,c
  6491  0037C2  D780               	goto	l7708
  6492  0037C4  0A01               	xorlw	1	; case 1
  6493  0037C6  B4D8               	btfsc	status,2,c
  6494  0037C8  D79B               	goto	l7720
  6495  0037CA                     l7758:
  6496                           
  6497                           ;train_move_right.c: 162: return(Return_Val);
  6498  0037CA  0100               	movlb	0	; () banked
  6499  0037CC  51DC               	movf	Left_Mountain_From_The_Left@Return_Val& (0+255),w,b
  6500  0037CE  0012               	return	
  6501  0037D0                     __end_of_Left_Mountain_From_The_Left:
  6502                           	opt stack 0
  6503                           tblptru	equ	0xFF8
  6504                           tblptrh	equ	0xFF7
  6505                           tblptrl	equ	0xFF6
  6506                           tablat	equ	0xFF5
  6507                           postinc0	equ	0xFEE
  6508                           wreg	equ	0xFE8
  6509                           postdec1	equ	0xFE5
  6510                           fsr1l	equ	0xFE1
  6511                           status	equ	0xFD8
  6512                           
  6513 ;; *************** function _SETxPWM *****************
  6514 ;; Defined at:
  6515 ;;		line 20 in file "../set_pwm.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  speed           2   10[BANK0 ] unsigned int 
  6518 ;;  direction       1   12[BANK0 ] unsigned char 
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;  pwm_speed       2   15[BANK0 ] unsigned int 
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  1    wreg      void 
  6523 ;; Registers used:
  6524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6530 ;;      Params:         0       3       0       0       0       0       0       0       0
  6531 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6532 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6533 ;;      Totals:         0       7       0       0       0       0       0       0       0
  6534 ;;Total ram usage:        7 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; Hardware stack levels required when called:    5
  6537 ;; This function calls:
  6538 ;;		_SETxAPIxVAL
  6539 ;; This function is called by:
  6540 ;;		_Update_StateMchn
  6541 ;;		_Train_Move_Left_Start
  6542 ;;		_Right_Mountain_From_The_Right
  6543 ;;		_Left_Mountain_From_The_Right
  6544 ;;		_Train_Move_Left_Brake
  6545 ;;		_Train_Move_Right_Start
  6546 ;;		_Left_Mountain_From_The_Left
  6547 ;;		_Right_Mountain_From_The_Left
  6548 ;;		_Train_Move_Right_Brake
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text11
  6553  003B68                     __ptext11:
  6554                           	opt stack 0
  6555  003B68                     _SETxPWM:
  6556                           	opt stack 22
  6557                           
  6558                           ;set_pwm.c: 22: unsigned int pwm_speed = 511;
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;incstack = 0
  6562  003B68  0E01               	movlw	1
  6563  003B6A  0100               	movlb	0	; () banked
  6564  003B6C  6FC9               	movwf	(SETxPWM@pwm_speed+1)& (0+255),b
  6565  003B6E  69C8               	setf	SETxPWM@pwm_speed& (0+255),b
  6566                           
  6567                           ;set_pwm.c: 24: if (direction == 0 && speed > 0){
  6568  003B70  0100               	movlb	0	; () banked
  6569  003B72  51C5               	movf	SETxPWM@direction& (0+255),w,b
  6570  003B74  0100               	movlb	0	; () banked
  6571  003B76  A4D8               	btfss	status,2,c
  6572  003B78  D025               	goto	l7382
  6573                           
  6574                           ; BSR set to: 0
  6575  003B7A  0100               	movlb	0	; () banked
  6576  003B7C  51C3               	movf	SETxPWM@speed& (0+255),w,b
  6577  003B7E  0100               	movlb	0	; () banked
  6578  003B80  11C4               	iorwf	(SETxPWM@speed+1)& (0+255),w,b
  6579  003B82  B4D8               	btfsc	status,2,c
  6580  003B84  D01F               	goto	l7382
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;set_pwm.c: 25: pwm_speed = 511 - (speed * 2);
  6584  003B86  C0C3  F0C6         	movff	SETxPWM@speed,??_SETxPWM
  6585  003B8A  C0C4  F0C7         	movff	SETxPWM@speed+1,??_SETxPWM+1
  6586  003B8E  90D8               	bcf	status,0,c
  6587  003B90  0100               	movlb	0	; () banked
  6588  003B92  37C6               	rlcf	??_SETxPWM& (0+255),f,b
  6589  003B94  37C7               	rlcf	(??_SETxPWM+1)& (0+255),f,b
  6590  003B96  0100               	movlb	0	; () banked
  6591  003B98  1FC6               	comf	??_SETxPWM& (0+255),f,b
  6592  003B9A  1FC7               	comf	(??_SETxPWM+1)& (0+255),f,b
  6593  003B9C  4BC6               	infsnz	??_SETxPWM& (0+255),f,b
  6594  003B9E  2BC7               	incf	(??_SETxPWM+1)& (0+255),f,b
  6595  003BA0  0EFF               	movlw	255
  6596  003BA2  0100               	movlb	0	; () banked
  6597  003BA4  25C6               	addwf	??_SETxPWM& (0+255),w,b
  6598  003BA6  0100               	movlb	0	; () banked
  6599  003BA8  6FC8               	movwf	SETxPWM@pwm_speed& (0+255),b
  6600  003BAA  0E01               	movlw	1
  6601  003BAC  0100               	movlb	0	; () banked
  6602  003BAE  21C7               	addwfc	(??_SETxPWM+1)& (0+255),w,b
  6603  003BB0  0100               	movlb	0	; () banked
  6604  003BB2  6FC9               	movwf	(SETxPWM@pwm_speed+1)& (0+255),b
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;set_pwm.c: 26: SETxAPIxVAL(68, pwm_speed);
  6608  003BB4  C0C8  F0BE         	movff	SETxPWM@pwm_speed,SETxAPIxVAL@value
  6609  003BB8  C0C9  F0BF         	movff	SETxPWM@pwm_speed+1,SETxAPIxVAL@value+1
  6610  003BBC  0E44               	movlw	68
  6611  003BBE  EC89  F01F         	call	_SETxAPIxVAL
  6612                           
  6613                           ;set_pwm.c: 28: }
  6614  003BC2  0012               	return	
  6615  003BC4                     l7382:
  6616                           
  6617                           ;set_pwm.c: 29: else if (direction == 1 && speed > 0){
  6618  003BC4  0100               	movlb	0	; () banked
  6619  003BC6  05C5               	decf	SETxPWM@direction& (0+255),w,b
  6620  003BC8  A4D8               	btfss	status,2,c
  6621  003BCA  0012               	return	
  6622                           
  6623                           ; BSR set to: 0
  6624  003BCC  0100               	movlb	0	; () banked
  6625  003BCE  51C3               	movf	SETxPWM@speed& (0+255),w,b
  6626  003BD0  0100               	movlb	0	; () banked
  6627  003BD2  11C4               	iorwf	(SETxPWM@speed+1)& (0+255),w,b
  6628  003BD4  B4D8               	btfsc	status,2,c
  6629  003BD6  0012               	return	
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;set_pwm.c: 30: pwm_speed = 511 + (speed * 2);
  6633  003BD8  C0C3  F0C6         	movff	SETxPWM@speed,??_SETxPWM
  6634  003BDC  C0C4  F0C7         	movff	SETxPWM@speed+1,??_SETxPWM+1
  6635  003BE0  90D8               	bcf	status,0,c
  6636  003BE2  0100               	movlb	0	; () banked
  6637  003BE4  37C6               	rlcf	??_SETxPWM& (0+255),f,b
  6638  003BE6  37C7               	rlcf	(??_SETxPWM+1)& (0+255),f,b
  6639  003BE8  0EFF               	movlw	255
  6640  003BEA  0100               	movlb	0	; () banked
  6641  003BEC  25C6               	addwf	??_SETxPWM& (0+255),w,b
  6642  003BEE  0100               	movlb	0	; () banked
  6643  003BF0  6FC8               	movwf	SETxPWM@pwm_speed& (0+255),b
  6644  003BF2  0E01               	movlw	1
  6645  003BF4  0100               	movlb	0	; () banked
  6646  003BF6  21C7               	addwfc	(??_SETxPWM+1)& (0+255),w,b
  6647  003BF8  0100               	movlb	0	; () banked
  6648  003BFA  6FC9               	movwf	(SETxPWM@pwm_speed+1)& (0+255),b
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;set_pwm.c: 31: SETxAPIxVAL(68, pwm_speed);
  6652  003BFC  C0C8  F0BE         	movff	SETxPWM@pwm_speed,SETxAPIxVAL@value
  6653  003C00  C0C9  F0BF         	movff	SETxPWM@pwm_speed+1,SETxAPIxVAL@value+1
  6654  003C04  0E44               	movlw	68
  6655  003C06  EC89  F01F         	call	_SETxAPIxVAL
  6656  003C0A  0012               	return	
  6657  003C0C                     __end_of_SETxPWM:
  6658                           	opt stack 0
  6659                           tblptru	equ	0xFF8
  6660                           tblptrh	equ	0xFF7
  6661                           tblptrl	equ	0xFF6
  6662                           tablat	equ	0xFF5
  6663                           postinc0	equ	0xFEE
  6664                           wreg	equ	0xFE8
  6665                           postdec1	equ	0xFE5
  6666                           fsr1l	equ	0xFE1
  6667                           status	equ	0xFD8
  6668                           
  6669 ;; *************** function _Junction *****************
  6670 ;; Defined at:
  6671 ;;		line 26 in file "../junction.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  Junction_Lef    1    wreg     unsigned char 
  6674 ;;  Straight_Ben    1   10[BANK0 ] unsigned char 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  Junction_Lef    1   11[BANK0 ] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      unsigned char 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6686 ;;      Params:         0       1       0       0       0       0       0       0       0
  6687 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6689 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6690 ;;Total ram usage:        2 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    5
  6693 ;; This function calls:
  6694 ;;		_GETxAPIxVAL
  6695 ;;		_SETxAPIxVAL
  6696 ;; This function is called by:
  6697 ;;		_Update_StateMchn
  6698 ;;		_Train_Path
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           	psect	text12
  6703  002A3A                     __ptext12:
  6704                           	opt stack 0
  6705  002A3A                     _Junction:
  6706                           	opt stack 23
  6707                           
  6708                           ;incstack = 0
  6709                           ;Junction@Junction_Left_Right stored from wreg
  6710  002A3A  0100               	movlb	0	; () banked
  6711  002A3C  6FC4               	movwf	Junction@Junction_Left_Right& (0+255),b
  6712                           
  6713                           ;junction.c: 28: static char Return_Val = 1;
  6714                           ;junction.c: 29: static unsigned int Junction_Switch_Time = 0;
  6715                           ;junction.c: 31: switch (Switch_Junction)
  6716  002A3E  D0CE               	goto	l7492
  6717  002A40                     l7452:
  6718  002A40  0E01               	movlw	1
  6719  002A42  0100               	movlb	0	; () banked
  6720  002A44  6FDB               	movwf	Junction@Return_Val& (0+255),b
  6721                           
  6722                           ;junction.c: 34: switch (Junction_Left_Right)
  6723  002A46  D076               	goto	l7472
  6724  002A48                     l7454:
  6725                           
  6726                           ; BSR set to: 0
  6727  002A48  0E00               	movlw	0
  6728  002A4A  0100               	movlb	0	; () banked
  6729  002A4C  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6730  002A4E  0E01               	movlw	1
  6731  002A50  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6732  002A52  0E40               	movlw	64
  6733  002A54  EC89  F01F         	call	_SETxAPIxVAL
  6734                           
  6735                           ;junction.c: 39: SETxAPIxVAL(82, 1);
  6736  002A58  0E00               	movlw	0
  6737  002A5A  0100               	movlb	0	; () banked
  6738  002A5C  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6739  002A5E  0E01               	movlw	1
  6740  002A60  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6741  002A62  0E52               	movlw	82
  6742  002A64  EC89  F01F         	call	_SETxAPIxVAL
  6743                           
  6744                           ;junction.c: 40: SETxAPIxVAL(83, 0);
  6745  002A68  0E00               	movlw	0
  6746  002A6A  0100               	movlb	0	; () banked
  6747  002A6C  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6748  002A6E  0E00               	movlw	0
  6749  002A70  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6750  002A72  0E53               	movlw	83
  6751  002A74  EC89  F01F         	call	_SETxAPIxVAL
  6752                           
  6753                           ;junction.c: 41: break;
  6754  002A78  D065               	goto	l7474
  6755  002A7A                     l7456:
  6756  002A7A  0E00               	movlw	0
  6757  002A7C  0100               	movlb	0	; () banked
  6758  002A7E  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6759  002A80  0E01               	movlw	1
  6760  002A82  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6761  002A84  0E41               	movlw	65
  6762  002A86  EC89  F01F         	call	_SETxAPIxVAL
  6763                           
  6764                           ;junction.c: 43: SETxAPIxVAL(82, 0);
  6765  002A8A  0E00               	movlw	0
  6766  002A8C  0100               	movlb	0	; () banked
  6767  002A8E  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6768  002A90  0E00               	movlw	0
  6769  002A92  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6770  002A94  0E52               	movlw	82
  6771  002A96  EC89  F01F         	call	_SETxAPIxVAL
  6772                           
  6773                           ;junction.c: 44: SETxAPIxVAL(83, 1);
  6774  002A9A  0E00               	movlw	0
  6775  002A9C  0100               	movlb	0	; () banked
  6776  002A9E  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6777  002AA0  0E01               	movlw	1
  6778  002AA2  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6779  002AA4  0E53               	movlw	83
  6780  002AA6  EC89  F01F         	call	_SETxAPIxVAL
  6781                           
  6782                           ;junction.c: 47: }
  6783                           
  6784                           ;junction.c: 46: default : break;
  6785                           
  6786                           ;junction.c: 45: break;
  6787  002AAA  D04C               	goto	l7474
  6788  002AAC                     l7460:
  6789  002AAC  0100               	movlb	0	; () banked
  6790  002AAE  51C3               	movf	Junction@Straight_Bend& (0+255),w,b
  6791                           
  6792                           ; Switch size 1, requested type "space"
  6793                           ; Number of cases is 2, Range of values is 0 to 1
  6794                           ; switch strategies available:
  6795                           ; Name         Instructions Cycles
  6796                           ; simple_byte            7     4 (average)
  6797                           ;	Chosen strategy is simple_byte
  6798  002AB0  0A00               	xorlw	0	; case 0
  6799  002AB2  B4D8               	btfsc	status,2,c
  6800  002AB4  D7C9               	goto	l7454
  6801  002AB6  0A01               	xorlw	1	; case 1
  6802  002AB8  B4D8               	btfsc	status,2,c
  6803  002ABA  D7DF               	goto	l7456
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;junction.c: 48: break;
  6807  002ABC  D043               	goto	l7474
  6808  002ABE                     l7462:
  6809                           
  6810                           ; BSR set to: 0
  6811  002ABE  0E00               	movlw	0
  6812  002AC0  0100               	movlb	0	; () banked
  6813  002AC2  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6814  002AC4  0E01               	movlw	1
  6815  002AC6  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6816  002AC8  0E42               	movlw	66
  6817  002ACA  EC89  F01F         	call	_SETxAPIxVAL
  6818                           
  6819                           ;junction.c: 53: SETxAPIxVAL(84, 1);
  6820  002ACE  0E00               	movlw	0
  6821  002AD0  0100               	movlb	0	; () banked
  6822  002AD2  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6823  002AD4  0E01               	movlw	1
  6824  002AD6  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6825  002AD8  0E54               	movlw	84
  6826  002ADA  EC89  F01F         	call	_SETxAPIxVAL
  6827                           
  6828                           ;junction.c: 54: SETxAPIxVAL(85, 0);
  6829  002ADE  0E00               	movlw	0
  6830  002AE0  0100               	movlb	0	; () banked
  6831  002AE2  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6832  002AE4  0E00               	movlw	0
  6833  002AE6  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6834  002AE8  0E55               	movlw	85
  6835  002AEA  EC89  F01F         	call	_SETxAPIxVAL
  6836                           
  6837                           ;junction.c: 55: break;
  6838  002AEE  D02A               	goto	l7474
  6839  002AF0                     l7464:
  6840  002AF0  0E00               	movlw	0
  6841  002AF2  0100               	movlb	0	; () banked
  6842  002AF4  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6843  002AF6  0E01               	movlw	1
  6844  002AF8  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6845  002AFA  0E43               	movlw	67
  6846  002AFC  EC89  F01F         	call	_SETxAPIxVAL
  6847                           
  6848                           ;junction.c: 57: SETxAPIxVAL(84, 0);
  6849  002B00  0E00               	movlw	0
  6850  002B02  0100               	movlb	0	; () banked
  6851  002B04  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6852  002B06  0E00               	movlw	0
  6853  002B08  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6854  002B0A  0E54               	movlw	84
  6855  002B0C  EC89  F01F         	call	_SETxAPIxVAL
  6856                           
  6857                           ;junction.c: 58: SETxAPIxVAL(85, 1);
  6858  002B10  0E00               	movlw	0
  6859  002B12  0100               	movlb	0	; () banked
  6860  002B14  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6861  002B16  0E01               	movlw	1
  6862  002B18  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6863  002B1A  0E55               	movlw	85
  6864  002B1C  EC89  F01F         	call	_SETxAPIxVAL
  6865                           
  6866                           ;junction.c: 61: }
  6867                           
  6868                           ;junction.c: 60: default : break;
  6869                           
  6870                           ;junction.c: 59: break;
  6871  002B20  D011               	goto	l7474
  6872  002B22                     l7468:
  6873  002B22  0100               	movlb	0	; () banked
  6874  002B24  51C3               	movf	Junction@Straight_Bend& (0+255),w,b
  6875                           
  6876                           ; Switch size 1, requested type "space"
  6877                           ; Number of cases is 2, Range of values is 0 to 1
  6878                           ; switch strategies available:
  6879                           ; Name         Instructions Cycles
  6880                           ; simple_byte            7     4 (average)
  6881                           ;	Chosen strategy is simple_byte
  6882  002B26  0A00               	xorlw	0	; case 0
  6883  002B28  B4D8               	btfsc	status,2,c
  6884  002B2A  D7C9               	goto	l7462
  6885  002B2C  0A01               	xorlw	1	; case 1
  6886  002B2E  B4D8               	btfsc	status,2,c
  6887  002B30  D7DF               	goto	l7464
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;junction.c: 65: }
  6891                           
  6892                           ; BSR set to: 0
  6893                           
  6894                           ;junction.c: 64: default : break;
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;junction.c: 62: break;
  6898  002B32  D008               	goto	l7474
  6899  002B34                     l7472:
  6900                           
  6901                           ; BSR set to: 0
  6902  002B34  0100               	movlb	0	; () banked
  6903  002B36  51C4               	movf	Junction@Junction_Left_Right& (0+255),w,b
  6904                           
  6905                           ; Switch size 1, requested type "space"
  6906                           ; Number of cases is 2, Range of values is 0 to 1
  6907                           ; switch strategies available:
  6908                           ; Name         Instructions Cycles
  6909                           ; simple_byte            7     4 (average)
  6910                           ;	Chosen strategy is simple_byte
  6911  002B38  0A00               	xorlw	0	; case 0
  6912  002B3A  B4D8               	btfsc	status,2,c
  6913  002B3C  D7B7               	goto	l7460
  6914  002B3E  0A01               	xorlw	1	; case 1
  6915  002B40  B4D8               	btfsc	status,2,c
  6916  002B42  D7EF               	goto	l7468
  6917  002B44                     l7474:
  6918                           
  6919                           ;junction.c: 66: Switch_Junction = 1;
  6920  002B44  0E01               	movlw	1
  6921  002B46  0100               	movlb	0	; () banked
  6922  002B48  6F8B               	movwf	_Switch_Junction& (0+255),b
  6923                           
  6924                           ;junction.c: 67: break;
  6925  002B4A  D053               	goto	l7494
  6926  002B4C                     l7476:
  6927                           
  6928                           ; BSR set to: 0
  6929  002B4C  0E13               	movlw	19
  6930  002B4E  ECBC  F020         	call	_GETxAPIxVAL
  6931  002B52  0100               	movlb	0	; () banked
  6932  002B54  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  6933  002B56  0100               	movlb	0	; () banked
  6934  002B58  5D60               	subwf	Junction@Junction_Switch_Time& (0+255),w,b
  6935  002B5A  0100               	movlb	0	; () banked
  6936  002B5C  51BA               	movf	(?_GETxAPIxVAL+1)& (0+255),w,b
  6937  002B5E  0100               	movlb	0	; () banked
  6938  002B60  5961               	subwfb	(Junction@Junction_Switch_Time+1)& (0+255),w,b
  6939  002B62  A0D8               	btfss	status,0,c
  6940  002B64  D00A               	goto	l7480
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;junction.c: 70: {
  6944                           ;junction.c: 71: Switch_Junction = 2;
  6945  002B66  0E02               	movlw	2
  6946  002B68  0100               	movlb	0	; () banked
  6947  002B6A  6F8B               	movwf	_Switch_Junction& (0+255),b
  6948                           
  6949                           ;junction.c: 72: Junction_Switch_Time = 0;
  6950  002B6C  0E00               	movlw	0
  6951  002B6E  0100               	movlb	0	; () banked
  6952  002B70  6F61               	movwf	(Junction@Junction_Switch_Time+1)& (0+255),b
  6953  002B72  0E00               	movlw	0
  6954  002B74  6F60               	movwf	Junction@Junction_Switch_Time& (0+255),b
  6955                           
  6956                           ;junction.c: 73: Return_Val = 1;
  6957  002B76  0E01               	movlw	1
  6958  002B78  D02E               	goto	L88
  6959  002B7A                     l7480:
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;junction.c: 75: }
  6963                           ;junction.c: 76: Return_Val = 1;
  6964  002B7A  0E01               	movlw	1
  6965  002B7C  0100               	movlb	0	; () banked
  6966  002B7E  6FDB               	movwf	Junction@Return_Val& (0+255),b
  6967                           
  6968                           ;junction.c: 77: Switch_Junction = 1;
  6969  002B80  0E01               	movlw	1
  6970  002B82  0100               	movlb	0	; () banked
  6971  002B84  6F8B               	movwf	_Switch_Junction& (0+255),b
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;junction.c: 78: Junction_Switch_Time++;
  6975  002B86  0100               	movlb	0	; () banked
  6976  002B88  4B60               	infsnz	Junction@Junction_Switch_Time& (0+255),f,b
  6977  002B8A  2B61               	incf	(Junction@Junction_Switch_Time+1)& (0+255),f,b
  6978                           
  6979                           ;junction.c: 79: break;
  6980  002B8C  D032               	goto	l7494
  6981  002B8E                     l7484:
  6982                           
  6983                           ; BSR set to: 0
  6984  002B8E  0E00               	movlw	0
  6985  002B90  0100               	movlb	0	; () banked
  6986  002B92  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6987  002B94  0E00               	movlw	0
  6988  002B96  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6989  002B98  0E40               	movlw	64
  6990  002B9A  EC89  F01F         	call	_SETxAPIxVAL
  6991                           
  6992                           ;junction.c: 82: SETxAPIxVAL(65, 0);
  6993  002B9E  0E00               	movlw	0
  6994  002BA0  0100               	movlb	0	; () banked
  6995  002BA2  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  6996  002BA4  0E00               	movlw	0
  6997  002BA6  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  6998  002BA8  0E41               	movlw	65
  6999  002BAA  EC89  F01F         	call	_SETxAPIxVAL
  7000                           
  7001                           ;junction.c: 83: SETxAPIxVAL(66,0);
  7002  002BAE  0E00               	movlw	0
  7003  002BB0  0100               	movlb	0	; () banked
  7004  002BB2  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7005  002BB4  0E00               	movlw	0
  7006  002BB6  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  7007  002BB8  0E42               	movlw	66
  7008  002BBA  EC89  F01F         	call	_SETxAPIxVAL
  7009                           
  7010                           ;junction.c: 84: SETxAPIxVAL(67,0);
  7011  002BBE  0E00               	movlw	0
  7012  002BC0  0100               	movlb	0	; () banked
  7013  002BC2  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7014  002BC4  0E00               	movlw	0
  7015  002BC6  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  7016  002BC8  0E43               	movlw	67
  7017  002BCA  EC89  F01F         	call	_SETxAPIxVAL
  7018                           
  7019                           ;junction.c: 85: Switch_Junction = 0;
  7020  002BCE  0E00               	movlw	0
  7021  002BD0  0100               	movlb	0	; () banked
  7022  002BD2  6F8B               	movwf	_Switch_Junction& (0+255),b
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;junction.c: 86: Return_Val = 0;
  7026  002BD4  0E00               	movlw	0
  7027  002BD6                     L88:
  7028  002BD6  0100               	movlb	0	; () banked
  7029  002BD8  6FDB               	movwf	Junction@Return_Val& (0+255),b
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;junction.c: 90: }
  7033                           
  7034                           ; BSR set to: 0
  7035                           
  7036                           ;junction.c: 89: default : break;
  7037                           
  7038                           ;junction.c: 87: break;
  7039  002BDA  D00B               	goto	l7494
  7040  002BDC                     l7492:
  7041  002BDC  0100               	movlb	0	; () banked
  7042  002BDE  518B               	movf	_Switch_Junction& (0+255),w,b
  7043                           
  7044                           ; Switch size 1, requested type "space"
  7045                           ; Number of cases is 3, Range of values is 0 to 2
  7046                           ; switch strategies available:
  7047                           ; Name         Instructions Cycles
  7048                           ; simple_byte           10     6 (average)
  7049                           ;	Chosen strategy is simple_byte
  7050  002BE0  0A00               	xorlw	0	; case 0
  7051  002BE2  B4D8               	btfsc	status,2,c
  7052  002BE4  D72D               	goto	l7452
  7053  002BE6  0A01               	xorlw	1	; case 1
  7054  002BE8  B4D8               	btfsc	status,2,c
  7055  002BEA  D7B0               	goto	l7476
  7056  002BEC  0A03               	xorlw	3	; case 2
  7057  002BEE  B4D8               	btfsc	status,2,c
  7058  002BF0  D7CE               	goto	l7484
  7059  002BF2                     l7494:
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;junction.c: 92: return (Return_Val);
  7063  002BF2  0100               	movlb	0	; () banked
  7064  002BF4  51DB               	movf	Junction@Return_Val& (0+255),w,b
  7065  002BF6  0012               	return	
  7066  002BF8                     __end_of_Junction:
  7067                           	opt stack 0
  7068                           tblptru	equ	0xFF8
  7069                           tblptrh	equ	0xFF7
  7070                           tblptrl	equ	0xFF6
  7071                           tablat	equ	0xFF5
  7072                           postinc0	equ	0xFEE
  7073                           wreg	equ	0xFE8
  7074                           postdec1	equ	0xFE5
  7075                           fsr1l	equ	0xFE1
  7076                           status	equ	0xFD8
  7077                           
  7078 ;; *************** function _Red_Led *****************
  7079 ;; Defined at:
  7080 ;;		line 97 in file "../io.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  Operation       1    wreg     unsigned char 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  Operation       1    0[BANK0 ] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7094 ;;      Params:         0       0       0       0       0       0       0       0       0
  7095 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7097 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7098 ;;Total ram usage:        1 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    3
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_Update_StateMchn
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text13
  7109  003C0C                     __ptext13:
  7110                           	opt stack 0
  7111  003C0C                     _Red_Led:
  7112                           	opt stack 26
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;incstack = 0
  7116                           ;Red_Led@Operation stored from wreg
  7117  003C0C  0100               	movlb	0	; () banked
  7118  003C0E  6FB9               	movwf	Red_Led@Operation& (0+255),b
  7119                           
  7120                           ;io.c: 99: switch(Operation)
  7121  003C10  D03C               	goto	l8396
  7122  003C12                     l808:
  7123                           
  7124                           ; BSR set to: 0
  7125  003C12  9A83               	bcf	3971,5,c	;volatile
  7126  003C14  0012               	return	
  7127  003C16                     l810:
  7128                           
  7129                           ; BSR set to: 0
  7130  003C16  8A83               	bsf	3971,5,c	;volatile
  7131  003C18  0012               	return	
  7132  003C1A                     l8374:
  7133                           
  7134                           ; BSR set to: 0
  7135  003C1A  0100               	movlb	0	; () banked
  7136  003C1C  4B7A               	infsnz	_Red_Led_Counter& (0+255),f,b
  7137  003C1E  2B7B               	incf	(_Red_Led_Counter+1)& (0+255),f,b
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;io.c: 106: if(Red_Led_Counter >= 3000)
  7141  003C20  0EB8               	movlw	184
  7142  003C22  0100               	movlb	0	; () banked
  7143  003C24  5D7A               	subwf	_Red_Led_Counter& (0+255),w,b
  7144  003C26  0E0B               	movlw	11
  7145  003C28  0100               	movlb	0	; () banked
  7146  003C2A  597B               	subwfb	(_Red_Led_Counter+1)& (0+255),w,b
  7147  003C2C  A0D8               	btfss	status,0,c
  7148  003C2E  D005               	goto	l8380
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;io.c: 107: {
  7152                           ;io.c: 108: Red_Led_Counter = 0;
  7153  003C30  0E00               	movlw	0
  7154  003C32  0100               	movlb	0	; () banked
  7155  003C34  6F7B               	movwf	(_Red_Led_Counter+1)& (0+255),b
  7156  003C36  0E00               	movlw	0
  7157  003C38  6F7A               	movwf	_Red_Led_Counter& (0+255),b
  7158  003C3A                     l8380:
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;io.c: 109: }
  7162                           ;io.c: 110: if(Red_Led_Counter >= 3000/2)
  7163  003C3A  0EDC               	movlw	220
  7164  003C3C  0100               	movlb	0	; () banked
  7165  003C3E  5D7A               	subwf	_Red_Led_Counter& (0+255),w,b
  7166  003C40  0E05               	movlw	5
  7167  003C42  0100               	movlb	0	; () banked
  7168  003C44  597B               	subwfb	(_Red_Led_Counter+1)& (0+255),w,b
  7169  003C46  A0D8               	btfss	status,0,c
  7170  003C48  D002               	goto	l813
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;io.c: 111: {
  7174                           ;io.c: 112: PORTDbits.RD5 = 1;
  7175  003C4A  8A83               	bsf	3971,5,c	;volatile
  7176                           
  7177                           ;io.c: 113: }
  7178  003C4C  0012               	return	
  7179  003C4E                     l813:
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;io.c: 114: else {PORTDbits.RD5 = 0;}
  7183  003C4E  9A83               	bcf	3971,5,c	;volatile
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;io.c: 115: break;
  7187  003C50  0012               	return	
  7188  003C52                     l8384:
  7189                           
  7190                           ; BSR set to: 0
  7191  003C52  0100               	movlb	0	; () banked
  7192  003C54  4B7A               	infsnz	_Red_Led_Counter& (0+255),f,b
  7193  003C56  2B7B               	incf	(_Red_Led_Counter+1)& (0+255),f,b
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;io.c: 118: if(Red_Led_Counter >= 1000)
  7197  003C58  0EE8               	movlw	232
  7198  003C5A  0100               	movlb	0	; () banked
  7199  003C5C  5D7A               	subwf	_Red_Led_Counter& (0+255),w,b
  7200  003C5E  0E03               	movlw	3
  7201  003C60  0100               	movlb	0	; () banked
  7202  003C62  597B               	subwfb	(_Red_Led_Counter+1)& (0+255),w,b
  7203  003C64  A0D8               	btfss	status,0,c
  7204  003C66  D005               	goto	l8390
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;io.c: 119: {
  7208                           ;io.c: 120: Red_Led_Counter = 0;
  7209  003C68  0E00               	movlw	0
  7210  003C6A  0100               	movlb	0	; () banked
  7211  003C6C  6F7B               	movwf	(_Red_Led_Counter+1)& (0+255),b
  7212  003C6E  0E00               	movlw	0
  7213  003C70  6F7A               	movwf	_Red_Led_Counter& (0+255),b
  7214  003C72                     l8390:
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;io.c: 121: }
  7218                           ;io.c: 122: if(Red_Led_Counter >= 1000/2)
  7219  003C72  0EF4               	movlw	244
  7220  003C74  0100               	movlb	0	; () banked
  7221  003C76  5D7A               	subwf	_Red_Led_Counter& (0+255),w,b
  7222  003C78  0E01               	movlw	1
  7223  003C7A  0100               	movlb	0	; () banked
  7224  003C7C  597B               	subwfb	(_Red_Led_Counter+1)& (0+255),w,b
  7225  003C7E  A0D8               	btfss	status,0,c
  7226  003C80  D002               	goto	l817
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;io.c: 123: {
  7230                           ;io.c: 124: PORTDbits.RD5 = 1;
  7231  003C82  8A83               	bsf	3971,5,c	;volatile
  7232                           
  7233                           ;io.c: 125: }
  7234  003C84  0012               	return	
  7235  003C86                     l817:
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;io.c: 126: else {PORTDbits.RD5 = 0;}
  7239  003C86  9A83               	bcf	3971,5,c	;volatile
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;io.c: 130: }
  7243                           
  7244                           ; BSR set to: 0
  7245                           
  7246                           ;io.c: 129: default : break;
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;io.c: 127: break;
  7250  003C88  0012               	return	
  7251  003C8A                     l8396:
  7252  003C8A  0100               	movlb	0	; () banked
  7253  003C8C  51B9               	movf	Red_Led@Operation& (0+255),w,b
  7254                           
  7255                           ; Switch size 1, requested type "space"
  7256                           ; Number of cases is 4, Range of values is 0 to 3
  7257                           ; switch strategies available:
  7258                           ; Name         Instructions Cycles
  7259                           ; simple_byte           13     7 (average)
  7260                           ;	Chosen strategy is simple_byte
  7261  003C8E  0A00               	xorlw	0	; case 0
  7262  003C90  B4D8               	btfsc	status,2,c
  7263  003C92  D7BF               	goto	l808
  7264  003C94  0A01               	xorlw	1	; case 1
  7265  003C96  B4D8               	btfsc	status,2,c
  7266  003C98  D7BE               	goto	l810
  7267  003C9A  0A03               	xorlw	3	; case 2
  7268  003C9C  B4D8               	btfsc	status,2,c
  7269  003C9E  D7BD               	goto	l8374
  7270  003CA0  0A01               	xorlw	1	; case 3
  7271  003CA2  A4D8               	btfss	status,2,c
  7272  003CA4  0012               	return	
  7273  003CA6  D7D5               	goto	l8384
  7274  003CA8                     __end_of_Red_Led:
  7275                           	opt stack 0
  7276                           tblptru	equ	0xFF8
  7277                           tblptrh	equ	0xFF7
  7278                           tblptrl	equ	0xFF6
  7279                           tablat	equ	0xFF5
  7280                           postinc0	equ	0xFEE
  7281                           wreg	equ	0xFE8
  7282                           postdec1	equ	0xFE5
  7283                           fsr1l	equ	0xFE1
  7284                           status	equ	0xFD8
  7285                           
  7286 ;; *************** function _Green_Led *****************
  7287 ;; Defined at:
  7288 ;;		line 47 in file "../io.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  Operation       1    wreg     unsigned char 
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;  Operation       1    0[BANK0 ] unsigned char 
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  1    wreg      void 
  7295 ;; Registers used:
  7296 ;;		wreg, status,2, status,0
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7302 ;;      Params:         0       0       0       0       0       0       0       0       0
  7303 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7305 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7306 ;;Total ram usage:        1 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:    3
  7309 ;; This function calls:
  7310 ;;		Nothing
  7311 ;; This function is called by:
  7312 ;;		_Update_StateMchn
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	text14
  7317  003CA8                     __ptext14:
  7318                           	opt stack 0
  7319  003CA8                     _Green_Led:
  7320                           	opt stack 26
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;incstack = 0
  7324                           ;Green_Led@Operation stored from wreg
  7325  003CA8  0100               	movlb	0	; () banked
  7326  003CAA  6FB9               	movwf	Green_Led@Operation& (0+255),b
  7327                           
  7328                           ;io.c: 49: switch(Operation)
  7329  003CAC  D03C               	goto	l8370
  7330  003CAE                     l792:
  7331                           
  7332                           ; BSR set to: 0
  7333  003CAE  9C83               	bcf	3971,6,c	;volatile
  7334  003CB0  0012               	return	
  7335  003CB2                     l794:
  7336                           
  7337                           ; BSR set to: 0
  7338  003CB2  8C83               	bsf	3971,6,c	;volatile
  7339  003CB4  0012               	return	
  7340  003CB6                     l8348:
  7341                           
  7342                           ; BSR set to: 0
  7343  003CB6  0100               	movlb	0	; () banked
  7344  003CB8  4B74               	infsnz	_Green_Led_Counter& (0+255),f,b
  7345  003CBA  2B75               	incf	(_Green_Led_Counter+1)& (0+255),f,b
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;io.c: 56: if(Green_Led_Counter >= 3000)
  7349  003CBC  0EB8               	movlw	184
  7350  003CBE  0100               	movlb	0	; () banked
  7351  003CC0  5D74               	subwf	_Green_Led_Counter& (0+255),w,b
  7352  003CC2  0E0B               	movlw	11
  7353  003CC4  0100               	movlb	0	; () banked
  7354  003CC6  5975               	subwfb	(_Green_Led_Counter+1)& (0+255),w,b
  7355  003CC8  A0D8               	btfss	status,0,c
  7356  003CCA  D005               	goto	l8354
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;io.c: 57: {
  7360                           ;io.c: 58: Green_Led_Counter = 0;
  7361  003CCC  0E00               	movlw	0
  7362  003CCE  0100               	movlb	0	; () banked
  7363  003CD0  6F75               	movwf	(_Green_Led_Counter+1)& (0+255),b
  7364  003CD2  0E00               	movlw	0
  7365  003CD4  6F74               	movwf	_Green_Led_Counter& (0+255),b
  7366  003CD6                     l8354:
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;io.c: 59: }
  7370                           ;io.c: 60: if(Green_Led_Counter >= 3000/2)
  7371  003CD6  0EDC               	movlw	220
  7372  003CD8  0100               	movlb	0	; () banked
  7373  003CDA  5D74               	subwf	_Green_Led_Counter& (0+255),w,b
  7374  003CDC  0E05               	movlw	5
  7375  003CDE  0100               	movlb	0	; () banked
  7376  003CE0  5975               	subwfb	(_Green_Led_Counter+1)& (0+255),w,b
  7377  003CE2  A0D8               	btfss	status,0,c
  7378  003CE4  D002               	goto	l797
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;io.c: 61: {
  7382                           ;io.c: 62: PORTDbits.RD6 = 1;
  7383  003CE6  8C83               	bsf	3971,6,c	;volatile
  7384                           
  7385                           ;io.c: 63: }
  7386  003CE8  0012               	return	
  7387  003CEA                     l797:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;io.c: 64: else {PORTDbits.RD6 = 0;}
  7391  003CEA  9C83               	bcf	3971,6,c	;volatile
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;io.c: 65: break;
  7395  003CEC  0012               	return	
  7396  003CEE                     l8358:
  7397                           
  7398                           ; BSR set to: 0
  7399  003CEE  0100               	movlb	0	; () banked
  7400  003CF0  4B74               	infsnz	_Green_Led_Counter& (0+255),f,b
  7401  003CF2  2B75               	incf	(_Green_Led_Counter+1)& (0+255),f,b
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;io.c: 68: if(Green_Led_Counter >= 1000)
  7405  003CF4  0EE8               	movlw	232
  7406  003CF6  0100               	movlb	0	; () banked
  7407  003CF8  5D74               	subwf	_Green_Led_Counter& (0+255),w,b
  7408  003CFA  0E03               	movlw	3
  7409  003CFC  0100               	movlb	0	; () banked
  7410  003CFE  5975               	subwfb	(_Green_Led_Counter+1)& (0+255),w,b
  7411  003D00  A0D8               	btfss	status,0,c
  7412  003D02  D005               	goto	l8364
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;io.c: 69: {
  7416                           ;io.c: 70: Green_Led_Counter = 0;
  7417  003D04  0E00               	movlw	0
  7418  003D06  0100               	movlb	0	; () banked
  7419  003D08  6F75               	movwf	(_Green_Led_Counter+1)& (0+255),b
  7420  003D0A  0E00               	movlw	0
  7421  003D0C  6F74               	movwf	_Green_Led_Counter& (0+255),b
  7422  003D0E                     l8364:
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;io.c: 71: }
  7426                           ;io.c: 72: if(Green_Led_Counter >= 1000/2)
  7427  003D0E  0EF4               	movlw	244
  7428  003D10  0100               	movlb	0	; () banked
  7429  003D12  5D74               	subwf	_Green_Led_Counter& (0+255),w,b
  7430  003D14  0E01               	movlw	1
  7431  003D16  0100               	movlb	0	; () banked
  7432  003D18  5975               	subwfb	(_Green_Led_Counter+1)& (0+255),w,b
  7433  003D1A  A0D8               	btfss	status,0,c
  7434  003D1C  D002               	goto	l801
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;io.c: 73: {
  7438                           ;io.c: 74: PORTDbits.RD6 = 1;
  7439  003D1E  8C83               	bsf	3971,6,c	;volatile
  7440                           
  7441                           ;io.c: 75: }
  7442  003D20  0012               	return	
  7443  003D22                     l801:
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;io.c: 76: else {PORTDbits.RD6 = 0;}
  7447  003D22  9C83               	bcf	3971,6,c	;volatile
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;io.c: 80: }
  7451                           
  7452                           ; BSR set to: 0
  7453                           
  7454                           ;io.c: 79: default : break;
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;io.c: 77: break;
  7458  003D24  0012               	return	
  7459  003D26                     l8370:
  7460  003D26  0100               	movlb	0	; () banked
  7461  003D28  51B9               	movf	Green_Led@Operation& (0+255),w,b
  7462                           
  7463                           ; Switch size 1, requested type "space"
  7464                           ; Number of cases is 4, Range of values is 0 to 3
  7465                           ; switch strategies available:
  7466                           ; Name         Instructions Cycles
  7467                           ; simple_byte           13     7 (average)
  7468                           ;	Chosen strategy is simple_byte
  7469  003D2A  0A00               	xorlw	0	; case 0
  7470  003D2C  B4D8               	btfsc	status,2,c
  7471  003D2E  D7BF               	goto	l792
  7472  003D30  0A01               	xorlw	1	; case 1
  7473  003D32  B4D8               	btfsc	status,2,c
  7474  003D34  D7BE               	goto	l794
  7475  003D36  0A03               	xorlw	3	; case 2
  7476  003D38  B4D8               	btfsc	status,2,c
  7477  003D3A  D7BD               	goto	l8348
  7478  003D3C  0A01               	xorlw	1	; case 3
  7479  003D3E  A4D8               	btfss	status,2,c
  7480  003D40  0012               	return	
  7481  003D42  D7D5               	goto	l8358
  7482  003D44                     __end_of_Green_Led:
  7483                           	opt stack 0
  7484                           tblptru	equ	0xFF8
  7485                           tblptrh	equ	0xFF7
  7486                           tblptrl	equ	0xFF6
  7487                           tablat	equ	0xFF5
  7488                           postinc0	equ	0xFEE
  7489                           wreg	equ	0xFE8
  7490                           postdec1	equ	0xFE5
  7491                           fsr1l	equ	0xFE1
  7492                           status	equ	0xFD8
  7493                           
  7494 ;; *************** function _Eeprom_Store *****************
  7495 ;; Defined at:
  7496 ;;		line 21 in file "../eeprom_settings.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;		None
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;		None
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  1    wreg      void 
  7503 ;; Registers used:
  7504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7510 ;;      Params:         0       0       0       0       0       0       0       0       0
  7511 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7513 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7514 ;;Total ram usage:        0 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:    4
  7517 ;; This function calls:
  7518 ;;		_GETxAPIxVAL
  7519 ;; This function is called by:
  7520 ;;		_Update_StateMchn
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text15
  7525  0039D2                     __ptext15:
  7526                           	opt stack 0
  7527  0039D2                     _Eeprom_Store:
  7528                           	opt stack 25
  7529                           
  7530                           ;eeprom_settings.c: 23: INTCON = 0x00;
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;incstack = 0
  7534  0039D2  0E00               	movlw	0
  7535  0039D4  6EF2               	movwf	intcon,c	;volatile
  7536                           
  7537                           ;eeprom_settings.c: 25: EECON1bits.EEPGD = 0;
  7538  0039D6  9EA6               	bcf	4006,7,c	;volatile
  7539                           
  7540                           ;eeprom_settings.c: 26: EECON1bits.WREN = 1;
  7541  0039D8  84A6               	bsf	4006,2,c	;volatile
  7542                           
  7543                           ;eeprom_settings.c: 27: EEADR = 0x01;
  7544  0039DA  0E01               	movlw	1
  7545  0039DC  6EA9               	movwf	4009,c	;volatile
  7546                           
  7547                           ;eeprom_settings.c: 28: EEDATA = GETxAPIxVAL(23);
  7548  0039DE  0E17               	movlw	23
  7549  0039E0  ECBC  F020         	call	_GETxAPIxVAL
  7550  0039E4  0100               	movlb	0	; () banked
  7551  0039E6  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  7552  0039E8  6EA8               	movwf	4008,c	;volatile
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;eeprom_settings.c: 29: EECON2 = 0x55;
  7556  0039EA  0E55               	movlw	85
  7557  0039EC  6EA7               	movwf	4007,c	;volatile
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;eeprom_settings.c: 30: EECON2 = 0xaa;
  7561  0039EE  0EAA               	movlw	170
  7562  0039F0  6EA7               	movwf	4007,c	;volatile
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;eeprom_settings.c: 31: EECON1bits.WR = 1;
  7566  0039F2  82A6               	bsf	4006,1,c	;volatile
  7567  0039F4                     l721:
  7568  0039F4  A8A1               	btfss	4001,4,c	;volatile
  7569  0039F6  D7FE               	goto	l721
  7570                           
  7571                           ;eeprom_settings.c: 33: PIR2bits.EEIF = 0;
  7572  0039F8  98A1               	bcf	4001,4,c	;volatile
  7573                           
  7574                           ;eeprom_settings.c: 35: EECON1bits.EEPGD = 0;
  7575  0039FA  9EA6               	bcf	4006,7,c	;volatile
  7576                           
  7577                           ;eeprom_settings.c: 36: EECON1bits.WREN = 1;
  7578  0039FC  84A6               	bsf	4006,2,c	;volatile
  7579                           
  7580                           ;eeprom_settings.c: 37: EEADR = 0x00;
  7581  0039FE  0E00               	movlw	0
  7582  003A00  6EA9               	movwf	4009,c	;volatile
  7583                           
  7584                           ;eeprom_settings.c: 38: EEDATA = GETxAPIxVAL(23)>>8;
  7585  003A02  0E17               	movlw	23
  7586  003A04  ECBC  F020         	call	_GETxAPIxVAL
  7587  003A08  0100               	movlb	0	; () banked
  7588  003A0A  C0BA  F0B9         	movff	?_GETxAPIxVAL+1,?_GETxAPIxVAL
  7589  003A0E  0100               	movlb	0	; () banked
  7590  003A10  6BBA               	clrf	(?_GETxAPIxVAL+1)& (0+255),b
  7591  003A12  0100               	movlb	0	; () banked
  7592  003A14  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  7593  003A16  6EA8               	movwf	4008,c	;volatile
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;eeprom_settings.c: 39: EECON2 = 0x55;
  7597  003A18  0E55               	movlw	85
  7598  003A1A  6EA7               	movwf	4007,c	;volatile
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;eeprom_settings.c: 40: EECON2 = 0xaa;
  7602  003A1C  0EAA               	movlw	170
  7603  003A1E  6EA7               	movwf	4007,c	;volatile
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;eeprom_settings.c: 41: EECON1bits.WR = 1;
  7607  003A20  82A6               	bsf	4006,1,c	;volatile
  7608  003A22                     l724:
  7609  003A22  A8A1               	btfss	4001,4,c	;volatile
  7610  003A24  D7FE               	goto	l724
  7611                           
  7612                           ;eeprom_settings.c: 43: PIR2bits.EEIF = 0;
  7613  003A26  98A1               	bcf	4001,4,c	;volatile
  7614                           
  7615                           ;eeprom_settings.c: 45: EECON1bits.EEPGD = 0;
  7616  003A28  9EA6               	bcf	4006,7,c	;volatile
  7617                           
  7618                           ;eeprom_settings.c: 46: EECON1bits.WREN = 1;
  7619  003A2A  84A6               	bsf	4006,2,c	;volatile
  7620                           
  7621                           ;eeprom_settings.c: 47: EEADR = 0x03;
  7622  003A2C  0E03               	movlw	3
  7623  003A2E  6EA9               	movwf	4009,c	;volatile
  7624                           
  7625                           ;eeprom_settings.c: 48: EEDATA = GETxAPIxVAL(24);
  7626  003A30  0E18               	movlw	24
  7627  003A32  ECBC  F020         	call	_GETxAPIxVAL
  7628  003A36  0100               	movlb	0	; () banked
  7629  003A38  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  7630  003A3A  6EA8               	movwf	4008,c	;volatile
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;eeprom_settings.c: 49: EECON2 = 0x55;
  7634  003A3C  0E55               	movlw	85
  7635  003A3E  6EA7               	movwf	4007,c	;volatile
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;eeprom_settings.c: 50: EECON2 = 0xaa;
  7639  003A40  0EAA               	movlw	170
  7640  003A42  6EA7               	movwf	4007,c	;volatile
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;eeprom_settings.c: 51: EECON1bits.WR = 1;
  7644  003A44  82A6               	bsf	4006,1,c	;volatile
  7645  003A46                     l727:
  7646  003A46  A8A1               	btfss	4001,4,c	;volatile
  7647  003A48  D7FE               	goto	l727
  7648                           
  7649                           ;eeprom_settings.c: 53: PIR2bits.EEIF = 0;
  7650  003A4A  98A1               	bcf	4001,4,c	;volatile
  7651                           
  7652                           ;eeprom_settings.c: 55: EECON1bits.EEPGD = 0;
  7653  003A4C  9EA6               	bcf	4006,7,c	;volatile
  7654                           
  7655                           ;eeprom_settings.c: 56: EECON1bits.WREN = 1;
  7656  003A4E  84A6               	bsf	4006,2,c	;volatile
  7657                           
  7658                           ;eeprom_settings.c: 57: EEADR = 0x02;
  7659  003A50  0E02               	movlw	2
  7660  003A52  6EA9               	movwf	4009,c	;volatile
  7661                           
  7662                           ;eeprom_settings.c: 58: EEDATA = GETxAPIxVAL(24)>>8;
  7663  003A54  0E18               	movlw	24
  7664  003A56  ECBC  F020         	call	_GETxAPIxVAL
  7665  003A5A  0100               	movlb	0	; () banked
  7666  003A5C  C0BA  F0B9         	movff	?_GETxAPIxVAL+1,?_GETxAPIxVAL
  7667  003A60  0100               	movlb	0	; () banked
  7668  003A62  6BBA               	clrf	(?_GETxAPIxVAL+1)& (0+255),b
  7669  003A64  0100               	movlb	0	; () banked
  7670  003A66  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  7671  003A68  6EA8               	movwf	4008,c	;volatile
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;eeprom_settings.c: 59: EECON2 = 0x55;
  7675  003A6A  0E55               	movlw	85
  7676  003A6C  6EA7               	movwf	4007,c	;volatile
  7677                           
  7678                           ; BSR set to: 0
  7679                           ;eeprom_settings.c: 60: EECON2 = 0xaa;
  7680  003A6E  0EAA               	movlw	170
  7681  003A70  6EA7               	movwf	4007,c	;volatile
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;eeprom_settings.c: 61: EECON1bits.WR = 1;
  7685  003A72  82A6               	bsf	4006,1,c	;volatile
  7686  003A74                     l730:
  7687  003A74  A8A1               	btfss	4001,4,c	;volatile
  7688  003A76  D7FE               	goto	l730
  7689                           
  7690                           ;eeprom_settings.c: 63: PIR2bits.EEIF = 0;
  7691  003A78  98A1               	bcf	4001,4,c	;volatile
  7692                           
  7693                           ;eeprom_settings.c: 65: EECON1bits.EEPGD = 0;
  7694  003A7A  9EA6               	bcf	4006,7,c	;volatile
  7695                           
  7696                           ;eeprom_settings.c: 66: EECON1bits.WREN = 1;
  7697  003A7C  84A6               	bsf	4006,2,c	;volatile
  7698                           
  7699                           ;eeprom_settings.c: 67: EEADR = 0x04;
  7700  003A7E  0E04               	movlw	4
  7701  003A80  6EA9               	movwf	4009,c	;volatile
  7702                           
  7703                           ;eeprom_settings.c: 68: EEDATA = GETxAPIxVAL(25);
  7704  003A82  0E19               	movlw	25
  7705  003A84  ECBC  F020         	call	_GETxAPIxVAL
  7706  003A88  0100               	movlb	0	; () banked
  7707  003A8A  51B9               	movf	?_GETxAPIxVAL& (0+255),w,b
  7708  003A8C  6EA8               	movwf	4008,c	;volatile
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;eeprom_settings.c: 69: EECON2 = 0x55;
  7712  003A8E  0E55               	movlw	85
  7713  003A90  6EA7               	movwf	4007,c	;volatile
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;eeprom_settings.c: 70: EECON2 = 0xaa;
  7717  003A92  0EAA               	movlw	170
  7718  003A94  6EA7               	movwf	4007,c	;volatile
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;eeprom_settings.c: 71: EECON1bits.WR = 1;
  7722  003A96  82A6               	bsf	4006,1,c	;volatile
  7723  003A98                     l733:
  7724  003A98  A8A1               	btfss	4001,4,c	;volatile
  7725  003A9A  D7FE               	goto	l733
  7726                           
  7727                           ;eeprom_settings.c: 73: PIR2bits.EEIF = 0;
  7728  003A9C  98A1               	bcf	4001,4,c	;volatile
  7729                           
  7730                           ;eeprom_settings.c: 76: INTCON = 0xA0;
  7731  003A9E  0EA0               	movlw	160
  7732  003AA0  6EF2               	movwf	intcon,c	;volatile
  7733  003AA2  0012               	return		;funcret
  7734  003AA4                     __end_of_Eeprom_Store:
  7735                           	opt stack 0
  7736                           tblptru	equ	0xFF8
  7737                           tblptrh	equ	0xFF7
  7738                           tblptrl	equ	0xFF6
  7739                           tablat	equ	0xFF5
  7740                           intcon	equ	0xFF2
  7741                           postinc0	equ	0xFEE
  7742                           wreg	equ	0xFE8
  7743                           postdec1	equ	0xFE5
  7744                           fsr1l	equ	0xFE1
  7745                           status	equ	0xFD8
  7746                           
  7747 ;; *************** function _Debounce_Inputs *****************
  7748 ;; Defined at:
  7749 ;;		line 148 in file "../io.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;		None
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;		None
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      void 
  7756 ;; Registers used:
  7757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7763 ;;      Params:         0       0       0       0       0       0       0       0       0
  7764 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7765 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7766 ;;      Totals:         0       2       0       0       0       0       0       0       0
  7767 ;;Total ram usage:        2 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    5
  7770 ;; This function calls:
  7771 ;;		_GETxAPIxVAL
  7772 ;;		_SETxAPIxVAL
  7773 ;;		_SetDCPWM1
  7774 ;; This function is called by:
  7775 ;;		_Update_StateMchn
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           	psect	text16
  7780  001452                     __ptext16:
  7781                           	opt stack 0
  7782  001452                     _Debounce_Inputs:
  7783                           	opt stack 24
  7784                           
  7785                           ;io.c: 150: PORTAbits.RA3 = GETxAPIxVAL(64);
  7786                           
  7787                           ;incstack = 0
  7788  001452  0E40               	movlw	64
  7789  001454  ECBC  F020         	call	_GETxAPIxVAL
  7790  001458  0100               	movlb	0	; () banked
  7791  00145A  47B9               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7792  00145C  0100               	movlb	0	; () banked
  7793  00145E  47B9               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7794  001460  0100               	movlb	0	; () banked
  7795  001462  47B9               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7796  001464  5080               	movf	3968,w,c	;volatile
  7797  001466  0100               	movlb	0	; () banked
  7798  001468  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7799  00146A  0BF7               	andlw	-9
  7800  00146C  0100               	movlb	0	; () banked
  7801  00146E  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7802  001470  6E80               	movwf	3968,c	;volatile
  7803                           
  7804                           ;io.c: 151: PORTAbits.RA2 = GETxAPIxVAL(65);
  7805  001472  0E41               	movlw	65
  7806  001474  ECBC  F020         	call	_GETxAPIxVAL
  7807  001478  0100               	movlb	0	; () banked
  7808  00147A  47B9               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7809  00147C  0100               	movlb	0	; () banked
  7810  00147E  47B9               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7811  001480  5080               	movf	3968,w,c	;volatile
  7812  001482  0100               	movlb	0	; () banked
  7813  001484  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7814  001486  0BFB               	andlw	-5
  7815  001488  0100               	movlb	0	; () banked
  7816  00148A  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7817  00148C  6E80               	movwf	3968,c	;volatile
  7818                           
  7819                           ;io.c: 152: PORTAbits.RA1 = GETxAPIxVAL(66);
  7820  00148E  0E42               	movlw	66
  7821  001490  ECBC  F020         	call	_GETxAPIxVAL
  7822  001494  0100               	movlb	0	; () banked
  7823  001496  47B9               	rlncf	?_GETxAPIxVAL& (0+255),f,b
  7824  001498  5080               	movf	3968,w,c	;volatile
  7825  00149A  0100               	movlb	0	; () banked
  7826  00149C  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7827  00149E  0BFD               	andlw	-3
  7828  0014A0  0100               	movlb	0	; () banked
  7829  0014A2  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7830  0014A4  6E80               	movwf	3968,c	;volatile
  7831                           
  7832                           ;io.c: 153: PORTAbits.RA0 = GETxAPIxVAL(67);
  7833  0014A6  0E43               	movlw	67
  7834  0014A8  ECBC  F020         	call	_GETxAPIxVAL
  7835  0014AC  5080               	movf	3968,w,c	;volatile
  7836  0014AE  0100               	movlb	0	; () banked
  7837  0014B0  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7838  0014B2  0BFE               	andlw	-2
  7839  0014B4  0100               	movlb	0	; () banked
  7840  0014B6  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7841  0014B8  6E80               	movwf	3968,c	;volatile
  7842                           
  7843                           ;io.c: 154: PORTCbits.RC0 = GETxAPIxVAL(69);
  7844  0014BA  0E45               	movlw	69
  7845  0014BC  ECBC  F020         	call	_GETxAPIxVAL
  7846  0014C0  5082               	movf	3970,w,c	;volatile
  7847  0014C2  0100               	movlb	0	; () banked
  7848  0014C4  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7849  0014C6  0BFE               	andlw	-2
  7850  0014C8  0100               	movlb	0	; () banked
  7851  0014CA  19B9               	xorwf	?_GETxAPIxVAL& (0+255),w,b
  7852  0014CC  6E82               	movwf	3970,c	;volatile
  7853                           
  7854                           ;io.c: 155: SetDCPWM1(GETxAPIxVAL(68));
  7855  0014CE  0E44               	movlw	68
  7856  0014D0  ECBC  F020         	call	_GETxAPIxVAL
  7857  0014D4  C0B9  F0BC         	movff	?_GETxAPIxVAL,SetDCPWM1@dutycycle
  7858  0014D8  C0BA  F0BD         	movff	?_GETxAPIxVAL+1,SetDCPWM1@dutycycle+1
  7859  0014DC  ECD9  F01F         	call	_SetDCPWM1	;wreg free
  7860                           
  7861                           ;io.c: 157: switch(PORTDbits.RD1)
  7862  0014E0  D02A               	goto	l8036
  7863  0014E2                     l8018:
  7864  0014E2  500F               	movf	_Reed_Contact_LF_Counter,w,c
  7865  0014E4  B4D8               	btfsc	status,2,c
  7866  0014E6  D002               	goto	l8024
  7867                           
  7868                           ;io.c: 160: {
  7869                           ;io.c: 161: Reed_Contact_LF_Counter--;
  7870  0014E8  060F               	decf	_Reed_Contact_LF_Counter,f,c
  7871                           
  7872                           ;io.c: 163: }
  7873                           
  7874                           ;io.c: 162: break;
  7875  0014EA  D05B               	goto	l8056
  7876  0014EC                     l8024:
  7877                           
  7878                           ;io.c: 164: else {SETxAPIxVAL(31, 0);}
  7879  0014EC  0E00               	movlw	0
  7880  0014EE  0100               	movlb	0	; () banked
  7881  0014F0  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7882  0014F2  0E00               	movlw	0
  7883  0014F4  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  7884  0014F6  0E1F               	movlw	31
  7885  0014F8  EC89  F01F         	call	_SETxAPIxVAL
  7886                           
  7887                           ;io.c: 165: break;
  7888  0014FC  D052               	goto	l8056
  7889  0014FE                     l8026:
  7890  0014FE  500F               	movf	_Reed_Contact_LF_Counter,w,c
  7891  001500  0100               	movlb	0	; () banked
  7892  001502  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  7893  001504  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  7894  001506  0E1B               	movlw	27
  7895  001508  ECBC  F020         	call	_GETxAPIxVAL
  7896  00150C  0100               	movlb	0	; () banked
  7897  00150E  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  7898  001510  0100               	movlb	0	; () banked
  7899  001512  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  7900  001514  0100               	movlb	0	; () banked
  7901  001516  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  7902  001518  0100               	movlb	0	; () banked
  7903  00151A  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  7904  00151C  A0D8               	btfss	status,0,c
  7905  00151E  D002               	goto	l8032
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;io.c: 168: {
  7909                           ;io.c: 169: Reed_Contact_LF_Counter++;
  7910  001520  2A0F               	incf	_Reed_Contact_LF_Counter,f,c
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;io.c: 171: }
  7914                           
  7915                           ;io.c: 170: break;
  7916  001522  D03F               	goto	l8056
  7917  001524                     l8032:
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;io.c: 172: else {SETxAPIxVAL(31, 1);}
  7921  001524  0E00               	movlw	0
  7922  001526  0100               	movlb	0	; () banked
  7923  001528  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7924  00152A  0E01               	movlw	1
  7925  00152C  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  7926  00152E  0E1F               	movlw	31
  7927  001530  EC89  F01F         	call	_SETxAPIxVAL
  7928                           
  7929                           ;io.c: 176: }
  7930                           
  7931                           ;io.c: 175: default : break;
  7932                           
  7933                           ;io.c: 173: break;
  7934  001534  D036               	goto	l8056
  7935  001536                     l8036:
  7936  001536  A283               	btfss	3971,1,c	;volatile
  7937  001538  D002               	goto	u7120
  7938  00153A  0E01               	movlw	1
  7939  00153C  D001               	goto	u7126
  7940  00153E                     u7120:
  7941  00153E  0E00               	movlw	0
  7942  001540                     u7126:
  7943                           
  7944                           ; Switch size 1, requested type "space"
  7945                           ; Number of cases is 2, Range of values is 0 to 1
  7946                           ; switch strategies available:
  7947                           ; Name         Instructions Cycles
  7948                           ; simple_byte            7     4 (average)
  7949                           ;	Chosen strategy is simple_byte
  7950  001540  0A00               	xorlw	0	; case 0
  7951  001542  B4D8               	btfsc	status,2,c
  7952  001544  D7DC               	goto	l8026
  7953  001546  0A01               	xorlw	1	; case 1
  7954  001548  B4D8               	btfsc	status,2,c
  7955  00154A  D7CB               	goto	l8018
  7956                           
  7957                           ;io.c: 179: switch(PORTDbits.RD0)
  7958  00154C  D02A               	goto	l8056
  7959  00154E                     l8038:
  7960  00154E  500E               	movf	_Reed_Contact_LB_Counter,w,c
  7961  001550  B4D8               	btfsc	status,2,c
  7962  001552  D002               	goto	l8044
  7963                           
  7964                           ;io.c: 182: {
  7965                           ;io.c: 183: Reed_Contact_LB_Counter--;
  7966  001554  060E               	decf	_Reed_Contact_LB_Counter,f,c
  7967                           
  7968                           ;io.c: 185: }
  7969                           
  7970                           ;io.c: 184: break;
  7971  001556  D05B               	goto	l8076
  7972  001558                     l8044:
  7973                           
  7974                           ;io.c: 186: else {SETxAPIxVAL(30, 0);}
  7975  001558  0E00               	movlw	0
  7976  00155A  0100               	movlb	0	; () banked
  7977  00155C  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  7978  00155E  0E00               	movlw	0
  7979  001560  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  7980  001562  0E1E               	movlw	30
  7981  001564  EC89  F01F         	call	_SETxAPIxVAL
  7982                           
  7983                           ;io.c: 187: break;
  7984  001568  D052               	goto	l8076
  7985  00156A                     l8046:
  7986  00156A  500E               	movf	_Reed_Contact_LB_Counter,w,c
  7987  00156C  0100               	movlb	0	; () banked
  7988  00156E  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  7989  001570  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  7990  001572  0E1B               	movlw	27
  7991  001574  ECBC  F020         	call	_GETxAPIxVAL
  7992  001578  0100               	movlb	0	; () banked
  7993  00157A  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  7994  00157C  0100               	movlb	0	; () banked
  7995  00157E  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  7996  001580  0100               	movlb	0	; () banked
  7997  001582  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  7998  001584  0100               	movlb	0	; () banked
  7999  001586  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8000  001588  A0D8               	btfss	status,0,c
  8001  00158A  D002               	goto	l8052
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;io.c: 190: {
  8005                           ;io.c: 191: Reed_Contact_LB_Counter++;
  8006  00158C  2A0E               	incf	_Reed_Contact_LB_Counter,f,c
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;io.c: 193: }
  8010                           
  8011                           ;io.c: 192: break;
  8012  00158E  D03F               	goto	l8076
  8013  001590                     l8052:
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;io.c: 194: else {SETxAPIxVAL(30, 1);}
  8017  001590  0E00               	movlw	0
  8018  001592  0100               	movlb	0	; () banked
  8019  001594  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8020  001596  0E01               	movlw	1
  8021  001598  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8022  00159A  0E1E               	movlw	30
  8023  00159C  EC89  F01F         	call	_SETxAPIxVAL
  8024                           
  8025                           ;io.c: 198: }
  8026                           
  8027                           ;io.c: 197: default : break;
  8028                           
  8029                           ;io.c: 195: break;
  8030  0015A0  D036               	goto	l8076
  8031  0015A2                     l8056:
  8032  0015A2  A083               	btfss	3971,0,c	;volatile
  8033  0015A4  D002               	goto	u7150
  8034  0015A6  0E01               	movlw	1
  8035  0015A8  D001               	goto	u7156
  8036  0015AA                     u7150:
  8037  0015AA  0E00               	movlw	0
  8038  0015AC                     u7156:
  8039                           
  8040                           ; Switch size 1, requested type "space"
  8041                           ; Number of cases is 2, Range of values is 0 to 1
  8042                           ; switch strategies available:
  8043                           ; Name         Instructions Cycles
  8044                           ; simple_byte            7     4 (average)
  8045                           ;	Chosen strategy is simple_byte
  8046  0015AC  0A00               	xorlw	0	; case 0
  8047  0015AE  B4D8               	btfsc	status,2,c
  8048  0015B0  D7DC               	goto	l8046
  8049  0015B2  0A01               	xorlw	1	; case 1
  8050  0015B4  B4D8               	btfsc	status,2,c
  8051  0015B6  D7CB               	goto	l8038
  8052                           
  8053                           ;io.c: 201: switch(PORTDbits.RD3)
  8054  0015B8  D02A               	goto	l8076
  8055  0015BA                     l8058:
  8056  0015BA  5013               	movf	_Reed_Contact_RF_Counter,w,c
  8057  0015BC  B4D8               	btfsc	status,2,c
  8058  0015BE  D002               	goto	l8064
  8059                           
  8060                           ;io.c: 204: {
  8061                           ;io.c: 205: Reed_Contact_RF_Counter--;
  8062  0015C0  0613               	decf	_Reed_Contact_RF_Counter,f,c
  8063                           
  8064                           ;io.c: 207: }
  8065                           
  8066                           ;io.c: 206: break;
  8067  0015C2  D05B               	goto	l8096
  8068  0015C4                     l8064:
  8069                           
  8070                           ;io.c: 208: else {SETxAPIxVAL(29, 0);}
  8071  0015C4  0E00               	movlw	0
  8072  0015C6  0100               	movlb	0	; () banked
  8073  0015C8  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8074  0015CA  0E00               	movlw	0
  8075  0015CC  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8076  0015CE  0E1D               	movlw	29
  8077  0015D0  EC89  F01F         	call	_SETxAPIxVAL
  8078                           
  8079                           ;io.c: 209: break;
  8080  0015D4  D052               	goto	l8096
  8081  0015D6                     l8066:
  8082  0015D6  5013               	movf	_Reed_Contact_RF_Counter,w,c
  8083  0015D8  0100               	movlb	0	; () banked
  8084  0015DA  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8085  0015DC  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8086  0015DE  0E1B               	movlw	27
  8087  0015E0  ECBC  F020         	call	_GETxAPIxVAL
  8088  0015E4  0100               	movlb	0	; () banked
  8089  0015E6  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8090  0015E8  0100               	movlb	0	; () banked
  8091  0015EA  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8092  0015EC  0100               	movlb	0	; () banked
  8093  0015EE  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8094  0015F0  0100               	movlb	0	; () banked
  8095  0015F2  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8096  0015F4  A0D8               	btfss	status,0,c
  8097  0015F6  D002               	goto	l8072
  8098                           
  8099                           ; BSR set to: 0
  8100                           ;io.c: 212: {
  8101                           ;io.c: 213: Reed_Contact_RF_Counter++;
  8102  0015F8  2A13               	incf	_Reed_Contact_RF_Counter,f,c
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;io.c: 215: }
  8106                           
  8107                           ;io.c: 214: break;
  8108  0015FA  D03F               	goto	l8096
  8109  0015FC                     l8072:
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;io.c: 216: else {SETxAPIxVAL(29, 1);}
  8113  0015FC  0E00               	movlw	0
  8114  0015FE  0100               	movlb	0	; () banked
  8115  001600  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8116  001602  0E01               	movlw	1
  8117  001604  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8118  001606  0E1D               	movlw	29
  8119  001608  EC89  F01F         	call	_SETxAPIxVAL
  8120                           
  8121                           ;io.c: 220: }
  8122                           
  8123                           ;io.c: 219: default : break;
  8124                           
  8125                           ;io.c: 217: break;
  8126  00160C  D036               	goto	l8096
  8127  00160E                     l8076:
  8128  00160E  A683               	btfss	3971,3,c	;volatile
  8129  001610  D002               	goto	u7180
  8130  001612  0E01               	movlw	1
  8131  001614  D001               	goto	u7186
  8132  001616                     u7180:
  8133  001616  0E00               	movlw	0
  8134  001618                     u7186:
  8135                           
  8136                           ; Switch size 1, requested type "space"
  8137                           ; Number of cases is 2, Range of values is 0 to 1
  8138                           ; switch strategies available:
  8139                           ; Name         Instructions Cycles
  8140                           ; simple_byte            7     4 (average)
  8141                           ;	Chosen strategy is simple_byte
  8142  001618  0A00               	xorlw	0	; case 0
  8143  00161A  B4D8               	btfsc	status,2,c
  8144  00161C  D7DC               	goto	l8066
  8145  00161E  0A01               	xorlw	1	; case 1
  8146  001620  B4D8               	btfsc	status,2,c
  8147  001622  D7CB               	goto	l8058
  8148                           
  8149                           ;io.c: 223: switch(PORTDbits.RD2)
  8150  001624  D02A               	goto	l8096
  8151  001626                     l8078:
  8152  001626  5012               	movf	_Reed_Contact_RB_Counter,w,c
  8153  001628  B4D8               	btfsc	status,2,c
  8154  00162A  D002               	goto	l8084
  8155                           
  8156                           ;io.c: 226: {
  8157                           ;io.c: 227: Reed_Contact_RB_Counter--;
  8158  00162C  0612               	decf	_Reed_Contact_RB_Counter,f,c
  8159                           
  8160                           ;io.c: 229: }
  8161                           
  8162                           ;io.c: 228: break;
  8163  00162E  D05B               	goto	l8116
  8164  001630                     l8084:
  8165                           
  8166                           ;io.c: 230: else {SETxAPIxVAL(28, 0);}
  8167  001630  0E00               	movlw	0
  8168  001632  0100               	movlb	0	; () banked
  8169  001634  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8170  001636  0E00               	movlw	0
  8171  001638  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8172  00163A  0E1C               	movlw	28
  8173  00163C  EC89  F01F         	call	_SETxAPIxVAL
  8174                           
  8175                           ;io.c: 231: break;
  8176  001640  D052               	goto	l8116
  8177  001642                     l8086:
  8178  001642  5012               	movf	_Reed_Contact_RB_Counter,w,c
  8179  001644  0100               	movlb	0	; () banked
  8180  001646  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8181  001648  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8182  00164A  0E1B               	movlw	27
  8183  00164C  ECBC  F020         	call	_GETxAPIxVAL
  8184  001650  0100               	movlb	0	; () banked
  8185  001652  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8186  001654  0100               	movlb	0	; () banked
  8187  001656  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8188  001658  0100               	movlb	0	; () banked
  8189  00165A  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8190  00165C  0100               	movlb	0	; () banked
  8191  00165E  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8192  001660  A0D8               	btfss	status,0,c
  8193  001662  D002               	goto	l8092
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;io.c: 234: {
  8197                           ;io.c: 235: Reed_Contact_RB_Counter++;
  8198  001664  2A12               	incf	_Reed_Contact_RB_Counter,f,c
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;io.c: 237: }
  8202                           
  8203                           ;io.c: 236: break;
  8204  001666  D03F               	goto	l8116
  8205  001668                     l8092:
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;io.c: 238: else {SETxAPIxVAL(28, 1);}
  8209  001668  0E00               	movlw	0
  8210  00166A  0100               	movlb	0	; () banked
  8211  00166C  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8212  00166E  0E01               	movlw	1
  8213  001670  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8214  001672  0E1C               	movlw	28
  8215  001674  EC89  F01F         	call	_SETxAPIxVAL
  8216                           
  8217                           ;io.c: 242: }
  8218                           
  8219                           ;io.c: 241: default : break;
  8220                           
  8221                           ;io.c: 239: break;
  8222  001678  D036               	goto	l8116
  8223  00167A                     l8096:
  8224  00167A  A483               	btfss	3971,2,c	;volatile
  8225  00167C  D002               	goto	u7210
  8226  00167E  0E01               	movlw	1
  8227  001680  D001               	goto	u7216
  8228  001682                     u7210:
  8229  001682  0E00               	movlw	0
  8230  001684                     u7216:
  8231                           
  8232                           ; Switch size 1, requested type "space"
  8233                           ; Number of cases is 2, Range of values is 0 to 1
  8234                           ; switch strategies available:
  8235                           ; Name         Instructions Cycles
  8236                           ; simple_byte            7     4 (average)
  8237                           ;	Chosen strategy is simple_byte
  8238  001684  0A00               	xorlw	0	; case 0
  8239  001686  B4D8               	btfsc	status,2,c
  8240  001688  D7DC               	goto	l8086
  8241  00168A  0A01               	xorlw	1	; case 1
  8242  00168C  B4D8               	btfsc	status,2,c
  8243  00168E  D7CB               	goto	l8078
  8244                           
  8245                           ;io.c: 245: switch(!PORTBbits.RB0)
  8246  001690  D02A               	goto	l8116
  8247  001692                     l8098:
  8248  001692  500B               	movf	_Button_Contact_Counter_Start,w,c
  8249  001694  0100               	movlb	0	; () banked
  8250  001696  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8251  001698  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8252  00169A  0E1B               	movlw	27
  8253  00169C  ECBC  F020         	call	_GETxAPIxVAL
  8254  0016A0  0100               	movlb	0	; () banked
  8255  0016A2  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8256  0016A4  0100               	movlb	0	; () banked
  8257  0016A6  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8258  0016A8  0100               	movlb	0	; () banked
  8259  0016AA  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8260  0016AC  0100               	movlb	0	; () banked
  8261  0016AE  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8262  0016B0  A0D8               	btfss	status,0,c
  8263  0016B2  D002               	goto	l8104
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;io.c: 248: {
  8267                           ;io.c: 249: Button_Contact_Counter_Start++;
  8268  0016B4  2A0B               	incf	_Button_Contact_Counter_Start,f,c
  8269                           
  8270                           ; BSR set to: 0
  8271                           ;io.c: 251: }
  8272                           
  8273                           ;io.c: 250: break;
  8274  0016B6  D057               	goto	l8136
  8275  0016B8                     l8104:
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;io.c: 252: else {SETxAPIxVAL(32, 1); }
  8279  0016B8  0E00               	movlw	0
  8280  0016BA  0100               	movlb	0	; () banked
  8281  0016BC  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8282  0016BE  0E01               	movlw	1
  8283  0016C0  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8284  0016C2  0E20               	movlw	32
  8285  0016C4  EC89  F01F         	call	_SETxAPIxVAL
  8286                           
  8287                           ;io.c: 253: break;
  8288  0016C8  D04E               	goto	l8136
  8289  0016CA                     l8106:
  8290  0016CA  500B               	movf	_Button_Contact_Counter_Start,w,c
  8291  0016CC  B4D8               	btfsc	status,2,c
  8292  0016CE  D002               	goto	l8112
  8293                           
  8294                           ;io.c: 256: {
  8295                           ;io.c: 257: Button_Contact_Counter_Start--;
  8296  0016D0  060B               	decf	_Button_Contact_Counter_Start,f,c
  8297                           
  8298                           ;io.c: 259: }
  8299                           
  8300                           ;io.c: 258: break;
  8301  0016D2  D049               	goto	l8136
  8302  0016D4                     l8112:
  8303                           
  8304                           ;io.c: 260: else {SETxAPIxVAL(32, 0);}
  8305  0016D4  0E00               	movlw	0
  8306  0016D6  0100               	movlb	0	; () banked
  8307  0016D8  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8308  0016DA  0E00               	movlw	0
  8309  0016DC  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8310  0016DE  0E20               	movlw	32
  8311  0016E0  EC89  F01F         	call	_SETxAPIxVAL
  8312                           
  8313                           ;io.c: 264: }
  8314                           
  8315                           ;io.c: 263: default : break;
  8316                           
  8317                           ;io.c: 261: break;
  8318  0016E4  D040               	goto	l8136
  8319  0016E6                     l8116:
  8320  0016E6  B081               	btfsc	3969,0,c	;volatile
  8321  0016E8  D002               	goto	u7240
  8322  0016EA  0E01               	movlw	1
  8323  0016EC  D001               	goto	u7250
  8324  0016EE                     u7240:
  8325  0016EE  0E00               	movlw	0
  8326  0016F0                     u7250:
  8327  0016F0  0100               	movlb	0	; () banked
  8328  0016F2  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8329  0016F4  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8330                           
  8331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8332                           ; Switch size 1, requested type "space"
  8333                           ; Number of cases is 1, Range of values is 0 to 0
  8334                           ; switch strategies available:
  8335                           ; Name         Instructions Cycles
  8336                           ; simple_byte            4     3 (average)
  8337                           ;	Chosen strategy is simple_byte
  8338  0016F6  0100               	movlb	0	; () banked
  8339  0016F8  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8340  0016FA  0A00               	xorlw	0	; case 0
  8341  0016FC  A4D8               	btfss	status,2,c
  8342  0016FE  D033               	goto	l8136
  8343                           
  8344                           ; BSR set to: 0
  8345                           ; Switch size 1, requested type "space"
  8346                           ; Number of cases is 2, Range of values is 0 to 1
  8347                           ; switch strategies available:
  8348                           ; Name         Instructions Cycles
  8349                           ; simple_byte            7     4 (average)
  8350                           ;	Chosen strategy is simple_byte
  8351  001700  0100               	movlb	0	; () banked
  8352  001702  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8353  001704  0A00               	xorlw	0	; case 0
  8354  001706  B4D8               	btfsc	status,2,c
  8355  001708  D7E0               	goto	l8106
  8356  00170A  0A01               	xorlw	1	; case 1
  8357  00170C  B4D8               	btfsc	status,2,c
  8358  00170E  D7C1               	goto	l8098
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;io.c: 267: switch(!PORTDbits.RD7)
  8362  001710  D02A               	goto	l8136
  8363  001712                     l8118:
  8364                           
  8365                           ; BSR set to: 0
  8366  001712  500C               	movf	_Button_Contact_Counter_Stop,w,c
  8367  001714  0100               	movlb	0	; () banked
  8368  001716  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8369  001718  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8370  00171A  0E1B               	movlw	27
  8371  00171C  ECBC  F020         	call	_GETxAPIxVAL
  8372  001720  0100               	movlb	0	; () banked
  8373  001722  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8374  001724  0100               	movlb	0	; () banked
  8375  001726  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8376  001728  0100               	movlb	0	; () banked
  8377  00172A  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8378  00172C  0100               	movlb	0	; () banked
  8379  00172E  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8380  001730  A0D8               	btfss	status,0,c
  8381  001732  D002               	goto	l8124
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;io.c: 270: {
  8385                           ;io.c: 271: Button_Contact_Counter_Stop++;
  8386  001734  2A0C               	incf	_Button_Contact_Counter_Stop,f,c
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;io.c: 273: }
  8390                           
  8391                           ;io.c: 272: break;
  8392  001736  D05C               	goto	l8156
  8393  001738                     l8124:
  8394                           
  8395                           ; BSR set to: 0
  8396                           ;io.c: 274: else {SETxAPIxVAL(33, 1); }
  8397  001738  0E00               	movlw	0
  8398  00173A  0100               	movlb	0	; () banked
  8399  00173C  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8400  00173E  0E01               	movlw	1
  8401  001740  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8402  001742  0E21               	movlw	33
  8403  001744  EC89  F01F         	call	_SETxAPIxVAL
  8404                           
  8405                           ;io.c: 275: break;
  8406  001748  D053               	goto	l8156
  8407  00174A                     l8126:
  8408  00174A  500C               	movf	_Button_Contact_Counter_Stop,w,c
  8409  00174C  B4D8               	btfsc	status,2,c
  8410  00174E  D002               	goto	l8132
  8411                           
  8412                           ;io.c: 278: {
  8413                           ;io.c: 279: Button_Contact_Counter_Stop--;
  8414  001750  060C               	decf	_Button_Contact_Counter_Stop,f,c
  8415                           
  8416                           ;io.c: 281: }
  8417                           
  8418                           ;io.c: 280: break;
  8419  001752  D04E               	goto	l8156
  8420  001754                     l8132:
  8421                           
  8422                           ;io.c: 282: else {SETxAPIxVAL(33, 0);}
  8423  001754  0E00               	movlw	0
  8424  001756  0100               	movlb	0	; () banked
  8425  001758  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8426  00175A  0E00               	movlw	0
  8427  00175C  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8428  00175E  0E21               	movlw	33
  8429  001760  EC89  F01F         	call	_SETxAPIxVAL
  8430                           
  8431                           ;io.c: 286: }
  8432                           
  8433                           ;io.c: 285: default : break;
  8434                           
  8435                           ;io.c: 283: break;
  8436  001764  D045               	goto	l8156
  8437  001766                     l8136:
  8438  001766  BE83               	btfsc	3971,7,c	;volatile
  8439  001768  D002               	goto	u7280
  8440  00176A  0E01               	movlw	1
  8441  00176C  D001               	goto	u7290
  8442  00176E                     u7280:
  8443  00176E  0E00               	movlw	0
  8444  001770                     u7290:
  8445  001770  0100               	movlb	0	; () banked
  8446  001772  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8447  001774  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8448                           
  8449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8450                           ; Switch size 1, requested type "space"
  8451                           ; Number of cases is 1, Range of values is 0 to 0
  8452                           ; switch strategies available:
  8453                           ; Name         Instructions Cycles
  8454                           ; simple_byte            4     3 (average)
  8455                           ;	Chosen strategy is simple_byte
  8456  001776  0100               	movlb	0	; () banked
  8457  001778  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8458  00177A  0A00               	xorlw	0	; case 0
  8459  00177C  A4D8               	btfss	status,2,c
  8460  00177E  D038               	goto	l8156
  8461                           
  8462                           ; BSR set to: 0
  8463                           ; Switch size 1, requested type "space"
  8464                           ; Number of cases is 2, Range of values is 0 to 1
  8465                           ; switch strategies available:
  8466                           ; Name         Instructions Cycles
  8467                           ; simple_byte            7     4 (average)
  8468                           ;	Chosen strategy is simple_byte
  8469  001780  0100               	movlb	0	; () banked
  8470  001782  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8471  001784  0A00               	xorlw	0	; case 0
  8472  001786  B4D8               	btfsc	status,2,c
  8473  001788  D7E0               	goto	l8126
  8474  00178A  0A01               	xorlw	1	; case 1
  8475  00178C  B4D8               	btfsc	status,2,c
  8476  00178E  D7C1               	goto	l8118
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;io.c: 289: switch(!PORTBbits.RB1)
  8480  001790  D02F               	goto	l8156
  8481  001792                     l8138:
  8482                           
  8483                           ; BSR set to: 0
  8484  001792  0100               	movlb	0	; () banked
  8485  001794  5180               	movf	_Button_Contact_Counter_Middle& (0+255),w,b
  8486  001796  0100               	movlb	0	; () banked
  8487  001798  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8488  00179A  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8489  00179C  0E1B               	movlw	27
  8490  00179E  ECBC  F020         	call	_GETxAPIxVAL
  8491  0017A2  0100               	movlb	0	; () banked
  8492  0017A4  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8493  0017A6  0100               	movlb	0	; () banked
  8494  0017A8  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8495  0017AA  0100               	movlb	0	; () banked
  8496  0017AC  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8497  0017AE  0100               	movlb	0	; () banked
  8498  0017B0  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8499  0017B2  A0D8               	btfss	status,0,c
  8500  0017B4  D003               	goto	l8144
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;io.c: 292: {
  8504                           ;io.c: 293: Button_Contact_Counter_Middle++;
  8505  0017B6  0100               	movlb	0	; () banked
  8506  0017B8  2B80               	incf	_Button_Contact_Counter_Middle& (0+255),f,b
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;io.c: 295: }
  8510                           
  8511                           ;io.c: 294: break;
  8512  0017BA  D05F               	goto	l8176
  8513  0017BC                     l8144:
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;io.c: 296: else {SETxAPIxVAL(34, 1); }
  8517  0017BC  0E00               	movlw	0
  8518  0017BE  0100               	movlb	0	; () banked
  8519  0017C0  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8520  0017C2  0E01               	movlw	1
  8521  0017C4  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8522  0017C6  0E22               	movlw	34
  8523  0017C8  EC89  F01F         	call	_SETxAPIxVAL
  8524                           
  8525                           ;io.c: 297: break;
  8526  0017CC  D056               	goto	l8176
  8527  0017CE                     l8146:
  8528  0017CE  0100               	movlb	0	; () banked
  8529  0017D0  5180               	movf	_Button_Contact_Counter_Middle& (0+255),w,b
  8530  0017D2  0100               	movlb	0	; () banked
  8531  0017D4  B4D8               	btfsc	status,2,c
  8532  0017D6  D003               	goto	l8152
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;io.c: 300: {
  8536                           ;io.c: 301: Button_Contact_Counter_Middle--;
  8537  0017D8  0100               	movlb	0	; () banked
  8538  0017DA  0780               	decf	_Button_Contact_Counter_Middle& (0+255),f,b
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;io.c: 303: }
  8542                           
  8543                           ;io.c: 302: break;
  8544  0017DC  D04E               	goto	l8176
  8545  0017DE                     l8152:
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;io.c: 304: else {SETxAPIxVAL(34, 0);}
  8549  0017DE  0E00               	movlw	0
  8550  0017E0  0100               	movlb	0	; () banked
  8551  0017E2  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8552  0017E4  0E00               	movlw	0
  8553  0017E6  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8554  0017E8  0E22               	movlw	34
  8555  0017EA  EC89  F01F         	call	_SETxAPIxVAL
  8556                           
  8557                           ;io.c: 308: }
  8558                           
  8559                           ;io.c: 307: default : break;
  8560                           
  8561                           ;io.c: 305: break;
  8562  0017EE  D045               	goto	l8176
  8563  0017F0                     l8156:
  8564  0017F0  B281               	btfsc	3969,1,c	;volatile
  8565  0017F2  D002               	goto	u7320
  8566  0017F4  0E01               	movlw	1
  8567  0017F6  D001               	goto	u7330
  8568  0017F8                     u7320:
  8569  0017F8  0E00               	movlw	0
  8570  0017FA                     u7330:
  8571  0017FA  0100               	movlb	0	; () banked
  8572  0017FC  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8573  0017FE  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8574                           
  8575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8576                           ; Switch size 1, requested type "space"
  8577                           ; Number of cases is 1, Range of values is 0 to 0
  8578                           ; switch strategies available:
  8579                           ; Name         Instructions Cycles
  8580                           ; simple_byte            4     3 (average)
  8581                           ;	Chosen strategy is simple_byte
  8582  001800  0100               	movlb	0	; () banked
  8583  001802  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8584  001804  0A00               	xorlw	0	; case 0
  8585  001806  A4D8               	btfss	status,2,c
  8586  001808  D038               	goto	l8176
  8587                           
  8588                           ; BSR set to: 0
  8589                           ; Switch size 1, requested type "space"
  8590                           ; Number of cases is 2, Range of values is 0 to 1
  8591                           ; switch strategies available:
  8592                           ; Name         Instructions Cycles
  8593                           ; simple_byte            7     4 (average)
  8594                           ;	Chosen strategy is simple_byte
  8595  00180A  0100               	movlb	0	; () banked
  8596  00180C  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8597  00180E  0A00               	xorlw	0	; case 0
  8598  001810  B4D8               	btfsc	status,2,c
  8599  001812  D7DD               	goto	l8146
  8600  001814  0A01               	xorlw	1	; case 1
  8601  001816  B4D8               	btfsc	status,2,c
  8602  001818  D7BC               	goto	l8138
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;io.c: 311: switch(!PORTBbits.RB5)
  8606  00181A  D02F               	goto	l8176
  8607  00181C                     l8158:
  8608                           
  8609                           ; BSR set to: 0
  8610  00181C  0100               	movlb	0	; () banked
  8611  00181E  517E               	movf	_Button_Contact_Counter_LB& (0+255),w,b
  8612  001820  0100               	movlb	0	; () banked
  8613  001822  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8614  001824  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8615  001826  0E1B               	movlw	27
  8616  001828  ECBC  F020         	call	_GETxAPIxVAL
  8617  00182C  0100               	movlb	0	; () banked
  8618  00182E  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8619  001830  0100               	movlb	0	; () banked
  8620  001832  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8621  001834  0100               	movlb	0	; () banked
  8622  001836  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8623  001838  0100               	movlb	0	; () banked
  8624  00183A  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8625  00183C  A0D8               	btfss	status,0,c
  8626  00183E  D003               	goto	l8164
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;io.c: 314: {
  8630                           ;io.c: 315: Button_Contact_Counter_LB++;
  8631  001840  0100               	movlb	0	; () banked
  8632  001842  2B7E               	incf	_Button_Contact_Counter_LB& (0+255),f,b
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;io.c: 317: }
  8636                           
  8637                           ;io.c: 316: break;
  8638  001844  D05F               	goto	l8196
  8639  001846                     l8164:
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;io.c: 318: else {SETxAPIxVAL(35, 1); }
  8643  001846  0E00               	movlw	0
  8644  001848  0100               	movlb	0	; () banked
  8645  00184A  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8646  00184C  0E01               	movlw	1
  8647  00184E  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8648  001850  0E23               	movlw	35
  8649  001852  EC89  F01F         	call	_SETxAPIxVAL
  8650                           
  8651                           ;io.c: 319: break;
  8652  001856  D056               	goto	l8196
  8653  001858                     l8166:
  8654  001858  0100               	movlb	0	; () banked
  8655  00185A  517E               	movf	_Button_Contact_Counter_LB& (0+255),w,b
  8656  00185C  0100               	movlb	0	; () banked
  8657  00185E  B4D8               	btfsc	status,2,c
  8658  001860  D003               	goto	l8172
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;io.c: 322: {
  8662                           ;io.c: 323: Button_Contact_Counter_LB--;
  8663  001862  0100               	movlb	0	; () banked
  8664  001864  077E               	decf	_Button_Contact_Counter_LB& (0+255),f,b
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;io.c: 325: }
  8668                           
  8669                           ;io.c: 324: break;
  8670  001866  D04E               	goto	l8196
  8671  001868                     l8172:
  8672                           
  8673                           ; BSR set to: 0
  8674                           ;io.c: 326: else {SETxAPIxVAL(35, 0);}
  8675  001868  0E00               	movlw	0
  8676  00186A  0100               	movlb	0	; () banked
  8677  00186C  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8678  00186E  0E00               	movlw	0
  8679  001870  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8680  001872  0E23               	movlw	35
  8681  001874  EC89  F01F         	call	_SETxAPIxVAL
  8682                           
  8683                           ;io.c: 330: }
  8684                           
  8685                           ;io.c: 329: default : break;
  8686                           
  8687                           ;io.c: 327: break;
  8688  001878  D045               	goto	l8196
  8689  00187A                     l8176:
  8690  00187A  BA81               	btfsc	3969,5,c	;volatile
  8691  00187C  D002               	goto	u7360
  8692  00187E  0E01               	movlw	1
  8693  001880  D001               	goto	u7370
  8694  001882                     u7360:
  8695  001882  0E00               	movlw	0
  8696  001884                     u7370:
  8697  001884  0100               	movlb	0	; () banked
  8698  001886  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8699  001888  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8700                           
  8701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8702                           ; Switch size 1, requested type "space"
  8703                           ; Number of cases is 1, Range of values is 0 to 0
  8704                           ; switch strategies available:
  8705                           ; Name         Instructions Cycles
  8706                           ; simple_byte            4     3 (average)
  8707                           ;	Chosen strategy is simple_byte
  8708  00188A  0100               	movlb	0	; () banked
  8709  00188C  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8710  00188E  0A00               	xorlw	0	; case 0
  8711  001890  A4D8               	btfss	status,2,c
  8712  001892  D038               	goto	l8196
  8713                           
  8714                           ; BSR set to: 0
  8715                           ; Switch size 1, requested type "space"
  8716                           ; Number of cases is 2, Range of values is 0 to 1
  8717                           ; switch strategies available:
  8718                           ; Name         Instructions Cycles
  8719                           ; simple_byte            7     4 (average)
  8720                           ;	Chosen strategy is simple_byte
  8721  001894  0100               	movlb	0	; () banked
  8722  001896  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8723  001898  0A00               	xorlw	0	; case 0
  8724  00189A  B4D8               	btfsc	status,2,c
  8725  00189C  D7DD               	goto	l8166
  8726  00189E  0A01               	xorlw	1	; case 1
  8727  0018A0  B4D8               	btfsc	status,2,c
  8728  0018A2  D7BC               	goto	l8158
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;io.c: 333: switch(!PORTBbits.RB4)
  8732  0018A4  D02F               	goto	l8196
  8733  0018A6                     l8178:
  8734                           
  8735                           ; BSR set to: 0
  8736  0018A6  0100               	movlb	0	; () banked
  8737  0018A8  517F               	movf	_Button_Contact_Counter_LF& (0+255),w,b
  8738  0018AA  0100               	movlb	0	; () banked
  8739  0018AC  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8740  0018AE  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8741  0018B0  0E1B               	movlw	27
  8742  0018B2  ECBC  F020         	call	_GETxAPIxVAL
  8743  0018B6  0100               	movlb	0	; () banked
  8744  0018B8  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8745  0018BA  0100               	movlb	0	; () banked
  8746  0018BC  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8747  0018BE  0100               	movlb	0	; () banked
  8748  0018C0  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8749  0018C2  0100               	movlb	0	; () banked
  8750  0018C4  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8751  0018C6  A0D8               	btfss	status,0,c
  8752  0018C8  D003               	goto	l8184
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;io.c: 336: {
  8756                           ;io.c: 337: Button_Contact_Counter_LF++;
  8757  0018CA  0100               	movlb	0	; () banked
  8758  0018CC  2B7F               	incf	_Button_Contact_Counter_LF& (0+255),f,b
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;io.c: 339: }
  8762                           
  8763                           ;io.c: 338: break;
  8764  0018CE  D05F               	goto	l8216
  8765  0018D0                     l8184:
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;io.c: 340: else {SETxAPIxVAL(36, 1); }
  8769  0018D0  0E00               	movlw	0
  8770  0018D2  0100               	movlb	0	; () banked
  8771  0018D4  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8772  0018D6  0E01               	movlw	1
  8773  0018D8  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8774  0018DA  0E24               	movlw	36
  8775  0018DC  EC89  F01F         	call	_SETxAPIxVAL
  8776                           
  8777                           ;io.c: 341: break;
  8778  0018E0  D056               	goto	l8216
  8779  0018E2                     l8186:
  8780  0018E2  0100               	movlb	0	; () banked
  8781  0018E4  517F               	movf	_Button_Contact_Counter_LF& (0+255),w,b
  8782  0018E6  0100               	movlb	0	; () banked
  8783  0018E8  B4D8               	btfsc	status,2,c
  8784  0018EA  D003               	goto	l8192
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;io.c: 344: {
  8788                           ;io.c: 345: Button_Contact_Counter_LF--;
  8789  0018EC  0100               	movlb	0	; () banked
  8790  0018EE  077F               	decf	_Button_Contact_Counter_LF& (0+255),f,b
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;io.c: 347: }
  8794                           
  8795                           ;io.c: 346: break;
  8796  0018F0  D04E               	goto	l8216
  8797  0018F2                     l8192:
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;io.c: 348: else {SETxAPIxVAL(36, 0);}
  8801  0018F2  0E00               	movlw	0
  8802  0018F4  0100               	movlb	0	; () banked
  8803  0018F6  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8804  0018F8  0E00               	movlw	0
  8805  0018FA  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8806  0018FC  0E24               	movlw	36
  8807  0018FE  EC89  F01F         	call	_SETxAPIxVAL
  8808                           
  8809                           ;io.c: 352: }
  8810                           
  8811                           ;io.c: 351: default : break;
  8812                           
  8813                           ;io.c: 349: break;
  8814  001902  D045               	goto	l8216
  8815  001904                     l8196:
  8816  001904  B881               	btfsc	3969,4,c	;volatile
  8817  001906  D002               	goto	u7400
  8818  001908  0E01               	movlw	1
  8819  00190A  D001               	goto	u7410
  8820  00190C                     u7400:
  8821  00190C  0E00               	movlw	0
  8822  00190E                     u7410:
  8823  00190E  0100               	movlb	0	; () banked
  8824  001910  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8825  001912  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8826                           
  8827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8828                           ; Switch size 1, requested type "space"
  8829                           ; Number of cases is 1, Range of values is 0 to 0
  8830                           ; switch strategies available:
  8831                           ; Name         Instructions Cycles
  8832                           ; simple_byte            4     3 (average)
  8833                           ;	Chosen strategy is simple_byte
  8834  001914  0100               	movlb	0	; () banked
  8835  001916  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8836  001918  0A00               	xorlw	0	; case 0
  8837  00191A  A4D8               	btfss	status,2,c
  8838  00191C  D038               	goto	l8216
  8839                           
  8840                           ; BSR set to: 0
  8841                           ; Switch size 1, requested type "space"
  8842                           ; Number of cases is 2, Range of values is 0 to 1
  8843                           ; switch strategies available:
  8844                           ; Name         Instructions Cycles
  8845                           ; simple_byte            7     4 (average)
  8846                           ;	Chosen strategy is simple_byte
  8847  00191E  0100               	movlb	0	; () banked
  8848  001920  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8849  001922  0A00               	xorlw	0	; case 0
  8850  001924  B4D8               	btfsc	status,2,c
  8851  001926  D7DD               	goto	l8186
  8852  001928  0A01               	xorlw	1	; case 1
  8853  00192A  B4D8               	btfsc	status,2,c
  8854  00192C  D7BC               	goto	l8178
  8855                           
  8856                           ; BSR set to: 0
  8857                           ;io.c: 355: switch(!PORTBbits.RB3)
  8858  00192E  D02F               	goto	l8216
  8859  001930                     l8198:
  8860                           
  8861                           ; BSR set to: 0
  8862  001930  0100               	movlb	0	; () banked
  8863  001932  5181               	movf	_Button_Contact_Counter_RB& (0+255),w,b
  8864  001934  0100               	movlb	0	; () banked
  8865  001936  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8866  001938  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8867  00193A  0E1B               	movlw	27
  8868  00193C  ECBC  F020         	call	_GETxAPIxVAL
  8869  001940  0100               	movlb	0	; () banked
  8870  001942  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8871  001944  0100               	movlb	0	; () banked
  8872  001946  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8873  001948  0100               	movlb	0	; () banked
  8874  00194A  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8875  00194C  0100               	movlb	0	; () banked
  8876  00194E  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  8877  001950  A0D8               	btfss	status,0,c
  8878  001952  D003               	goto	l8204
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;io.c: 358: {
  8882                           ;io.c: 359: Button_Contact_Counter_RB++;
  8883  001954  0100               	movlb	0	; () banked
  8884  001956  2B81               	incf	_Button_Contact_Counter_RB& (0+255),f,b
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;io.c: 361: }
  8888                           
  8889                           ;io.c: 360: break;
  8890  001958  D05F               	goto	l8236
  8891  00195A                     l8204:
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;io.c: 362: else {SETxAPIxVAL(37, 1); }
  8895  00195A  0E00               	movlw	0
  8896  00195C  0100               	movlb	0	; () banked
  8897  00195E  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8898  001960  0E01               	movlw	1
  8899  001962  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8900  001964  0E25               	movlw	37
  8901  001966  EC89  F01F         	call	_SETxAPIxVAL
  8902                           
  8903                           ;io.c: 363: break;
  8904  00196A  D056               	goto	l8236
  8905  00196C                     l8206:
  8906  00196C  0100               	movlb	0	; () banked
  8907  00196E  5181               	movf	_Button_Contact_Counter_RB& (0+255),w,b
  8908  001970  0100               	movlb	0	; () banked
  8909  001972  B4D8               	btfsc	status,2,c
  8910  001974  D003               	goto	l8212
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;io.c: 366: {
  8914                           ;io.c: 367: Button_Contact_Counter_RB--;
  8915  001976  0100               	movlb	0	; () banked
  8916  001978  0781               	decf	_Button_Contact_Counter_RB& (0+255),f,b
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;io.c: 369: }
  8920                           
  8921                           ;io.c: 368: break;
  8922  00197A  D04E               	goto	l8236
  8923  00197C                     l8212:
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;io.c: 370: else {SETxAPIxVAL(37, 0);}
  8927  00197C  0E00               	movlw	0
  8928  00197E  0100               	movlb	0	; () banked
  8929  001980  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  8930  001982  0E00               	movlw	0
  8931  001984  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  8932  001986  0E25               	movlw	37
  8933  001988  EC89  F01F         	call	_SETxAPIxVAL
  8934                           
  8935                           ;io.c: 374: }
  8936                           
  8937                           ;io.c: 373: default : break;
  8938                           
  8939                           ;io.c: 371: break;
  8940  00198C  D045               	goto	l8236
  8941  00198E                     l8216:
  8942  00198E  B681               	btfsc	3969,3,c	;volatile
  8943  001990  D002               	goto	u7440
  8944  001992  0E01               	movlw	1
  8945  001994  D001               	goto	u7450
  8946  001996                     u7440:
  8947  001996  0E00               	movlw	0
  8948  001998                     u7450:
  8949  001998  0100               	movlb	0	; () banked
  8950  00199A  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8951  00199C  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8952                           
  8953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8954                           ; Switch size 1, requested type "space"
  8955                           ; Number of cases is 1, Range of values is 0 to 0
  8956                           ; switch strategies available:
  8957                           ; Name         Instructions Cycles
  8958                           ; simple_byte            4     3 (average)
  8959                           ;	Chosen strategy is simple_byte
  8960  00199E  0100               	movlb	0	; () banked
  8961  0019A0  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  8962  0019A2  0A00               	xorlw	0	; case 0
  8963  0019A4  A4D8               	btfss	status,2,c
  8964  0019A6  D038               	goto	l8236
  8965                           
  8966                           ; BSR set to: 0
  8967                           ; Switch size 1, requested type "space"
  8968                           ; Number of cases is 2, Range of values is 0 to 1
  8969                           ; switch strategies available:
  8970                           ; Name         Instructions Cycles
  8971                           ; simple_byte            7     4 (average)
  8972                           ;	Chosen strategy is simple_byte
  8973  0019A8  0100               	movlb	0	; () banked
  8974  0019AA  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8975  0019AC  0A00               	xorlw	0	; case 0
  8976  0019AE  B4D8               	btfsc	status,2,c
  8977  0019B0  D7DD               	goto	l8206
  8978  0019B2  0A01               	xorlw	1	; case 1
  8979  0019B4  B4D8               	btfsc	status,2,c
  8980  0019B6  D7BC               	goto	l8198
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;io.c: 377: switch(!PORTBbits.RB2)
  8984  0019B8  D02F               	goto	l8236
  8985  0019BA                     l8218:
  8986                           
  8987                           ; BSR set to: 0
  8988  0019BA  0100               	movlb	0	; () banked
  8989  0019BC  5182               	movf	_Button_Contact_Counter_RF& (0+255),w,b
  8990  0019BE  0100               	movlb	0	; () banked
  8991  0019C0  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  8992  0019C2  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  8993  0019C4  0E1B               	movlw	27
  8994  0019C6  ECBC  F020         	call	_GETxAPIxVAL
  8995  0019CA  0100               	movlb	0	; () banked
  8996  0019CC  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  8997  0019CE  0100               	movlb	0	; () banked
  8998  0019D0  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  8999  0019D2  0100               	movlb	0	; () banked
  9000  0019D4  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9001  0019D6  0100               	movlb	0	; () banked
  9002  0019D8  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9003  0019DA  A0D8               	btfss	status,0,c
  9004  0019DC  D003               	goto	l8224
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;io.c: 380: {
  9008                           ;io.c: 381: Button_Contact_Counter_RF++;
  9009  0019DE  0100               	movlb	0	; () banked
  9010  0019E0  2B82               	incf	_Button_Contact_Counter_RF& (0+255),f,b
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;io.c: 383: }
  9014                           
  9015                           ;io.c: 382: break;
  9016  0019E2  D05A               	goto	l8256
  9017  0019E4                     l8224:
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;io.c: 384: else {SETxAPIxVAL(38, 1); }
  9021  0019E4  0E00               	movlw	0
  9022  0019E6  0100               	movlb	0	; () banked
  9023  0019E8  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9024  0019EA  0E01               	movlw	1
  9025  0019EC  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  9026  0019EE  0E26               	movlw	38
  9027  0019F0  EC89  F01F         	call	_SETxAPIxVAL
  9028                           
  9029                           ;io.c: 385: break;
  9030  0019F4  D051               	goto	l8256
  9031  0019F6                     l8226:
  9032  0019F6  0100               	movlb	0	; () banked
  9033  0019F8  5182               	movf	_Button_Contact_Counter_RF& (0+255),w,b
  9034  0019FA  0100               	movlb	0	; () banked
  9035  0019FC  B4D8               	btfsc	status,2,c
  9036  0019FE  D003               	goto	l8232
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;io.c: 388: {
  9040                           ;io.c: 389: Button_Contact_Counter_RF--;
  9041  001A00  0100               	movlb	0	; () banked
  9042  001A02  0782               	decf	_Button_Contact_Counter_RF& (0+255),f,b
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;io.c: 391: }
  9046                           
  9047                           ;io.c: 390: break;
  9048  001A04  D049               	goto	l8256
  9049  001A06                     l8232:
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;io.c: 392: else {SETxAPIxVAL(38, 0);}
  9053  001A06  0E00               	movlw	0
  9054  001A08  0100               	movlb	0	; () banked
  9055  001A0A  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9056  001A0C  0E00               	movlw	0
  9057  001A0E  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  9058  001A10  0E26               	movlw	38
  9059  001A12  EC89  F01F         	call	_SETxAPIxVAL
  9060                           
  9061                           ;io.c: 396: }
  9062                           
  9063                           ;io.c: 395: default : break;
  9064                           
  9065                           ;io.c: 393: break;
  9066  001A16  D040               	goto	l8256
  9067  001A18                     l8236:
  9068  001A18  B481               	btfsc	3969,2,c	;volatile
  9069  001A1A  D002               	goto	u7480
  9070  001A1C  0E01               	movlw	1
  9071  001A1E  D001               	goto	u7490
  9072  001A20                     u7480:
  9073  001A20  0E00               	movlw	0
  9074  001A22                     u7490:
  9075  001A22  0100               	movlb	0	; () banked
  9076  001A24  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  9077  001A26  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9078                           
  9079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9080                           ; Switch size 1, requested type "space"
  9081                           ; Number of cases is 1, Range of values is 0 to 0
  9082                           ; switch strategies available:
  9083                           ; Name         Instructions Cycles
  9084                           ; simple_byte            4     3 (average)
  9085                           ;	Chosen strategy is simple_byte
  9086  001A28  0100               	movlb	0	; () banked
  9087  001A2A  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9088  001A2C  0A00               	xorlw	0	; case 0
  9089  001A2E  A4D8               	btfss	status,2,c
  9090  001A30  D033               	goto	l8256
  9091                           
  9092                           ; BSR set to: 0
  9093                           ; Switch size 1, requested type "space"
  9094                           ; Number of cases is 2, Range of values is 0 to 1
  9095                           ; switch strategies available:
  9096                           ; Name         Instructions Cycles
  9097                           ; simple_byte            7     4 (average)
  9098                           ;	Chosen strategy is simple_byte
  9099  001A32  0100               	movlb	0	; () banked
  9100  001A34  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  9101  001A36  0A00               	xorlw	0	; case 0
  9102  001A38  B4D8               	btfsc	status,2,c
  9103  001A3A  D7DD               	goto	l8226
  9104  001A3C  0A01               	xorlw	1	; case 1
  9105  001A3E  B4D8               	btfsc	status,2,c
  9106  001A40  D7BC               	goto	l8218
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;io.c: 399: switch(PORTCbits.RC1)
  9110  001A42  D02A               	goto	l8256
  9111  001A44                     l8238:
  9112  001A44  5011               	movf	_Reed_Contact_LMU_Counter,w,c
  9113  001A46  0100               	movlb	0	; () banked
  9114  001A48  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  9115  001A4A  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9116  001A4C  0E1B               	movlw	27
  9117  001A4E  ECBC  F020         	call	_GETxAPIxVAL
  9118  001A52  0100               	movlb	0	; () banked
  9119  001A54  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  9120  001A56  0100               	movlb	0	; () banked
  9121  001A58  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9122  001A5A  0100               	movlb	0	; () banked
  9123  001A5C  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9124  001A5E  0100               	movlb	0	; () banked
  9125  001A60  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9126  001A62  A0D8               	btfss	status,0,c
  9127  001A64  D002               	goto	l8244
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;io.c: 402: {
  9131                           ;io.c: 403: Reed_Contact_LMU_Counter++;
  9132  001A66  2A11               	incf	_Reed_Contact_LMU_Counter,f,c
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;io.c: 405: }
  9136                           
  9137                           ;io.c: 404: break;
  9138  001A68  D04D               	goto	l8276
  9139  001A6A                     l8244:
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;io.c: 406: else {SETxAPIxVAL(41, 1); }
  9143  001A6A  0E00               	movlw	0
  9144  001A6C  0100               	movlb	0	; () banked
  9145  001A6E  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9146  001A70  0E01               	movlw	1
  9147  001A72  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  9148  001A74  0E29               	movlw	41
  9149  001A76  EC89  F01F         	call	_SETxAPIxVAL
  9150                           
  9151                           ;io.c: 407: break;
  9152  001A7A  D044               	goto	l8276
  9153  001A7C                     l8246:
  9154  001A7C  5011               	movf	_Reed_Contact_LMU_Counter,w,c
  9155  001A7E  B4D8               	btfsc	status,2,c
  9156  001A80  D002               	goto	l8252
  9157                           
  9158                           ;io.c: 410: {
  9159                           ;io.c: 411: Reed_Contact_LMU_Counter--;
  9160  001A82  0611               	decf	_Reed_Contact_LMU_Counter,f,c
  9161                           
  9162                           ;io.c: 413: }
  9163                           
  9164                           ;io.c: 412: break;
  9165  001A84  D03F               	goto	l8276
  9166  001A86                     l8252:
  9167                           
  9168                           ;io.c: 414: else {SETxAPIxVAL(41, 0);}
  9169  001A86  0E00               	movlw	0
  9170  001A88  0100               	movlb	0	; () banked
  9171  001A8A  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9172  001A8C  0E00               	movlw	0
  9173  001A8E  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  9174  001A90  0E29               	movlw	41
  9175  001A92  EC89  F01F         	call	_SETxAPIxVAL
  9176                           
  9177                           ;io.c: 418: }
  9178                           
  9179                           ;io.c: 417: default : break;
  9180                           
  9181                           ;io.c: 415: break;
  9182  001A96  D036               	goto	l8276
  9183  001A98                     l8256:
  9184  001A98  A282               	btfss	3970,1,c	;volatile
  9185  001A9A  D002               	goto	u7520
  9186  001A9C  0E01               	movlw	1
  9187  001A9E  D001               	goto	u7526
  9188  001AA0                     u7520:
  9189  001AA0  0E00               	movlw	0
  9190  001AA2                     u7526:
  9191                           
  9192                           ; Switch size 1, requested type "space"
  9193                           ; Number of cases is 2, Range of values is 0 to 1
  9194                           ; switch strategies available:
  9195                           ; Name         Instructions Cycles
  9196                           ; simple_byte            7     4 (average)
  9197                           ;	Chosen strategy is simple_byte
  9198  001AA2  0A00               	xorlw	0	; case 0
  9199  001AA4  B4D8               	btfsc	status,2,c
  9200  001AA6  D7CE               	goto	l8238
  9201  001AA8  0A01               	xorlw	1	; case 1
  9202  001AAA  B4D8               	btfsc	status,2,c
  9203  001AAC  D7E7               	goto	l8246
  9204                           
  9205                           ;io.c: 421: switch(PORTDbits.RD4)
  9206  001AAE  D02A               	goto	l8276
  9207  001AB0                     l8258:
  9208  001AB0  5010               	movf	_Reed_Contact_LMD_Counter,w,c
  9209  001AB2  0100               	movlb	0	; () banked
  9210  001AB4  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  9211  001AB6  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9212  001AB8  0E1B               	movlw	27
  9213  001ABA  ECBC  F020         	call	_GETxAPIxVAL
  9214  001ABE  0100               	movlb	0	; () banked
  9215  001AC0  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  9216  001AC2  0100               	movlb	0	; () banked
  9217  001AC4  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9218  001AC6  0100               	movlb	0	; () banked
  9219  001AC8  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9220  001ACA  0100               	movlb	0	; () banked
  9221  001ACC  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9222  001ACE  A0D8               	btfss	status,0,c
  9223  001AD0  D002               	goto	l8264
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;io.c: 424: {
  9227                           ;io.c: 425: Reed_Contact_LMD_Counter++;
  9228  001AD2  2A10               	incf	_Reed_Contact_LMD_Counter,f,c
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;io.c: 427: }
  9232                           
  9233                           ;io.c: 426: break;
  9234  001AD4  D04D               	goto	l8296
  9235  001AD6                     l8264:
  9236                           
  9237                           ; BSR set to: 0
  9238                           ;io.c: 428: else {SETxAPIxVAL(42, 1); }
  9239  001AD6  0E00               	movlw	0
  9240  001AD8  0100               	movlb	0	; () banked
  9241  001ADA  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9242  001ADC  0E01               	movlw	1
  9243  001ADE  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  9244  001AE0  0E2A               	movlw	42
  9245  001AE2  EC89  F01F         	call	_SETxAPIxVAL
  9246                           
  9247                           ;io.c: 429: break;
  9248  001AE6  D044               	goto	l8296
  9249  001AE8                     l8266:
  9250  001AE8  5010               	movf	_Reed_Contact_LMD_Counter,w,c
  9251  001AEA  B4D8               	btfsc	status,2,c
  9252  001AEC  D002               	goto	l8272
  9253                           
  9254                           ;io.c: 432: {
  9255                           ;io.c: 433: Reed_Contact_LMD_Counter--;
  9256  001AEE  0610               	decf	_Reed_Contact_LMD_Counter,f,c
  9257                           
  9258                           ;io.c: 435: }
  9259                           
  9260                           ;io.c: 434: break;
  9261  001AF0  D03F               	goto	l8296
  9262  001AF2                     l8272:
  9263                           
  9264                           ;io.c: 436: else {SETxAPIxVAL(42, 0);}
  9265  001AF2  0E00               	movlw	0
  9266  001AF4  0100               	movlb	0	; () banked
  9267  001AF6  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9268  001AF8  0E00               	movlw	0
  9269  001AFA  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  9270  001AFC  0E2A               	movlw	42
  9271  001AFE  EC89  F01F         	call	_SETxAPIxVAL
  9272                           
  9273                           ;io.c: 440: }
  9274                           
  9275                           ;io.c: 439: default : break;
  9276                           
  9277                           ;io.c: 437: break;
  9278  001B02  D036               	goto	l8296
  9279  001B04                     l8276:
  9280  001B04  A883               	btfss	3971,4,c	;volatile
  9281  001B06  D002               	goto	u7550
  9282  001B08  0E01               	movlw	1
  9283  001B0A  D001               	goto	u7556
  9284  001B0C                     u7550:
  9285  001B0C  0E00               	movlw	0
  9286  001B0E                     u7556:
  9287                           
  9288                           ; Switch size 1, requested type "space"
  9289                           ; Number of cases is 2, Range of values is 0 to 1
  9290                           ; switch strategies available:
  9291                           ; Name         Instructions Cycles
  9292                           ; simple_byte            7     4 (average)
  9293                           ;	Chosen strategy is simple_byte
  9294  001B0E  0A00               	xorlw	0	; case 0
  9295  001B10  B4D8               	btfsc	status,2,c
  9296  001B12  D7CE               	goto	l8258
  9297  001B14  0A01               	xorlw	1	; case 1
  9298  001B16  B4D8               	btfsc	status,2,c
  9299  001B18  D7E7               	goto	l8266
  9300                           
  9301                           ;io.c: 443: switch(PORTEbits.RE1)
  9302  001B1A  D02A               	goto	l8296
  9303  001B1C                     l8278:
  9304  001B1C  5015               	movf	_Reed_Contact_RMU_Counter,w,c
  9305  001B1E  0100               	movlb	0	; () banked
  9306  001B20  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  9307  001B22  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9308  001B24  0E1B               	movlw	27
  9309  001B26  ECBC  F020         	call	_GETxAPIxVAL
  9310  001B2A  0100               	movlb	0	; () banked
  9311  001B2C  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  9312  001B2E  0100               	movlb	0	; () banked
  9313  001B30  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9314  001B32  0100               	movlb	0	; () banked
  9315  001B34  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9316  001B36  0100               	movlb	0	; () banked
  9317  001B38  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9318  001B3A  A0D8               	btfss	status,0,c
  9319  001B3C  D002               	goto	l8284
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;io.c: 446: {
  9323                           ;io.c: 447: Reed_Contact_RMU_Counter++;
  9324  001B3E  2A15               	incf	_Reed_Contact_RMU_Counter,f,c
  9325                           
  9326                           ; BSR set to: 0
  9327                           ;io.c: 449: }
  9328                           
  9329                           ;io.c: 448: break;
  9330  001B40  D04D               	goto	l8316
  9331  001B42                     l8284:
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;io.c: 450: else {SETxAPIxVAL(43, 1); }
  9335  001B42  0E00               	movlw	0
  9336  001B44  0100               	movlb	0	; () banked
  9337  001B46  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9338  001B48  0E01               	movlw	1
  9339  001B4A  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  9340  001B4C  0E2B               	movlw	43
  9341  001B4E  EC89  F01F         	call	_SETxAPIxVAL
  9342                           
  9343                           ;io.c: 451: break;
  9344  001B52  D044               	goto	l8316
  9345  001B54                     l8286:
  9346  001B54  5015               	movf	_Reed_Contact_RMU_Counter,w,c
  9347  001B56  B4D8               	btfsc	status,2,c
  9348  001B58  D002               	goto	l8292
  9349                           
  9350                           ;io.c: 454: {
  9351                           ;io.c: 455: Reed_Contact_RMU_Counter--;
  9352  001B5A  0615               	decf	_Reed_Contact_RMU_Counter,f,c
  9353                           
  9354                           ;io.c: 457: }
  9355                           
  9356                           ;io.c: 456: break;
  9357  001B5C  D03F               	goto	l8316
  9358  001B5E                     l8292:
  9359                           
  9360                           ;io.c: 458: else {SETxAPIxVAL(43, 0);}
  9361  001B5E  0E00               	movlw	0
  9362  001B60  0100               	movlb	0	; () banked
  9363  001B62  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9364  001B64  0E00               	movlw	0
  9365  001B66  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  9366  001B68  0E2B               	movlw	43
  9367  001B6A  EC89  F01F         	call	_SETxAPIxVAL
  9368                           
  9369                           ;io.c: 462: }
  9370                           
  9371                           ;io.c: 461: default : break;
  9372                           
  9373                           ;io.c: 459: break;
  9374  001B6E  D036               	goto	l8316
  9375  001B70                     l8296:
  9376  001B70  A284               	btfss	3972,1,c	;volatile
  9377  001B72  D002               	goto	u7580
  9378  001B74  0E01               	movlw	1
  9379  001B76  D001               	goto	u7586
  9380  001B78                     u7580:
  9381  001B78  0E00               	movlw	0
  9382  001B7A                     u7586:
  9383                           
  9384                           ; Switch size 1, requested type "space"
  9385                           ; Number of cases is 2, Range of values is 0 to 1
  9386                           ; switch strategies available:
  9387                           ; Name         Instructions Cycles
  9388                           ; simple_byte            7     4 (average)
  9389                           ;	Chosen strategy is simple_byte
  9390  001B7A  0A00               	xorlw	0	; case 0
  9391  001B7C  B4D8               	btfsc	status,2,c
  9392  001B7E  D7CE               	goto	l8278
  9393  001B80  0A01               	xorlw	1	; case 1
  9394  001B82  B4D8               	btfsc	status,2,c
  9395  001B84  D7E7               	goto	l8286
  9396                           
  9397                           ;io.c: 465: switch(PORTEbits.RE0)
  9398  001B86  D02A               	goto	l8316
  9399  001B88                     l8298:
  9400  001B88  5014               	movf	_Reed_Contact_RMD_Counter,w,c
  9401  001B8A  0100               	movlb	0	; () banked
  9402  001B8C  6FC3               	movwf	??_Debounce_Inputs& (0+255),b
  9403  001B8E  6BC4               	clrf	(??_Debounce_Inputs+1)& (0+255),b
  9404  001B90  0E1B               	movlw	27
  9405  001B92  ECBC  F020         	call	_GETxAPIxVAL
  9406  001B96  0100               	movlb	0	; () banked
  9407  001B98  51C3               	movf	??_Debounce_Inputs& (0+255),w,b
  9408  001B9A  0100               	movlb	0	; () banked
  9409  001B9C  5DB9               	subwf	?_GETxAPIxVAL& (0+255),w,b
  9410  001B9E  0100               	movlb	0	; () banked
  9411  001BA0  51C4               	movf	(??_Debounce_Inputs+1)& (0+255),w,b
  9412  001BA2  0100               	movlb	0	; () banked
  9413  001BA4  59BA               	subwfb	(?_GETxAPIxVAL+1)& (0+255),w,b
  9414  001BA6  A0D8               	btfss	status,0,c
  9415  001BA8  D002               	goto	l8304
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;io.c: 468: {
  9419                           ;io.c: 469: Reed_Contact_RMD_Counter++;
  9420  001BAA  2A14               	incf	_Reed_Contact_RMD_Counter,f,c
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;io.c: 471: }
  9424                           
  9425                           ;io.c: 470: break;
  9426  001BAC  0012               	return	
  9427  001BAE                     l8304:
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;io.c: 472: else {SETxAPIxVAL(44, 1); }
  9431  001BAE  0E00               	movlw	0
  9432  001BB0  0100               	movlb	0	; () banked
  9433  001BB2  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9434  001BB4  0E01               	movlw	1
  9435  001BB6  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  9436  001BB8  0E2C               	movlw	44
  9437  001BBA  EC89  F01F         	call	_SETxAPIxVAL
  9438                           
  9439                           ;io.c: 473: break;
  9440  001BBE  0012               	return	
  9441  001BC0                     l8306:
  9442  001BC0  5014               	movf	_Reed_Contact_RMD_Counter,w,c
  9443  001BC2  B4D8               	btfsc	status,2,c
  9444  001BC4  D002               	goto	l8312
  9445                           
  9446                           ;io.c: 476: {
  9447                           ;io.c: 477: Reed_Contact_RMD_Counter--;
  9448  001BC6  0614               	decf	_Reed_Contact_RMD_Counter,f,c
  9449                           
  9450                           ;io.c: 479: }
  9451                           
  9452                           ;io.c: 478: break;
  9453  001BC8  0012               	return	
  9454  001BCA                     l8312:
  9455                           
  9456                           ;io.c: 480: else {SETxAPIxVAL(44, 0);}
  9457  001BCA  0E00               	movlw	0
  9458  001BCC  0100               	movlb	0	; () banked
  9459  001BCE  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
  9460  001BD0  0E00               	movlw	0
  9461  001BD2  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
  9462  001BD4  0E2C               	movlw	44
  9463  001BD6  EC89  F01F         	call	_SETxAPIxVAL
  9464                           
  9465                           ;io.c: 484: }
  9466                           
  9467                           ;io.c: 483: default : break;
  9468                           
  9469                           ;io.c: 481: break;
  9470  001BDA  0012               	return	
  9471  001BDC                     l8316:
  9472  001BDC  A084               	btfss	3972,0,c	;volatile
  9473  001BDE  D002               	goto	u7610
  9474  001BE0  0E01               	movlw	1
  9475  001BE2  D001               	goto	u7616
  9476  001BE4                     u7610:
  9477  001BE4  0E00               	movlw	0
  9478  001BE6                     u7616:
  9479                           
  9480                           ; Switch size 1, requested type "space"
  9481                           ; Number of cases is 2, Range of values is 0 to 1
  9482                           ; switch strategies available:
  9483                           ; Name         Instructions Cycles
  9484                           ; simple_byte            7     4 (average)
  9485                           ;	Chosen strategy is simple_byte
  9486  001BE6  0A00               	xorlw	0	; case 0
  9487  001BE8  B4D8               	btfsc	status,2,c
  9488  001BEA  D7CE               	goto	l8298
  9489  001BEC  0A01               	xorlw	1	; case 1
  9490  001BEE  A4D8               	btfss	status,2,c
  9491  001BF0  0012               	return	
  9492  001BF2  D7E6               	goto	l8306
  9493  001BF4                     __end_of_Debounce_Inputs:
  9494                           	opt stack 0
  9495                           tblptru	equ	0xFF8
  9496                           tblptrh	equ	0xFF7
  9497                           tblptrl	equ	0xFF6
  9498                           tablat	equ	0xFF5
  9499                           intcon	equ	0xFF2
  9500                           postinc0	equ	0xFEE
  9501                           wreg	equ	0xFE8
  9502                           postdec1	equ	0xFE5
  9503                           fsr1l	equ	0xFE1
  9504                           status	equ	0xFD8
  9505                           
  9506 ;; *************** function _SetDCPWM1 *****************
  9507 ;; Defined at:
  9508 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic18\plib\PWM\pw1setdc.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;  dutycycle       2    3[BANK0 ] unsigned int 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;  DCycle          2    7[BANK0 ] struct PWMDC
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, status,2, status,0
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9522 ;;      Params:         0       2       0       0       0       0       0       0       0
  9523 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9524 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9525 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9526 ;;Total ram usage:        6 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:    3
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		_Debounce_Inputs
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text17
  9537  003FB2                     __ptext17:
  9538                           	opt stack 0
  9539  003FB2                     _SetDCPWM1:
  9540                           	opt stack 25
  9541                           
  9542                           ;incstack = 0
  9543  003FB2  C0BC  F0BE         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  9544  003FB6  C0BD  F0BF         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  9545  003FBA  0E06               	movlw	6
  9546  003FBC                     u7095:
  9547  003FBC  90D8               	bcf	status,0,c
  9548  003FBE  0100               	movlb	0	; () banked
  9549  003FC0  37BE               	rlcf	??_SetDCPWM1& (0+255),f,b
  9550  003FC2  37BF               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  9551  003FC4  2EE8               	decfsz	wreg,f,c
  9552  003FC6  D7FA               	goto	u7095
  9553  003FC8  C0BE  F0C0         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  9554  003FCC  C0BF  F0C1         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  9555                           
  9556                           ; BSR set to: 0
  9557  003FD0  C0C1  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  9558  003FD4  C0C0  F0BE         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  9559  003FD8  0100               	movlb	0	; () banked
  9560  003FDA  90D8               	bcf	status,0,c
  9561  003FDC  33BE               	rrcf	??_SetDCPWM1& (0+255),f,b
  9562  003FDE  0100               	movlb	0	; () banked
  9563  003FE0  90D8               	bcf	status,0,c
  9564  003FE2  33BE               	rrcf	??_SetDCPWM1& (0+255),f,b
  9565  003FE4  0E30               	movlw	48
  9566  003FE6  0100               	movlb	0	; () banked
  9567  003FE8  17BE               	andwf	??_SetDCPWM1& (0+255),f,b
  9568  003FEA  50BD               	movf	4029,w,c	;volatile
  9569  003FEC  0BCF               	andlw	207
  9570  003FEE  0100               	movlb	0	; () banked
  9571  003FF0  11BE               	iorwf	??_SetDCPWM1& (0+255),w,b
  9572  003FF2  6EBD               	movwf	4029,c	;volatile
  9573                           
  9574                           ; BSR set to: 0
  9575  003FF4  0012               	return		;funcret
  9576  003FF6                     __end_of_SetDCPWM1:
  9577                           	opt stack 0
  9578                           tblptru	equ	0xFF8
  9579                           tblptrh	equ	0xFF7
  9580                           tblptrl	equ	0xFF6
  9581                           tablat	equ	0xFF5
  9582                           intcon	equ	0xFF2
  9583                           postinc0	equ	0xFEE
  9584                           wreg	equ	0xFE8
  9585                           postdec1	equ	0xFE5
  9586                           fsr1l	equ	0xFE1
  9587                           status	equ	0xFD8
  9588                           
  9589 ;; *************** function _READxRECEIVEDxMESSAGE *****************
  9590 ;; Defined at:
  9591 ;;		line 39 in file "../terminal.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;		None
  9594 ;; Auto vars:     Size  Location     Type
  9595 ;;		None
  9596 ;; Return value:  Size  Location     Type
  9597 ;;                  1    wreg      void 
  9598 ;; Registers used:
  9599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9600 ;; Tracked objects:
  9601 ;;		On entry : 0/0
  9602 ;;		On exit  : 0/0
  9603 ;;		Unchanged: 0/0
  9604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9605 ;;      Params:         0       0       0       0       0       0       0       0       0
  9606 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9607 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9608 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9609 ;;Total ram usage:        4 bytes
  9610 ;; Hardware stack levels used:    1
  9611 ;; Hardware stack levels required when called:    6
  9612 ;; This function calls:
  9613 ;;		_EUSART1_Read
  9614 ;;		_TranslateMessage
  9615 ;;		_printf
  9616 ;; This function is called by:
  9617 ;;		_main
  9618 ;; This function uses a non-reentrant model
  9619 ;;
  9620                           
  9621                           	psect	text18
  9622  002EB6                     __ptext18:
  9623                           	opt stack 0
  9624  002EB6                     _READxRECEIVEDxMESSAGE:
  9625                           	opt stack 24
  9626                           
  9627                           ;terminal.c: 41: if ((eusart1RxCount) > 0){
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;incstack = 0
  9631  002EB6  501A               	movf	_eusart1RxCount,w,c	;volatile
  9632  002EB8  B4D8               	btfsc	status,2,c
  9633  002EBA  D08E               	goto	l9376
  9634                           
  9635                           ;terminal.c: 44: Received_Data = EUSART1_Read();
  9636  002EBC  EC1D  F020         	call	_EUSART1_Read	;wreg free
  9637  002EC0  6E0D               	movwf	_Received_Data,c
  9638                           
  9639                           ;terminal.c: 46: switch (RxSwitch){
  9640  002EC2  D07E               	goto	l9374
  9641  002EC4                     l9322:
  9642                           
  9643                           ;terminal.c: 48: pData = &Data[0];
  9644  002EC4  0EAF               	movlw	low _Data
  9645  002EC6  6E09               	movwf	_pData,c
  9646  002EC8  0E00               	movlw	high _Data
  9647  002ECA  6E0A               	movwf	_pData+1,c
  9648                           
  9649                           ;terminal.c: 49: pLen = &Data[DataLen - 1];
  9650  002ECC  0EFF               	movlw	255
  9651  002ECE  0100               	movlb	0	; () banked
  9652  002ED0  6FD7               	movwf	??_READxRECEIVEDxMESSAGE& (0+255),b
  9653  002ED2  0EFF               	movlw	255
  9654  002ED4  0100               	movlb	0	; () banked
  9655  002ED6  6FD8               	movwf	(??_READxRECEIVEDxMESSAGE+1)& (0+255),b
  9656  002ED8  0E0B               	movlw	low _DataLen
  9657  002EDA  6EF6               	movwf	tblptrl,c
  9658  002EDC                     	if	1	;There is more than 1 active tblptr byte
  9659  002EDC  0E08               	movlw	high _DataLen
  9660  002EDE  6EF7               	movwf	tblptrh,c
  9661  002EE0                     	endif
  9662  002EE0                     	if	0	;There are less than 3 active tblptr bytes
  9663  002EE0                     	endif
  9664  002EE0  0008               	tblrd		*
  9665  002EE2  50F5               	movf	tablat,w,c
  9666  002EE4  0100               	movlb	0	; () banked
  9667  002EE6  6FD9               	movwf	(??_READxRECEIVEDxMESSAGE+2)& (0+255),b
  9668  002EE8  6BDA               	clrf	(??_READxRECEIVEDxMESSAGE+3)& (0+255),b
  9669  002EEA  0100               	movlb	0	; () banked
  9670  002EEC  51D7               	movf	??_READxRECEIVEDxMESSAGE& (0+255),w,b
  9671  002EEE  0100               	movlb	0	; () banked
  9672  002EF0  27D9               	addwf	(??_READxRECEIVEDxMESSAGE+2)& (0+255),f,b
  9673  002EF2  0100               	movlb	0	; () banked
  9674  002EF4  51D8               	movf	(??_READxRECEIVEDxMESSAGE+1)& (0+255),w,b
  9675  002EF6  0100               	movlb	0	; () banked
  9676  002EF8  23DA               	addwfc	(??_READxRECEIVEDxMESSAGE+3)& (0+255),f,b
  9677  002EFA  0EAF               	movlw	low _Data
  9678  002EFC  0100               	movlb	0	; () banked
  9679  002EFE  25D9               	addwf	(??_READxRECEIVEDxMESSAGE+2)& (0+255),w,b
  9680  002F00  0100               	movlb	0	; () banked
  9681  002F02  6F7C               	movwf	_pLen& (0+255),b
  9682  002F04  0E00               	movlw	high _Data
  9683  002F06  0100               	movlb	0	; () banked
  9684  002F08  21DA               	addwfc	(??_READxRECEIVEDxMESSAGE+3)& (0+255),w,b
  9685  002F0A  0100               	movlb	0	; () banked
  9686  002F0C  6F7D               	movwf	(_pLen+1)& (0+255),b
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;terminal.c: 50: if (Received_Data == 's' || Received_Data == 'g'){
  9690  002F0E  0E73               	movlw	115
  9691  002F10  180D               	xorwf	_Received_Data,w,c
  9692  002F12  B4D8               	btfsc	status,2,c
  9693  002F14  D004               	goto	l9330
  9694                           
  9695                           ; BSR set to: 0
  9696  002F16  0E67               	movlw	103
  9697  002F18  180D               	xorwf	_Received_Data,w,c
  9698  002F1A  A4D8               	btfss	status,2,c
  9699  002F1C  D00A               	goto	l9336
  9700  002F1E                     l9330:
  9701                           
  9702                           ; BSR set to: 0
  9703                           ;terminal.c: 51: *pData = Received_Data;
  9704  002F1E  C009  FFD9         	movff	_pData,fsr2l
  9705  002F22  C00A  FFDA         	movff	_pData+1,fsr2h
  9706  002F26  C00D  FFDF         	movff	_Received_Data,indf2
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;terminal.c: 52: *pData++;
  9710  002F2A  4A09               	infsnz	_pData,f,c
  9711  002F2C  2A0A               	incf	_pData+1,f,c
  9712                           
  9713                           ; BSR set to: 0
  9714                           ;terminal.c: 53: RxSwitch = 1;
  9715  002F2E  0E01               	movlw	1
  9716  002F30  D00E               	goto	L91
  9717  002F32                     l9336:
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;terminal.c: 55: else{
  9721                           ;terminal.c: 56: RxSwitch = 0;
  9722  002F32  0E00               	movlw	0
  9723  002F34  D00C               	goto	L91
  9724  002F36                     l9338:
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;terminal.c: 61: if (Received_Data == 'x'){
  9728  002F36  0E78               	movlw	120
  9729  002F38  180D               	xorwf	_Received_Data,w,c
  9730  002F3A  A4D8               	btfss	status,2,c
  9731  002F3C  D7FA               	goto	l9336
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;terminal.c: 62: *pData = Received_Data;
  9735  002F3E  C009  FFD9         	movff	_pData,fsr2l
  9736  002F42  C00A  FFDA         	movff	_pData+1,fsr2h
  9737  002F46  C00D  FFDF         	movff	_Received_Data,indf2
  9738  002F4A  D037               	goto	l9368
  9739  002F4C                     l9344:
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;terminal.c: 64: RxSwitch = 2;
  9743  002F4C  0E02               	movlw	2
  9744  002F4E                     L91:
  9745  002F4E  0100               	movlb	0	; () banked
  9746  002F50  6F84               	movwf	_RxSwitch& (0+255),b
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;terminal.c: 68: }
  9750                           ;terminal.c: 69: break;
  9751  002F52  D042               	goto	l9376
  9752  002F54                     l9348:
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;terminal.c: 72: if (Received_Data == 'G'){
  9756  002F54  0E47               	movlw	71
  9757  002F56  180D               	xorwf	_Received_Data,w,c
  9758  002F58  B4D8               	btfsc	status,2,c
  9759  002F5A  D009               	goto	l9356
  9760  002F5C  D017               	goto	l9360
  9761  002F5E                     l9352:
  9762                           
  9763                           ; BSR set to: 0
  9764                           ;terminal.c: 76: *pData = '\0';
  9765  002F5E  C009  FFD9         	movff	_pData,fsr2l
  9766  002F62  C00A  FFDA         	movff	_pData+1,fsr2h
  9767  002F66  0E00               	movlw	0
  9768  002F68  6EDF               	movwf	indf2,c
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;terminal.c: 77: pData++;
  9772  002F6A  4A09               	infsnz	_pData,f,c
  9773  002F6C  2A0A               	incf	_pData+1,f,c
  9774  002F6E                     l9356:
  9775                           
  9776                           ; BSR set to: 0
  9777  002F6E  0100               	movlb	0	; () banked
  9778  002F70  517C               	movf	_pLen& (0+255),w,b
  9779  002F72  5C09               	subwf	_pData,w,c
  9780  002F74  0100               	movlb	0	; () banked
  9781  002F76  517D               	movf	(_pLen+1)& (0+255),w,b
  9782  002F78  580A               	subwfb	_pData+1,w,c
  9783  002F7A  A0D8               	btfss	status,0,c
  9784  002F7C  D7F0               	goto	l9352
  9785                           
  9786                           ; BSR set to: 0
  9787                           ;terminal.c: 78: }
  9788                           ;terminal.c: 80: RxSwitch = 3;
  9789                           
  9790                           ; BSR set to: 0
  9791  002F7E  0E03               	movlw	3
  9792  002F80  0100               	movlb	0	; () banked
  9793  002F82  6F84               	movwf	_RxSwitch& (0+255),b
  9794                           
  9795                           ;terminal.c: 81: Message_To_Translate = 1;
  9796  002F84  0E01               	movlw	1
  9797  002F86  0100               	movlb	0	; () banked
  9798  002F88  6F83               	movwf	_Message_To_Translate& (0+255),b
  9799                           
  9800                           ;terminal.c: 82: }
  9801  002F8A  D026               	goto	l9376
  9802  002F8C                     l9360:
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;terminal.c: 83: else{
  9806                           ;terminal.c: 84: *pData = Received_Data;
  9807  002F8C  C009  FFD9         	movff	_pData,fsr2l
  9808  002F90  C00A  FFDA         	movff	_pData+1,fsr2h
  9809  002F94  C00D  FFDF         	movff	_Received_Data,indf2
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;terminal.c: 85: if (pData > pLen){
  9813  002F98  5009               	movf	_pData,w,c
  9814  002F9A  0100               	movlb	0	; () banked
  9815  002F9C  5D7C               	subwf	_pLen& (0+255),w,b
  9816  002F9E  500A               	movf	_pData+1,w,c
  9817  002FA0  0100               	movlb	0	; () banked
  9818  002FA2  597D               	subwfb	(_pLen+1)& (0+255),w,b
  9819  002FA4  B0D8               	btfsc	status,0,c
  9820  002FA6  D009               	goto	l9368
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;terminal.c: 86: printf("E#10\r\n");
  9824  002FA8  0E16               	movlw	low STR_1
  9825  002FAA  0100               	movlb	0	; () banked
  9826  002FAC  6FC5               	movwf	printf@f& (0+255),b
  9827  002FAE  0E08               	movlw	high STR_1
  9828  002FB0  0100               	movlb	0	; () banked
  9829  002FB2  6FC6               	movwf	(printf@f+1)& (0+255),b
  9830  002FB4  ECB1  F016         	call	_printf	;wreg free
  9831  002FB8  D7BC               	goto	l9336
  9832  002FBA                     l9368:
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;terminal.c: 89: else{
  9836                           ;terminal.c: 90: pData++;
  9837  002FBA  4A09               	infsnz	_pData,f,c
  9838  002FBC  2A0A               	incf	_pData+1,f,c
  9839  002FBE  D7C6               	goto	l9344
  9840  002FC0                     l9374:
  9841  002FC0  0100               	movlb	0	; () banked
  9842  002FC2  5184               	movf	_RxSwitch& (0+255),w,b
  9843                           
  9844                           ; Switch size 1, requested type "space"
  9845                           ; Number of cases is 4, Range of values is 0 to 3
  9846                           ; switch strategies available:
  9847                           ; Name         Instructions Cycles
  9848                           ; simple_byte           13     7 (average)
  9849                           ;	Chosen strategy is simple_byte
  9850  002FC4  0A00               	xorlw	0	; case 0
  9851  002FC6  B4D8               	btfsc	status,2,c
  9852  002FC8  D77D               	goto	l9322
  9853  002FCA  0A01               	xorlw	1	; case 1
  9854  002FCC  B4D8               	btfsc	status,2,c
  9855  002FCE  D7B3               	goto	l9338
  9856  002FD0  0A03               	xorlw	3	; case 2
  9857  002FD2  B4D8               	btfsc	status,2,c
  9858  002FD4  D7BF               	goto	l9348
  9859  002FD6  0A01               	xorlw	1	; case 3
  9860  002FD8                     l9376:
  9861                           
  9862                           ;terminal.c: 102: }
  9863                           ;terminal.c: 104: if (Message_To_Translate == 1){
  9864  002FD8  0100               	movlb	0	; () banked
  9865  002FDA  0583               	decf	_Message_To_Translate& (0+255),w,b
  9866  002FDC  A4D8               	btfss	status,2,c
  9867  002FDE  0012               	return	
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;terminal.c: 105: TranslateMessage();
  9871  002FE0  ECFC  F015         	call	_TranslateMessage	;wreg free
  9872                           
  9873                           ;terminal.c: 106: Message_To_Translate = 0;
  9874  002FE4  0E00               	movlw	0
  9875  002FE6  0100               	movlb	0	; () banked
  9876  002FE8  6F83               	movwf	_Message_To_Translate& (0+255),b
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;terminal.c: 107: RxSwitch = 0;
  9880  002FEA  0E00               	movlw	0
  9881  002FEC  0100               	movlb	0	; () banked
  9882  002FEE  6F84               	movwf	_RxSwitch& (0+255),b
  9883  002FF0  0012               	return	
  9884  002FF2                     __end_of_READxRECEIVEDxMESSAGE:
  9885                           	opt stack 0
  9886                           tblptru	equ	0xFF8
  9887                           tblptrh	equ	0xFF7
  9888                           tblptrl	equ	0xFF6
  9889                           tablat	equ	0xFF5
  9890                           intcon	equ	0xFF2
  9891                           postinc0	equ	0xFEE
  9892                           wreg	equ	0xFE8
  9893                           postdec1	equ	0xFE5
  9894                           fsr1l	equ	0xFE1
  9895                           indf2	equ	0xFDF
  9896                           fsr2h	equ	0xFDA
  9897                           fsr2l	equ	0xFD9
  9898                           status	equ	0xFD8
  9899                           
  9900 ;; *************** function _TranslateMessage *****************
  9901 ;; Defined at:
  9902 ;;		line 125 in file "../terminal.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;		None
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;  Index           2   28[BANK0 ] unsigned int 
  9907 ;;  Value           2   26[BANK0 ] unsigned int 
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9917 ;;      Params:         0       0       0       0       0       0       0       0       0
  9918 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9920 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9921 ;;Total ram usage:        4 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:    5
  9924 ;; This function calls:
  9925 ;;		_GETxAPIxRW
  9926 ;;		_GETxAPIxVAL
  9927 ;;		_SENDxMESSAGE
  9928 ;;		_SETxAPIxVALxNoxRET
  9929 ;;		_atoi
  9930 ;;		_printf
  9931 ;; This function is called by:
  9932 ;;		_READxRECEIVEDxMESSAGE
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text19
  9937  002BF8                     __ptext19:
  9938                           	opt stack 0
  9939  002BF8                     _TranslateMessage:
  9940                           	opt stack 24
  9941                           
  9942                           ;terminal.c: 127: unsigned int Value, Index;
  9943                           ;terminal.c: 129: if(Data[0] == 's'){
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;incstack = 0
  9947  002BF8  0E73               	movlw	115
  9948  002BFA  0100               	movlb	0	; () banked
  9949  002BFC  19AF               	xorwf	_Data& (0+255),w,b
  9950  002BFE  A4D8               	btfss	status,2,c
  9951  002C00  D06A               	goto	l8714
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;terminal.c: 131: pData = &Data[2];
  9955  002C02  0EB1               	movlw	low (_Data+2)
  9956  002C04  6E09               	movwf	_pData,c
  9957  002C06  0E00               	movlw	high (_Data+2)
  9958  002C08  6E0A               	movwf	_pData+1,c
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;terminal.c: 132: Index = (unsigned int)atoi (pData);
  9962  002C0A  C009  F0BF         	movff	_pData,atoi@s
  9963  002C0E  C00A  F0C0         	movff	_pData+1,atoi@s+1
  9964  002C12  EC70  F01C         	call	_atoi	;wreg free
  9965  002C16  C0BF  F0D5         	movff	?_atoi,TranslateMessage@Index
  9966  002C1A  C0C0  F0D6         	movff	?_atoi+1,TranslateMessage@Index+1
  9967                           
  9968                           ;terminal.c: 133: pData = &Data[5];
  9969  002C1E  0EB4               	movlw	low (_Data+5)
  9970  002C20  6E09               	movwf	_pData,c
  9971  002C22  0E00               	movlw	high (_Data+5)
  9972  002C24  6E0A               	movwf	_pData+1,c
  9973                           
  9974                           ;terminal.c: 134: Value = (unsigned int)atoi (pData);
  9975  002C26  C009  F0BF         	movff	_pData,atoi@s
  9976  002C2A  C00A  F0C0         	movff	_pData+1,atoi@s+1
  9977  002C2E  EC70  F01C         	call	_atoi	;wreg free
  9978  002C32  C0BF  F0D3         	movff	?_atoi,TranslateMessage@Value
  9979  002C36  C0C0  F0D4         	movff	?_atoi+1,TranslateMessage@Value+1
  9980                           
  9981                           ;terminal.c: 136: if (GETxAPIxRW(Index) == 0){
  9982  002C3A  0100               	movlb	0	; () banked
  9983  002C3C  51D5               	movf	TranslateMessage@Index& (0+255),w,b
  9984  002C3E  ECCC  F020         	call	_GETxAPIxRW
  9985  002C42  0100               	movlb	0	; () banked
  9986  002C44  51B9               	movf	?_GETxAPIxRW& (0+255),w,b
  9987  002C46  0100               	movlb	0	; () banked
  9988  002C48  11BA               	iorwf	(?_GETxAPIxRW+1)& (0+255),w,b
  9989  002C4A  A4D8               	btfss	status,2,c
  9990  002C4C  D009               	goto	l8700
  9991                           
  9992                           ; BSR set to: 0
  9993                           ;terminal.c: 137: printf("E#11\r\n");
  9994  002C4E  0E1D               	movlw	low STR_2
  9995  002C50  0100               	movlb	0	; () banked
  9996  002C52  6FC5               	movwf	printf@f& (0+255),b
  9997  002C54  0E08               	movlw	high STR_2
  9998  002C56  0100               	movlb	0	; () banked
  9999  002C58  6FC6               	movwf	(printf@f+1)& (0+255),b
 10000  002C5A  ECB1  F016         	call	_printf	;wreg free
 10001                           
 10002                           ;terminal.c: 138: }
 10003  002C5E  0012               	return	
 10004  002C60                     l8700:
 10005                           
 10006                           ;terminal.c: 139: else if (Index < 0xF){
 10007  002C60  0100               	movlb	0	; () banked
 10008  002C62  51D6               	movf	(TranslateMessage@Index+1)& (0+255),w,b
 10009  002C64  E10E               	bnz	l8704
 10010  002C66  0E0F               	movlw	15
 10011  002C68  0100               	movlb	0	; () banked
 10012  002C6A  5DD5               	subwf	TranslateMessage@Index& (0+255),w,b
 10013  002C6C  B0D8               	btfsc	status,0,c
 10014  002C6E  D009               	goto	l8704
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;terminal.c: 140: printf("E#12\r\n");
 10018  002C70  0E24               	movlw	low STR_3
 10019  002C72  0100               	movlb	0	; () banked
 10020  002C74  6FC5               	movwf	printf@f& (0+255),b
 10021  002C76  0E08               	movlw	high STR_3
 10022  002C78  0100               	movlb	0	; () banked
 10023  002C7A  6FC6               	movwf	(printf@f+1)& (0+255),b
 10024  002C7C  ECB1  F016         	call	_printf	;wreg free
 10025                           
 10026                           ;terminal.c: 141: }
 10027  002C80  0012               	return	
 10028  002C82                     l8704:
 10029                           
 10030                           ;terminal.c: 142: else if (Index > 87){
 10031  002C82  0100               	movlb	0	; () banked
 10032  002C84  51D6               	movf	(TranslateMessage@Index+1)& (0+255),w,b
 10033  002C86  E105               	bnz	u8240
 10034  002C88  0E58               	movlw	88
 10035  002C8A  0100               	movlb	0	; () banked
 10036  002C8C  5DD5               	subwf	TranslateMessage@Index& (0+255),w,b
 10037  002C8E  A0D8               	btfss	status,0,c
 10038  002C90  D009               	goto	l8708
 10039  002C92                     u8240:
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;terminal.c: 143: printf("E#13\r\n");
 10043  002C92  0E2B               	movlw	low STR_4
 10044  002C94  0100               	movlb	0	; () banked
 10045  002C96  6FC5               	movwf	printf@f& (0+255),b
 10046  002C98  0E08               	movlw	high STR_4
 10047  002C9A  0100               	movlb	0	; () banked
 10048  002C9C  6FC6               	movwf	(printf@f+1)& (0+255),b
 10049  002C9E  ECB1  F016         	call	_printf	;wreg free
 10050                           
 10051                           ;terminal.c: 144: }
 10052  002CA2  0012               	return	
 10053  002CA4                     l8708:
 10054                           
 10055                           ;terminal.c: 145: else if (Value > 0xFFFE){
 10056  002CA4  0100               	movlb	0	; () banked
 10057  002CA6  29D3               	incf	TranslateMessage@Value& (0+255),w,b
 10058  002CA8  E10D               	bnz	l8712
 10059  002CAA  0100               	movlb	0	; () banked
 10060  002CAC  29D4               	incf	(TranslateMessage@Value+1)& (0+255),w,b
 10061  002CAE  A4D8               	btfss	status,2,c
 10062  002CB0  D009               	goto	l8712
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;terminal.c: 146: printf("E#14\r\n");
 10066  002CB2  0E32               	movlw	low STR_5
 10067  002CB4  0100               	movlb	0	; () banked
 10068  002CB6  6FC5               	movwf	printf@f& (0+255),b
 10069  002CB8  0E08               	movlw	high STR_5
 10070  002CBA  0100               	movlb	0	; () banked
 10071  002CBC  6FC6               	movwf	(printf@f+1)& (0+255),b
 10072  002CBE  ECB1  F016         	call	_printf	;wreg free
 10073                           
 10074                           ;terminal.c: 147: }
 10075  002CC2  0012               	return	
 10076  002CC4                     l8712:
 10077                           
 10078                           ;terminal.c: 148: else{
 10079                           ;terminal.c: 149: SETxAPIxVALxNoxRET(Index, Value);
 10080  002CC4  C0D3  F0BC         	movff	TranslateMessage@Value,SETxAPIxVALxNoxRET@value
 10081  002CC8  C0D4  F0BD         	movff	TranslateMessage@Value+1,SETxAPIxVALxNoxRET@value+1
 10082  002CCC  0100               	movlb	0	; () banked
 10083  002CCE  51D5               	movf	TranslateMessage@Index& (0+255),w,b
 10084  002CD0  ECFB  F01F         	call	_SETxAPIxVALxNoxRET
 10085                           
 10086                           ;terminal.c: 150: }
 10087                           ;terminal.c: 151: }
 10088  002CD4  0012               	return	
 10089  002CD6                     l8714:
 10090                           
 10091                           ;terminal.c: 153: else if (Data[0] == 'g'){
 10092  002CD6  0E67               	movlw	103
 10093  002CD8  0100               	movlb	0	; () banked
 10094  002CDA  19AF               	xorwf	_Data& (0+255),w,b
 10095  002CDC  A4D8               	btfss	status,2,c
 10096  002CDE  0012               	return	
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;terminal.c: 155: pData = &Data[2];
 10100  002CE0  0EB1               	movlw	low (_Data+2)
 10101  002CE2  6E09               	movwf	_pData,c
 10102  002CE4  0E00               	movlw	high (_Data+2)
 10103  002CE6  6E0A               	movwf	_pData+1,c
 10104                           
 10105                           ; BSR set to: 0
 10106                           ;terminal.c: 156: Index = (unsigned int)atoi (pData);
 10107  002CE8  C009  F0BF         	movff	_pData,atoi@s
 10108  002CEC  C00A  F0C0         	movff	_pData+1,atoi@s+1
 10109  002CF0  EC70  F01C         	call	_atoi	;wreg free
 10110  002CF4  C0BF  F0D5         	movff	?_atoi,TranslateMessage@Index
 10111  002CF8  C0C0  F0D6         	movff	?_atoi+1,TranslateMessage@Index+1
 10112                           
 10113                           ;terminal.c: 158: if (Index < 0xF){
 10114  002CFC  0100               	movlb	0	; () banked
 10115  002CFE  51D6               	movf	(TranslateMessage@Index+1)& (0+255),w,b
 10116  002D00  E10E               	bnz	l8724
 10117  002D02  0E0F               	movlw	15
 10118  002D04  0100               	movlb	0	; () banked
 10119  002D06  5DD5               	subwf	TranslateMessage@Index& (0+255),w,b
 10120  002D08  B0D8               	btfsc	status,0,c
 10121  002D0A  D009               	goto	l8724
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;terminal.c: 159: printf("E#12\r\n");
 10125  002D0C  0E24               	movlw	low STR_3
 10126  002D0E  0100               	movlb	0	; () banked
 10127  002D10  6FC5               	movwf	printf@f& (0+255),b
 10128  002D12  0E08               	movlw	high STR_3
 10129  002D14  0100               	movlb	0	; () banked
 10130  002D16  6FC6               	movwf	(printf@f+1)& (0+255),b
 10131  002D18  ECB1  F016         	call	_printf	;wreg free
 10132                           
 10133                           ;terminal.c: 160: }
 10134  002D1C  0012               	return	
 10135  002D1E                     l8724:
 10136                           
 10137                           ;terminal.c: 161: else if (Index > 87){
 10138  002D1E  0100               	movlb	0	; () banked
 10139  002D20  51D6               	movf	(TranslateMessage@Index+1)& (0+255),w,b
 10140  002D22  E105               	bnz	u8280
 10141  002D24  0E58               	movlw	88
 10142  002D26  0100               	movlb	0	; () banked
 10143  002D28  5DD5               	subwf	TranslateMessage@Index& (0+255),w,b
 10144  002D2A  A0D8               	btfss	status,0,c
 10145  002D2C  D009               	goto	l8728
 10146  002D2E                     u8280:
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;terminal.c: 162: printf("E#13\r\n");
 10150  002D2E  0E2B               	movlw	low STR_4
 10151  002D30  0100               	movlb	0	; () banked
 10152  002D32  6FC5               	movwf	printf@f& (0+255),b
 10153  002D34  0E08               	movlw	high STR_4
 10154  002D36  0100               	movlb	0	; () banked
 10155  002D38  6FC6               	movwf	(printf@f+1)& (0+255),b
 10156  002D3A  ECB1  F016         	call	_printf	;wreg free
 10157                           
 10158                           ;terminal.c: 163: }
 10159  002D3E  0012               	return	
 10160  002D40                     l8728:
 10161                           
 10162                           ;terminal.c: 164: else{
 10163                           ;terminal.c: 165: Value = GETxAPIxVAL(Index);
 10164  002D40  0100               	movlb	0	; () banked
 10165  002D42  51D5               	movf	TranslateMessage@Index& (0+255),w,b
 10166  002D44  ECBC  F020         	call	_GETxAPIxVAL
 10167  002D48  C0B9  F0D3         	movff	?_GETxAPIxVAL,TranslateMessage@Value
 10168  002D4C  C0BA  F0D4         	movff	?_GETxAPIxVAL+1,TranslateMessage@Value+1
 10169                           
 10170                           ;terminal.c: 166: SENDxMESSAGE(Index, Value);
 10171  002D50  C0D3  F0B9         	movff	TranslateMessage@Value,SENDxMESSAGE@value
 10172  002D54  C0D4  F0BA         	movff	TranslateMessage@Value+1,SENDxMESSAGE@value+1
 10173  002D58  0100               	movlb	0	; () banked
 10174  002D5A  51D5               	movf	TranslateMessage@Index& (0+255),w,b
 10175  002D5C  ECC3  F012         	call	_SENDxMESSAGE
 10176  002D60  0012               	return	
 10177  002D62                     __end_of_TranslateMessage:
 10178                           	opt stack 0
 10179                           tblptru	equ	0xFF8
 10180                           tblptrh	equ	0xFF7
 10181                           tblptrl	equ	0xFF6
 10182                           tablat	equ	0xFF5
 10183                           intcon	equ	0xFF2
 10184                           postinc0	equ	0xFEE
 10185                           wreg	equ	0xFE8
 10186                           postdec1	equ	0xFE5
 10187                           fsr1l	equ	0xFE1
 10188                           indf2	equ	0xFDF
 10189                           fsr2h	equ	0xFDA
 10190                           fsr2l	equ	0xFD9
 10191                           status	equ	0xFD8
 10192                           
 10193 ;; *************** function _atoi *****************
 10194 ;; Defined at:
 10195 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\atoi.c"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 10198 ;;		 -> NULL(0), Data(10), 
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;  a               2   11[BANK0 ] int 
 10201 ;;  sign            1   10[BANK0 ] unsigned char 
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  2    6[BANK0 ] int 
 10204 ;; Registers used:
 10205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10211 ;;      Params:         0       2       0       0       0       0       0       0       0
 10212 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10213 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10214 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10215 ;;Total ram usage:        7 bytes
 10216 ;; Hardware stack levels used:    1
 10217 ;; Hardware stack levels required when called:    4
 10218 ;; This function calls:
 10219 ;;		___wmul
 10220 ;;		_isdigit
 10221 ;; This function is called by:
 10222 ;;		_TranslateMessage
 10223 ;; This function uses a non-reentrant model
 10224 ;;
 10225                           
 10226                           	psect	text20
 10227  0038E0                     __ptext20:
 10228                           	opt stack 0
 10229  0038E0                     _atoi:
 10230                           	opt stack 24
 10231                           
 10232                           ;incstack = 0
 10233  0038E0  D003               	goto	l7984
 10234  0038E2                     l7982:
 10235  0038E2  0100               	movlb	0	; () banked
 10236  0038E4  4BBF               	infsnz	atoi@s& (0+255),f,b
 10237  0038E6  2BC0               	incf	(atoi@s+1)& (0+255),f,b
 10238  0038E8                     l7984:
 10239  0038E8  C0BF  FFD9         	movff	atoi@s,fsr2l
 10240  0038EC  C0C0  FFDA         	movff	atoi@s+1,fsr2h
 10241  0038F0  0E20               	movlw	32
 10242  0038F2  18DE               	xorwf	postinc2,w,c
 10243  0038F4  B4D8               	btfsc	status,2,c
 10244  0038F6  D7F5               	goto	l7982
 10245  0038F8  C0BF  FFD9         	movff	atoi@s,fsr2l
 10246  0038FC  C0C0  FFDA         	movff	atoi@s+1,fsr2h
 10247  003900  0E09               	movlw	9
 10248  003902  18DE               	xorwf	postinc2,w,c
 10249  003904  B4D8               	btfsc	status,2,c
 10250  003906  D7ED               	goto	l7982
 10251  003908  0E00               	movlw	0
 10252  00390A  0100               	movlb	0	; () banked
 10253  00390C  6FC5               	movwf	(atoi@a+1)& (0+255),b
 10254  00390E  0E00               	movlw	0
 10255  003910  6FC4               	movwf	atoi@a& (0+255),b
 10256  003912  0E00               	movlw	0
 10257  003914  0100               	movlb	0	; () banked
 10258  003916  6FC3               	movwf	atoi@sign& (0+255),b
 10259                           
 10260                           ; BSR set to: 0
 10261  003918  C0BF  FFD9         	movff	atoi@s,fsr2l
 10262  00391C  C0C0  FFDA         	movff	atoi@s+1,fsr2h
 10263  003920  0E2D               	movlw	45
 10264  003922  18DE               	xorwf	postinc2,w,c
 10265  003924  A4D8               	btfss	status,2,c
 10266  003926  D003               	goto	l7994
 10267                           
 10268                           ; BSR set to: 0
 10269  003928  0100               	movlb	0	; () banked
 10270  00392A  2BC3               	incf	atoi@sign& (0+255),f,b
 10271  00392C  D02E               	goto	l8000
 10272  00392E                     l7994:
 10273                           
 10274                           ; BSR set to: 0
 10275  00392E  C0BF  FFD9         	movff	atoi@s,fsr2l
 10276  003932  C0C0  FFDA         	movff	atoi@s+1,fsr2h
 10277  003936  0E2B               	movlw	43
 10278  003938  18DE               	xorwf	postinc2,w,c
 10279  00393A  A4D8               	btfss	status,2,c
 10280  00393C  D029               	goto	l8002
 10281  00393E  D025               	goto	l8000
 10282  003940                     l7998:
 10283  003940  C0C4  F0B9         	movff	atoi@a,___wmul@multiplier
 10284  003944  C0C5  F0BA         	movff	atoi@a+1,___wmul@multiplier+1
 10285  003948  0E00               	movlw	0
 10286  00394A  0100               	movlb	0	; () banked
 10287  00394C  6FBC               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10288  00394E  0E0A               	movlw	10
 10289  003950  6FBB               	movwf	___wmul@multiplicand& (0+255),b
 10290  003952  EC3A  F020         	call	___wmul	;wreg free
 10291  003956  C0BF  FFD9         	movff	atoi@s,fsr2l
 10292  00395A  C0C0  FFDA         	movff	atoi@s+1,fsr2h
 10293  00395E  50DF               	movf	indf2,w,c
 10294  003960  0100               	movlb	0	; () banked
 10295  003962  6FC1               	movwf	??_atoi& (0+255),b
 10296  003964  6BC2               	clrf	(??_atoi+1)& (0+255),b
 10297  003966  0100               	movlb	0	; () banked
 10298  003968  51B9               	movf	?___wmul& (0+255),w,b
 10299  00396A  0100               	movlb	0	; () banked
 10300  00396C  27C1               	addwf	??_atoi& (0+255),f,b
 10301  00396E  0100               	movlb	0	; () banked
 10302  003970  51BA               	movf	(?___wmul+1)& (0+255),w,b
 10303  003972  0100               	movlb	0	; () banked
 10304  003974  23C2               	addwfc	(??_atoi+1)& (0+255),f,b
 10305  003976  0ED0               	movlw	208
 10306  003978  0100               	movlb	0	; () banked
 10307  00397A  25C1               	addwf	??_atoi& (0+255),w,b
 10308  00397C  0100               	movlb	0	; () banked
 10309  00397E  6FC4               	movwf	atoi@a& (0+255),b
 10310  003980  0EFF               	movlw	255
 10311  003982  0100               	movlb	0	; () banked
 10312  003984  21C2               	addwfc	(??_atoi+1)& (0+255),w,b
 10313  003986  0100               	movlb	0	; () banked
 10314  003988  6FC5               	movwf	(atoi@a+1)& (0+255),b
 10315  00398A                     l8000:
 10316                           
 10317                           ; BSR set to: 0
 10318  00398A  0100               	movlb	0	; () banked
 10319  00398C  4BBF               	infsnz	atoi@s& (0+255),f,b
 10320  00398E  2BC0               	incf	(atoi@s+1)& (0+255),f,b
 10321  003990                     l8002:
 10322                           
 10323                           ; BSR set to: 0
 10324  003990  C0BF  FFD9         	movff	atoi@s,fsr2l
 10325  003994  C0C0  FFDA         	movff	atoi@s+1,fsr2h
 10326  003998  50DF               	movf	indf2,w,c
 10327  00399A  EC82  F020         	call	_isdigit
 10328  00399E  B0D8               	btfsc	status,0,c
 10329  0039A0  D7CF               	goto	l7998
 10330  0039A2  0100               	movlb	0	; () banked
 10331  0039A4  51C3               	movf	atoi@sign& (0+255),w,b
 10332  0039A6  0100               	movlb	0	; () banked
 10333  0039A8  B4D8               	btfsc	status,2,c
 10334  0039AA  D00E               	goto	l1423
 10335                           
 10336                           ; BSR set to: 0
 10337  0039AC  C0C4  F0C1         	movff	atoi@a,??_atoi
 10338  0039B0  C0C5  F0C2         	movff	atoi@a+1,??_atoi+1
 10339  0039B4  0100               	movlb	0	; () banked
 10340  0039B6  1FC1               	comf	??_atoi& (0+255),f,b
 10341  0039B8  1FC2               	comf	(??_atoi+1)& (0+255),f,b
 10342  0039BA  4BC1               	infsnz	??_atoi& (0+255),f,b
 10343  0039BC  2BC2               	incf	(??_atoi+1)& (0+255),f,b
 10344  0039BE  C0C1  F0BF         	movff	??_atoi,?_atoi
 10345  0039C2  C0C2  F0C0         	movff	??_atoi+1,?_atoi+1
 10346  0039C6  0012               	return	
 10347  0039C8                     l1423:
 10348                           
 10349                           ; BSR set to: 0
 10350  0039C8  C0C4  F0BF         	movff	atoi@a,?_atoi
 10351  0039CC  C0C5  F0C0         	movff	atoi@a+1,?_atoi+1
 10352                           
 10353                           ; BSR set to: 0
 10354  0039D0  0012               	return		;funcret
 10355  0039D2                     __end_of_atoi:
 10356                           	opt stack 0
 10357                           tblptru	equ	0xFF8
 10358                           tblptrh	equ	0xFF7
 10359                           tblptrl	equ	0xFF6
 10360                           tablat	equ	0xFF5
 10361                           intcon	equ	0xFF2
 10362                           postinc0	equ	0xFEE
 10363                           wreg	equ	0xFE8
 10364                           postdec1	equ	0xFE5
 10365                           fsr1l	equ	0xFE1
 10366                           indf2	equ	0xFDF
 10367                           postinc2	equ	0xFDE
 10368                           fsr2h	equ	0xFDA
 10369                           fsr2l	equ	0xFD9
 10370                           status	equ	0xFD8
 10371                           
 10372 ;; *************** function _isdigit *****************
 10373 ;; Defined at:
 10374 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
 10375 ;; Parameters:    Size  Location     Type
 10376 ;;  c               1    wreg     unsigned char 
 10377 ;; Auto vars:     Size  Location     Type
 10378 ;;  c               1    2[BANK0 ] unsigned char 
 10379 ;; Return value:  Size  Location     Type
 10380 ;;		None               void
 10381 ;; Registers used:
 10382 ;;		wreg, status,2, status,0
 10383 ;; Tracked objects:
 10384 ;;		On entry : 0/0
 10385 ;;		On exit  : 0/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10388 ;;      Params:         0       0       0       0       0       0       0       0       0
 10389 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10390 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10391 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10392 ;;Total ram usage:        3 bytes
 10393 ;; Hardware stack levels used:    1
 10394 ;; Hardware stack levels required when called:    3
 10395 ;; This function calls:
 10396 ;;		Nothing
 10397 ;; This function is called by:
 10398 ;;		_atoi
 10399 ;; This function uses a non-reentrant model
 10400 ;;
 10401                           
 10402                           	psect	text21
 10403  004104                     __ptext21:
 10404                           	opt stack 0
 10405  004104                     _isdigit:
 10406                           	opt stack 24
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;incstack = 0
 10410                           ;isdigit@c stored from wreg
 10411  004104  0100               	movlb	0	; () banked
 10412  004106  6FBB               	movwf	isdigit@c& (0+255),b
 10413  004108  0E00               	movlw	0
 10414  00410A  0100               	movlb	0	; () banked
 10415  00410C  6FBA               	movwf	_isdigit$1885& (0+255),b
 10416                           
 10417                           ; BSR set to: 0
 10418  00410E  0E3A               	movlw	58
 10419  004110  0100               	movlb	0	; () banked
 10420  004112  61BB               	cpfslt	isdigit@c& (0+255),b
 10421  004114  D007               	goto	l7408
 10422                           
 10423                           ; BSR set to: 0
 10424  004116  0E2F               	movlw	47
 10425  004118  0100               	movlb	0	; () banked
 10426  00411A  65BB               	cpfsgt	isdigit@c& (0+255),b
 10427  00411C  D003               	goto	l7408
 10428                           
 10429                           ; BSR set to: 0
 10430  00411E  0E01               	movlw	1
 10431  004120  0100               	movlb	0	; () banked
 10432  004122  6FBA               	movwf	_isdigit$1885& (0+255),b
 10433  004124                     l7408:
 10434                           
 10435                           ; BSR set to: 0
 10436  004124  C0BA  F0B9         	movff	_isdigit$1885,??_isdigit
 10437  004128  0100               	movlb	0	; () banked
 10438  00412A  31B9               	rrcf	??_isdigit& (0+255),w,b
 10439  00412C  0012               	return	
 10440  00412E                     __end_of_isdigit:
 10441                           	opt stack 0
 10442                           tblptru	equ	0xFF8
 10443                           tblptrh	equ	0xFF7
 10444                           tblptrl	equ	0xFF6
 10445                           tablat	equ	0xFF5
 10446                           intcon	equ	0xFF2
 10447                           postinc0	equ	0xFEE
 10448                           wreg	equ	0xFE8
 10449                           postdec1	equ	0xFE5
 10450                           fsr1l	equ	0xFE1
 10451                           indf2	equ	0xFDF
 10452                           postinc2	equ	0xFDE
 10453                           fsr2h	equ	0xFDA
 10454                           fsr2l	equ	0xFD9
 10455                           status	equ	0xFD8
 10456                           
 10457 ;; *************** function ___wmul *****************
 10458 ;; Defined at:
 10459 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10462 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;  product         2    4[BANK0 ] unsigned int 
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  2    0[BANK0 ] unsigned int 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2, status,0, prodl, prodh
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10474 ;;      Params:         0       4       0       0       0       0       0       0       0
 10475 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10476 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10477 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10478 ;;Total ram usage:        6 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:    3
 10481 ;; This function calls:
 10482 ;;		Nothing
 10483 ;; This function is called by:
 10484 ;;		_atoi
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text22
 10489  004074                     __ptext22:
 10490                           	opt stack 0
 10491  004074                     ___wmul:
 10492                           	opt stack 24
 10493                           
 10494                           ; BSR set to: 0
 10495                           ;incstack = 0
 10496  004074  0100               	movlb	0	; () banked
 10497  004076  51B9               	movf	___wmul@multiplier& (0+255),w,b
 10498  004078  0100               	movlb	0	; () banked
 10499  00407A  03BB               	mulwf	___wmul@multiplicand& (0+255),b
 10500  00407C  CFF3 F0BD          	movff	prodl,___wmul@product
 10501  004080  CFF4 F0BE          	movff	prodh,___wmul@product+1
 10502  004084  0100               	movlb	0	; () banked
 10503  004086  51B9               	movf	___wmul@multiplier& (0+255),w,b
 10504  004088  0100               	movlb	0	; () banked
 10505  00408A  03BC               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10506  00408C  50F3               	movf	prodl,w,c
 10507  00408E  0100               	movlb	0	; () banked
 10508  004090  27BE               	addwf	(___wmul@product+1)& (0+255),f,b
 10509  004092  0100               	movlb	0	; () banked
 10510  004094  51BA               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10511  004096  0100               	movlb	0	; () banked
 10512  004098  03BB               	mulwf	___wmul@multiplicand& (0+255),b
 10513  00409A  50F3               	movf	prodl,w,c
 10514  00409C  0100               	movlb	0	; () banked
 10515  00409E  27BE               	addwf	(___wmul@product+1)& (0+255),f,b
 10516                           
 10517                           ; BSR set to: 0
 10518  0040A0  C0BD  F0B9         	movff	___wmul@product,?___wmul
 10519  0040A4  C0BE  F0BA         	movff	___wmul@product+1,?___wmul+1
 10520  0040A8  0012               	return	
 10521  0040AA                     __end_of___wmul:
 10522                           	opt stack 0
 10523                           tblptru	equ	0xFF8
 10524                           tblptrh	equ	0xFF7
 10525                           tblptrl	equ	0xFF6
 10526                           tablat	equ	0xFF5
 10527                           prodh	equ	0xFF4
 10528                           prodl	equ	0xFF3
 10529                           intcon	equ	0xFF2
 10530                           postinc0	equ	0xFEE
 10531                           wreg	equ	0xFE8
 10532                           postdec1	equ	0xFE5
 10533                           fsr1l	equ	0xFE1
 10534                           indf2	equ	0xFDF
 10535                           postinc2	equ	0xFDE
 10536                           fsr2h	equ	0xFDA
 10537                           fsr2l	equ	0xFD9
 10538                           status	equ	0xFD8
 10539                           
 10540 ;; *************** function _SETxAPIxVALxNoxRET *****************
 10541 ;; Defined at:
 10542 ;;		line 212 in file "../api.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;  index           1    wreg     unsigned char 
 10545 ;;  value           2    3[BANK0 ] unsigned int 
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  index           1    7[BANK0 ] unsigned char 
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  1    wreg      void 
 10550 ;; Registers used:
 10551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10557 ;;      Params:         0       2       0       0       0       0       0       0       0
 10558 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10559 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10560 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10561 ;;Total ram usage:        5 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; Hardware stack levels required when called:    3
 10564 ;; This function calls:
 10565 ;;		Nothing
 10566 ;; This function is called by:
 10567 ;;		_Update_StateMchn
 10568 ;;		_TranslateMessage
 10569 ;; This function uses a non-reentrant model
 10570 ;;
 10571                           
 10572                           	psect	text23
 10573  003FF6                     __ptext23:
 10574                           	opt stack 0
 10575  003FF6                     _SETxAPIxVALxNoxRET:
 10576                           	opt stack 26
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;incstack = 0
 10580                           ;SETxAPIxVALxNoxRET@index stored from wreg
 10581  003FF6  0100               	movlb	0	; () banked
 10582  003FF8  6FC0               	movwf	SETxAPIxVALxNoxRET@index& (0+255),b
 10583                           
 10584                           ;api.c: 213: if(API[index] != value){
 10585  003FFA  0100               	movlb	0	; () banked
 10586  003FFC  51C0               	movf	SETxAPIxVALxNoxRET@index& (0+255),w,b
 10587  003FFE  0D02               	mullw	2
 10588  004000  0E00               	movlw	low _API
 10589  004002  24F3               	addwf	prodl,w,c
 10590  004004  6ED9               	movwf	fsr2l,c
 10591  004006  0E01               	movlw	high _API
 10592  004008  20F4               	addwfc	prodh,w,c
 10593  00400A  6EDA               	movwf	fsr2h,c
 10594  00400C  0100               	movlb	0	; () banked
 10595  00400E  51BC               	movf	SETxAPIxVALxNoxRET@value& (0+255),w,b
 10596  004010  18DE               	xorwf	postinc2,w,c
 10597  004012  E105               	bnz	u6460
 10598  004014  0100               	movlb	0	; () banked
 10599  004016  51BD               	movf	(SETxAPIxVALxNoxRET@value+1)& (0+255),w,b
 10600  004018  18DE               	xorwf	postinc2,w,c
 10601  00401A  B4D8               	btfsc	status,2,c
 10602  00401C  0012               	return	
 10603  00401E                     u6460:
 10604                           
 10605                           ; BSR set to: 0
 10606                           ;api.c: 214: API[index] = value;
 10607  00401E  0100               	movlb	0	; () banked
 10608  004020  51C0               	movf	SETxAPIxVALxNoxRET@index& (0+255),w,b
 10609  004022  0D02               	mullw	2
 10610  004024  0E00               	movlw	low _API
 10611  004026  24F3               	addwf	prodl,w,c
 10612  004028  6ED9               	movwf	fsr2l,c
 10613  00402A  0E01               	movlw	high _API
 10614  00402C  20F4               	addwfc	prodh,w,c
 10615  00402E  6EDA               	movwf	fsr2h,c
 10616  004030  C0BC  FFDE         	movff	SETxAPIxVALxNoxRET@value,postinc2
 10617  004034  C0BD  FFDD         	movff	SETxAPIxVALxNoxRET@value+1,postdec2
 10618  004038  0012               	return	
 10619  00403A                     __end_of_SETxAPIxVALxNoxRET:
 10620                           	opt stack 0
 10621                           tblptru	equ	0xFF8
 10622                           tblptrh	equ	0xFF7
 10623                           tblptrl	equ	0xFF6
 10624                           tablat	equ	0xFF5
 10625                           prodh	equ	0xFF4
 10626                           prodl	equ	0xFF3
 10627                           intcon	equ	0xFF2
 10628                           postinc0	equ	0xFEE
 10629                           wreg	equ	0xFE8
 10630                           postdec1	equ	0xFE5
 10631                           fsr1l	equ	0xFE1
 10632                           indf2	equ	0xFDF
 10633                           postinc2	equ	0xFDE
 10634                           postdec2	equ	0xFDD
 10635                           fsr2h	equ	0xFDA
 10636                           fsr2l	equ	0xFD9
 10637                           status	equ	0xFD8
 10638                           
 10639 ;; *************** function _GETxAPIxVAL *****************
 10640 ;; Defined at:
 10641 ;;		line 218 in file "../api.c"
 10642 ;; Parameters:    Size  Location     Type
 10643 ;;  index           1    wreg     unsigned char 
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;  index           1    2[BANK0 ] unsigned char 
 10646 ;; Return value:  Size  Location     Type
 10647 ;;                  2    0[BANK0 ] unsigned int 
 10648 ;; Registers used:
 10649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10650 ;; Tracked objects:
 10651 ;;		On entry : 0/0
 10652 ;;		On exit  : 0/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10655 ;;      Params:         0       2       0       0       0       0       0       0       0
 10656 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10657 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10658 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10659 ;;Total ram usage:        3 bytes
 10660 ;; Hardware stack levels used:    1
 10661 ;; Hardware stack levels required when called:    3
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_Update_StateMchn
 10666 ;;		_Train_Path
 10667 ;;		_TranslateMessage
 10668 ;;		_Eeprom_Store
 10669 ;;		_Debounce_Inputs
 10670 ;;		_Junction
 10671 ;;		_Train_Move_Left_Start
 10672 ;;		_Right_Mountain_From_The_Right
 10673 ;;		_Left_Mountain_From_The_Right
 10674 ;;		_Train_Move_Left_Brake
 10675 ;;		_Train_Move_Right_Start
 10676 ;;		_Left_Mountain_From_The_Left
 10677 ;;		_Right_Mountain_From_The_Left
 10678 ;;		_Train_Move_Right_Brake
 10679 ;;		_INCRxAPIxVAL
 10680 ;;		_DECRxAPIxVAL
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text24
 10685  004178                     __ptext24:
 10686                           	opt stack 0
 10687  004178                     _GETxAPIxVAL:
 10688                           	opt stack 24
 10689                           
 10690                           ; BSR set to: 0
 10691                           ;incstack = 0
 10692                           ;GETxAPIxVAL@index stored from wreg
 10693  004178  0100               	movlb	0	; () banked
 10694  00417A  6FBB               	movwf	GETxAPIxVAL@index& (0+255),b
 10695                           
 10696                           ;api.c: 219: return API[index];
 10697  00417C  0100               	movlb	0	; () banked
 10698  00417E  51BB               	movf	GETxAPIxVAL@index& (0+255),w,b
 10699  004180  0D02               	mullw	2
 10700  004182  0E00               	movlw	low _API
 10701  004184  24F3               	addwf	prodl,w,c
 10702  004186  6ED9               	movwf	fsr2l,c
 10703  004188  0E01               	movlw	high _API
 10704  00418A  20F4               	addwfc	prodh,w,c
 10705  00418C  6EDA               	movwf	fsr2h,c
 10706  00418E  CFDE F0B9          	movff	postinc2,?_GETxAPIxVAL
 10707  004192  CFDD F0BA          	movff	postdec2,?_GETxAPIxVAL+1
 10708  004196  0012               	return	
 10709  004198                     __end_of_GETxAPIxVAL:
 10710                           	opt stack 0
 10711                           tblptru	equ	0xFF8
 10712                           tblptrh	equ	0xFF7
 10713                           tblptrl	equ	0xFF6
 10714                           tablat	equ	0xFF5
 10715                           prodh	equ	0xFF4
 10716                           prodl	equ	0xFF3
 10717                           intcon	equ	0xFF2
 10718                           postinc0	equ	0xFEE
 10719                           wreg	equ	0xFE8
 10720                           postdec1	equ	0xFE5
 10721                           fsr1l	equ	0xFE1
 10722                           indf2	equ	0xFDF
 10723                           postinc2	equ	0xFDE
 10724                           postdec2	equ	0xFDD
 10725                           fsr2h	equ	0xFDA
 10726                           fsr2l	equ	0xFD9
 10727                           status	equ	0xFD8
 10728                           
 10729 ;; *************** function _GETxAPIxRW *****************
 10730 ;; Defined at:
 10731 ;;		line 201 in file "../api.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;  index           1    wreg     unsigned char 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;  index           1    2[BANK0 ] unsigned char 
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  2    0[BANK0 ] unsigned int 
 10738 ;; Registers used:
 10739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10745 ;;      Params:         0       2       0       0       0       0       0       0       0
 10746 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10747 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10748 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10749 ;;Total ram usage:        3 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:    3
 10752 ;; This function calls:
 10753 ;;		Nothing
 10754 ;; This function is called by:
 10755 ;;		_TranslateMessage
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text25
 10760  004198                     __ptext25:
 10761                           	opt stack 0
 10762  004198                     _GETxAPIxRW:
 10763                           	opt stack 25
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;incstack = 0
 10767                           ;GETxAPIxRW@index stored from wreg
 10768  004198  0100               	movlb	0	; () banked
 10769  00419A  6FBB               	movwf	GETxAPIxRW@index& (0+255),b
 10770                           
 10771                           ;api.c: 202: return API_RW[index];
 10772  00419C  0100               	movlb	0	; () banked
 10773  00419E  51BB               	movf	GETxAPIxRW@index& (0+255),w,b
 10774  0041A0  0D02               	mullw	2
 10775  0041A2  0E00               	movlw	low _API_RW
 10776  0041A4  24F3               	addwf	prodl,w,c
 10777  0041A6  6ED9               	movwf	fsr2l,c
 10778  0041A8  0E02               	movlw	high _API_RW
 10779  0041AA  20F4               	addwfc	prodh,w,c
 10780  0041AC  6EDA               	movwf	fsr2h,c
 10781  0041AE  CFDE F0B9          	movff	postinc2,?_GETxAPIxRW
 10782  0041B2  CFDD F0BA          	movff	postdec2,?_GETxAPIxRW+1
 10783  0041B6  0012               	return	
 10784  0041B8                     __end_of_GETxAPIxRW:
 10785                           	opt stack 0
 10786                           tblptru	equ	0xFF8
 10787                           tblptrh	equ	0xFF7
 10788                           tblptrl	equ	0xFF6
 10789                           tablat	equ	0xFF5
 10790                           prodh	equ	0xFF4
 10791                           prodl	equ	0xFF3
 10792                           intcon	equ	0xFF2
 10793                           postinc0	equ	0xFEE
 10794                           wreg	equ	0xFE8
 10795                           postdec1	equ	0xFE5
 10796                           fsr1l	equ	0xFE1
 10797                           indf2	equ	0xFDF
 10798                           postinc2	equ	0xFDE
 10799                           postdec2	equ	0xFDD
 10800                           fsr2h	equ	0xFDA
 10801                           fsr2l	equ	0xFD9
 10802                           status	equ	0xFD8
 10803                           
 10804 ;; *************** function _EUSART1_Read *****************
 10805 ;; Defined at:
 10806 ;;		line 142 in file "../eusart1.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;		None
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;  readValue       1    0[BANK0 ] unsigned char 
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      unsigned char 
 10813 ;; Registers used:
 10814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0
 10821 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10823 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10824 ;;Total ram usage:        1 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:    3
 10827 ;; This function calls:
 10828 ;;		Nothing
 10829 ;; This function is called by:
 10830 ;;		_READxRECEIVEDxMESSAGE
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           	psect	text26
 10835  00403A                     __ptext26:
 10836                           	opt stack 0
 10837  00403A                     _EUSART1_Read:
 10838                           	opt stack 26
 10839                           
 10840                           ;eusart1.c: 143: uint8_t readValue = 0;
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;incstack = 0
 10844  00403A  0E00               	movlw	0
 10845  00403C  0100               	movlb	0	; () banked
 10846  00403E  6FB9               	movwf	EUSART1_Read@readValue& (0+255),b
 10847  004040                     l8672:
 10848  004040  501A               	movf	_eusart1RxCount,w,c	;volatile
 10849  004042  B4D8               	btfsc	status,2,c
 10850  004044  D7FD               	goto	l8672
 10851                           
 10852                           ;eusart1.c: 146: }
 10853                           ;eusart1.c: 148: PIE1bits.RC1IE = 0;
 10854  004046  9A9D               	bcf	3997,5,c	;volatile
 10855                           
 10856                           ;eusart1.c: 150: readValue = eusart1RxBuffer[eusart1RxTail++];
 10857  004048  501C               	movf	_eusart1RxTail,w,c
 10858  00404A  0D01               	mullw	1
 10859  00404C  0E00               	movlw	low _eusart1RxBuffer
 10860  00404E  24F3               	addwf	prodl,w,c
 10861  004050  6ED9               	movwf	fsr2l,c
 10862  004052  0E03               	movlw	high _eusart1RxBuffer
 10863  004054  20F4               	addwfc	prodh,w,c
 10864  004056  6EDA               	movwf	fsr2h,c
 10865  004058  50DF               	movf	indf2,w,c
 10866  00405A  0100               	movlb	0	; () banked
 10867  00405C  6FB9               	movwf	EUSART1_Read@readValue& (0+255),b
 10868                           
 10869                           ; BSR set to: 0
 10870  00405E  2A1C               	incf	_eusart1RxTail,f,c
 10871                           
 10872                           ; BSR set to: 0
 10873                           ;eusart1.c: 151: if (sizeof (eusart1RxBuffer) <= eusart1RxTail) {
 10874  004060  0E7D               	movlw	125
 10875  004062  641C               	cpfsgt	_eusart1RxTail,c
 10876  004064  D002               	goto	l8682
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;eusart1.c: 152: eusart1RxTail = 0;
 10880  004066  0E00               	movlw	0
 10881  004068  6E1C               	movwf	_eusart1RxTail,c
 10882  00406A                     l8682:
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;eusart1.c: 153: }
 10886                           ;eusart1.c: 154: eusart1RxCount--;
 10887  00406A  061A               	decf	_eusart1RxCount,f,c	;volatile
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;eusart1.c: 155: PIE1bits.RC1IE = 1;
 10891  00406C  8A9D               	bsf	3997,5,c	;volatile
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;eusart1.c: 157: return readValue;
 10895  00406E  0100               	movlb	0	; () banked
 10896  004070  51B9               	movf	EUSART1_Read@readValue& (0+255),w,b
 10897  004072  0012               	return	
 10898  004074                     __end_of_EUSART1_Read:
 10899                           	opt stack 0
 10900                           tblptru	equ	0xFF8
 10901                           tblptrh	equ	0xFF7
 10902                           tblptrl	equ	0xFF6
 10903                           tablat	equ	0xFF5
 10904                           prodh	equ	0xFF4
 10905                           prodl	equ	0xFF3
 10906                           intcon	equ	0xFF2
 10907                           postinc0	equ	0xFEE
 10908                           wreg	equ	0xFE8
 10909                           postdec1	equ	0xFE5
 10910                           fsr1l	equ	0xFE1
 10911                           indf2	equ	0xFDF
 10912                           postinc2	equ	0xFDE
 10913                           postdec2	equ	0xFDD
 10914                           fsr2h	equ	0xFDA
 10915                           fsr2l	equ	0xFD9
 10916                           status	equ	0xFD8
 10917                           
 10918 ;; *************** function _Init_Timers *****************
 10919 ;; Defined at:
 10920 ;;		line 181 in file "../Main.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;		None
 10923 ;; Auto vars:     Size  Location     Type
 10924 ;;		None
 10925 ;; Return value:  Size  Location     Type
 10926 ;;                  1    wreg      void 
 10927 ;; Registers used:
 10928 ;;		wreg, status,2
 10929 ;; Tracked objects:
 10930 ;;		On entry : 0/0
 10931 ;;		On exit  : 0/0
 10932 ;;		Unchanged: 0/0
 10933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10934 ;;      Params:         0       0       0       0       0       0       0       0       0
 10935 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10936 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10937 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10938 ;;Total ram usage:        0 bytes
 10939 ;; Hardware stack levels used:    1
 10940 ;; Hardware stack levels required when called:    3
 10941 ;; This function calls:
 10942 ;;		Nothing
 10943 ;; This function is called by:
 10944 ;;		_main
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948                           	psect	text27
 10949  0041B8                     __ptext27:
 10950                           	opt stack 0
 10951  0041B8                     _Init_Timers:
 10952                           	opt stack 27
 10953                           
 10954                           ;Main.c: 183: RCONbits.IPEN = 1;
 10955                           
 10956                           ; BSR set to: 0
 10957                           ;incstack = 0
 10958  0041B8  8ED0               	bsf	4048,7,c	;volatile
 10959                           
 10960                           ;Main.c: 184: INTCON = 0xA0;
 10961  0041BA  0EA0               	movlw	160
 10962  0041BC  6EF2               	movwf	intcon,c	;volatile
 10963                           
 10964                           ;Main.c: 185: INTCON2 = 0x84;
 10965  0041BE  0E84               	movlw	132
 10966  0041C0  6EF1               	movwf	intcon2,c	;volatile
 10967                           
 10968                           ;Main.c: 186: TMR0H = 0x0;
 10969  0041C2  0E00               	movlw	0
 10970  0041C4  6ED7               	movwf	4055,c	;volatile
 10971                           
 10972                           ;Main.c: 187: TMR0L = 0x0;
 10973  0041C6  0E00               	movlw	0
 10974  0041C8  6ED6               	movwf	4054,c	;volatile
 10975                           
 10976                           ;Main.c: 188: T0CON = 0xC3;
 10977  0041CA  0EC3               	movlw	195
 10978  0041CC  6ED5               	movwf	4053,c	;volatile
 10979  0041CE  0012               	return		;funcret
 10980  0041D0                     __end_of_Init_Timers:
 10981                           	opt stack 0
 10982                           tblptru	equ	0xFF8
 10983                           tblptrh	equ	0xFF7
 10984                           tblptrl	equ	0xFF6
 10985                           tablat	equ	0xFF5
 10986                           prodh	equ	0xFF4
 10987                           prodl	equ	0xFF3
 10988                           intcon	equ	0xFF2
 10989                           intcon2	equ	0xFF1
 10990                           postinc0	equ	0xFEE
 10991                           wreg	equ	0xFE8
 10992                           postdec1	equ	0xFE5
 10993                           fsr1l	equ	0xFE1
 10994                           indf2	equ	0xFDF
 10995                           postinc2	equ	0xFDE
 10996                           postdec2	equ	0xFDD
 10997                           fsr2h	equ	0xFDA
 10998                           fsr2l	equ	0xFD9
 10999                           status	equ	0xFD8
 11000                           
 11001 ;; *************** function _Init_Pwm *****************
 11002 ;; Defined at:
 11003 ;;		line 194 in file "../Main.c"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;		None
 11006 ;; Auto vars:     Size  Location     Type
 11007 ;;		None
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  1    wreg      void 
 11010 ;; Registers used:
 11011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11017 ;;      Params:         0       0       0       0       0       0       0       0       0
 11018 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11019 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11020 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11021 ;;Total ram usage:        0 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; Hardware stack levels required when called:    5
 11024 ;; This function calls:
 11025 ;;		_SETxAPIxVAL
 11026 ;; This function is called by:
 11027 ;;		_main
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           	psect	text28
 11032  004154                     __ptext28:
 11033                           	opt stack 0
 11034  004154                     _Init_Pwm:
 11035                           	opt stack 25
 11036                           
 11037                           ;Main.c: 197: SETxAPIxVAL(69, 1);
 11038                           
 11039                           ;incstack = 0
 11040  004154  0E00               	movlw	0
 11041  004156  0100               	movlb	0	; () banked
 11042  004158  6FBF               	movwf	(SETxAPIxVAL@value+1)& (0+255),b
 11043  00415A  0E01               	movlw	1
 11044  00415C  6FBE               	movwf	SETxAPIxVAL@value& (0+255),b
 11045  00415E  0E45               	movlw	69
 11046  004160  EC89  F01F         	call	_SETxAPIxVAL
 11047                           
 11048                           ;Main.c: 198: PR2=0xFF;
 11049  004164  68CB               	setf	4043,c	;volatile
 11050                           
 11051                           ;Main.c: 199: CCPR1L = 0x7F;
 11052  004166  0E7F               	movlw	127
 11053  004168  6EBE               	movwf	4030,c	;volatile
 11054                           
 11055                           ;Main.c: 200: CCP1CON = 0x0F;
 11056  00416A  0E0F               	movlw	15
 11057  00416C  6EBD               	movwf	4029,c	;volatile
 11058                           
 11059                           ;Main.c: 201: T2CON = 0x04;
 11060  00416E  0E04               	movlw	4
 11061  004170  6ECA               	movwf	4042,c	;volatile
 11062                           
 11063                           ;Main.c: 202: TRISCbits.TRISC2=0;TRISCbits.TRISC0=0;;
 11064  004172  9494               	bcf	3988,2,c	;volatile
 11065  004174  9094               	bcf	3988,0,c	;volatile
 11066  004176  0012               	return		;funcret
 11067  004178                     __end_of_Init_Pwm:
 11068                           	opt stack 0
 11069                           tblptru	equ	0xFF8
 11070                           tblptrh	equ	0xFF7
 11071                           tblptrl	equ	0xFF6
 11072                           tablat	equ	0xFF5
 11073                           prodh	equ	0xFF4
 11074                           prodl	equ	0xFF3
 11075                           intcon	equ	0xFF2
 11076                           intcon2	equ	0xFF1
 11077                           postinc0	equ	0xFEE
 11078                           wreg	equ	0xFE8
 11079                           postdec1	equ	0xFE5
 11080                           fsr1l	equ	0xFE1
 11081                           indf2	equ	0xFDF
 11082                           postinc2	equ	0xFDE
 11083                           postdec2	equ	0xFDD
 11084                           fsr2h	equ	0xFDA
 11085                           fsr2l	equ	0xFD9
 11086                           status	equ	0xFD8
 11087                           
 11088 ;; *************** function _SETxAPIxVAL *****************
 11089 ;; Defined at:
 11090 ;;		line 205 in file "../api.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  index           1    wreg     unsigned char 
 11093 ;;  value           2    5[BANK0 ] unsigned int 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;  index           1    9[BANK0 ] unsigned char 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  1    wreg      void 
 11098 ;; Registers used:
 11099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11105 ;;      Params:         0       2       0       0       0       0       0       0       0
 11106 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11107 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11108 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11109 ;;Total ram usage:        5 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:    4
 11112 ;; This function calls:
 11113 ;;		_SENDxMESSAGE
 11114 ;; This function is called by:
 11115 ;;		_Init_Pwm
 11116 ;;		_Update_StateMchn
 11117 ;;		_Train_Path
 11118 ;;		_Debounce_Inputs
 11119 ;;		_Junction
 11120 ;;		_Train_Move_Left_Start
 11121 ;;		_Train_Move_Left_Brake
 11122 ;;		_Train_Move_Right_Start
 11123 ;;		_Train_Move_Right_Brake
 11124 ;;		_SETxPWM
 11125 ;;		_INCRxAPIxVAL
 11126 ;;		_DECRxAPIxVAL
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           	psect	text29
 11131  003F12                     __ptext29:
 11132                           	opt stack 0
 11133  003F12                     _SETxAPIxVAL:
 11134                           	opt stack 22
 11135                           
 11136                           ;incstack = 0
 11137                           ;SETxAPIxVAL@index stored from wreg
 11138  003F12  0100               	movlb	0	; () banked
 11139  003F14  6FC2               	movwf	SETxAPIxVAL@index& (0+255),b
 11140                           
 11141                           ;api.c: 206: if(API[index] != value){
 11142  003F16  0100               	movlb	0	; () banked
 11143  003F18  51C2               	movf	SETxAPIxVAL@index& (0+255),w,b
 11144  003F1A  0D02               	mullw	2
 11145  003F1C  0E00               	movlw	low _API
 11146  003F1E  24F3               	addwf	prodl,w,c
 11147  003F20  6ED9               	movwf	fsr2l,c
 11148  003F22  0E01               	movlw	high _API
 11149  003F24  20F4               	addwfc	prodh,w,c
 11150  003F26  6EDA               	movwf	fsr2h,c
 11151  003F28  0100               	movlb	0	; () banked
 11152  003F2A  51BE               	movf	SETxAPIxVAL@value& (0+255),w,b
 11153  003F2C  18DE               	xorwf	postinc2,w,c
 11154  003F2E  E105               	bnz	u6310
 11155  003F30  0100               	movlb	0	; () banked
 11156  003F32  51BF               	movf	(SETxAPIxVAL@value+1)& (0+255),w,b
 11157  003F34  18DE               	xorwf	postinc2,w,c
 11158  003F36  B4D8               	btfsc	status,2,c
 11159  003F38  0012               	return	
 11160  003F3A                     u6310:
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;api.c: 207: API[index] = value;
 11164  003F3A  0100               	movlb	0	; () banked
 11165  003F3C  51C2               	movf	SETxAPIxVAL@index& (0+255),w,b
 11166  003F3E  0D02               	mullw	2
 11167  003F40  0E00               	movlw	low _API
 11168  003F42  24F3               	addwf	prodl,w,c
 11169  003F44  6ED9               	movwf	fsr2l,c
 11170  003F46  0E01               	movlw	high _API
 11171  003F48  20F4               	addwfc	prodh,w,c
 11172  003F4A  6EDA               	movwf	fsr2h,c
 11173  003F4C  C0BE  FFDE         	movff	SETxAPIxVAL@value,postinc2
 11174  003F50  C0BF  FFDD         	movff	SETxAPIxVAL@value+1,postdec2
 11175                           
 11176                           ; BSR set to: 0
 11177                           ;api.c: 208: SENDxMESSAGE(index, value);
 11178  003F54  C0BE  F0B9         	movff	SETxAPIxVAL@value,SENDxMESSAGE@value
 11179  003F58  C0BF  F0BA         	movff	SETxAPIxVAL@value+1,SENDxMESSAGE@value+1
 11180  003F5C  0100               	movlb	0	; () banked
 11181  003F5E  51C2               	movf	SETxAPIxVAL@index& (0+255),w,b
 11182  003F60  ECC3  F012         	call	_SENDxMESSAGE
 11183  003F64  0012               	return	
 11184  003F66                     __end_of_SETxAPIxVAL:
 11185                           	opt stack 0
 11186                           tblptru	equ	0xFF8
 11187                           tblptrh	equ	0xFF7
 11188                           tblptrl	equ	0xFF6
 11189                           tablat	equ	0xFF5
 11190                           prodh	equ	0xFF4
 11191                           prodl	equ	0xFF3
 11192                           intcon	equ	0xFF2
 11193                           intcon2	equ	0xFF1
 11194                           postinc0	equ	0xFEE
 11195                           wreg	equ	0xFE8
 11196                           postdec1	equ	0xFE5
 11197                           fsr1l	equ	0xFE1
 11198                           indf2	equ	0xFDF
 11199                           postinc2	equ	0xFDE
 11200                           postdec2	equ	0xFDD
 11201                           fsr2h	equ	0xFDA
 11202                           fsr2l	equ	0xFD9
 11203                           status	equ	0xFD8
 11204                           
 11205 ;; *************** function _SENDxMESSAGE *****************
 11206 ;; Defined at:
 11207 ;;		line 280 in file "../terminal.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  index           1    wreg     unsigned char 
 11210 ;;  value           2    0[BANK0 ] unsigned int 
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;  index           1    4[BANK0 ] unsigned char 
 11213 ;; Return value:  Size  Location     Type
 11214 ;;                  1    wreg      void 
 11215 ;; Registers used:
 11216 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11217 ;; Tracked objects:
 11218 ;;		On entry : 0/0
 11219 ;;		On exit  : 0/0
 11220 ;;		Unchanged: 0/0
 11221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11222 ;;      Params:         0       2       0       0       0       0       0       0       0
 11223 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11224 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11225 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11226 ;;Total ram usage:        5 bytes
 11227 ;; Hardware stack levels used:    1
 11228 ;; Hardware stack levels required when called:    3
 11229 ;; This function calls:
 11230 ;;		Nothing
 11231 ;; This function is called by:
 11232 ;;		_TranslateMessage
 11233 ;;		_SETxAPIxVAL
 11234 ;;		_INCRxAPIxVAL
 11235 ;;		_DECRxAPIxVAL
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text30
 11240  002586                     __ptext30:
 11241                           	opt stack 0
 11242  002586                     _SENDxMESSAGE:
 11243                           	opt stack 22
 11244                           
 11245                           ;incstack = 0
 11246                           ;SENDxMESSAGE@index stored from wreg
 11247  002586  0100               	movlb	0	; () banked
 11248  002588  6FBD               	movwf	SENDxMESSAGE@index& (0+255),b
 11249                           
 11250                           ;terminal.c: 282: switch (Diag_Comm)
 11251  00258A  D120               	goto	l7358
 11252  00258C                     l7286:
 11253  00258C  0E8F               	movlw	low _Comm_List
 11254  00258E  6E01               	movwf	_Pcomm_List,c
 11255  002590  0E00               	movlw	high _Comm_List
 11256  002592  6E02               	movwf	_Pcomm_List+1,c
 11257                           
 11258                           ;terminal.c: 285: *Pcomm_List = index;
 11259  002594  0100               	movlb	0	; () banked
 11260  002596  51BD               	movf	SENDxMESSAGE@index& (0+255),w,b
 11261  002598  0100               	movlb	0	; () banked
 11262  00259A  6FBB               	movwf	??_SENDxMESSAGE& (0+255),b
 11263  00259C  6BBC               	clrf	(??_SENDxMESSAGE+1)& (0+255),b
 11264  00259E  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11265  0025A2  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11266  0025A6  C0BB  FFDE         	movff	??_SENDxMESSAGE,postinc2
 11267  0025AA  C0BC  FFDD         	movff	??_SENDxMESSAGE+1,postdec2
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;terminal.c: 286: Pcomm_List++;
 11271  0025AE  0E02               	movlw	2
 11272  0025B0  2601               	addwf	_Pcomm_List,f,c
 11273  0025B2  0E00               	movlw	0
 11274  0025B4  2202               	addwfc	_Pcomm_List+1,f,c
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;terminal.c: 287: *Pcomm_List = value;
 11278  0025B6  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11279  0025BA  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11280  0025BE  C0B9  FFDE         	movff	SENDxMESSAGE@value,postinc2
 11281  0025C2  C0BA  FFDD         	movff	SENDxMESSAGE@value+1,postdec2
 11282                           
 11283                           ; BSR set to: 0
 11284                           ;terminal.c: 288: Pcomm_List++;
 11285  0025C6  0E02               	movlw	2
 11286  0025C8  2601               	addwf	_Pcomm_List,f,c
 11287  0025CA  0E00               	movlw	0
 11288  0025CC  2202               	addwfc	_Pcomm_List+1,f,c
 11289                           
 11290                           ;terminal.c: 289: Diag_Comm = 1;
 11291  0025CE  0E00               	movlw	0
 11292  0025D0  0100               	movlb	0	; () banked
 11293  0025D2  6F71               	movwf	(_Diag_Comm+1)& (0+255),b
 11294  0025D4  0E01               	movlw	1
 11295  0025D6  6F70               	movwf	_Diag_Comm& (0+255),b
 11296                           
 11297                           ;terminal.c: 290: break;
 11298  0025D8  0012               	return	
 11299  0025DA                     l7296:
 11300                           
 11301                           ; BSR set to: 0
 11302  0025DA  0100               	movlb	0	; () banked
 11303  0025DC  51BD               	movf	SENDxMESSAGE@index& (0+255),w,b
 11304  0025DE  0100               	movlb	0	; () banked
 11305  0025E0  6FBB               	movwf	??_SENDxMESSAGE& (0+255),b
 11306  0025E2  6BBC               	clrf	(??_SENDxMESSAGE+1)& (0+255),b
 11307  0025E4  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11308  0025E8  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11309  0025EC  C0BB  FFDE         	movff	??_SENDxMESSAGE,postinc2
 11310  0025F0  C0BC  FFDD         	movff	??_SENDxMESSAGE+1,postdec2
 11311                           
 11312                           ; BSR set to: 0
 11313                           ;terminal.c: 293: Pcomm_List++;
 11314  0025F4  0E02               	movlw	2
 11315  0025F6  2601               	addwf	_Pcomm_List,f,c
 11316  0025F8  0E00               	movlw	0
 11317  0025FA  2202               	addwfc	_Pcomm_List+1,f,c
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;terminal.c: 294: *Pcomm_List = value;
 11321  0025FC  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11322  002600  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11323  002604  C0B9  FFDE         	movff	SENDxMESSAGE@value,postinc2
 11324  002608  C0BA  FFDD         	movff	SENDxMESSAGE@value+1,postdec2
 11325                           
 11326                           ; BSR set to: 0
 11327                           ;terminal.c: 295: Pcomm_List++;
 11328  00260C  0E02               	movlw	2
 11329  00260E  2601               	addwf	_Pcomm_List,f,c
 11330  002610  0E00               	movlw	0
 11331  002612  2202               	addwfc	_Pcomm_List+1,f,c
 11332                           
 11333                           ;terminal.c: 296: Diag_Comm = 2;
 11334  002614  0E00               	movlw	0
 11335  002616  0100               	movlb	0	; () banked
 11336  002618  6F71               	movwf	(_Diag_Comm+1)& (0+255),b
 11337  00261A  0E02               	movlw	2
 11338  00261C  6F70               	movwf	_Diag_Comm& (0+255),b
 11339                           
 11340                           ;terminal.c: 297: break;
 11341  00261E  0012               	return	
 11342  002620                     l7304:
 11343                           
 11344                           ; BSR set to: 0
 11345  002620  0100               	movlb	0	; () banked
 11346  002622  51BD               	movf	SENDxMESSAGE@index& (0+255),w,b
 11347  002624  0100               	movlb	0	; () banked
 11348  002626  6FBB               	movwf	??_SENDxMESSAGE& (0+255),b
 11349  002628  6BBC               	clrf	(??_SENDxMESSAGE+1)& (0+255),b
 11350  00262A  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11351  00262E  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11352  002632  C0BB  FFDE         	movff	??_SENDxMESSAGE,postinc2
 11353  002636  C0BC  FFDD         	movff	??_SENDxMESSAGE+1,postdec2
 11354                           
 11355                           ; BSR set to: 0
 11356                           ;terminal.c: 300: Pcomm_List++;
 11357  00263A  0E02               	movlw	2
 11358  00263C  2601               	addwf	_Pcomm_List,f,c
 11359  00263E  0E00               	movlw	0
 11360  002640  2202               	addwfc	_Pcomm_List+1,f,c
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;terminal.c: 301: *Pcomm_List = value;
 11364  002642  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11365  002646  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11366  00264A  C0B9  FFDE         	movff	SENDxMESSAGE@value,postinc2
 11367  00264E  C0BA  FFDD         	movff	SENDxMESSAGE@value+1,postdec2
 11368                           
 11369                           ; BSR set to: 0
 11370                           ;terminal.c: 302: Pcomm_List++;
 11371  002652  0E02               	movlw	2
 11372  002654  2601               	addwf	_Pcomm_List,f,c
 11373  002656  0E00               	movlw	0
 11374  002658  2202               	addwfc	_Pcomm_List+1,f,c
 11375                           
 11376                           ;terminal.c: 303: Diag_Comm = 3;
 11377  00265A  0E00               	movlw	0
 11378  00265C  0100               	movlb	0	; () banked
 11379  00265E  6F71               	movwf	(_Diag_Comm+1)& (0+255),b
 11380  002660  0E03               	movlw	3
 11381  002662  6F70               	movwf	_Diag_Comm& (0+255),b
 11382                           
 11383                           ;terminal.c: 304: break;
 11384  002664  0012               	return	
 11385  002666                     l7312:
 11386                           
 11387                           ; BSR set to: 0
 11388  002666  0100               	movlb	0	; () banked
 11389  002668  51BD               	movf	SENDxMESSAGE@index& (0+255),w,b
 11390  00266A  0100               	movlb	0	; () banked
 11391  00266C  6FBB               	movwf	??_SENDxMESSAGE& (0+255),b
 11392  00266E  6BBC               	clrf	(??_SENDxMESSAGE+1)& (0+255),b
 11393  002670  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11394  002674  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11395  002678  C0BB  FFDE         	movff	??_SENDxMESSAGE,postinc2
 11396  00267C  C0BC  FFDD         	movff	??_SENDxMESSAGE+1,postdec2
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;terminal.c: 307: Pcomm_List++;
 11400  002680  0E02               	movlw	2
 11401  002682  2601               	addwf	_Pcomm_List,f,c
 11402  002684  0E00               	movlw	0
 11403  002686  2202               	addwfc	_Pcomm_List+1,f,c
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;terminal.c: 308: *Pcomm_List = value;
 11407  002688  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11408  00268C  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11409  002690  C0B9  FFDE         	movff	SENDxMESSAGE@value,postinc2
 11410  002694  C0BA  FFDD         	movff	SENDxMESSAGE@value+1,postdec2
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;terminal.c: 309: Pcomm_List++;
 11414  002698  0E02               	movlw	2
 11415  00269A  2601               	addwf	_Pcomm_List,f,c
 11416  00269C  0E00               	movlw	0
 11417  00269E  2202               	addwfc	_Pcomm_List+1,f,c
 11418                           
 11419                           ;terminal.c: 310: Diag_Comm = 4;
 11420  0026A0  0E00               	movlw	0
 11421  0026A2  0100               	movlb	0	; () banked
 11422  0026A4  6F71               	movwf	(_Diag_Comm+1)& (0+255),b
 11423  0026A6  0E04               	movlw	4
 11424  0026A8  6F70               	movwf	_Diag_Comm& (0+255),b
 11425                           
 11426                           ;terminal.c: 311: break;
 11427  0026AA  0012               	return	
 11428  0026AC                     l7320:
 11429                           
 11430                           ; BSR set to: 0
 11431  0026AC  0100               	movlb	0	; () banked
 11432  0026AE  51BD               	movf	SENDxMESSAGE@index& (0+255),w,b
 11433  0026B0  0100               	movlb	0	; () banked
 11434  0026B2  6FBB               	movwf	??_SENDxMESSAGE& (0+255),b
 11435  0026B4  6BBC               	clrf	(??_SENDxMESSAGE+1)& (0+255),b
 11436  0026B6  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11437  0026BA  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11438  0026BE  C0BB  FFDE         	movff	??_SENDxMESSAGE,postinc2
 11439  0026C2  C0BC  FFDD         	movff	??_SENDxMESSAGE+1,postdec2
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;terminal.c: 314: Pcomm_List++;
 11443  0026C6  0E02               	movlw	2
 11444  0026C8  2601               	addwf	_Pcomm_List,f,c
 11445  0026CA  0E00               	movlw	0
 11446  0026CC  2202               	addwfc	_Pcomm_List+1,f,c
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;terminal.c: 315: *Pcomm_List = value;
 11450  0026CE  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11451  0026D2  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11452  0026D6  C0B9  FFDE         	movff	SENDxMESSAGE@value,postinc2
 11453  0026DA  C0BA  FFDD         	movff	SENDxMESSAGE@value+1,postdec2
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;terminal.c: 316: Pcomm_List++;
 11457  0026DE  0E02               	movlw	2
 11458  0026E0  2601               	addwf	_Pcomm_List,f,c
 11459  0026E2  0E00               	movlw	0
 11460  0026E4  2202               	addwfc	_Pcomm_List+1,f,c
 11461                           
 11462                           ;terminal.c: 317: Diag_Comm = 5;
 11463  0026E6  0E00               	movlw	0
 11464  0026E8  0100               	movlb	0	; () banked
 11465  0026EA  6F71               	movwf	(_Diag_Comm+1)& (0+255),b
 11466  0026EC  0E05               	movlw	5
 11467  0026EE  6F70               	movwf	_Diag_Comm& (0+255),b
 11468                           
 11469                           ;terminal.c: 318: break;
 11470  0026F0  0012               	return	
 11471  0026F2                     l7328:
 11472                           
 11473                           ; BSR set to: 0
 11474  0026F2  0100               	movlb	0	; () banked
 11475  0026F4  51BD               	movf	SENDxMESSAGE@index& (0+255),w,b
 11476  0026F6  0100               	movlb	0	; () banked
 11477  0026F8  6FBB               	movwf	??_SENDxMESSAGE& (0+255),b
 11478  0026FA  6BBC               	clrf	(??_SENDxMESSAGE+1)& (0+255),b
 11479  0026FC  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11480  002700  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11481  002704  C0BB  FFDE         	movff	??_SENDxMESSAGE,postinc2
 11482  002708  C0BC  FFDD         	movff	??_SENDxMESSAGE+1,postdec2
 11483                           
 11484                           ; BSR set to: 0
 11485                           ;terminal.c: 321: Pcomm_List++;
 11486  00270C  0E02               	movlw	2
 11487  00270E  2601               	addwf	_Pcomm_List,f,c
 11488  002710  0E00               	movlw	0
 11489  002712  2202               	addwfc	_Pcomm_List+1,f,c
 11490                           
 11491                           ; BSR set to: 0
 11492                           ;terminal.c: 322: *Pcomm_List = value;
 11493  002714  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11494  002718  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11495  00271C  C0B9  FFDE         	movff	SENDxMESSAGE@value,postinc2
 11496  002720  C0BA  FFDD         	movff	SENDxMESSAGE@value+1,postdec2
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;terminal.c: 323: Pcomm_List++;
 11500  002724  0E02               	movlw	2
 11501  002726  2601               	addwf	_Pcomm_List,f,c
 11502  002728  0E00               	movlw	0
 11503  00272A  2202               	addwfc	_Pcomm_List+1,f,c
 11504                           
 11505                           ;terminal.c: 324: Diag_Comm = 6;
 11506  00272C  0E00               	movlw	0
 11507  00272E  0100               	movlb	0	; () banked
 11508  002730  6F71               	movwf	(_Diag_Comm+1)& (0+255),b
 11509  002732  0E06               	movlw	6
 11510  002734  6F70               	movwf	_Diag_Comm& (0+255),b
 11511                           
 11512                           ;terminal.c: 325: break;
 11513  002736  0012               	return	
 11514  002738                     l7336:
 11515                           
 11516                           ; BSR set to: 0
 11517  002738  0100               	movlb	0	; () banked
 11518  00273A  51BD               	movf	SENDxMESSAGE@index& (0+255),w,b
 11519  00273C  0100               	movlb	0	; () banked
 11520  00273E  6FBB               	movwf	??_SENDxMESSAGE& (0+255),b
 11521  002740  6BBC               	clrf	(??_SENDxMESSAGE+1)& (0+255),b
 11522  002742  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11523  002746  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11524  00274A  C0BB  FFDE         	movff	??_SENDxMESSAGE,postinc2
 11525  00274E  C0BC  FFDD         	movff	??_SENDxMESSAGE+1,postdec2
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;terminal.c: 328: Pcomm_List++;
 11529  002752  0E02               	movlw	2
 11530  002754  2601               	addwf	_Pcomm_List,f,c
 11531  002756  0E00               	movlw	0
 11532  002758  2202               	addwfc	_Pcomm_List+1,f,c
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;terminal.c: 329: *Pcomm_List = value;
 11536  00275A  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11537  00275E  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11538  002762  C0B9  FFDE         	movff	SENDxMESSAGE@value,postinc2
 11539  002766  C0BA  FFDD         	movff	SENDxMESSAGE@value+1,postdec2
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;terminal.c: 330: Pcomm_List++;
 11543  00276A  0E02               	movlw	2
 11544  00276C  2601               	addwf	_Pcomm_List,f,c
 11545  00276E  0E00               	movlw	0
 11546  002770  2202               	addwfc	_Pcomm_List+1,f,c
 11547                           
 11548                           ;terminal.c: 331: Diag_Comm = 7;
 11549  002772  0E00               	movlw	0
 11550  002774  0100               	movlb	0	; () banked
 11551  002776  6F71               	movwf	(_Diag_Comm+1)& (0+255),b
 11552  002778  0E07               	movlw	7
 11553  00277A  6F70               	movwf	_Diag_Comm& (0+255),b
 11554                           
 11555                           ;terminal.c: 332: break;
 11556  00277C  0012               	return	
 11557  00277E                     l7344:
 11558                           
 11559                           ; BSR set to: 0
 11560  00277E  0100               	movlb	0	; () banked
 11561  002780  51BD               	movf	SENDxMESSAGE@index& (0+255),w,b
 11562  002782  0100               	movlb	0	; () banked
 11563  002784  6FBB               	movwf	??_SENDxMESSAGE& (0+255),b
 11564  002786  6BBC               	clrf	(??_SENDxMESSAGE+1)& (0+255),b
 11565  002788  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11566  00278C  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11567  002790  C0BB  FFDE         	movff	??_SENDxMESSAGE,postinc2
 11568  002794  C0BC  FFDD         	movff	??_SENDxMESSAGE+1,postdec2
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;terminal.c: 335: Pcomm_List++;
 11572  002798  0E02               	movlw	2
 11573  00279A  2601               	addwf	_Pcomm_List,f,c
 11574  00279C  0E00               	movlw	0
 11575  00279E  2202               	addwfc	_Pcomm_List+1,f,c
 11576                           
 11577                           ; BSR set to: 0
 11578                           ;terminal.c: 336: *Pcomm_List = value;
 11579  0027A0  C001  FFD9         	movff	_Pcomm_List,fsr2l
 11580  0027A4  C002  FFDA         	movff	_Pcomm_List+1,fsr2h
 11581  0027A8  C0B9  FFDE         	movff	SENDxMESSAGE@value,postinc2
 11582  0027AC  C0BA  FFDD         	movff	SENDxMESSAGE@value+1,postdec2
 11583                           
 11584                           ; BSR set to: 0
 11585                           ;terminal.c: 337: Pcomm_List++;
 11586  0027B0  0E02               	movlw	2
 11587  0027B2  2601               	addwf	_Pcomm_List,f,c
 11588  0027B4  0E00               	movlw	0
 11589  0027B6  2202               	addwfc	_Pcomm_List+1,f,c
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;terminal.c: 338: Pcomm_List = &Comm_List[0][0];
 11593  0027B8  0E8F               	movlw	low _Comm_List
 11594  0027BA  6E01               	movwf	_Pcomm_List,c
 11595  0027BC  0E00               	movlw	high _Comm_List
 11596  0027BE  6E02               	movwf	_Pcomm_List+1,c
 11597                           
 11598                           ; BSR set to: 0
 11599                           ;terminal.c: 339: Diag_Comm = 0;
 11600  0027C0  0E00               	movlw	0
 11601  0027C2  0100               	movlb	0	; () banked
 11602  0027C4  6F71               	movwf	(_Diag_Comm+1)& (0+255),b
 11603  0027C6  0E00               	movlw	0
 11604  0027C8  6F70               	movwf	_Diag_Comm& (0+255),b
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;terminal.c: 344: }
 11608                           
 11609                           ; BSR set to: 0
 11610                           
 11611                           ;terminal.c: 343: default : break;
 11612                           
 11613                           ;terminal.c: 340: break;
 11614  0027CA  0012               	return	
 11615  0027CC                     l7358:
 11616  0027CC  C070  F0BB         	movff	_Diag_Comm,??_SENDxMESSAGE
 11617  0027D0  C071  F0BC         	movff	_Diag_Comm+1,??_SENDxMESSAGE+1
 11618                           
 11619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11620                           ; Switch size 1, requested type "space"
 11621                           ; Number of cases is 1, Range of values is 0 to 0
 11622                           ; switch strategies available:
 11623                           ; Name         Instructions Cycles
 11624                           ; simple_byte            4     3 (average)
 11625                           ;	Chosen strategy is simple_byte
 11626  0027D4  0100               	movlb	0	; () banked
 11627  0027D6  51BC               	movf	(??_SENDxMESSAGE+1)& (0+255),w,b
 11628  0027D8  0A00               	xorlw	0	; case 0
 11629  0027DA  A4D8               	btfss	status,2,c
 11630  0027DC  0012               	return	
 11631                           
 11632                           ; BSR set to: 0
 11633                           ; Switch size 1, requested type "space"
 11634                           ; Number of cases is 8, Range of values is 0 to 7
 11635                           ; switch strategies available:
 11636                           ; Name         Instructions Cycles
 11637                           ; simple_byte           25    13 (average)
 11638                           ;	Chosen strategy is simple_byte
 11639  0027DE  0100               	movlb	0	; () banked
 11640  0027E0  51BB               	movf	??_SENDxMESSAGE& (0+255),w,b
 11641  0027E2  0A00               	xorlw	0	; case 0
 11642  0027E4  B4D8               	btfsc	status,2,c
 11643  0027E6  D6D2               	goto	l7286
 11644  0027E8  0A01               	xorlw	1	; case 1
 11645  0027EA  B4D8               	btfsc	status,2,c
 11646  0027EC  D6F6               	goto	l7296
 11647  0027EE  0A03               	xorlw	3	; case 2
 11648  0027F0  B4D8               	btfsc	status,2,c
 11649  0027F2  D716               	goto	l7304
 11650  0027F4  0A01               	xorlw	1	; case 3
 11651  0027F6  B4D8               	btfsc	status,2,c
 11652  0027F8  D736               	goto	l7312
 11653  0027FA  0A07               	xorlw	7	; case 4
 11654  0027FC  B4D8               	btfsc	status,2,c
 11655  0027FE  D756               	goto	l7320
 11656  002800  0A01               	xorlw	1	; case 5
 11657  002802  B4D8               	btfsc	status,2,c
 11658  002804  D776               	goto	l7328
 11659  002806  0A03               	xorlw	3	; case 6
 11660  002808  B4D8               	btfsc	status,2,c
 11661  00280A  D796               	goto	l7336
 11662  00280C  0A01               	xorlw	1	; case 7
 11663  00280E  A4D8               	btfss	status,2,c
 11664  002810  0012               	return	
 11665  002812  D7B5               	goto	l7344
 11666  002814                     __end_of_SENDxMESSAGE:
 11667                           	opt stack 0
 11668                           tblptru	equ	0xFF8
 11669                           tblptrh	equ	0xFF7
 11670                           tblptrl	equ	0xFF6
 11671                           tablat	equ	0xFF5
 11672                           prodh	equ	0xFF4
 11673                           prodl	equ	0xFF3
 11674                           intcon	equ	0xFF2
 11675                           intcon2	equ	0xFF1
 11676                           postinc0	equ	0xFEE
 11677                           wreg	equ	0xFE8
 11678                           postdec1	equ	0xFE5
 11679                           fsr1l	equ	0xFE1
 11680                           indf2	equ	0xFDF
 11681                           postinc2	equ	0xFDE
 11682                           postdec2	equ	0xFDD
 11683                           fsr2h	equ	0xFDA
 11684                           fsr2l	equ	0xFD9
 11685                           status	equ	0xFD8
 11686                           
 11687 ;; *************** function _EUSART1_Initialize *****************
 11688 ;; Defined at:
 11689 ;;		line 77 in file "../eusart1.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;		None
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  baud_rate       2    0[BANK0 ] unsigned int 
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  1    wreg      void 
 11696 ;; Registers used:
 11697 ;;		wreg, status,2
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11703 ;;      Params:         0       0       0       0       0       0       0       0       0
 11704 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11706 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11707 ;;Total ram usage:        2 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; Hardware stack levels required when called:    3
 11710 ;; This function calls:
 11711 ;;		Nothing
 11712 ;; This function is called by:
 11713 ;;		_main
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           	psect	text31
 11718  003F66                     __ptext31:
 11719                           	opt stack 0
 11720  003F66                     _EUSART1_Initialize:
 11721                           	opt stack 27
 11722                           
 11723                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
 11724                           
 11725                           ; BSR set to: 0
 11726                           ;incstack = 0
 11727  003F66  9A9D               	bcf	3997,5,c	;volatile
 11728                           
 11729                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
 11730  003F68  989D               	bcf	3997,4,c	;volatile
 11731                           
 11732                           ;eusart1.c: 84: BAUDCONbits.BRG16 = 1;
 11733  003F6A  86B8               	bsf	4024,3,c	;volatile
 11734                           
 11735                           ;eusart1.c: 86: RCSTAbits.SPEN = 1;
 11736  003F6C  8EAB               	bsf	4011,7,c	;volatile
 11737                           
 11738                           ;eusart1.c: 87: RCSTAbits.RX9 = 0;
 11739  003F6E  9CAB               	bcf	4011,6,c	;volatile
 11740                           
 11741                           ;eusart1.c: 88: RCSTAbits.CREN = 1;
 11742  003F70  88AB               	bsf	4011,4,c	;volatile
 11743                           
 11744                           ;eusart1.c: 89: RCSTAbits.ADDEN = 0;
 11745  003F72  96AB               	bcf	4011,3,c	;volatile
 11746                           
 11747                           ;eusart1.c: 91: TXSTAbits.TX9 = 0;
 11748  003F74  9CAC               	bcf	4012,6,c	;volatile
 11749                           
 11750                           ;eusart1.c: 92: TXSTAbits.TXEN = 1;
 11751  003F76  8AAC               	bsf	4012,5,c	;volatile
 11752                           
 11753                           ;eusart1.c: 93: TXSTAbits.SYNC = 0;
 11754  003F78  98AC               	bcf	4012,4,c	;volatile
 11755                           
 11756                           ;eusart1.c: 94: TXSTAbits.SENDB = 0;
 11757  003F7A  96AC               	bcf	4012,3,c	;volatile
 11758                           
 11759                           ;eusart1.c: 95: TXSTAbits.BRGH = 1;
 11760  003F7C  84AC               	bsf	4012,2,c	;volatile
 11761                           
 11762                           ;eusart1.c: 96: TXSTAbits.TRMT = 1;
 11763  003F7E  82AC               	bsf	4012,1,c	;volatile
 11764                           
 11765                           ;eusart1.c: 97: TXSTAbits.TX9D = 0;
 11766  003F80  90AC               	bcf	4012,0,c	;volatile
 11767                           
 11768                           ;eusart1.c: 99: unsigned int baud_rate;
 11769                           ;eusart1.c: 101: baud_rate = 417;
 11770  003F82  0E01               	movlw	1
 11771  003F84  0100               	movlb	0	; () banked
 11772  003F86  6FBA               	movwf	(EUSART1_Initialize@baud_rate+1)& (0+255),b
 11773  003F88  0EA1               	movlw	161
 11774  003F8A  6FB9               	movwf	EUSART1_Initialize@baud_rate& (0+255),b
 11775                           
 11776                           ;eusart1.c: 103: SPBRGH = baud_rate >> 8;
 11777  003F8C  0100               	movlb	0	; () banked
 11778  003F8E  51BA               	movf	(EUSART1_Initialize@baud_rate+1)& (0+255),w,b
 11779  003F90  6EB0               	movwf	4016,c	;volatile
 11780                           
 11781                           ; BSR set to: 0
 11782                           ;eusart1.c: 104: SPBRG = baud_rate;
 11783  003F92  C0B9  FFAF         	movff	EUSART1_Initialize@baud_rate,4015	;volatile
 11784                           
 11785                           ;eusart1.c: 108: eusart1TxHead = 0;
 11786  003F96  0E00               	movlw	0
 11787  003F98  6E1E               	movwf	_eusart1TxHead,c
 11788                           
 11789                           ;eusart1.c: 109: eusart1TxTail = 0;
 11790  003F9A  0E00               	movlw	0
 11791  003F9C  6E1F               	movwf	_eusart1TxTail,c
 11792                           
 11793                           ;eusart1.c: 110: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
 11794  003F9E  0E7E               	movlw	126
 11795  003FA0  6E1D               	movwf	_eusart1TxBufferRemaining,c	;volatile
 11796                           
 11797                           ;eusart1.c: 112: eusart1RxHead = 0;
 11798  003FA2  0E00               	movlw	0
 11799  003FA4  6E1B               	movwf	_eusart1RxHead,c
 11800                           
 11801                           ;eusart1.c: 113: eusart1RxTail = 0;
 11802  003FA6  0E00               	movlw	0
 11803  003FA8  6E1C               	movwf	_eusart1RxTail,c
 11804                           
 11805                           ;eusart1.c: 114: eusart1RxCount = 0;
 11806  003FAA  0E00               	movlw	0
 11807  003FAC  6E1A               	movwf	_eusart1RxCount,c	;volatile
 11808                           
 11809                           ; BSR set to: 0
 11810                           ;eusart1.c: 117: PIE1bits.RC1IE = 1;
 11811  003FAE  8A9D               	bsf	3997,5,c	;volatile
 11812                           
 11813                           ; BSR set to: 0
 11814  003FB0  0012               	return		;funcret
 11815  003FB2                     __end_of_EUSART1_Initialize:
 11816                           	opt stack 0
 11817                           tblptru	equ	0xFF8
 11818                           tblptrh	equ	0xFF7
 11819                           tblptrl	equ	0xFF6
 11820                           tablat	equ	0xFF5
 11821                           prodh	equ	0xFF4
 11822                           prodl	equ	0xFF3
 11823                           intcon	equ	0xFF2
 11824                           intcon2	equ	0xFF1
 11825                           postinc0	equ	0xFEE
 11826                           wreg	equ	0xFE8
 11827                           postdec1	equ	0xFE5
 11828                           fsr1l	equ	0xFE1
 11829                           indf2	equ	0xFDF
 11830                           postinc2	equ	0xFDE
 11831                           postdec2	equ	0xFDD
 11832                           fsr2h	equ	0xFDA
 11833                           fsr2l	equ	0xFD9
 11834                           status	equ	0xFD8
 11835                           
 11836 ;; *************** function _DIAGNOSTICxTOxPC *****************
 11837 ;; Defined at:
 11838 ;;		line 194 in file "../terminal.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;		None
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;		None
 11843 ;; Return value:  Size  Location     Type
 11844 ;;                  1    wreg      void 
 11845 ;; Registers used:
 11846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/0
 11849 ;;		On exit  : 0/0
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11852 ;;      Params:         0       0       0       0       0       0       0       0       0
 11853 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11854 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11855 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11856 ;;Total ram usage:        2 bytes
 11857 ;; Hardware stack levels used:    1
 11858 ;; Hardware stack levels required when called:    6
 11859 ;; This function calls:
 11860 ;;		_SendMessage
 11861 ;; This function is called by:
 11862 ;;		_main
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           	psect	text32
 11867  002814                     __ptext32:
 11868                           	opt stack 0
 11869  002814                     _DIAGNOSTICxTOxPC:
 11870                           	opt stack 24
 11871                           
 11872                           ;terminal.c: 196: if (DelayCounter > 10000){
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;incstack = 0
 11876  002814  0E11               	movlw	17
 11877  002816  0100               	movlb	0	; () banked
 11878  002818  5D6E               	subwf	_DelayCounter& (0+255),w,b
 11879  00281A  0E27               	movlw	39
 11880  00281C  0100               	movlb	0	; () banked
 11881  00281E  596F               	subwfb	(_DelayCounter+1)& (0+255),w,b
 11882  002820  A0D8               	btfss	status,0,c
 11883  002822  D107               	goto	l9460
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;terminal.c: 197: DelayCounter = 0;
 11887  002824  0E00               	movlw	0
 11888  002826  0100               	movlb	0	; () banked
 11889  002828  6F6F               	movwf	(_DelayCounter+1)& (0+255),b
 11890  00282A  0E00               	movlw	0
 11891  00282C  6F6E               	movwf	_DelayCounter& (0+255),b
 11892                           
 11893                           ;terminal.c: 199: switch (Diag_Comm2)
 11894  00282E  D0DA               	goto	l9458
 11895  002830                     l9388:
 11896                           
 11897                           ; BSR set to: 0
 11898  002830  0E8F               	movlw	low _Comm_List
 11899  002832  6E01               	movwf	_Pcomm_List,c
 11900  002834  0E00               	movlw	high _Comm_List
 11901  002836  6E02               	movwf	_Pcomm_List+1,c
 11902                           
 11903                           ;terminal.c: 202: Pcomm_List2 = &Comm_List[0][0];
 11904  002838  0E8F               	movlw	low _Comm_List
 11905  00283A  6E03               	movwf	_Pcomm_List2,c
 11906  00283C  0E00               	movlw	high _Comm_List
 11907  00283E  6E04               	movwf	_Pcomm_List2+1,c
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;terminal.c: 203: Diag_Comm2 = 1;
 11911  002840  0E00               	movlw	0
 11912  002842  0100               	movlb	0	; () banked
 11913  002844  6F73               	movwf	(_Diag_Comm2+1)& (0+255),b
 11914  002846  0E01               	movlw	1
 11915  002848  6F72               	movwf	_Diag_Comm2& (0+255),b
 11916                           
 11917                           ;terminal.c: 204: break;
 11918  00284A  0012               	return	
 11919  00284C                     l9392:
 11920                           
 11921                           ; BSR set to: 0
 11922  00284C  0E8F               	movlw	low _Comm_List
 11923  00284E  6E03               	movwf	_Pcomm_List2,c
 11924  002850  0E00               	movlw	high _Comm_List
 11925  002852  6E04               	movwf	_Pcomm_List2+1,c
 11926                           
 11927                           ;terminal.c: 207: if (Pcomm_List2 != Pcomm_List)
 11928  002854  5001               	movf	_Pcomm_List,w,c
 11929  002856  1803               	xorwf	_Pcomm_List2,w,c
 11930  002858  E104               	bnz	u9230
 11931  00285A  5002               	movf	_Pcomm_List+1,w,c
 11932  00285C  1804               	xorwf	_Pcomm_List2+1,w,c
 11933  00285E  B4D8               	btfsc	status,2,c
 11934  002860  0012               	return	
 11935  002862                     u9230:
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;terminal.c: 208: {
 11939                           ;terminal.c: 209: SendMessage(Comm_List[0][0], Comm_List[0][1]);
 11940  002862  C091  F0D3         	movff	_Comm_List+2,SendMessage@value
 11941  002866  C092  F0D4         	movff	_Comm_List+3,SendMessage@value+1
 11942  00286A  0100               	movlb	0	; () banked
 11943  00286C  518F               	movf	_Comm_List& (0+255),w,b
 11944  00286E  EC97  F020         	call	_SendMessage
 11945                           
 11946                           ;terminal.c: 210: Pcomm_List2+=2;
 11947  002872  0E04               	movlw	4
 11948  002874  2603               	addwf	_Pcomm_List2,f,c
 11949  002876  0E00               	movlw	0
 11950  002878  2204               	addwfc	_Pcomm_List2+1,f,c
 11951                           
 11952                           ;terminal.c: 211: Diag_Comm2 = 2;
 11953  00287A  0E00               	movlw	0
 11954  00287C  0100               	movlb	0	; () banked
 11955  00287E  6F73               	movwf	(_Diag_Comm2+1)& (0+255),b
 11956  002880  0E02               	movlw	2
 11957  002882  6F72               	movwf	_Diag_Comm2& (0+255),b
 11958                           
 11959                           ; BSR set to: 0
 11960                           ;terminal.c: 212: }
 11961                           ;terminal.c: 213: break;
 11962  002884  0012               	return	
 11963  002886                     l9400:
 11964                           
 11965                           ; BSR set to: 0
 11966  002886  5001               	movf	_Pcomm_List,w,c
 11967  002888  1803               	xorwf	_Pcomm_List2,w,c
 11968  00288A  E104               	bnz	u9240
 11969  00288C  5002               	movf	_Pcomm_List+1,w,c
 11970  00288E  1804               	xorwf	_Pcomm_List2+1,w,c
 11971  002890  B4D8               	btfsc	status,2,c
 11972  002892  0012               	return	
 11973  002894                     u9240:
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;terminal.c: 216: {
 11977                           ;terminal.c: 217: SendMessage(Comm_List[1][0], Comm_List[1][1]);
 11978  002894  C095  F0D3         	movff	_Comm_List+6,SendMessage@value
 11979  002898  C096  F0D4         	movff	_Comm_List+7,SendMessage@value+1
 11980  00289C  0100               	movlb	0	; () banked
 11981  00289E  5193               	movf	(_Comm_List+4)& (0+255),w,b
 11982  0028A0  EC97  F020         	call	_SendMessage
 11983                           
 11984                           ;terminal.c: 218: Pcomm_List2+=2;
 11985  0028A4  0E04               	movlw	4
 11986  0028A6  2603               	addwf	_Pcomm_List2,f,c
 11987  0028A8  0E00               	movlw	0
 11988  0028AA  2204               	addwfc	_Pcomm_List2+1,f,c
 11989                           
 11990                           ;terminal.c: 219: Diag_Comm2 = 3;
 11991  0028AC  0E00               	movlw	0
 11992  0028AE  0100               	movlb	0	; () banked
 11993  0028B0  6F73               	movwf	(_Diag_Comm2+1)& (0+255),b
 11994  0028B2  0E03               	movlw	3
 11995  0028B4  6F72               	movwf	_Diag_Comm2& (0+255),b
 11996                           
 11997                           ; BSR set to: 0
 11998                           ;terminal.c: 220: }
 11999                           ;terminal.c: 221: break;
 12000  0028B6  0012               	return	
 12001  0028B8                     l9408:
 12002                           
 12003                           ; BSR set to: 0
 12004  0028B8  5001               	movf	_Pcomm_List,w,c
 12005  0028BA  1803               	xorwf	_Pcomm_List2,w,c
 12006  0028BC  E104               	bnz	u9250
 12007  0028BE  5002               	movf	_Pcomm_List+1,w,c
 12008  0028C0  1804               	xorwf	_Pcomm_List2+1,w,c
 12009  0028C2  B4D8               	btfsc	status,2,c
 12010  0028C4  0012               	return	
 12011  0028C6                     u9250:
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;terminal.c: 224: {
 12015                           ;terminal.c: 225: SendMessage(Comm_List[2][0], Comm_List[2][1]);
 12016  0028C6  C099  F0D3         	movff	_Comm_List+10,SendMessage@value
 12017  0028CA  C09A  F0D4         	movff	_Comm_List+11,SendMessage@value+1
 12018  0028CE  0100               	movlb	0	; () banked
 12019  0028D0  5197               	movf	(_Comm_List+8)& (0+255),w,b
 12020  0028D2  EC97  F020         	call	_SendMessage
 12021                           
 12022                           ;terminal.c: 226: Pcomm_List2+=2;
 12023  0028D6  0E04               	movlw	4
 12024  0028D8  2603               	addwf	_Pcomm_List2,f,c
 12025  0028DA  0E00               	movlw	0
 12026  0028DC  2204               	addwfc	_Pcomm_List2+1,f,c
 12027                           
 12028                           ;terminal.c: 227: Diag_Comm2 = 4;
 12029  0028DE  0E00               	movlw	0
 12030  0028E0  0100               	movlb	0	; () banked
 12031  0028E2  6F73               	movwf	(_Diag_Comm2+1)& (0+255),b
 12032  0028E4  0E04               	movlw	4
 12033  0028E6  6F72               	movwf	_Diag_Comm2& (0+255),b
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;terminal.c: 228: }
 12037                           ;terminal.c: 229: break;
 12038  0028E8  0012               	return	
 12039  0028EA                     l9416:
 12040                           
 12041                           ; BSR set to: 0
 12042  0028EA  5001               	movf	_Pcomm_List,w,c
 12043  0028EC  1803               	xorwf	_Pcomm_List2,w,c
 12044  0028EE  E104               	bnz	u9260
 12045  0028F0  5002               	movf	_Pcomm_List+1,w,c
 12046  0028F2  1804               	xorwf	_Pcomm_List2+1,w,c
 12047  0028F4  B4D8               	btfsc	status,2,c
 12048  0028F6  0012               	return	
 12049  0028F8                     u9260:
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;terminal.c: 232: {
 12053                           ;terminal.c: 233: SendMessage(Comm_List[3][0], Comm_List[3][1]);
 12054  0028F8  C09D  F0D3         	movff	_Comm_List+14,SendMessage@value
 12055  0028FC  C09E  F0D4         	movff	_Comm_List+15,SendMessage@value+1
 12056  002900  0100               	movlb	0	; () banked
 12057  002902  519B               	movf	(_Comm_List+12)& (0+255),w,b
 12058  002904  EC97  F020         	call	_SendMessage
 12059                           
 12060                           ;terminal.c: 234: Pcomm_List2+=2;
 12061  002908  0E04               	movlw	4
 12062  00290A  2603               	addwf	_Pcomm_List2,f,c
 12063  00290C  0E00               	movlw	0
 12064  00290E  2204               	addwfc	_Pcomm_List2+1,f,c
 12065                           
 12066                           ;terminal.c: 235: Diag_Comm2 = 5;
 12067  002910  0E00               	movlw	0
 12068  002912  0100               	movlb	0	; () banked
 12069  002914  6F73               	movwf	(_Diag_Comm2+1)& (0+255),b
 12070  002916  0E05               	movlw	5
 12071  002918  6F72               	movwf	_Diag_Comm2& (0+255),b
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;terminal.c: 236: }
 12075                           ;terminal.c: 237: break;
 12076  00291A  0012               	return	
 12077  00291C                     l9424:
 12078                           
 12079                           ; BSR set to: 0
 12080  00291C  5001               	movf	_Pcomm_List,w,c
 12081  00291E  1803               	xorwf	_Pcomm_List2,w,c
 12082  002920  E104               	bnz	u9270
 12083  002922  5002               	movf	_Pcomm_List+1,w,c
 12084  002924  1804               	xorwf	_Pcomm_List2+1,w,c
 12085  002926  B4D8               	btfsc	status,2,c
 12086  002928  0012               	return	
 12087  00292A                     u9270:
 12088                           
 12089                           ; BSR set to: 0
 12090                           ;terminal.c: 240: {
 12091                           ;terminal.c: 241: SendMessage(Comm_List[4][0], Comm_List[4][1]);
 12092  00292A  C0A1  F0D3         	movff	_Comm_List+18,SendMessage@value
 12093  00292E  C0A2  F0D4         	movff	_Comm_List+19,SendMessage@value+1
 12094  002932  0100               	movlb	0	; () banked
 12095  002934  519F               	movf	(_Comm_List+16)& (0+255),w,b
 12096  002936  EC97  F020         	call	_SendMessage
 12097                           
 12098                           ;terminal.c: 242: Pcomm_List2+=2;
 12099  00293A  0E04               	movlw	4
 12100  00293C  2603               	addwf	_Pcomm_List2,f,c
 12101  00293E  0E00               	movlw	0
 12102  002940  2204               	addwfc	_Pcomm_List2+1,f,c
 12103                           
 12104                           ;terminal.c: 243: Diag_Comm2 = 6;
 12105  002942  0E00               	movlw	0
 12106  002944  0100               	movlb	0	; () banked
 12107  002946  6F73               	movwf	(_Diag_Comm2+1)& (0+255),b
 12108  002948  0E06               	movlw	6
 12109  00294A  6F72               	movwf	_Diag_Comm2& (0+255),b
 12110                           
 12111                           ; BSR set to: 0
 12112                           ;terminal.c: 244: }
 12113                           ;terminal.c: 245: break;
 12114  00294C  0012               	return	
 12115  00294E                     l9432:
 12116                           
 12117                           ; BSR set to: 0
 12118  00294E  5001               	movf	_Pcomm_List,w,c
 12119  002950  1803               	xorwf	_Pcomm_List2,w,c
 12120  002952  E104               	bnz	u9280
 12121  002954  5002               	movf	_Pcomm_List+1,w,c
 12122  002956  1804               	xorwf	_Pcomm_List2+1,w,c
 12123  002958  B4D8               	btfsc	status,2,c
 12124  00295A  0012               	return	
 12125  00295C                     u9280:
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;terminal.c: 248: {
 12129                           ;terminal.c: 249: SendMessage(Comm_List[5][0], Comm_List[5][1]);
 12130  00295C  C0A5  F0D3         	movff	_Comm_List+22,SendMessage@value
 12131  002960  C0A6  F0D4         	movff	_Comm_List+23,SendMessage@value+1
 12132  002964  0100               	movlb	0	; () banked
 12133  002966  51A3               	movf	(_Comm_List+20)& (0+255),w,b
 12134  002968  EC97  F020         	call	_SendMessage
 12135                           
 12136                           ;terminal.c: 250: Pcomm_List2+=2;
 12137  00296C  0E04               	movlw	4
 12138  00296E  2603               	addwf	_Pcomm_List2,f,c
 12139  002970  0E00               	movlw	0
 12140  002972  2204               	addwfc	_Pcomm_List2+1,f,c
 12141                           
 12142                           ;terminal.c: 251: Diag_Comm2 = 7;
 12143  002974  0E00               	movlw	0
 12144  002976  0100               	movlb	0	; () banked
 12145  002978  6F73               	movwf	(_Diag_Comm2+1)& (0+255),b
 12146  00297A  0E07               	movlw	7
 12147  00297C  6F72               	movwf	_Diag_Comm2& (0+255),b
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;terminal.c: 252: }
 12151                           ;terminal.c: 253: break;
 12152  00297E  0012               	return	
 12153  002980                     l9440:
 12154                           
 12155                           ; BSR set to: 0
 12156  002980  5001               	movf	_Pcomm_List,w,c
 12157  002982  1803               	xorwf	_Pcomm_List2,w,c
 12158  002984  E104               	bnz	u9290
 12159  002986  5002               	movf	_Pcomm_List+1,w,c
 12160  002988  1804               	xorwf	_Pcomm_List2+1,w,c
 12161  00298A  B4D8               	btfsc	status,2,c
 12162  00298C  0012               	return	
 12163  00298E                     u9290:
 12164                           
 12165                           ; BSR set to: 0
 12166                           ;terminal.c: 256: {
 12167                           ;terminal.c: 257: SendMessage(Comm_List[6][0], Comm_List[6][1]);
 12168  00298E  C0A9  F0D3         	movff	_Comm_List+26,SendMessage@value
 12169  002992  C0AA  F0D4         	movff	_Comm_List+27,SendMessage@value+1
 12170  002996  0100               	movlb	0	; () banked
 12171  002998  51A7               	movf	(_Comm_List+24)& (0+255),w,b
 12172  00299A  EC97  F020         	call	_SendMessage
 12173                           
 12174                           ;terminal.c: 258: Pcomm_List2+=2;
 12175  00299E  0E04               	movlw	4
 12176  0029A0  2603               	addwf	_Pcomm_List2,f,c
 12177  0029A2  0E00               	movlw	0
 12178  0029A4  2204               	addwfc	_Pcomm_List2+1,f,c
 12179                           
 12180                           ;terminal.c: 259: Diag_Comm2 = 8;
 12181  0029A6  0E00               	movlw	0
 12182  0029A8  0100               	movlb	0	; () banked
 12183  0029AA  6F73               	movwf	(_Diag_Comm2+1)& (0+255),b
 12184  0029AC  0E08               	movlw	8
 12185  0029AE  6F72               	movwf	_Diag_Comm2& (0+255),b
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;terminal.c: 260: }
 12189                           ;terminal.c: 261: break;
 12190  0029B0  0012               	return	
 12191  0029B2                     l9448:
 12192                           
 12193                           ; BSR set to: 0
 12194  0029B2  5001               	movf	_Pcomm_List,w,c
 12195  0029B4  1803               	xorwf	_Pcomm_List2,w,c
 12196  0029B6  E104               	bnz	u9300
 12197  0029B8  5002               	movf	_Pcomm_List+1,w,c
 12198  0029BA  1804               	xorwf	_Pcomm_List2+1,w,c
 12199  0029BC  B4D8               	btfsc	status,2,c
 12200  0029BE  0012               	return	
 12201  0029C0                     u9300:
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;terminal.c: 265: {
 12205                           ;terminal.c: 266: SendMessage(Comm_List[7][0], Comm_List[7][1]);
 12206  0029C0  C0AD  F0D3         	movff	_Comm_List+30,SendMessage@value
 12207  0029C4  C0AE  F0D4         	movff	_Comm_List+31,SendMessage@value+1
 12208  0029C8  0100               	movlb	0	; () banked
 12209  0029CA  51AB               	movf	(_Comm_List+28)& (0+255),w,b
 12210  0029CC  EC97  F020         	call	_SendMessage
 12211                           
 12212                           ;terminal.c: 267: Pcomm_List2 = &Comm_List[0][0];
 12213  0029D0  0E8F               	movlw	low _Comm_List
 12214  0029D2  6E03               	movwf	_Pcomm_List2,c
 12215  0029D4  0E00               	movlw	high _Comm_List
 12216  0029D6  6E04               	movwf	_Pcomm_List2+1,c
 12217                           
 12218                           ;terminal.c: 268: Diag_Comm2 = 1;
 12219  0029D8  0E00               	movlw	0
 12220  0029DA  0100               	movlb	0	; () banked
 12221  0029DC  6F73               	movwf	(_Diag_Comm2+1)& (0+255),b
 12222  0029DE  0E01               	movlw	1
 12223  0029E0  6F72               	movwf	_Diag_Comm2& (0+255),b
 12224                           
 12225                           ; BSR set to: 0
 12226                           ;terminal.c: 273: }
 12227                           
 12228                           ; BSR set to: 0
 12229                           
 12230                           ;terminal.c: 272: default : break;
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;terminal.c: 269: }
 12234                           ;terminal.c: 270: break;
 12235  0029E2  0012               	return	
 12236  0029E4                     l9458:
 12237                           
 12238                           ; BSR set to: 0
 12239  0029E4  C072  F0D6         	movff	_Diag_Comm2,??_DIAGNOSTICxTOxPC
 12240  0029E8  C073  F0D7         	movff	_Diag_Comm2+1,??_DIAGNOSTICxTOxPC+1
 12241                           
 12242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12243                           ; Switch size 1, requested type "space"
 12244                           ; Number of cases is 1, Range of values is 0 to 0
 12245                           ; switch strategies available:
 12246                           ; Name         Instructions Cycles
 12247                           ; simple_byte            4     3 (average)
 12248                           ;	Chosen strategy is simple_byte
 12249  0029EC  0100               	movlb	0	; () banked
 12250  0029EE  51D7               	movf	(??_DIAGNOSTICxTOxPC+1)& (0+255),w,b
 12251  0029F0  0A00               	xorlw	0	; case 0
 12252  0029F2  A4D8               	btfss	status,2,c
 12253  0029F4  0012               	return	
 12254                           
 12255                           ; BSR set to: 0
 12256                           ; Switch size 1, requested type "space"
 12257                           ; Number of cases is 9, Range of values is 0 to 8
 12258                           ; switch strategies available:
 12259                           ; Name         Instructions Cycles
 12260                           ; simple_byte           28    15 (average)
 12261                           ;	Chosen strategy is simple_byte
 12262  0029F6  0100               	movlb	0	; () banked
 12263  0029F8  51D6               	movf	??_DIAGNOSTICxTOxPC& (0+255),w,b
 12264  0029FA  0A00               	xorlw	0	; case 0
 12265  0029FC  B4D8               	btfsc	status,2,c
 12266  0029FE  D718               	goto	l9388
 12267  002A00  0A01               	xorlw	1	; case 1
 12268  002A02  B4D8               	btfsc	status,2,c
 12269  002A04  D723               	goto	l9392
 12270  002A06  0A03               	xorlw	3	; case 2
 12271  002A08  B4D8               	btfsc	status,2,c
 12272  002A0A  D73D               	goto	l9400
 12273  002A0C  0A01               	xorlw	1	; case 3
 12274  002A0E  B4D8               	btfsc	status,2,c
 12275  002A10  D753               	goto	l9408
 12276  002A12  0A07               	xorlw	7	; case 4
 12277  002A14  B4D8               	btfsc	status,2,c
 12278  002A16  D769               	goto	l9416
 12279  002A18  0A01               	xorlw	1	; case 5
 12280  002A1A  B4D8               	btfsc	status,2,c
 12281  002A1C  D77F               	goto	l9424
 12282  002A1E  0A03               	xorlw	3	; case 6
 12283  002A20  B4D8               	btfsc	status,2,c
 12284  002A22  D795               	goto	l9432
 12285  002A24  0A01               	xorlw	1	; case 7
 12286  002A26  B4D8               	btfsc	status,2,c
 12287  002A28  D7AB               	goto	l9440
 12288  002A2A  0A0F               	xorlw	15	; case 8
 12289  002A2C  A4D8               	btfss	status,2,c
 12290                           
 12291                           ; BSR set to: 0
 12292                           ;terminal.c: 274: }
 12293  002A2E  0012               	return	
 12294  002A30  D7C0               	goto	l9448
 12295  002A32                     l9460:
 12296                           
 12297                           ; BSR set to: 0
 12298                           ;terminal.c: 275: else{
 12299                           ;terminal.c: 276: DelayCounter++;
 12300  002A32  0100               	movlb	0	; () banked
 12301  002A34  4B6E               	infsnz	_DelayCounter& (0+255),f,b
 12302  002A36  2B6F               	incf	(_DelayCounter+1)& (0+255),f,b
 12303  002A38  0012               	return	
 12304  002A3A                     __end_of_DIAGNOSTICxTOxPC:
 12305                           	opt stack 0
 12306                           tblptru	equ	0xFF8
 12307                           tblptrh	equ	0xFF7
 12308                           tblptrl	equ	0xFF6
 12309                           tablat	equ	0xFF5
 12310                           prodh	equ	0xFF4
 12311                           prodl	equ	0xFF3
 12312                           intcon	equ	0xFF2
 12313                           intcon2	equ	0xFF1
 12314                           postinc0	equ	0xFEE
 12315                           wreg	equ	0xFE8
 12316                           postdec1	equ	0xFE5
 12317                           fsr1l	equ	0xFE1
 12318                           indf2	equ	0xFDF
 12319                           postinc2	equ	0xFDE
 12320                           postdec2	equ	0xFDD
 12321                           fsr2h	equ	0xFDA
 12322                           fsr2l	equ	0xFD9
 12323                           status	equ	0xFD8
 12324                           
 12325 ;; *************** function _SendMessage *****************
 12326 ;; Defined at:
 12327 ;;		line 185 in file "../terminal.c"
 12328 ;; Parameters:    Size  Location     Type
 12329 ;;  index           1    wreg     unsigned char 
 12330 ;;  value           2   26[BANK0 ] unsigned int 
 12331 ;; Auto vars:     Size  Location     Type
 12332 ;;  index           1   28[BANK0 ] unsigned char 
 12333 ;; Return value:  Size  Location     Type
 12334 ;;                  1    wreg      void 
 12335 ;; Registers used:
 12336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12337 ;; Tracked objects:
 12338 ;;		On entry : 0/0
 12339 ;;		On exit  : 0/0
 12340 ;;		Unchanged: 0/0
 12341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12342 ;;      Params:         0       2       0       0       0       0       0       0       0
 12343 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12344 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12345 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12346 ;;Total ram usage:        3 bytes
 12347 ;; Hardware stack levels used:    1
 12348 ;; Hardware stack levels required when called:    5
 12349 ;; This function calls:
 12350 ;;		_printf
 12351 ;; This function is called by:
 12352 ;;		_DIAGNOSTICxTOxPC
 12353 ;; This function uses a non-reentrant model
 12354 ;;
 12355                           
 12356                           	psect	text33
 12357  00412E                     __ptext33:
 12358                           	opt stack 0
 12359  00412E                     _SendMessage:
 12360                           	opt stack 24
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;incstack = 0
 12364                           ;SendMessage@index stored from wreg
 12365  00412E  0100               	movlb	0	; () banked
 12366  004130  6FD5               	movwf	SendMessage@index& (0+255),b
 12367                           
 12368                           ;terminal.c: 191: printf("M#%d %d\r\n", index, value);
 12369  004132  0E0C               	movlw	low STR_8
 12370  004134  0100               	movlb	0	; () banked
 12371  004136  6FC5               	movwf	printf@f& (0+255),b
 12372  004138  0E08               	movlw	high STR_8
 12373  00413A  0100               	movlb	0	; () banked
 12374  00413C  6FC6               	movwf	(printf@f+1)& (0+255),b
 12375  00413E  C0D5  F0C7         	movff	SendMessage@index,?_printf+2
 12376  004142  0100               	movlb	0	; () banked
 12377  004144  6BC8               	clrf	(?_printf+3)& (0+255),b
 12378  004146  C0D3  F0C9         	movff	SendMessage@value,?_printf+4
 12379  00414A  C0D4  F0CA         	movff	SendMessage@value+1,?_printf+5
 12380  00414E  ECB1  F016         	call	_printf	;wreg free
 12381  004152  0012               	return		;funcret
 12382  004154                     __end_of_SendMessage:
 12383                           	opt stack 0
 12384                           tblptru	equ	0xFF8
 12385                           tblptrh	equ	0xFF7
 12386                           tblptrl	equ	0xFF6
 12387                           tablat	equ	0xFF5
 12388                           prodh	equ	0xFF4
 12389                           prodl	equ	0xFF3
 12390                           intcon	equ	0xFF2
 12391                           intcon2	equ	0xFF1
 12392                           postinc0	equ	0xFEE
 12393                           wreg	equ	0xFE8
 12394                           postdec1	equ	0xFE5
 12395                           fsr1l	equ	0xFE1
 12396                           indf2	equ	0xFDF
 12397                           postinc2	equ	0xFDE
 12398                           postdec2	equ	0xFDD
 12399                           fsr2h	equ	0xFDA
 12400                           fsr2l	equ	0xFD9
 12401                           status	equ	0xFD8
 12402                           
 12403 ;; *************** function _printf *****************
 12404 ;; Defined at:
 12405 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 12406 ;; Parameters:    Size  Location     Type
 12407 ;;  f               2   12[BANK0 ] PTR const unsigned char 
 12408 ;;		 -> STR_8(10), STR_7(7), STR_6(7), STR_5(7), 
 12409 ;;		 -> STR_4(7), STR_3(7), STR_2(7), STR_1(7), 
 12410 ;; Auto vars:     Size  Location     Type
 12411 ;;  tmpval          4    0        struct .
 12412 ;;  cp              3    0        PTR const unsigned char 
 12413 ;;  val             2   23[BANK0 ] unsigned int 
 12414 ;;  ap              2   19[BANK0 ] PTR void [1]
 12415 ;;		 -> ?_printf(2), 
 12416 ;;  len             2    0        unsigned int 
 12417 ;;  c               1   25[BANK0 ] char 
 12418 ;;  prec            1   22[BANK0 ] char 
 12419 ;;  flag            1   21[BANK0 ] unsigned char 
 12420 ;; Return value:  Size  Location     Type
 12421 ;;                  2   12[BANK0 ] int 
 12422 ;; Registers used:
 12423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12424 ;; Tracked objects:
 12425 ;;		On entry : 0/0
 12426 ;;		On exit  : 0/0
 12427 ;;		Unchanged: 0/0
 12428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12429 ;;      Params:         0       6       0       0       0       0       0       0       0
 12430 ;;      Locals:         0       7       0       0       0       0       0       0       0
 12431 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12432 ;;      Totals:         0      14       0       0       0       0       0       0       0
 12433 ;;Total ram usage:       14 bytes
 12434 ;; Hardware stack levels used:    1
 12435 ;; Hardware stack levels required when called:    4
 12436 ;; This function calls:
 12437 ;;		___lwdiv
 12438 ;;		___lwmod
 12439 ;;		_putch
 12440 ;; This function is called by:
 12441 ;;		_READxRECEIVEDxMESSAGE
 12442 ;;		_TranslateMessage
 12443 ;;		_SendMessage
 12444 ;; This function uses a non-reentrant model
 12445 ;;
 12446                           
 12447                           	psect	text34
 12448  002D62                     __ptext34:
 12449                           	opt stack 0
 12450  002D62                     _printf:
 12451                           	opt stack 25
 12452                           
 12453                           ;doprnt.c: 466: va_list ap;
 12454                           ;doprnt.c: 499: signed char c;
 12455                           ;doprnt.c: 506: signed char prec;
 12456                           ;doprnt.c: 508: unsigned char flag;
 12457                           ;doprnt.c: 523: union {
 12458                           ;doprnt.c: 524: unsigned long vd;
 12459                           ;doprnt.c: 525: double integ;
 12460                           ;doprnt.c: 526: } tmpval;
 12461                           ;doprnt.c: 528: unsigned int val;
 12462                           ;doprnt.c: 529: unsigned len;
 12463                           ;doprnt.c: 530: const char * cp;
 12464                           ;doprnt.c: 533: *ap = __va_start();
 12465                           
 12466                           ;incstack = 0
 12467  002D62  0EC7               	movlw	low (?_printf+2)
 12468  002D64  0100               	movlb	0	; () banked
 12469  002D66  6FCC               	movwf	printf@ap& (0+255),b
 12470  002D68  0E00               	movlw	high (?_printf+2)
 12471  002D6A  0100               	movlb	0	; () banked
 12472  002D6C  6FCD               	movwf	(printf@ap+1)& (0+255),b
 12473                           
 12474                           ;doprnt.c: 536: while(c = *f++) {
 12475  002D6E  D094               	goto	l7978
 12476  002D70                     l7932:
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;doprnt.c: 538: if(c != '%')
 12480  002D70  0E25               	movlw	37
 12481  002D72  0100               	movlb	0	; () banked
 12482  002D74  19D2               	xorwf	printf@c& (0+255),w,b
 12483  002D76  B4D8               	btfsc	status,2,c
 12484  002D78  D005               	goto	l7936
 12485                           
 12486                           ; BSR set to: 0
 12487                           ;doprnt.c: 540: {
 12488                           ;doprnt.c: 541: (putch(c) );
 12489  002D7A  0100               	movlb	0	; () banked
 12490  002D7C  51D2               	movf	printf@c& (0+255),w,b
 12491  002D7E  ECE8  F020         	call	_putch
 12492                           
 12493                           ;doprnt.c: 542: continue;
 12494  002D82  D08A               	goto	l7978
 12495  002D84                     l7936:
 12496                           
 12497                           ;doprnt.c: 543: }
 12498                           ;doprnt.c: 548: flag = 0;
 12499  002D84  0E00               	movlw	0
 12500  002D86  0100               	movlb	0	; () banked
 12501  002D88  6FCE               	movwf	printf@flag& (0+255),b
 12502                           
 12503                           ; BSR set to: 0
 12504                           
 12505                           ; BSR set to: 0
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;doprnt.c: 822: }
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;doprnt.c: 813: continue;
 12512                           
 12513                           ;doprnt.c: 802: default:
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;doprnt.c: 698: case 'i':
 12517                           ;doprnt.c: 699: break;
 12518                           
 12519                           ; BSR set to: 0
 12520                           
 12521                           ;doprnt.c: 697: case 'd':
 12522                           
 12523                           ; BSR set to: 0
 12524                           ;doprnt.c: 638: goto alldone;
 12525                           
 12526                           ;doprnt.c: 637: case 0:
 12527                           
 12528                           ;doprnt.c: 635: switch(c = *f++) {
 12529  002D8A  C0C5  FFF6         	movff	printf@f,tblptrl
 12530  002D8E  C0C6  FFF7         	movff	printf@f+1,tblptrh
 12531  002D92  0100               	movlb	0	; () banked
 12532  002D94  4BC5               	infsnz	printf@f& (0+255),f,b
 12533  002D96  2BC6               	incf	(printf@f+1)& (0+255),f,b
 12534  002D98                     	if	0	;tblptru may be non-zero
 12535  002D98                     	endif
 12536  002D98                     	if	0	;tblptru may be non-zero
 12537  002D98                     	endif
 12538  002D98  0008               	tblrd		*
 12539  002D9A  CFF5 F0D2          	movff	tablat,printf@c
 12540  002D9E  0100               	movlb	0	; () banked
 12541  002DA0  51D2               	movf	printf@c& (0+255),w,b
 12542                           
 12543                           ; Switch size 1, requested type "space"
 12544                           ; Number of cases is 3, Range of values is 0 to 105
 12545                           ; switch strategies available:
 12546                           ; Name         Instructions Cycles
 12547                           ; simple_byte           10     6 (average)
 12548                           ;	Chosen strategy is simple_byte
 12549  002DA2  0A00               	xorlw	0	; case 0
 12550  002DA4  B4D8               	btfsc	status,2,c
 12551  002DA6  0012               	return	
 12552  002DA8  0A64               	xorlw	100	; case 100
 12553  002DAA  B4D8               	btfsc	status,2,c
 12554  002DAC  D003               	goto	l7942
 12555  002DAE  0A0D               	xorlw	13	; case 105
 12556  002DB0  A4D8               	btfss	status,2,c
 12557  002DB2  D072               	goto	l7978
 12558  002DB4                     l7942:
 12559                           
 12560                           ; BSR set to: 0
 12561                           ;doprnt.c: 1253: {
 12562                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 12563  002DB4  C0CC  FFD9         	movff	printf@ap,fsr2l
 12564  002DB8  C0CD  FFDA         	movff	printf@ap+1,fsr2h
 12565  002DBC  CFDE F0D0          	movff	postinc2,printf@val
 12566  002DC0  CFDD F0D1          	movff	postdec2,printf@val+1
 12567                           
 12568                           ; BSR set to: 0
 12569  002DC4  0E02               	movlw	2
 12570  002DC6  0100               	movlb	0	; () banked
 12571  002DC8  27CC               	addwf	printf@ap& (0+255),f,b
 12572  002DCA  0E00               	movlw	0
 12573  002DCC  23CD               	addwfc	(printf@ap+1)& (0+255),f,b
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;doprnt.c: 1261: if((int)val < 0) {
 12577  002DCE  0100               	movlb	0	; () banked
 12578  002DD0  AFD1               	btfss	(printf@val+1)& (0+255),7,b
 12579  002DD2  D008               	goto	l7952
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;doprnt.c: 1262: flag |= 0x03;
 12583  002DD4  0E03               	movlw	3
 12584  002DD6  0100               	movlb	0	; () banked
 12585  002DD8  13CE               	iorwf	printf@flag& (0+255),f,b
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;doprnt.c: 1263: val = -val;
 12589  002DDA  0100               	movlb	0	; () banked
 12590  002DDC  6DD0               	negf	printf@val& (0+255),b
 12591  002DDE  1FD1               	comf	(printf@val+1)& (0+255),f,b
 12592  002DE0  B0D8               	btfsc	status,0,c
 12593  002DE2  2BD1               	incf	(printf@val+1)& (0+255),f,b
 12594  002DE4                     l7952:
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;doprnt.c: 1264: }
 12598                           ;doprnt.c: 1266: }
 12599                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12600  002DE4  0E01               	movlw	1
 12601  002DE6  0100               	movlb	0	; () banked
 12602  002DE8  6FD2               	movwf	printf@c& (0+255),b
 12603  002DEA                     l7954:
 12604                           
 12605                           ; BSR set to: 0
 12606  002DEA  0E05               	movlw	5
 12607  002DEC  0100               	movlb	0	; () banked
 12608  002DEE  19D2               	xorwf	printf@c& (0+255),w,b
 12609  002DF0  B4D8               	btfsc	status,2,c
 12610  002DF2  D016               	goto	l7966
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;doprnt.c: 1306: if(val < dpowers[c])
 12614                           
 12615                           ; BSR set to: 0
 12616                           
 12617                           ; BSR set to: 0
 12618  002DF4  0100               	movlb	0	; () banked
 12619  002DF6  51D2               	movf	printf@c& (0+255),w,b
 12620  002DF8  0D02               	mullw	2
 12621  002DFA  0E01               	movlw	low _dpowers
 12622  002DFC  24F3               	addwf	prodl,w,c
 12623  002DFE  6EF6               	movwf	tblptrl,c
 12624  002E00  0E08               	movlw	high _dpowers
 12625  002E02  20F4               	addwfc	prodh,w,c
 12626  002E04  6EF7               	movwf	tblptrh,c
 12627  002E06                     	if	0	;There are less than 3 active tblptr bytes
 12628  002E06                     	endif
 12629  002E06  0009               	tblrd		*+
 12630  002E08  50F5               	movf	tablat,w,c
 12631  002E0A  0100               	movlb	0	; () banked
 12632  002E0C  5DD0               	subwf	printf@val& (0+255),w,b
 12633  002E0E  0009               	tblrd		*+
 12634  002E10  50F5               	movf	tablat,w,c
 12635  002E12  0100               	movlb	0	; () banked
 12636  002E14  59D1               	subwfb	(printf@val+1)& (0+255),w,b
 12637  002E16  A0D8               	btfss	status,0,c
 12638  002E18  D003               	goto	l7966
 12639                           
 12640                           ; BSR set to: 0
 12641                           
 12642                           ; BSR set to: 0
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;doprnt.c: 1307: break;
 12646  002E1A  0100               	movlb	0	; () banked
 12647  002E1C  2BD2               	incf	printf@c& (0+255),f,b
 12648  002E1E  D7E5               	goto	l7954
 12649  002E20                     l7966:
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;doprnt.c: 1422: {
 12653                           ;doprnt.c: 1438: if(flag & 0x03)
 12654  002E20  C0CE  F0CB         	movff	printf@flag,??_printf
 12655  002E24  0E03               	movlw	3
 12656  002E26  0100               	movlb	0	; () banked
 12657  002E28  17CB               	andwf	??_printf& (0+255),f,b
 12658  002E2A  B4D8               	btfsc	status,2,c
 12659  002E2C  D003               	goto	l7970
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;doprnt.c: 1439: (putch('-') );
 12663  002E2E  0E2D               	movlw	45
 12664  002E30  ECE8  F020         	call	_putch
 12665  002E34                     l7970:
 12666                           
 12667                           ;doprnt.c: 1469: }
 12668                           ;doprnt.c: 1472: prec = c;
 12669  002E34  C0D2  F0CF         	movff	printf@c,printf@prec
 12670                           
 12671                           ;doprnt.c: 1474: while(prec--) {
 12672  002E38  D029               	goto	l7976
 12673  002E3A                     l7972:
 12674                           
 12675                           ;doprnt.c: 1478: {
 12676                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 12677  002E3A  0100               	movlb	0	; () banked
 12678  002E3C  51CF               	movf	printf@prec& (0+255),w,b
 12679  002E3E  0D02               	mullw	2
 12680  002E40  0E01               	movlw	low _dpowers
 12681  002E42  24F3               	addwf	prodl,w,c
 12682  002E44  6EF6               	movwf	tblptrl,c
 12683  002E46  0E08               	movlw	high _dpowers
 12684  002E48  20F4               	addwfc	prodh,w,c
 12685  002E4A  6EF7               	movwf	tblptrh,c
 12686  002E4C                     	if	0	;There are less than 3 active tblptr bytes
 12687  002E4C                     	endif
 12688  002E4C  0009               	tblrd		*+
 12689  002E4E  CFF5 F0BB          	movff	tablat,___lwdiv@divisor
 12690  002E52  000A               	tblrd		*-
 12691  002E54  CFF5 F0BC          	movff	tablat,___lwdiv@divisor+1
 12692  002E58  C0D0  F0B9         	movff	printf@val,___lwdiv@dividend
 12693  002E5C  C0D1  F0BA         	movff	printf@val+1,___lwdiv@dividend+1
 12694  002E60  EC1C  F01F         	call	___lwdiv	;wreg free
 12695  002E64  C0B9  F0C0         	movff	?___lwdiv,___lwmod@dividend
 12696  002E68  C0BA  F0C1         	movff	?___lwdiv+1,___lwmod@dividend+1
 12697  002E6C  0E00               	movlw	0
 12698  002E6E  0100               	movlb	0	; () banked
 12699  002E70  6FC3               	movwf	(___lwmod@divisor+1)& (0+255),b
 12700  002E72  0E0A               	movlw	10
 12701  002E74  6FC2               	movwf	___lwmod@divisor& (0+255),b
 12702  002E76  EC58  F01F         	call	___lwmod	;wreg free
 12703  002E7A  0100               	movlb	0	; () banked
 12704  002E7C  51C0               	movf	?___lwmod& (0+255),w,b
 12705  002E7E  0F30               	addlw	48
 12706  002E80  0100               	movlb	0	; () banked
 12707  002E82  6FD2               	movwf	printf@c& (0+255),b
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;doprnt.c: 1523: }
 12711                           ;doprnt.c: 1524: (putch(c) );
 12712  002E84  0100               	movlb	0	; () banked
 12713  002E86  51D2               	movf	printf@c& (0+255),w,b
 12714  002E88  ECE8  F020         	call	_putch
 12715  002E8C                     l7976:
 12716  002E8C  0100               	movlb	0	; () banked
 12717  002E8E  07CF               	decf	printf@prec& (0+255),f,b
 12718  002E90  0100               	movlb	0	; () banked
 12719  002E92  29CF               	incf	printf@prec& (0+255),w,b
 12720  002E94  A4D8               	btfss	status,2,c
 12721  002E96  D7D1               	goto	l7972
 12722  002E98                     l7978:
 12723  002E98  C0C5  FFF6         	movff	printf@f,tblptrl
 12724  002E9C  C0C6  FFF7         	movff	printf@f+1,tblptrh
 12725  002EA0  0100               	movlb	0	; () banked
 12726  002EA2  4BC5               	infsnz	printf@f& (0+255),f,b
 12727  002EA4  2BC6               	incf	(printf@f+1)& (0+255),f,b
 12728  002EA6                     	if	0	;tblptru may be non-zero
 12729  002EA6                     	endif
 12730  002EA6                     	if	0	;tblptru may be non-zero
 12731  002EA6                     	endif
 12732  002EA6  0008               	tblrd		*
 12733  002EA8  CFF5 F0D2          	movff	tablat,printf@c
 12734  002EAC  0100               	movlb	0	; () banked
 12735  002EAE  51D2               	movf	printf@c& (0+255),w,b
 12736  002EB0  B4D8               	btfsc	status,2,c
 12737  002EB2  0012               	return	
 12738  002EB4  D75D               	goto	l7932
 12739  002EB6                     __end_of_printf:
 12740                           	opt stack 0
 12741                           tblptru	equ	0xFF8
 12742                           tblptrh	equ	0xFF7
 12743                           tblptrl	equ	0xFF6
 12744                           tablat	equ	0xFF5
 12745                           prodh	equ	0xFF4
 12746                           prodl	equ	0xFF3
 12747                           intcon	equ	0xFF2
 12748                           intcon2	equ	0xFF1
 12749                           postinc0	equ	0xFEE
 12750                           wreg	equ	0xFE8
 12751                           postdec1	equ	0xFE5
 12752                           fsr1l	equ	0xFE1
 12753                           indf2	equ	0xFDF
 12754                           postinc2	equ	0xFDE
 12755                           postdec2	equ	0xFDD
 12756                           fsr2h	equ	0xFDA
 12757                           fsr2l	equ	0xFD9
 12758                           status	equ	0xFD8
 12759                           
 12760 ;; *************** function _putch *****************
 12761 ;; Defined at:
 12762 ;;		line 177 in file "../eusart1.c"
 12763 ;; Parameters:    Size  Location     Type
 12764 ;;  data            1    wreg     unsigned char 
 12765 ;; Auto vars:     Size  Location     Type
 12766 ;;  data            1    0[BANK0 ] unsigned char 
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  1    wreg      void 
 12769 ;; Registers used:
 12770 ;;		wreg
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/0
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12776 ;;      Params:         0       0       0       0       0       0       0       0       0
 12777 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12778 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12779 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12780 ;;Total ram usage:        1 bytes
 12781 ;; Hardware stack levels used:    1
 12782 ;; Hardware stack levels required when called:    3
 12783 ;; This function calls:
 12784 ;;		Nothing
 12785 ;; This function is called by:
 12786 ;;		_printf
 12787 ;; This function uses a non-reentrant model
 12788 ;;
 12789                           
 12790                           	psect	text35
 12791  0041D0                     __ptext35:
 12792                           	opt stack 0
 12793  0041D0                     _putch:
 12794                           	opt stack 25
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;incstack = 0
 12798                           ;putch@data stored from wreg
 12799  0041D0  0100               	movlb	0	; () banked
 12800  0041D2  6FB9               	movwf	putch@data& (0+255),b
 12801  0041D4                     l522:
 12802  0041D4  A89E               	btfss	3998,4,c	;volatile
 12803  0041D6  D7FE               	goto	l522
 12804                           
 12805                           ;eusart1.c: 180: TXREG1 = data;
 12806  0041D8  C0B9  FFAD         	movff	putch@data,4013	;volatile
 12807  0041DC  0012               	return		;funcret
 12808  0041DE                     __end_of_putch:
 12809                           	opt stack 0
 12810                           tblptru	equ	0xFF8
 12811                           tblptrh	equ	0xFF7
 12812                           tblptrl	equ	0xFF6
 12813                           tablat	equ	0xFF5
 12814                           prodh	equ	0xFF4
 12815                           prodl	equ	0xFF3
 12816                           intcon	equ	0xFF2
 12817                           intcon2	equ	0xFF1
 12818                           postinc0	equ	0xFEE
 12819                           wreg	equ	0xFE8
 12820                           postdec1	equ	0xFE5
 12821                           fsr1l	equ	0xFE1
 12822                           indf2	equ	0xFDF
 12823                           postinc2	equ	0xFDE
 12824                           postdec2	equ	0xFDD
 12825                           fsr2h	equ	0xFDA
 12826                           fsr2l	equ	0xFD9
 12827                           status	equ	0xFD8
 12828                           
 12829 ;; *************** function ___lwmod *****************
 12830 ;; Defined at:
 12831 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 12832 ;; Parameters:    Size  Location     Type
 12833 ;;  dividend        2    7[BANK0 ] unsigned int 
 12834 ;;  divisor         2    9[BANK0 ] unsigned int 
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;  counter         1   11[BANK0 ] unsigned char 
 12837 ;; Return value:  Size  Location     Type
 12838 ;;                  2    7[BANK0 ] unsigned int 
 12839 ;; Registers used:
 12840 ;;		wreg, status,2, status,0
 12841 ;; Tracked objects:
 12842 ;;		On entry : 0/0
 12843 ;;		On exit  : 0/0
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12846 ;;      Params:         0       4       0       0       0       0       0       0       0
 12847 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12848 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12849 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12850 ;;Total ram usage:        5 bytes
 12851 ;; Hardware stack levels used:    1
 12852 ;; Hardware stack levels required when called:    3
 12853 ;; This function calls:
 12854 ;;		Nothing
 12855 ;; This function is called by:
 12856 ;;		_printf
 12857 ;; This function uses a non-reentrant model
 12858 ;;
 12859                           
 12860                           	psect	text36
 12861  003EB0                     __ptext36:
 12862                           	opt stack 0
 12863  003EB0                     ___lwmod:
 12864                           	opt stack 25
 12865                           
 12866                           ;incstack = 0
 12867  003EB0  0100               	movlb	0	; () banked
 12868  003EB2  51C2               	movf	___lwmod@divisor& (0+255),w,b
 12869  003EB4  0100               	movlb	0	; () banked
 12870  003EB6  11C3               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 12871  003EB8  B4D8               	btfsc	status,2,c
 12872  003EBA  D026               	goto	l1683
 12873                           
 12874                           ; BSR set to: 0
 12875  003EBC  0E01               	movlw	1
 12876  003EBE  0100               	movlb	0	; () banked
 12877  003EC0  6FC4               	movwf	___lwmod@counter& (0+255),b
 12878  003EC2  D006               	goto	l7440
 12879  003EC4                     l7438:
 12880                           
 12881                           ; BSR set to: 0
 12882  003EC4  0100               	movlb	0	; () banked
 12883  003EC6  90D8               	bcf	status,0,c
 12884  003EC8  37C2               	rlcf	___lwmod@divisor& (0+255),f,b
 12885  003ECA  37C3               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 12886  003ECC  0100               	movlb	0	; () banked
 12887  003ECE  2BC4               	incf	___lwmod@counter& (0+255),f,b
 12888  003ED0                     l7440:
 12889                           
 12890                           ; BSR set to: 0
 12891  003ED0  0100               	movlb	0	; () banked
 12892  003ED2  AFC3               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 12893  003ED4  D7F7               	goto	l7438
 12894  003ED6                     l7442:
 12895                           
 12896                           ; BSR set to: 0
 12897  003ED6  0100               	movlb	0	; () banked
 12898  003ED8  51C2               	movf	___lwmod@divisor& (0+255),w,b
 12899  003EDA  0100               	movlb	0	; () banked
 12900  003EDC  5DC0               	subwf	___lwmod@dividend& (0+255),w,b
 12901  003EDE  0100               	movlb	0	; () banked
 12902  003EE0  51C3               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12903  003EE2  0100               	movlb	0	; () banked
 12904  003EE4  59C1               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 12905  003EE6  A0D8               	btfss	status,0,c
 12906  003EE8  D008               	goto	l7446
 12907                           
 12908                           ; BSR set to: 0
 12909  003EEA  0100               	movlb	0	; () banked
 12910  003EEC  51C2               	movf	___lwmod@divisor& (0+255),w,b
 12911  003EEE  0100               	movlb	0	; () banked
 12912  003EF0  5FC0               	subwf	___lwmod@dividend& (0+255),f,b
 12913  003EF2  0100               	movlb	0	; () banked
 12914  003EF4  51C3               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12915  003EF6  0100               	movlb	0	; () banked
 12916  003EF8  5BC1               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 12917  003EFA                     l7446:
 12918                           
 12919                           ; BSR set to: 0
 12920  003EFA  0100               	movlb	0	; () banked
 12921  003EFC  90D8               	bcf	status,0,c
 12922  003EFE  33C3               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 12923  003F00  33C2               	rrcf	___lwmod@divisor& (0+255),f,b
 12924                           
 12925                           ; BSR set to: 0
 12926  003F02  0100               	movlb	0	; () banked
 12927  003F04  2FC4               	decfsz	___lwmod@counter& (0+255),f,b
 12928  003F06  D7E7               	goto	l7442
 12929  003F08                     l1683:
 12930                           
 12931                           ; BSR set to: 0
 12932  003F08  C0C0  F0C0         	movff	___lwmod@dividend,?___lwmod
 12933  003F0C  C0C1  F0C1         	movff	___lwmod@dividend+1,?___lwmod+1
 12934                           
 12935                           ; BSR set to: 0
 12936  003F10  0012               	return		;funcret
 12937  003F12                     __end_of___lwmod:
 12938                           	opt stack 0
 12939                           tblptru	equ	0xFF8
 12940                           tblptrh	equ	0xFF7
 12941                           tblptrl	equ	0xFF6
 12942                           tablat	equ	0xFF5
 12943                           prodh	equ	0xFF4
 12944                           prodl	equ	0xFF3
 12945                           intcon	equ	0xFF2
 12946                           intcon2	equ	0xFF1
 12947                           postinc0	equ	0xFEE
 12948                           wreg	equ	0xFE8
 12949                           postdec1	equ	0xFE5
 12950                           fsr1l	equ	0xFE1
 12951                           indf2	equ	0xFDF
 12952                           postinc2	equ	0xFDE
 12953                           postdec2	equ	0xFDD
 12954                           fsr2h	equ	0xFDA
 12955                           fsr2l	equ	0xFD9
 12956                           status	equ	0xFD8
 12957                           
 12958 ;; *************** function ___lwdiv *****************
 12959 ;; Defined at:
 12960 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 12961 ;; Parameters:    Size  Location     Type
 12962 ;;  dividend        2    0[BANK0 ] unsigned int 
 12963 ;;  divisor         2    2[BANK0 ] unsigned int 
 12964 ;; Auto vars:     Size  Location     Type
 12965 ;;  quotient        2    5[BANK0 ] unsigned int 
 12966 ;;  counter         1    4[BANK0 ] unsigned char 
 12967 ;; Return value:  Size  Location     Type
 12968 ;;                  2    0[BANK0 ] unsigned int 
 12969 ;; Registers used:
 12970 ;;		wreg, status,2, status,0
 12971 ;; Tracked objects:
 12972 ;;		On entry : 0/0
 12973 ;;		On exit  : 0/0
 12974 ;;		Unchanged: 0/0
 12975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12976 ;;      Params:         0       4       0       0       0       0       0       0       0
 12977 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12978 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12979 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12980 ;;Total ram usage:        7 bytes
 12981 ;; Hardware stack levels used:    1
 12982 ;; Hardware stack levels required when called:    3
 12983 ;; This function calls:
 12984 ;;		Nothing
 12985 ;; This function is called by:
 12986 ;;		_printf
 12987 ;; This function uses a non-reentrant model
 12988 ;;
 12989                           
 12990                           	psect	text37
 12991  003E38                     __ptext37:
 12992                           	opt stack 0
 12993  003E38                     ___lwdiv:
 12994                           	opt stack 25
 12995                           
 12996                           ; BSR set to: 0
 12997                           ;incstack = 0
 12998  003E38  0E00               	movlw	0
 12999  003E3A  0100               	movlb	0	; () banked
 13000  003E3C  6FBF               	movwf	(___lwdiv@quotient+1)& (0+255),b
 13001  003E3E  0E00               	movlw	0
 13002  003E40  6FBE               	movwf	___lwdiv@quotient& (0+255),b
 13003                           
 13004                           ; BSR set to: 0
 13005  003E42  0100               	movlb	0	; () banked
 13006  003E44  51BB               	movf	___lwdiv@divisor& (0+255),w,b
 13007  003E46  0100               	movlb	0	; () banked
 13008  003E48  11BC               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 13009  003E4A  B4D8               	btfsc	status,2,c
 13010  003E4C  D02C               	goto	l1673
 13011                           
 13012                           ; BSR set to: 0
 13013  003E4E  0E01               	movlw	1
 13014  003E50  0100               	movlb	0	; () banked
 13015  003E52  6FBD               	movwf	___lwdiv@counter& (0+255),b
 13016  003E54  D006               	goto	l7420
 13017  003E56                     l7418:
 13018                           
 13019                           ; BSR set to: 0
 13020  003E56  0100               	movlb	0	; () banked
 13021  003E58  90D8               	bcf	status,0,c
 13022  003E5A  37BB               	rlcf	___lwdiv@divisor& (0+255),f,b
 13023  003E5C  37BC               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 13024  003E5E  0100               	movlb	0	; () banked
 13025  003E60  2BBD               	incf	___lwdiv@counter& (0+255),f,b
 13026  003E62                     l7420:
 13027                           
 13028                           ; BSR set to: 0
 13029  003E62  0100               	movlb	0	; () banked
 13030  003E64  AFBC               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 13031  003E66  D7F7               	goto	l7418
 13032  003E68                     l7422:
 13033                           
 13034                           ; BSR set to: 0
 13035  003E68  0100               	movlb	0	; () banked
 13036  003E6A  90D8               	bcf	status,0,c
 13037  003E6C  37BE               	rlcf	___lwdiv@quotient& (0+255),f,b
 13038  003E6E  37BF               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 13039                           
 13040                           ; BSR set to: 0
 13041  003E70  0100               	movlb	0	; () banked
 13042  003E72  51BB               	movf	___lwdiv@divisor& (0+255),w,b
 13043  003E74  0100               	movlb	0	; () banked
 13044  003E76  5DB9               	subwf	___lwdiv@dividend& (0+255),w,b
 13045  003E78  0100               	movlb	0	; () banked
 13046  003E7A  51BC               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13047  003E7C  0100               	movlb	0	; () banked
 13048  003E7E  59BA               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 13049  003E80  A0D8               	btfss	status,0,c
 13050  003E82  D00A               	goto	l7430
 13051                           
 13052                           ; BSR set to: 0
 13053  003E84  0100               	movlb	0	; () banked
 13054  003E86  51BB               	movf	___lwdiv@divisor& (0+255),w,b
 13055  003E88  0100               	movlb	0	; () banked
 13056  003E8A  5FB9               	subwf	___lwdiv@dividend& (0+255),f,b
 13057  003E8C  0100               	movlb	0	; () banked
 13058  003E8E  51BC               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13059  003E90  0100               	movlb	0	; () banked
 13060  003E92  5BBA               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 13061                           
 13062                           ; BSR set to: 0
 13063  003E94  0100               	movlb	0	; () banked
 13064  003E96  81BE               	bsf	___lwdiv@quotient& (0+255),0,b
 13065  003E98                     l7430:
 13066                           
 13067                           ; BSR set to: 0
 13068  003E98  0100               	movlb	0	; () banked
 13069  003E9A  90D8               	bcf	status,0,c
 13070  003E9C  33BC               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 13071  003E9E  33BB               	rrcf	___lwdiv@divisor& (0+255),f,b
 13072                           
 13073                           ; BSR set to: 0
 13074  003EA0  0100               	movlb	0	; () banked
 13075  003EA2  2FBD               	decfsz	___lwdiv@counter& (0+255),f,b
 13076  003EA4  D7E1               	goto	l7422
 13077  003EA6                     l1673:
 13078                           
 13079                           ; BSR set to: 0
 13080  003EA6  C0BE  F0B9         	movff	___lwdiv@quotient,?___lwdiv
 13081  003EAA  C0BF  F0BA         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13082                           
 13083                           ; BSR set to: 0
 13084  003EAE  0012               	return		;funcret
 13085  003EB0                     __end_of___lwdiv:
 13086                           	opt stack 0
 13087                           tblptru	equ	0xFF8
 13088                           tblptrh	equ	0xFF7
 13089                           tblptrl	equ	0xFF6
 13090                           tablat	equ	0xFF5
 13091                           prodh	equ	0xFF4
 13092                           prodl	equ	0xFF3
 13093                           intcon	equ	0xFF2
 13094                           intcon2	equ	0xFF1
 13095                           postinc0	equ	0xFEE
 13096                           wreg	equ	0xFE8
 13097                           postdec1	equ	0xFE5
 13098                           fsr1l	equ	0xFE1
 13099                           indf2	equ	0xFDF
 13100                           postinc2	equ	0xFDE
 13101                           postdec2	equ	0xFDD
 13102                           fsr2h	equ	0xFDA
 13103                           fsr2l	equ	0xFD9
 13104                           status	equ	0xFD8
 13105                           
 13106 ;; *************** function _APIxInitialize *****************
 13107 ;; Defined at:
 13108 ;;		line 32 in file "../api.c"
 13109 ;; Parameters:    Size  Location     Type
 13110 ;;		None
 13111 ;; Auto vars:     Size  Location     Type
 13112 ;;  i               2    0[BANK0 ] unsigned int 
 13113 ;; Return value:  Size  Location     Type
 13114 ;;                  1    wreg      void 
 13115 ;; Registers used:
 13116 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13117 ;; Tracked objects:
 13118 ;;		On entry : 0/0
 13119 ;;		On exit  : 0/0
 13120 ;;		Unchanged: 0/0
 13121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13122 ;;      Params:         0       0       0       0       0       0       0       0       0
 13123 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13124 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13125 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13126 ;;Total ram usage:        2 bytes
 13127 ;; Hardware stack levels used:    1
 13128 ;; Hardware stack levels required when called:    3
 13129 ;; This function calls:
 13130 ;;		Nothing
 13131 ;; This function is called by:
 13132 ;;		_main
 13133 ;; This function uses a non-reentrant model
 13134 ;;
 13135                           
 13136                           	psect	text38
 13137  001BF4                     __ptext38:
 13138                           	opt stack 0
 13139  001BF4                     _APIxInitialize:
 13140                           	opt stack 27
 13141                           
 13142                           ;api.c: 34: unsigned int i;
 13143                           ;api.c: 35: for(i = 0; i < (87 + 1); i++ )
 13144                           
 13145                           ; BSR set to: 0
 13146                           ;incstack = 0
 13147  001BF4  0E00               	movlw	0
 13148  001BF6  0100               	movlb	0	; () banked
 13149  001BF8  6FBA               	movwf	(APIxInitialize@i+1)& (0+255),b
 13150  001BFA  0E00               	movlw	0
 13151  001BFC  6FB9               	movwf	APIxInitialize@i& (0+255),b
 13152  001BFE                     l8736:
 13153                           
 13154                           ; BSR set to: 0
 13155  001BFE  0100               	movlb	0	; () banked
 13156  001C00  51BA               	movf	(APIxInitialize@i+1)& (0+255),w,b
 13157  001C02  E127               	bnz	l8746
 13158  001C04  0E58               	movlw	88
 13159  001C06  0100               	movlb	0	; () banked
 13160  001C08  5DB9               	subwf	APIxInitialize@i& (0+255),w,b
 13161  001C0A  B0D8               	btfsc	status,0,c
 13162  001C0C  D022               	goto	l8746
 13163                           
 13164                           ; BSR set to: 0
 13165                           ;api.c: 36: {
 13166                           ;api.c: 37: API_RW[i] = 0;
 13167                           
 13168                           ; BSR set to: 0
 13169                           
 13170                           ; BSR set to: 0
 13171  001C0E  90D8               	bcf	status,0,c
 13172  001C10  0100               	movlb	0	; () banked
 13173  001C12  35B9               	rlcf	APIxInitialize@i& (0+255),w,b
 13174  001C14  6ED9               	movwf	fsr2l,c
 13175  001C16  0100               	movlb	0	; () banked
 13176  001C18  35BA               	rlcf	(APIxInitialize@i+1)& (0+255),w,b
 13177  001C1A  6EDA               	movwf	fsr2h,c
 13178  001C1C  0E00               	movlw	low _API_RW
 13179  001C1E  26D9               	addwf	fsr2l,f,c
 13180  001C20  0E02               	movlw	high _API_RW
 13181  001C22  22DA               	addwfc	fsr2h,f,c
 13182  001C24  0E00               	movlw	0
 13183  001C26  6EDE               	movwf	postinc2,c
 13184  001C28  0E00               	movlw	0
 13185  001C2A  6EDD               	movwf	postdec2,c
 13186                           
 13187                           ;api.c: 38: API[i] = 0;
 13188  001C2C  90D8               	bcf	status,0,c
 13189  001C2E  0100               	movlb	0	; () banked
 13190  001C30  35B9               	rlcf	APIxInitialize@i& (0+255),w,b
 13191  001C32  6ED9               	movwf	fsr2l,c
 13192  001C34  0100               	movlb	0	; () banked
 13193  001C36  35BA               	rlcf	(APIxInitialize@i+1)& (0+255),w,b
 13194  001C38  6EDA               	movwf	fsr2h,c
 13195  001C3A  0E00               	movlw	low _API
 13196  001C3C  26D9               	addwf	fsr2l,f,c
 13197  001C3E  0E01               	movlw	high _API
 13198  001C40  22DA               	addwfc	fsr2h,f,c
 13199  001C42  0E00               	movlw	0
 13200  001C44  6EDE               	movwf	postinc2,c
 13201  001C46  0E00               	movlw	0
 13202  001C48  6EDD               	movwf	postdec2,c
 13203                           
 13204                           ; BSR set to: 0
 13205  001C4A  0100               	movlb	0	; () banked
 13206  001C4C  4BB9               	infsnz	APIxInitialize@i& (0+255),f,b
 13207  001C4E  2BBA               	incf	(APIxInitialize@i+1)& (0+255),f,b
 13208  001C50  D7D6               	goto	l8736
 13209  001C52                     l8746:
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;api.c: 39: }
 13213                           ;api.c: 42: API_RW[16] = 0;
 13214  001C52  0E00               	movlw	0
 13215  001C54  0102               	movlb	2	; () banked
 13216  001C56  6F21               	movwf	(_API_RW+33)& (0+255),b
 13217  001C58  0E00               	movlw	0
 13218  001C5A  6F20               	movwf	(_API_RW+32)& (0+255),b
 13219                           
 13220                           ;api.c: 43: API_RW[18] = 1;
 13221  001C5C  0E00               	movlw	0
 13222  001C5E  0102               	movlb	2	; () banked
 13223  001C60  6F25               	movwf	(_API_RW+37)& (0+255),b
 13224  001C62  0E01               	movlw	1
 13225  001C64  6F24               	movwf	(_API_RW+36)& (0+255),b
 13226                           
 13227                           ;api.c: 44: API_RW[19] = 1;
 13228  001C66  0E00               	movlw	0
 13229  001C68  0102               	movlb	2	; () banked
 13230  001C6A  6F27               	movwf	(_API_RW+39)& (0+255),b
 13231  001C6C  0E01               	movlw	1
 13232  001C6E  6F26               	movwf	(_API_RW+38)& (0+255),b
 13233                           
 13234                           ;api.c: 45: API_RW[20] = 1;
 13235  001C70  0E00               	movlw	0
 13236  001C72  0102               	movlb	2	; () banked
 13237  001C74  6F29               	movwf	(_API_RW+41)& (0+255),b
 13238  001C76  0E01               	movlw	1
 13239  001C78  6F28               	movwf	(_API_RW+40)& (0+255),b
 13240                           
 13241                           ;api.c: 46: API_RW[21] = 1;
 13242  001C7A  0E00               	movlw	0
 13243  001C7C  0102               	movlb	2	; () banked
 13244  001C7E  6F2B               	movwf	(_API_RW+43)& (0+255),b
 13245  001C80  0E01               	movlw	1
 13246  001C82  6F2A               	movwf	(_API_RW+42)& (0+255),b
 13247                           
 13248                           ;api.c: 47: API_RW[22] = 1;
 13249  001C84  0E00               	movlw	0
 13250  001C86  0102               	movlb	2	; () banked
 13251  001C88  6F2D               	movwf	(_API_RW+45)& (0+255),b
 13252  001C8A  0E01               	movlw	1
 13253  001C8C  6F2C               	movwf	(_API_RW+44)& (0+255),b
 13254                           
 13255                           ;api.c: 48: API_RW[23] = 1;
 13256  001C8E  0E00               	movlw	0
 13257  001C90  0102               	movlb	2	; () banked
 13258  001C92  6F2F               	movwf	(_API_RW+47)& (0+255),b
 13259  001C94  0E01               	movlw	1
 13260  001C96  6F2E               	movwf	(_API_RW+46)& (0+255),b
 13261                           
 13262                           ;api.c: 49: API_RW[24] = 1;
 13263  001C98  0E00               	movlw	0
 13264  001C9A  0102               	movlb	2	; () banked
 13265  001C9C  6F31               	movwf	(_API_RW+49)& (0+255),b
 13266  001C9E  0E01               	movlw	1
 13267  001CA0  6F30               	movwf	(_API_RW+48)& (0+255),b
 13268                           
 13269                           ;api.c: 50: API_RW[25] = 1;
 13270  001CA2  0E00               	movlw	0
 13271  001CA4  0102               	movlb	2	; () banked
 13272  001CA6  6F33               	movwf	(_API_RW+51)& (0+255),b
 13273  001CA8  0E01               	movlw	1
 13274  001CAA  6F32               	movwf	(_API_RW+50)& (0+255),b
 13275                           
 13276                           ;api.c: 51: API_RW[26] = 1;
 13277  001CAC  0E00               	movlw	0
 13278  001CAE  0102               	movlb	2	; () banked
 13279  001CB0  6F35               	movwf	(_API_RW+53)& (0+255),b
 13280  001CB2  0E01               	movlw	1
 13281  001CB4  6F34               	movwf	(_API_RW+52)& (0+255),b
 13282                           
 13283                           ;api.c: 52: API_RW[27] = 1;
 13284  001CB6  0E00               	movlw	0
 13285  001CB8  0102               	movlb	2	; () banked
 13286  001CBA  6F37               	movwf	(_API_RW+55)& (0+255),b
 13287  001CBC  0E01               	movlw	1
 13288  001CBE  6F36               	movwf	(_API_RW+54)& (0+255),b
 13289                           
 13290                           ;api.c: 53: API_RW[28] = 0;
 13291  001CC0  0E00               	movlw	0
 13292  001CC2  0102               	movlb	2	; () banked
 13293  001CC4  6F39               	movwf	(_API_RW+57)& (0+255),b
 13294  001CC6  0E00               	movlw	0
 13295  001CC8  6F38               	movwf	(_API_RW+56)& (0+255),b
 13296                           
 13297                           ;api.c: 54: API_RW[29] = 0;
 13298  001CCA  0E00               	movlw	0
 13299  001CCC  0102               	movlb	2	; () banked
 13300  001CCE  6F3B               	movwf	(_API_RW+59)& (0+255),b
 13301  001CD0  0E00               	movlw	0
 13302  001CD2  6F3A               	movwf	(_API_RW+58)& (0+255),b
 13303                           
 13304                           ;api.c: 55: API_RW[30] = 0;
 13305  001CD4  0E00               	movlw	0
 13306  001CD6  0102               	movlb	2	; () banked
 13307  001CD8  6F3D               	movwf	(_API_RW+61)& (0+255),b
 13308  001CDA  0E00               	movlw	0
 13309  001CDC  6F3C               	movwf	(_API_RW+60)& (0+255),b
 13310                           
 13311                           ;api.c: 56: API_RW[31] = 0;
 13312  001CDE  0E00               	movlw	0
 13313  001CE0  0102               	movlb	2	; () banked
 13314  001CE2  6F3F               	movwf	(_API_RW+63)& (0+255),b
 13315  001CE4  0E00               	movlw	0
 13316  001CE6  6F3E               	movwf	(_API_RW+62)& (0+255),b
 13317                           
 13318                           ;api.c: 57: API_RW[32] = 0;
 13319  001CE8  0E00               	movlw	0
 13320  001CEA  0102               	movlb	2	; () banked
 13321  001CEC  6F41               	movwf	(_API_RW+65)& (0+255),b
 13322  001CEE  0E00               	movlw	0
 13323  001CF0  6F40               	movwf	(_API_RW+64)& (0+255),b
 13324                           
 13325                           ;api.c: 58: API_RW[33] = 0;
 13326  001CF2  0E00               	movlw	0
 13327  001CF4  0102               	movlb	2	; () banked
 13328  001CF6  6F43               	movwf	(_API_RW+67)& (0+255),b
 13329  001CF8  0E00               	movlw	0
 13330  001CFA  6F42               	movwf	(_API_RW+66)& (0+255),b
 13331                           
 13332                           ;api.c: 59: API_RW[34] = 0;
 13333  001CFC  0E00               	movlw	0
 13334  001CFE  0102               	movlb	2	; () banked
 13335  001D00  6F45               	movwf	(_API_RW+69)& (0+255),b
 13336  001D02  0E00               	movlw	0
 13337  001D04  6F44               	movwf	(_API_RW+68)& (0+255),b
 13338                           
 13339                           ;api.c: 60: API_RW[35] = 0;
 13340  001D06  0E00               	movlw	0
 13341  001D08  0102               	movlb	2	; () banked
 13342  001D0A  6F47               	movwf	(_API_RW+71)& (0+255),b
 13343  001D0C  0E00               	movlw	0
 13344  001D0E  6F46               	movwf	(_API_RW+70)& (0+255),b
 13345                           
 13346                           ;api.c: 61: API_RW[36] = 0;
 13347  001D10  0E00               	movlw	0
 13348  001D12  0102               	movlb	2	; () banked
 13349  001D14  6F49               	movwf	(_API_RW+73)& (0+255),b
 13350  001D16  0E00               	movlw	0
 13351  001D18  6F48               	movwf	(_API_RW+72)& (0+255),b
 13352                           
 13353                           ;api.c: 62: API_RW[37] = 0;
 13354  001D1A  0E00               	movlw	0
 13355  001D1C  0102               	movlb	2	; () banked
 13356  001D1E  6F4B               	movwf	(_API_RW+75)& (0+255),b
 13357  001D20  0E00               	movlw	0
 13358  001D22  6F4A               	movwf	(_API_RW+74)& (0+255),b
 13359                           
 13360                           ;api.c: 63: API_RW[38] = 0;
 13361  001D24  0E00               	movlw	0
 13362  001D26  0102               	movlb	2	; () banked
 13363  001D28  6F4D               	movwf	(_API_RW+77)& (0+255),b
 13364  001D2A  0E00               	movlw	0
 13365  001D2C  6F4C               	movwf	(_API_RW+76)& (0+255),b
 13366                           
 13367                           ;api.c: 64: API_RW[39] = 1;
 13368  001D2E  0E00               	movlw	0
 13369  001D30  0102               	movlb	2	; () banked
 13370  001D32  6F4F               	movwf	(_API_RW+79)& (0+255),b
 13371  001D34  0E01               	movlw	1
 13372  001D36  6F4E               	movwf	(_API_RW+78)& (0+255),b
 13373                           
 13374                           ;api.c: 65: API_RW[40] = 1;
 13375  001D38  0E00               	movlw	0
 13376  001D3A  0102               	movlb	2	; () banked
 13377  001D3C  6F51               	movwf	(_API_RW+81)& (0+255),b
 13378  001D3E  0E01               	movlw	1
 13379  001D40  6F50               	movwf	(_API_RW+80)& (0+255),b
 13380                           
 13381                           ;api.c: 66: API_RW[41] = 0;
 13382  001D42  0E00               	movlw	0
 13383  001D44  0102               	movlb	2	; () banked
 13384  001D46  6F53               	movwf	(_API_RW+83)& (0+255),b
 13385  001D48  0E00               	movlw	0
 13386  001D4A  6F52               	movwf	(_API_RW+82)& (0+255),b
 13387                           
 13388                           ;api.c: 67: API_RW[42] = 0;
 13389  001D4C  0E00               	movlw	0
 13390  001D4E  0102               	movlb	2	; () banked
 13391  001D50  6F55               	movwf	(_API_RW+85)& (0+255),b
 13392  001D52  0E00               	movlw	0
 13393  001D54  6F54               	movwf	(_API_RW+84)& (0+255),b
 13394                           
 13395                           ;api.c: 68: API_RW[43] = 0;
 13396  001D56  0E00               	movlw	0
 13397  001D58  0102               	movlb	2	; () banked
 13398  001D5A  6F57               	movwf	(_API_RW+87)& (0+255),b
 13399  001D5C  0E00               	movlw	0
 13400  001D5E  6F56               	movwf	(_API_RW+86)& (0+255),b
 13401                           
 13402                           ;api.c: 69: API_RW[44] = 0;
 13403  001D60  0E00               	movlw	0
 13404  001D62  0102               	movlb	2	; () banked
 13405  001D64  6F59               	movwf	(_API_RW+89)& (0+255),b
 13406  001D66  0E00               	movlw	0
 13407  001D68  6F58               	movwf	(_API_RW+88)& (0+255),b
 13408                           
 13409                           ;api.c: 70: API_RW[45] = 1;
 13410  001D6A  0E00               	movlw	0
 13411  001D6C  0102               	movlb	2	; () banked
 13412  001D6E  6F5B               	movwf	(_API_RW+91)& (0+255),b
 13413  001D70  0E01               	movlw	1
 13414  001D72  6F5A               	movwf	(_API_RW+90)& (0+255),b
 13415                           
 13416                           ;api.c: 71: API_RW[46] = 1;
 13417  001D74  0E00               	movlw	0
 13418  001D76  0102               	movlb	2	; () banked
 13419  001D78  6F5D               	movwf	(_API_RW+93)& (0+255),b
 13420  001D7A  0E01               	movlw	1
 13421  001D7C  6F5C               	movwf	(_API_RW+92)& (0+255),b
 13422                           
 13423                           ;api.c: 72: API_RW[47] = 1;
 13424  001D7E  0E00               	movlw	0
 13425  001D80  0102               	movlb	2	; () banked
 13426  001D82  6F5F               	movwf	(_API_RW+95)& (0+255),b
 13427  001D84  0E01               	movlw	1
 13428  001D86  6F5E               	movwf	(_API_RW+94)& (0+255),b
 13429                           
 13430                           ;api.c: 73: API_RW[48] = 1;
 13431  001D88  0E00               	movlw	0
 13432  001D8A  0102               	movlb	2	; () banked
 13433  001D8C  6F61               	movwf	(_API_RW+97)& (0+255),b
 13434  001D8E  0E01               	movlw	1
 13435  001D90  6F60               	movwf	(_API_RW+96)& (0+255),b
 13436                           
 13437                           ;api.c: 74: API_RW[49] = 1;
 13438  001D92  0E00               	movlw	0
 13439  001D94  0102               	movlb	2	; () banked
 13440  001D96  6F63               	movwf	(_API_RW+99)& (0+255),b
 13441  001D98  0E01               	movlw	1
 13442  001D9A  6F62               	movwf	(_API_RW+98)& (0+255),b
 13443                           
 13444                           ;api.c: 75: API_RW[50] = 1;
 13445  001D9C  0E00               	movlw	0
 13446  001D9E  0102               	movlb	2	; () banked
 13447  001DA0  6F65               	movwf	(_API_RW+101)& (0+255),b
 13448  001DA2  0E01               	movlw	1
 13449  001DA4  6F64               	movwf	(_API_RW+100)& (0+255),b
 13450                           
 13451                           ;api.c: 76: API_RW[51] = 1;
 13452  001DA6  0E00               	movlw	0
 13453  001DA8  0102               	movlb	2	; () banked
 13454  001DAA  6F67               	movwf	(_API_RW+103)& (0+255),b
 13455  001DAC  0E01               	movlw	1
 13456  001DAE  6F66               	movwf	(_API_RW+102)& (0+255),b
 13457                           
 13458                           ;api.c: 77: API_RW[52] = 1;
 13459  001DB0  0E00               	movlw	0
 13460  001DB2  0102               	movlb	2	; () banked
 13461  001DB4  6F69               	movwf	(_API_RW+105)& (0+255),b
 13462  001DB6  0E01               	movlw	1
 13463  001DB8  6F68               	movwf	(_API_RW+104)& (0+255),b
 13464                           
 13465                           ;api.c: 78: API_RW[53] = 1;
 13466  001DBA  0E00               	movlw	0
 13467  001DBC  0102               	movlb	2	; () banked
 13468  001DBE  6F6B               	movwf	(_API_RW+107)& (0+255),b
 13469  001DC0  0E01               	movlw	1
 13470  001DC2  6F6A               	movwf	(_API_RW+106)& (0+255),b
 13471                           
 13472                           ;api.c: 79: API_RW[54] = 1;
 13473  001DC4  0E00               	movlw	0
 13474  001DC6  0102               	movlb	2	; () banked
 13475  001DC8  6F6D               	movwf	(_API_RW+109)& (0+255),b
 13476  001DCA  0E01               	movlw	1
 13477  001DCC  6F6C               	movwf	(_API_RW+108)& (0+255),b
 13478                           
 13479                           ;api.c: 80: API_RW[55] = 1;
 13480  001DCE  0E00               	movlw	0
 13481  001DD0  0102               	movlb	2	; () banked
 13482  001DD2  6F6F               	movwf	(_API_RW+111)& (0+255),b
 13483  001DD4  0E01               	movlw	1
 13484  001DD6  6F6E               	movwf	(_API_RW+110)& (0+255),b
 13485                           
 13486                           ;api.c: 81: API_RW[56] = 1;
 13487  001DD8  0E00               	movlw	0
 13488  001DDA  0102               	movlb	2	; () banked
 13489  001DDC  6F71               	movwf	(_API_RW+113)& (0+255),b
 13490  001DDE  0E01               	movlw	1
 13491  001DE0  6F70               	movwf	(_API_RW+112)& (0+255),b
 13492                           
 13493                           ;api.c: 82: API_RW[57] = 1;
 13494  001DE2  0E00               	movlw	0
 13495  001DE4  0102               	movlb	2	; () banked
 13496  001DE6  6F73               	movwf	(_API_RW+115)& (0+255),b
 13497  001DE8  0E01               	movlw	1
 13498  001DEA  6F72               	movwf	(_API_RW+114)& (0+255),b
 13499                           
 13500                           ;api.c: 83: API_RW[58] = 1;
 13501  001DEC  0E00               	movlw	0
 13502  001DEE  0102               	movlb	2	; () banked
 13503  001DF0  6F75               	movwf	(_API_RW+117)& (0+255),b
 13504  001DF2  0E01               	movlw	1
 13505  001DF4  6F74               	movwf	(_API_RW+116)& (0+255),b
 13506                           
 13507                           ;api.c: 84: API_RW[59] = 1;
 13508  001DF6  0E00               	movlw	0
 13509  001DF8  0102               	movlb	2	; () banked
 13510  001DFA  6F77               	movwf	(_API_RW+119)& (0+255),b
 13511  001DFC  0E01               	movlw	1
 13512  001DFE  6F76               	movwf	(_API_RW+118)& (0+255),b
 13513                           
 13514                           ;api.c: 85: API_RW[60] = 1;
 13515  001E00  0E00               	movlw	0
 13516  001E02  0102               	movlb	2	; () banked
 13517  001E04  6F79               	movwf	(_API_RW+121)& (0+255),b
 13518  001E06  0E01               	movlw	1
 13519  001E08  6F78               	movwf	(_API_RW+120)& (0+255),b
 13520                           
 13521                           ;api.c: 86: API_RW[61] = 0;
 13522  001E0A  0E00               	movlw	0
 13523  001E0C  0102               	movlb	2	; () banked
 13524  001E0E  6F7B               	movwf	(_API_RW+123)& (0+255),b
 13525  001E10  0E00               	movlw	0
 13526  001E12  6F7A               	movwf	(_API_RW+122)& (0+255),b
 13527                           
 13528                           ;api.c: 87: API_RW[62] = 0;
 13529  001E14  0E00               	movlw	0
 13530  001E16  0102               	movlb	2	; () banked
 13531  001E18  6F7D               	movwf	(_API_RW+125)& (0+255),b
 13532  001E1A  0E00               	movlw	0
 13533  001E1C  6F7C               	movwf	(_API_RW+124)& (0+255),b
 13534                           
 13535                           ;api.c: 88: API_RW[63] = 0;
 13536  001E1E  0E00               	movlw	0
 13537  001E20  0102               	movlb	2	; () banked
 13538  001E22  6F7F               	movwf	(_API_RW+127)& (0+255),b
 13539  001E24  0E00               	movlw	0
 13540  001E26  6F7E               	movwf	(_API_RW+126)& (0+255),b
 13541                           
 13542                           ;api.c: 89: API_RW[64] = 0;
 13543  001E28  0E00               	movlw	0
 13544  001E2A  0102               	movlb	2	; () banked
 13545  001E2C  6F81               	movwf	(_API_RW+129)& (0+255),b
 13546  001E2E  0E00               	movlw	0
 13547  001E30  6F80               	movwf	(_API_RW+128)& (0+255),b
 13548                           
 13549                           ;api.c: 90: API_RW[65] = 0;
 13550  001E32  0E00               	movlw	0
 13551  001E34  0102               	movlb	2	; () banked
 13552  001E36  6F83               	movwf	(_API_RW+131)& (0+255),b
 13553  001E38  0E00               	movlw	0
 13554  001E3A  6F82               	movwf	(_API_RW+130)& (0+255),b
 13555                           
 13556                           ;api.c: 91: API_RW[66] = 0;
 13557  001E3C  0E00               	movlw	0
 13558  001E3E  0102               	movlb	2	; () banked
 13559  001E40  6F85               	movwf	(_API_RW+133)& (0+255),b
 13560  001E42  0E00               	movlw	0
 13561  001E44  6F84               	movwf	(_API_RW+132)& (0+255),b
 13562                           
 13563                           ;api.c: 92: API_RW[67] = 0;
 13564  001E46  0E00               	movlw	0
 13565  001E48  0102               	movlb	2	; () banked
 13566  001E4A  6F87               	movwf	(_API_RW+135)& (0+255),b
 13567  001E4C  0E00               	movlw	0
 13568  001E4E  6F86               	movwf	(_API_RW+134)& (0+255),b
 13569                           
 13570                           ;api.c: 93: API_RW[68] = 0;
 13571  001E50  0E00               	movlw	0
 13572  001E52  0102               	movlb	2	; () banked
 13573  001E54  6F89               	movwf	(_API_RW+137)& (0+255),b
 13574  001E56  0E00               	movlw	0
 13575  001E58  6F88               	movwf	(_API_RW+136)& (0+255),b
 13576                           
 13577                           ;api.c: 94: API_RW[69] = 0;
 13578  001E5A  0E00               	movlw	0
 13579  001E5C  0102               	movlb	2	; () banked
 13580  001E5E  6F8B               	movwf	(_API_RW+139)& (0+255),b
 13581  001E60  0E00               	movlw	0
 13582  001E62  6F8A               	movwf	(_API_RW+138)& (0+255),b
 13583                           
 13584                           ;api.c: 95: API_RW[70] = 1;
 13585  001E64  0E00               	movlw	0
 13586  001E66  0102               	movlb	2	; () banked
 13587  001E68  6F8D               	movwf	(_API_RW+141)& (0+255),b
 13588  001E6A  0E01               	movlw	1
 13589  001E6C  6F8C               	movwf	(_API_RW+140)& (0+255),b
 13590                           
 13591                           ;api.c: 96: API_RW[71] = 1;
 13592  001E6E  0E00               	movlw	0
 13593  001E70  0102               	movlb	2	; () banked
 13594  001E72  6F8F               	movwf	(_API_RW+143)& (0+255),b
 13595  001E74  0E01               	movlw	1
 13596  001E76  6F8E               	movwf	(_API_RW+142)& (0+255),b
 13597                           
 13598                           ;api.c: 97: API_RW[72] = 1;
 13599  001E78  0E00               	movlw	0
 13600  001E7A  0102               	movlb	2	; () banked
 13601  001E7C  6F91               	movwf	(_API_RW+145)& (0+255),b
 13602  001E7E  0E01               	movlw	1
 13603  001E80  6F90               	movwf	(_API_RW+144)& (0+255),b
 13604                           
 13605                           ;api.c: 98: API_RW[73] = 1;
 13606  001E82  0E00               	movlw	0
 13607  001E84  0102               	movlb	2	; () banked
 13608  001E86  6F93               	movwf	(_API_RW+147)& (0+255),b
 13609  001E88  0E01               	movlw	1
 13610  001E8A  6F92               	movwf	(_API_RW+146)& (0+255),b
 13611                           
 13612                           ;api.c: 99: API_RW[74] = 1;
 13613  001E8C  0E00               	movlw	0
 13614  001E8E  0102               	movlb	2	; () banked
 13615  001E90  6F95               	movwf	(_API_RW+149)& (0+255),b
 13616  001E92  0E01               	movlw	1
 13617  001E94  6F94               	movwf	(_API_RW+148)& (0+255),b
 13618                           
 13619                           ;api.c: 100: API_RW[75] = 1;
 13620  001E96  0E00               	movlw	0
 13621  001E98  0102               	movlb	2	; () banked
 13622  001E9A  6F97               	movwf	(_API_RW+151)& (0+255),b
 13623  001E9C  0E01               	movlw	1
 13624  001E9E  6F96               	movwf	(_API_RW+150)& (0+255),b
 13625                           
 13626                           ;api.c: 101: API_RW[76] = 1;
 13627  001EA0  0E00               	movlw	0
 13628  001EA2  0102               	movlb	2	; () banked
 13629  001EA4  6F99               	movwf	(_API_RW+153)& (0+255),b
 13630  001EA6  0E01               	movlw	1
 13631  001EA8  6F98               	movwf	(_API_RW+152)& (0+255),b
 13632                           
 13633                           ;api.c: 102: API_RW[77] = 1;
 13634  001EAA  0E00               	movlw	0
 13635  001EAC  0102               	movlb	2	; () banked
 13636  001EAE  6F9B               	movwf	(_API_RW+155)& (0+255),b
 13637  001EB0  0E01               	movlw	1
 13638  001EB2  6F9A               	movwf	(_API_RW+154)& (0+255),b
 13639                           
 13640                           ;api.c: 103: API_RW[78] = 1;
 13641  001EB4  0E00               	movlw	0
 13642  001EB6  0102               	movlb	2	; () banked
 13643  001EB8  6F9D               	movwf	(_API_RW+157)& (0+255),b
 13644  001EBA  0E01               	movlw	1
 13645  001EBC  6F9C               	movwf	(_API_RW+156)& (0+255),b
 13646                           
 13647                           ;api.c: 104: API_RW[79] = 1;
 13648  001EBE  0E00               	movlw	0
 13649  001EC0  0102               	movlb	2	; () banked
 13650  001EC2  6F9F               	movwf	(_API_RW+159)& (0+255),b
 13651  001EC4  0E01               	movlw	1
 13652  001EC6  6F9E               	movwf	(_API_RW+158)& (0+255),b
 13653                           
 13654                           ;api.c: 105: API_RW[80] = 0;
 13655  001EC8  0E00               	movlw	0
 13656  001ECA  0102               	movlb	2	; () banked
 13657  001ECC  6FA1               	movwf	(_API_RW+161)& (0+255),b
 13658  001ECE  0E00               	movlw	0
 13659  001ED0  6FA0               	movwf	(_API_RW+160)& (0+255),b
 13660                           
 13661                           ;api.c: 106: API_RW[81] = 1;
 13662  001ED2  0E00               	movlw	0
 13663  001ED4  0102               	movlb	2	; () banked
 13664  001ED6  6FA3               	movwf	(_API_RW+163)& (0+255),b
 13665  001ED8  0E01               	movlw	1
 13666  001EDA  6FA2               	movwf	(_API_RW+162)& (0+255),b
 13667                           
 13668                           ;api.c: 107: API_RW[82] = 0;
 13669  001EDC  0E00               	movlw	0
 13670  001EDE  0102               	movlb	2	; () banked
 13671  001EE0  6FA5               	movwf	(_API_RW+165)& (0+255),b
 13672  001EE2  0E00               	movlw	0
 13673  001EE4  6FA4               	movwf	(_API_RW+164)& (0+255),b
 13674                           
 13675                           ;api.c: 108: API_RW[83] = 0;
 13676  001EE6  0E00               	movlw	0
 13677  001EE8  0102               	movlb	2	; () banked
 13678  001EEA  6FA7               	movwf	(_API_RW+167)& (0+255),b
 13679  001EEC  0E00               	movlw	0
 13680  001EEE  6FA6               	movwf	(_API_RW+166)& (0+255),b
 13681                           
 13682                           ;api.c: 109: API_RW[84] = 0;
 13683  001EF0  0E00               	movlw	0
 13684  001EF2  0102               	movlb	2	; () banked
 13685  001EF4  6FA9               	movwf	(_API_RW+169)& (0+255),b
 13686  001EF6  0E00               	movlw	0
 13687  001EF8  6FA8               	movwf	(_API_RW+168)& (0+255),b
 13688                           
 13689                           ;api.c: 110: API_RW[85] = 0;
 13690  001EFA  0E00               	movlw	0
 13691  001EFC  0102               	movlb	2	; () banked
 13692  001EFE  6FAB               	movwf	(_API_RW+171)& (0+255),b
 13693  001F00  0E00               	movlw	0
 13694  001F02  6FAA               	movwf	(_API_RW+170)& (0+255),b
 13695                           
 13696                           ;api.c: 111: API_RW[86] = 0;
 13697  001F04  0E00               	movlw	0
 13698  001F06  0102               	movlb	2	; () banked
 13699  001F08  6FAD               	movwf	(_API_RW+173)& (0+255),b
 13700  001F0A  0E00               	movlw	0
 13701  001F0C  6FAC               	movwf	(_API_RW+172)& (0+255),b
 13702                           
 13703                           ;api.c: 115: API[16] = 87;
 13704  001F0E  0E00               	movlw	0
 13705  001F10  0101               	movlb	1	; () banked
 13706  001F12  6F21               	movwf	(_API+33)& (0+255),b
 13707  001F14  0E57               	movlw	87
 13708  001F16  6F20               	movwf	(_API+32)& (0+255),b
 13709                           
 13710                           ;api.c: 116: API[18] = 10000;
 13711  001F18  0E27               	movlw	39
 13712  001F1A  0101               	movlb	1	; () banked
 13713  001F1C  6F25               	movwf	(_API+37)& (0+255),b
 13714  001F1E  0E10               	movlw	16
 13715  001F20  6F24               	movwf	(_API+36)& (0+255),b
 13716                           
 13717                           ;api.c: 117: API[19] = 800;
 13718  001F22  0E03               	movlw	3
 13719  001F24  0101               	movlb	1	; () banked
 13720  001F26  6F27               	movwf	(_API+39)& (0+255),b
 13721  001F28  0E20               	movlw	32
 13722  001F2A  6F26               	movwf	(_API+38)& (0+255),b
 13723                           
 13724                           ;api.c: 118: API[20] = 5000;
 13725  001F2C  0E13               	movlw	19
 13726  001F2E  0101               	movlb	1	; () banked
 13727  001F30  6F29               	movwf	(_API+41)& (0+255),b
 13728  001F32  0E88               	movlw	136
 13729  001F34  6F28               	movwf	(_API+40)& (0+255),b
 13730                           
 13731                           ;api.c: 119: API[21] = 20;
 13732  001F36  0E00               	movlw	0
 13733  001F38  0101               	movlb	1	; () banked
 13734  001F3A  6F2B               	movwf	(_API+43)& (0+255),b
 13735  001F3C  0E14               	movlw	20
 13736  001F3E  6F2A               	movwf	(_API+42)& (0+255),b
 13737                           
 13738                           ;api.c: 120: API[22] = 20;
 13739  001F40  0E00               	movlw	0
 13740  001F42  0101               	movlb	1	; () banked
 13741  001F44  6F2D               	movwf	(_API+45)& (0+255),b
 13742  001F46  0E14               	movlw	20
 13743  001F48  6F2C               	movwf	(_API+44)& (0+255),b
 13744                           
 13745                           ;api.c: 121: API[23] = 107;
 13746  001F4A  0E00               	movlw	0
 13747  001F4C  0101               	movlb	1	; () banked
 13748  001F4E  6F2F               	movwf	(_API+47)& (0+255),b
 13749  001F50  0E6B               	movlw	107
 13750  001F52  6F2E               	movwf	(_API+46)& (0+255),b
 13751                           
 13752                           ;api.c: 122: API[24] = 107;
 13753  001F54  0E00               	movlw	0
 13754  001F56  0101               	movlb	1	; () banked
 13755  001F58  6F31               	movwf	(_API+49)& (0+255),b
 13756  001F5A  0E6B               	movlw	107
 13757  001F5C  6F30               	movwf	(_API+48)& (0+255),b
 13758                           
 13759                           ;api.c: 123: API[25] = 80;
 13760  001F5E  0E00               	movlw	0
 13761  001F60  0101               	movlb	1	; () banked
 13762  001F62  6F33               	movwf	(_API+51)& (0+255),b
 13763  001F64  0E50               	movlw	80
 13764  001F66  6F32               	movwf	(_API+50)& (0+255),b
 13765                           
 13766                           ;api.c: 124: API[26] = 45;
 13767  001F68  0E00               	movlw	0
 13768  001F6A  0101               	movlb	1	; () banked
 13769  001F6C  6F35               	movwf	(_API+53)& (0+255),b
 13770  001F6E  0E2D               	movlw	45
 13771  001F70  6F34               	movwf	(_API+52)& (0+255),b
 13772                           
 13773                           ;api.c: 125: API[27] = 20;
 13774  001F72  0E00               	movlw	0
 13775  001F74  0101               	movlb	1	; () banked
 13776  001F76  6F37               	movwf	(_API+55)& (0+255),b
 13777  001F78  0E14               	movlw	20
 13778  001F7A  6F36               	movwf	(_API+54)& (0+255),b
 13779                           
 13780                           ;api.c: 126: API[28] = 0;
 13781  001F7C  0E00               	movlw	0
 13782  001F7E  0101               	movlb	1	; () banked
 13783  001F80  6F39               	movwf	(_API+57)& (0+255),b
 13784  001F82  0E00               	movlw	0
 13785  001F84  6F38               	movwf	(_API+56)& (0+255),b
 13786                           
 13787                           ;api.c: 127: API[29] = 0;
 13788  001F86  0E00               	movlw	0
 13789  001F88  0101               	movlb	1	; () banked
 13790  001F8A  6F3B               	movwf	(_API+59)& (0+255),b
 13791  001F8C  0E00               	movlw	0
 13792  001F8E  6F3A               	movwf	(_API+58)& (0+255),b
 13793                           
 13794                           ;api.c: 128: API[30] = 0;
 13795  001F90  0E00               	movlw	0
 13796  001F92  0101               	movlb	1	; () banked
 13797  001F94  6F3D               	movwf	(_API+61)& (0+255),b
 13798  001F96  0E00               	movlw	0
 13799  001F98  6F3C               	movwf	(_API+60)& (0+255),b
 13800                           
 13801                           ;api.c: 129: API[31] = 0;
 13802  001F9A  0E00               	movlw	0
 13803  001F9C  0101               	movlb	1	; () banked
 13804  001F9E  6F3F               	movwf	(_API+63)& (0+255),b
 13805  001FA0  0E00               	movlw	0
 13806  001FA2  6F3E               	movwf	(_API+62)& (0+255),b
 13807                           
 13808                           ;api.c: 130: API[32] = 0;
 13809  001FA4  0E00               	movlw	0
 13810  001FA6  0101               	movlb	1	; () banked
 13811  001FA8  6F41               	movwf	(_API+65)& (0+255),b
 13812  001FAA  0E00               	movlw	0
 13813  001FAC  6F40               	movwf	(_API+64)& (0+255),b
 13814                           
 13815                           ;api.c: 131: API[33] = 0;
 13816  001FAE  0E00               	movlw	0
 13817  001FB0  0101               	movlb	1	; () banked
 13818  001FB2  6F43               	movwf	(_API+67)& (0+255),b
 13819  001FB4  0E00               	movlw	0
 13820  001FB6  6F42               	movwf	(_API+66)& (0+255),b
 13821                           
 13822                           ;api.c: 132: API[34] = 0;
 13823  001FB8  0E00               	movlw	0
 13824  001FBA  0101               	movlb	1	; () banked
 13825  001FBC  6F45               	movwf	(_API+69)& (0+255),b
 13826  001FBE  0E00               	movlw	0
 13827  001FC0  6F44               	movwf	(_API+68)& (0+255),b
 13828                           
 13829                           ;api.c: 133: API[35] = 0;
 13830  001FC2  0E00               	movlw	0
 13831  001FC4  0101               	movlb	1	; () banked
 13832  001FC6  6F47               	movwf	(_API+71)& (0+255),b
 13833  001FC8  0E00               	movlw	0
 13834  001FCA  6F46               	movwf	(_API+70)& (0+255),b
 13835                           
 13836                           ;api.c: 134: API[36] = 0;
 13837  001FCC  0E00               	movlw	0
 13838  001FCE  0101               	movlb	1	; () banked
 13839  001FD0  6F49               	movwf	(_API+73)& (0+255),b
 13840  001FD2  0E00               	movlw	0
 13841  001FD4  6F48               	movwf	(_API+72)& (0+255),b
 13842                           
 13843                           ;api.c: 135: API[37] = 0;
 13844  001FD6  0E00               	movlw	0
 13845  001FD8  0101               	movlb	1	; () banked
 13846  001FDA  6F4B               	movwf	(_API+75)& (0+255),b
 13847  001FDC  0E00               	movlw	0
 13848  001FDE  6F4A               	movwf	(_API+74)& (0+255),b
 13849                           
 13850                           ;api.c: 136: API[38] = 0;
 13851  001FE0  0E00               	movlw	0
 13852  001FE2  0101               	movlb	1	; () banked
 13853  001FE4  6F4D               	movwf	(_API+77)& (0+255),b
 13854  001FE6  0E00               	movlw	0
 13855  001FE8  6F4C               	movwf	(_API+76)& (0+255),b
 13856                           
 13857                           ;api.c: 137: API[39] = 0;
 13858  001FEA  0E00               	movlw	0
 13859  001FEC  0101               	movlb	1	; () banked
 13860  001FEE  6F4F               	movwf	(_API+79)& (0+255),b
 13861  001FF0  0E00               	movlw	0
 13862  001FF2  6F4E               	movwf	(_API+78)& (0+255),b
 13863                           
 13864                           ;api.c: 138: API[40] = 0;
 13865  001FF4  0E00               	movlw	0
 13866  001FF6  0101               	movlb	1	; () banked
 13867  001FF8  6F51               	movwf	(_API+81)& (0+255),b
 13868  001FFA  0E00               	movlw	0
 13869  001FFC  6F50               	movwf	(_API+80)& (0+255),b
 13870                           
 13871                           ;api.c: 139: API[41] = 0;
 13872  001FFE  0E00               	movlw	0
 13873  002000  0101               	movlb	1	; () banked
 13874  002002  6F53               	movwf	(_API+83)& (0+255),b
 13875  002004  0E00               	movlw	0
 13876  002006  6F52               	movwf	(_API+82)& (0+255),b
 13877                           
 13878                           ;api.c: 140: API[42] = 0;
 13879  002008  0E00               	movlw	0
 13880  00200A  0101               	movlb	1	; () banked
 13881  00200C  6F55               	movwf	(_API+85)& (0+255),b
 13882  00200E  0E00               	movlw	0
 13883  002010  6F54               	movwf	(_API+84)& (0+255),b
 13884                           
 13885                           ;api.c: 141: API[43] = 0;
 13886  002012  0E00               	movlw	0
 13887  002014  0101               	movlb	1	; () banked
 13888  002016  6F57               	movwf	(_API+87)& (0+255),b
 13889  002018  0E00               	movlw	0
 13890  00201A  6F56               	movwf	(_API+86)& (0+255),b
 13891                           
 13892                           ;api.c: 142: API[44] = 0;
 13893  00201C  0E00               	movlw	0
 13894  00201E  0101               	movlb	1	; () banked
 13895  002020  6F59               	movwf	(_API+89)& (0+255),b
 13896  002022  0E00               	movlw	0
 13897  002024  6F58               	movwf	(_API+88)& (0+255),b
 13898                           
 13899                           ;api.c: 143: API[45] = 0;
 13900  002026  0E00               	movlw	0
 13901  002028  0101               	movlb	1	; () banked
 13902  00202A  6F5B               	movwf	(_API+91)& (0+255),b
 13903  00202C  0E00               	movlw	0
 13904  00202E  6F5A               	movwf	(_API+90)& (0+255),b
 13905                           
 13906                           ;api.c: 144: API[46] = 80;
 13907  002030  0E00               	movlw	0
 13908  002032  0101               	movlb	1	; () banked
 13909  002034  6F5D               	movwf	(_API+93)& (0+255),b
 13910  002036  0E50               	movlw	80
 13911  002038  6F5C               	movwf	(_API+92)& (0+255),b
 13912                           
 13913                           ;api.c: 145: API[47] = 120;
 13914  00203A  0E00               	movlw	0
 13915  00203C  0101               	movlb	1	; () banked
 13916  00203E  6F5F               	movwf	(_API+95)& (0+255),b
 13917  002040  0E78               	movlw	120
 13918  002042  6F5E               	movwf	(_API+94)& (0+255),b
 13919                           
 13920                           ;api.c: 146: API[48] = 0;
 13921  002044  0E00               	movlw	0
 13922  002046  0101               	movlb	1	; () banked
 13923  002048  6F61               	movwf	(_API+97)& (0+255),b
 13924  00204A  0E00               	movlw	0
 13925  00204C  6F60               	movwf	(_API+96)& (0+255),b
 13926                           
 13927                           ;api.c: 147: API[49] = 80;
 13928  00204E  0E00               	movlw	0
 13929  002050  0101               	movlb	1	; () banked
 13930  002052  6F63               	movwf	(_API+99)& (0+255),b
 13931  002054  0E50               	movlw	80
 13932  002056  6F62               	movwf	(_API+98)& (0+255),b
 13933                           
 13934                           ;api.c: 148: API[50] = 0;
 13935  002058  0E00               	movlw	0
 13936  00205A  0101               	movlb	1	; () banked
 13937  00205C  6F65               	movwf	(_API+101)& (0+255),b
 13938  00205E  0E00               	movlw	0
 13939  002060  6F64               	movwf	(_API+100)& (0+255),b
 13940                           
 13941                           ;api.c: 149: API[51] = 0;
 13942  002062  0E00               	movlw	0
 13943  002064  0101               	movlb	1	; () banked
 13944  002066  6F67               	movwf	(_API+103)& (0+255),b
 13945  002068  0E00               	movlw	0
 13946  00206A  6F66               	movwf	(_API+102)& (0+255),b
 13947                           
 13948                           ;api.c: 150: API[52] = 120;
 13949  00206C  0E00               	movlw	0
 13950  00206E  0101               	movlb	1	; () banked
 13951  002070  6F69               	movwf	(_API+105)& (0+255),b
 13952  002072  0E78               	movlw	120
 13953  002074  6F68               	movwf	(_API+104)& (0+255),b
 13954                           
 13955                           ;api.c: 151: API[53] = 100;
 13956  002076  0E00               	movlw	0
 13957  002078  0101               	movlb	1	; () banked
 13958  00207A  6F6B               	movwf	(_API+107)& (0+255),b
 13959  00207C  0E64               	movlw	100
 13960  00207E  6F6A               	movwf	(_API+106)& (0+255),b
 13961                           
 13962                           ;api.c: 152: API[54] = 100;
 13963  002080  0E00               	movlw	0
 13964  002082  0101               	movlb	1	; () banked
 13965  002084  6F6D               	movwf	(_API+109)& (0+255),b
 13966  002086  0E64               	movlw	100
 13967  002088  6F6C               	movwf	(_API+108)& (0+255),b
 13968                           
 13969                           ;api.c: 153: API[55] = 100;
 13970  00208A  0E00               	movlw	0
 13971  00208C  0101               	movlb	1	; () banked
 13972  00208E  6F6F               	movwf	(_API+111)& (0+255),b
 13973  002090  0E64               	movlw	100
 13974  002092  6F6E               	movwf	(_API+110)& (0+255),b
 13975                           
 13976                           ;api.c: 154: API[56] = 100;
 13977  002094  0E00               	movlw	0
 13978  002096  0101               	movlb	1	; () banked
 13979  002098  6F71               	movwf	(_API+113)& (0+255),b
 13980  00209A  0E64               	movlw	100
 13981  00209C  6F70               	movwf	(_API+112)& (0+255),b
 13982                           
 13983                           ;api.c: 155: API[57] = 100;
 13984  00209E  0E00               	movlw	0
 13985  0020A0  0101               	movlb	1	; () banked
 13986  0020A2  6F73               	movwf	(_API+115)& (0+255),b
 13987  0020A4  0E64               	movlw	100
 13988  0020A6  6F72               	movwf	(_API+114)& (0+255),b
 13989                           
 13990                           ;api.c: 156: API[58] = 100;
 13991  0020A8  0E00               	movlw	0
 13992  0020AA  0101               	movlb	1	; () banked
 13993  0020AC  6F75               	movwf	(_API+117)& (0+255),b
 13994  0020AE  0E64               	movlw	100
 13995  0020B0  6F74               	movwf	(_API+116)& (0+255),b
 13996                           
 13997                           ;api.c: 157: API[59] = 100;
 13998  0020B2  0E00               	movlw	0
 13999  0020B4  0101               	movlb	1	; () banked
 14000  0020B6  6F77               	movwf	(_API+119)& (0+255),b
 14001  0020B8  0E64               	movlw	100
 14002  0020BA  6F76               	movwf	(_API+118)& (0+255),b
 14003                           
 14004                           ;api.c: 158: API[60] = 100;
 14005  0020BC  0E00               	movlw	0
 14006  0020BE  0101               	movlb	1	; () banked
 14007  0020C0  6F79               	movwf	(_API+121)& (0+255),b
 14008  0020C2  0E64               	movlw	100
 14009  0020C4  6F78               	movwf	(_API+120)& (0+255),b
 14010                           
 14011                           ;api.c: 159: API[61] = 0;
 14012  0020C6  0E00               	movlw	0
 14013  0020C8  0101               	movlb	1	; () banked
 14014  0020CA  6F7B               	movwf	(_API+123)& (0+255),b
 14015  0020CC  0E00               	movlw	0
 14016  0020CE  6F7A               	movwf	(_API+122)& (0+255),b
 14017                           
 14018                           ;api.c: 160: API[62] = 0;
 14019  0020D0  0E00               	movlw	0
 14020  0020D2  0101               	movlb	1	; () banked
 14021  0020D4  6F7D               	movwf	(_API+125)& (0+255),b
 14022  0020D6  0E00               	movlw	0
 14023  0020D8  6F7C               	movwf	(_API+124)& (0+255),b
 14024                           
 14025                           ;api.c: 161: API[63] = 1;
 14026  0020DA  0E00               	movlw	0
 14027  0020DC  0101               	movlb	1	; () banked
 14028  0020DE  6F7F               	movwf	(_API+127)& (0+255),b
 14029  0020E0  0E01               	movlw	1
 14030  0020E2  6F7E               	movwf	(_API+126)& (0+255),b
 14031                           
 14032                           ;api.c: 162: API[64] = 0;
 14033  0020E4  0E00               	movlw	0
 14034  0020E6  0101               	movlb	1	; () banked
 14035  0020E8  6F81               	movwf	(_API+129)& (0+255),b
 14036  0020EA  0E00               	movlw	0
 14037  0020EC  6F80               	movwf	(_API+128)& (0+255),b
 14038                           
 14039                           ;api.c: 163: API[65] = 0;
 14040  0020EE  0E00               	movlw	0
 14041  0020F0  0101               	movlb	1	; () banked
 14042  0020F2  6F83               	movwf	(_API+131)& (0+255),b
 14043  0020F4  0E00               	movlw	0
 14044  0020F6  6F82               	movwf	(_API+130)& (0+255),b
 14045                           
 14046                           ;api.c: 164: API[66] = 0;
 14047  0020F8  0E00               	movlw	0
 14048  0020FA  0101               	movlb	1	; () banked
 14049  0020FC  6F85               	movwf	(_API+133)& (0+255),b
 14050  0020FE  0E00               	movlw	0
 14051  002100  6F84               	movwf	(_API+132)& (0+255),b
 14052                           
 14053                           ;api.c: 165: API[67] = 0;
 14054  002102  0E00               	movlw	0
 14055  002104  0101               	movlb	1	; () banked
 14056  002106  6F87               	movwf	(_API+135)& (0+255),b
 14057  002108  0E00               	movlw	0
 14058  00210A  6F86               	movwf	(_API+134)& (0+255),b
 14059                           
 14060                           ;api.c: 166: API[68] = 511;
 14061  00210C  0E01               	movlw	1
 14062  00210E  0101               	movlb	1	; () banked
 14063  002110  6F89               	movwf	(_API+137)& (0+255),b
 14064  002112  6988               	setf	(_API+136)& (0+255),b
 14065                           
 14066                           ;api.c: 167: API[69] = 1;
 14067  002114  0E00               	movlw	0
 14068  002116  0101               	movlb	1	; () banked
 14069  002118  6F8B               	movwf	(_API+139)& (0+255),b
 14070  00211A  0E01               	movlw	1
 14071  00211C  6F8A               	movwf	(_API+138)& (0+255),b
 14072                           
 14073                           ;api.c: 168: API[70] = 0;
 14074  00211E  0E00               	movlw	0
 14075  002120  0101               	movlb	1	; () banked
 14076  002122  6F8D               	movwf	(_API+141)& (0+255),b
 14077  002124  0E00               	movlw	0
 14078  002126  6F8C               	movwf	(_API+140)& (0+255),b
 14079                           
 14080                           ;api.c: 169: API[71] = 0;
 14081  002128  0E00               	movlw	0
 14082  00212A  0101               	movlb	1	; () banked
 14083  00212C  6F8F               	movwf	(_API+143)& (0+255),b
 14084  00212E  0E00               	movlw	0
 14085  002130  6F8E               	movwf	(_API+142)& (0+255),b
 14086                           
 14087                           ;api.c: 170: API[72] = 0;
 14088  002132  0E00               	movlw	0
 14089  002134  0101               	movlb	1	; () banked
 14090  002136  6F91               	movwf	(_API+145)& (0+255),b
 14091  002138  0E00               	movlw	0
 14092  00213A  6F90               	movwf	(_API+144)& (0+255),b
 14093                           
 14094                           ;api.c: 171: API[73] = 0;
 14095  00213C  0E00               	movlw	0
 14096  00213E  0101               	movlb	1	; () banked
 14097  002140  6F93               	movwf	(_API+147)& (0+255),b
 14098  002142  0E00               	movlw	0
 14099  002144  6F92               	movwf	(_API+146)& (0+255),b
 14100                           
 14101                           ;api.c: 172: API[74] = 0;
 14102  002146  0E00               	movlw	0
 14103  002148  0101               	movlb	1	; () banked
 14104  00214A  6F95               	movwf	(_API+149)& (0+255),b
 14105  00214C  0E00               	movlw	0
 14106  00214E  6F94               	movwf	(_API+148)& (0+255),b
 14107                           
 14108                           ;api.c: 173: API[75] = 0;
 14109  002150  0E00               	movlw	0
 14110  002152  0101               	movlb	1	; () banked
 14111  002154  6F97               	movwf	(_API+151)& (0+255),b
 14112  002156  0E00               	movlw	0
 14113  002158  6F96               	movwf	(_API+150)& (0+255),b
 14114                           
 14115                           ;api.c: 174: API[76] = 0;
 14116  00215A  0E00               	movlw	0
 14117  00215C  0101               	movlb	1	; () banked
 14118  00215E  6F99               	movwf	(_API+153)& (0+255),b
 14119  002160  0E00               	movlw	0
 14120  002162  6F98               	movwf	(_API+152)& (0+255),b
 14121                           
 14122                           ;api.c: 175: API[77] = 0;
 14123  002164  0E00               	movlw	0
 14124  002166  0101               	movlb	1	; () banked
 14125  002168  6F9B               	movwf	(_API+155)& (0+255),b
 14126  00216A  0E00               	movlw	0
 14127  00216C  6F9A               	movwf	(_API+154)& (0+255),b
 14128                           
 14129                           ;api.c: 176: API[78] = 0;
 14130  00216E  0E00               	movlw	0
 14131  002170  0101               	movlb	1	; () banked
 14132  002172  6F9D               	movwf	(_API+157)& (0+255),b
 14133  002174  0E00               	movlw	0
 14134  002176  6F9C               	movwf	(_API+156)& (0+255),b
 14135                           
 14136                           ;api.c: 177: API[79] = 511;
 14137  002178  0E01               	movlw	1
 14138  00217A  0101               	movlb	1	; () banked
 14139  00217C  6F9F               	movwf	(_API+159)& (0+255),b
 14140  00217E  699E               	setf	(_API+158)& (0+255),b
 14141                           
 14142                           ;api.c: 178: API[80] = 0;
 14143  002180  0E00               	movlw	0
 14144  002182  0101               	movlb	1	; () banked
 14145  002184  6FA1               	movwf	(_API+161)& (0+255),b
 14146  002186  0E00               	movlw	0
 14147  002188  6FA0               	movwf	(_API+160)& (0+255),b
 14148                           
 14149                           ;api.c: 179: API[81] = 0;
 14150  00218A  0E00               	movlw	0
 14151  00218C  0101               	movlb	1	; () banked
 14152  00218E  6FA3               	movwf	(_API+163)& (0+255),b
 14153  002190  0E00               	movlw	0
 14154  002192  6FA2               	movwf	(_API+162)& (0+255),b
 14155                           
 14156                           ;api.c: 180: API[82] = 1;
 14157  002194  0E00               	movlw	0
 14158  002196  0101               	movlb	1	; () banked
 14159  002198  6FA5               	movwf	(_API+165)& (0+255),b
 14160  00219A  0E01               	movlw	1
 14161  00219C  6FA4               	movwf	(_API+164)& (0+255),b
 14162                           
 14163                           ;api.c: 181: API[83] = 0;
 14164  00219E  0E00               	movlw	0
 14165  0021A0  0101               	movlb	1	; () banked
 14166  0021A2  6FA7               	movwf	(_API+167)& (0+255),b
 14167  0021A4  0E00               	movlw	0
 14168  0021A6  6FA6               	movwf	(_API+166)& (0+255),b
 14169                           
 14170                           ;api.c: 182: API[84] = 1;
 14171  0021A8  0E00               	movlw	0
 14172  0021AA  0101               	movlb	1	; () banked
 14173  0021AC  6FA9               	movwf	(_API+169)& (0+255),b
 14174  0021AE  0E01               	movlw	1
 14175  0021B0  6FA8               	movwf	(_API+168)& (0+255),b
 14176                           
 14177                           ;api.c: 183: API[85] = 0;
 14178  0021B2  0E00               	movlw	0
 14179  0021B4  0101               	movlb	1	; () banked
 14180  0021B6  6FAB               	movwf	(_API+171)& (0+255),b
 14181  0021B8  0E00               	movlw	0
 14182  0021BA  6FAA               	movwf	(_API+170)& (0+255),b
 14183                           
 14184                           ;api.c: 184: API[86] = 0;
 14185  0021BC  0E00               	movlw	0
 14186  0021BE  0101               	movlb	1	; () banked
 14187  0021C0  6FAD               	movwf	(_API+173)& (0+255),b
 14188  0021C2  0E00               	movlw	0
 14189  0021C4  6FAC               	movwf	(_API+172)& (0+255),b
 14190                           
 14191                           ; BSR set to: 1
 14192  0021C6  0012               	return		;funcret
 14193  0021C8                     __end_of_APIxInitialize:
 14194                           	opt stack 0
 14195                           tblptru	equ	0xFF8
 14196                           tblptrh	equ	0xFF7
 14197                           tblptrl	equ	0xFF6
 14198                           tablat	equ	0xFF5
 14199                           prodh	equ	0xFF4
 14200                           prodl	equ	0xFF3
 14201                           intcon	equ	0xFF2
 14202                           intcon2	equ	0xFF1
 14203                           postinc0	equ	0xFEE
 14204                           wreg	equ	0xFE8
 14205                           postdec1	equ	0xFE5
 14206                           fsr1l	equ	0xFE1
 14207                           indf2	equ	0xFDF
 14208                           postinc2	equ	0xFDE
 14209                           postdec2	equ	0xFDD
 14210                           fsr2h	equ	0xFDA
 14211                           fsr2l	equ	0xFD9
 14212                           status	equ	0xFD8
 14213                           
 14214 ;; *************** function _tc_low *****************
 14215 ;; Defined at:
 14216 ;;		line 146 in file "../Main.c"
 14217 ;; Parameters:    Size  Location     Type
 14218 ;;		None
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;		None
 14221 ;; Return value:  Size  Location     Type
 14222 ;;                  1    wreg      void 
 14223 ;; Registers used:
 14224 ;;		None
 14225 ;; Tracked objects:
 14226 ;;		On entry : 0/0
 14227 ;;		On exit  : 0/0
 14228 ;;		Unchanged: 0/0
 14229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14230 ;;      Params:         0       0       0       0       0       0       0       0       0
 14231 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14232 ;;      Temps:         17       0       0       0       0       0       0       0       0
 14233 ;;      Totals:        17       0       0       0       0       0       0       0       0
 14234 ;;Total ram usage:       17 bytes
 14235 ;; Hardware stack levels used:    1
 14236 ;; Hardware stack levels required when called:    2
 14237 ;; This function calls:
 14238 ;;		Nothing
 14239 ;; This function is called by:
 14240 ;;		Interrupt level 1
 14241 ;; This function uses a non-reentrant model
 14242 ;;
 14243                           
 14244                           	psect	intcodelo
 14245  000018                     __pintcodelo:
 14246                           	opt stack 0
 14247  000018                     _tc_low:
 14248                           	opt stack 22
 14249                           
 14250                           ; BSR set to: 1
 14251                           ;incstack = 0
 14252  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14253  00001A  CFD8 F02E          	movff	status,??_tc_low
 14254  00001E  CFE8 F02F          	movff	wreg,??_tc_low+1
 14255  000022  CFE0 F030          	movff	bsr,??_tc_low+2
 14256  000026  CFFA F031          	movff	pclath,??_tc_low+3
 14257  00002A  CFFB F032          	movff	pclatu,??_tc_low+4
 14258  00002E  CFE9 F033          	movff	fsr0l,??_tc_low+5
 14259  000032  CFEA F034          	movff	fsr0h,??_tc_low+6
 14260  000036  CFE1 F035          	movff	fsr1l,??_tc_low+7
 14261  00003A  CFE2 F036          	movff	fsr1h,??_tc_low+8
 14262  00003E  CFD9 F037          	movff	fsr2l,??_tc_low+9
 14263  000042  CFDA F038          	movff	fsr2h,??_tc_low+10
 14264  000046  CFF3 F039          	movff	prodl,??_tc_low+11
 14265  00004A  CFF4 F03A          	movff	prodh,??_tc_low+12
 14266  00004E  CFF6 F03B          	movff	tblptrl,??_tc_low+13
 14267  000052  CFF7 F03C          	movff	tblptrh,??_tc_low+14
 14268  000056  CFF8 F03D          	movff	tblptru,??_tc_low+15
 14269  00005A  CFF5 F03E          	movff	tablat,??_tc_low+16
 14270  00005E  C03E  FFF5         	movff	??_tc_low+16,tablat
 14271  000062  C03D  FFF8         	movff	??_tc_low+15,tblptru
 14272  000066  C03C  FFF7         	movff	??_tc_low+14,tblptrh
 14273  00006A  C03B  FFF6         	movff	??_tc_low+13,tblptrl
 14274  00006E  C03A  FFF4         	movff	??_tc_low+12,prodh
 14275  000072  C039  FFF3         	movff	??_tc_low+11,prodl
 14276  000076  C038  FFDA         	movff	??_tc_low+10,fsr2h
 14277  00007A  C037  FFD9         	movff	??_tc_low+9,fsr2l
 14278  00007E  C036  FFE2         	movff	??_tc_low+8,fsr1h
 14279  000082  C035  FFE1         	movff	??_tc_low+7,fsr1l
 14280  000086  C034  FFEA         	movff	??_tc_low+6,fsr0h
 14281  00008A  C033  FFE9         	movff	??_tc_low+5,fsr0l
 14282  00008E  C032  FFFB         	movff	??_tc_low+4,pclatu
 14283  000092  C031  FFFA         	movff	??_tc_low+3,pclath
 14284  000096  C030  FFE0         	movff	??_tc_low+2,bsr
 14285  00009A  C02F  FFE8         	movff	??_tc_low+1,wreg
 14286  00009E  C02E  FFD8         	movff	??_tc_low,status
 14287  0000A2  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14288  0000A4  0010               	retfie	
 14289  0000A6                     __end_of_tc_low:
 14290                           	opt stack 0
 14291                           pclatu	equ	0xFFB
 14292                           pclath	equ	0xFFA
 14293                           tblptru	equ	0xFF8
 14294                           tblptrh	equ	0xFF7
 14295                           tblptrl	equ	0xFF6
 14296                           tablat	equ	0xFF5
 14297                           prodh	equ	0xFF4
 14298                           prodl	equ	0xFF3
 14299                           intcon	equ	0xFF2
 14300                           intcon2	equ	0xFF1
 14301                           postinc0	equ	0xFEE
 14302                           fsr0h	equ	0xFEA
 14303                           fsr0l	equ	0xFE9
 14304                           wreg	equ	0xFE8
 14305                           postdec1	equ	0xFE5
 14306                           fsr1h	equ	0xFE2
 14307                           fsr1l	equ	0xFE1
 14308                           bsr	equ	0xFE0
 14309                           indf2	equ	0xFDF
 14310                           postinc2	equ	0xFDE
 14311                           postdec2	equ	0xFDD
 14312                           fsr2h	equ	0xFDA
 14313                           fsr2l	equ	0xFD9
 14314                           status	equ	0xFD8
 14315                           
 14316 ;; *************** function _tc_high *****************
 14317 ;; Defined at:
 14318 ;;		line 150 in file "../Main.c"
 14319 ;; Parameters:    Size  Location     Type
 14320 ;;		None
 14321 ;; Auto vars:     Size  Location     Type
 14322 ;;		None
 14323 ;; Return value:  Size  Location     Type
 14324 ;;                  1    wreg      void 
 14325 ;; Registers used:
 14326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14327 ;; Tracked objects:
 14328 ;;		On entry : 0/0
 14329 ;;		On exit  : 0/0
 14330 ;;		Unchanged: 0/0
 14331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14332 ;;      Params:         0       0       0       0       0       0       0       0       0
 14333 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14334 ;;      Temps:         14       0       0       0       0       0       0       0       0
 14335 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14336 ;;Total ram usage:       14 bytes
 14337 ;; Hardware stack levels used:    1
 14338 ;; Hardware stack levels required when called:    1
 14339 ;; This function calls:
 14340 ;;		_EUSART1_Receive_ISR
 14341 ;;		_EUSART1_Transmit_ISR
 14342 ;; This function is called by:
 14343 ;;		Interrupt level 2
 14344 ;; This function uses a non-reentrant model
 14345 ;;
 14346                           
 14347                           	psect	intcode
 14348  000008                     __pintcode:
 14349                           	opt stack 0
 14350  000008                     _tc_high:
 14351                           	opt stack 22
 14352                           
 14353                           ;incstack = 0
 14354  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14355  00000A  CFFA F020          	movff	pclath,??_tc_high
 14356  00000E  CFFB F021          	movff	pclatu,??_tc_high+1
 14357  000012  ED52  F01D         	call	int_func,f	;refresh shadow registers
 14358                           pclatu	equ	0xFFB
 14359                           pclath	equ	0xFFA
 14360                           tblptru	equ	0xFF8
 14361                           tblptrh	equ	0xFF7
 14362                           tblptrl	equ	0xFF6
 14363                           tablat	equ	0xFF5
 14364                           prodh	equ	0xFF4
 14365                           prodl	equ	0xFF3
 14366                           intcon	equ	0xFF2
 14367                           intcon2	equ	0xFF1
 14368                           postinc0	equ	0xFEE
 14369                           fsr0h	equ	0xFEA
 14370                           fsr0l	equ	0xFE9
 14371                           wreg	equ	0xFE8
 14372                           postdec1	equ	0xFE5
 14373                           fsr1h	equ	0xFE2
 14374                           fsr1l	equ	0xFE1
 14375                           bsr	equ	0xFE0
 14376                           indf2	equ	0xFDF
 14377                           postinc2	equ	0xFDE
 14378                           postdec2	equ	0xFDD
 14379                           fsr2h	equ	0xFDA
 14380                           fsr2l	equ	0xFD9
 14381                           status	equ	0xFD8
 14382                           
 14383                           	psect	intcode_body
 14384  003AA4                     __pintcode_body:
 14385                           	opt stack 22
 14386  003AA4                     int_func:
 14387                           	opt stack 22
 14388  003AA4  0006               	pop		; remove dummy address from shadow register refresh
 14389  003AA6  CFE9 F022          	movff	fsr0l,??_tc_high+2
 14390  003AAA  CFEA F023          	movff	fsr0h,??_tc_high+3
 14391  003AAE  CFE1 F024          	movff	fsr1l,??_tc_high+4
 14392  003AB2  CFE2 F025          	movff	fsr1h,??_tc_high+5
 14393  003AB6  CFD9 F026          	movff	fsr2l,??_tc_high+6
 14394  003ABA  CFDA F027          	movff	fsr2h,??_tc_high+7
 14395  003ABE  CFF3 F028          	movff	prodl,??_tc_high+8
 14396  003AC2  CFF4 F029          	movff	prodh,??_tc_high+9
 14397  003AC6  CFF6 F02A          	movff	tblptrl,??_tc_high+10
 14398  003ACA  CFF7 F02B          	movff	tblptrh,??_tc_high+11
 14399  003ACE  CFF8 F02C          	movff	tblptru,??_tc_high+12
 14400  003AD2  CFF5 F02D          	movff	tablat,??_tc_high+13
 14401                           
 14402                           ;Main.c: 152: if (INTCONbits.TMR0IF)
 14403  003AD6  A4F2               	btfss	intcon,2,c	;volatile
 14404  003AD8  D01F               	goto	i2l6888
 14405                           
 14406                           ;Main.c: 153: {
 14407                           ;Main.c: 154: if(Led1_Counter <= 100)
 14408  003ADA  0100               	movlb	0	; () banked
 14409  003ADC  5177               	movf	(_Led1_Counter+1)& (0+255),w,b
 14410  003ADE  E107               	bnz	i2l94
 14411  003AE0  0E65               	movlw	101
 14412  003AE2  0100               	movlb	0	; () banked
 14413  003AE4  5D76               	subwf	_Led1_Counter& (0+255),w,b
 14414  003AE6  B0D8               	btfsc	status,0,c
 14415  003AE8  D002               	goto	i2l94
 14416                           
 14417                           ; BSR set to: 0
 14418                           ;Main.c: 155: {
 14419                           ;Main.c: 156: PORTAbits.RA4 = 1;
 14420  003AEA  8880               	bsf	3968,4,c	;volatile
 14421                           
 14422                           ;Main.c: 157: }
 14423  003AEC  D001               	goto	i2l6878
 14424  003AEE                     i2l94:
 14425                           
 14426                           ; BSR set to: 0
 14427                           ;Main.c: 158: else
 14428                           ;Main.c: 159: {
 14429                           ;Main.c: 160: PORTAbits.RA4 = 0;
 14430  003AEE  9880               	bcf	3968,4,c	;volatile
 14431  003AF0                     i2l6878:
 14432                           
 14433                           ; BSR set to: 0
 14434                           ;Main.c: 161: }
 14435                           ;Main.c: 162: if(Led1_Counter >= 700)
 14436  003AF0  0EBC               	movlw	188
 14437  003AF2  0100               	movlb	0	; () banked
 14438  003AF4  5D76               	subwf	_Led1_Counter& (0+255),w,b
 14439  003AF6  0E02               	movlw	2
 14440  003AF8  0100               	movlb	0	; () banked
 14441  003AFA  5977               	subwfb	(_Led1_Counter+1)& (0+255),w,b
 14442  003AFC  A0D8               	btfss	status,0,c
 14443  003AFE  D005               	goto	i2l6882
 14444                           
 14445                           ; BSR set to: 0
 14446                           ;Main.c: 163: {
 14447                           ;Main.c: 164: Led1_Counter = 0;
 14448  003B00  0E00               	movlw	0
 14449  003B02  0100               	movlb	0	; () banked
 14450  003B04  6F77               	movwf	(_Led1_Counter+1)& (0+255),b
 14451  003B06  0E00               	movlw	0
 14452  003B08  6F76               	movwf	_Led1_Counter& (0+255),b
 14453  003B0A                     i2l6882:
 14454                           
 14455                           ; BSR set to: 0
 14456                           ;Main.c: 165: }
 14457                           ;Main.c: 166: Led1_Counter++;
 14458  003B0A  0100               	movlb	0	; () banked
 14459  003B0C  4B76               	infsnz	_Led1_Counter& (0+255),f,b
 14460  003B0E  2B77               	incf	(_Led1_Counter+1)& (0+255),f,b
 14461                           
 14462                           ; BSR set to: 0
 14463                           ;Main.c: 167: Update_State_Machine = 1;
 14464  003B10  0E01               	movlw	1
 14465  003B12  0100               	movlb	0	; () banked
 14466  003B14  6F8E               	movwf	_Update_State_Machine& (0+255),b
 14467                           
 14468                           ; BSR set to: 0
 14469                           ;Main.c: 168: INTCONbits.TMR0IF = 0;
 14470  003B16  94F2               	bcf	intcon,2,c	;volatile
 14471  003B18                     i2l6888:
 14472                           
 14473                           ;Main.c: 169: }
 14474                           ;Main.c: 171: if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
 14475  003B18  BA9D               	btfsc	3997,5,c	;volatile
 14476  003B1A  AA9E               	btfss	3998,5,c	;volatile
 14477  003B1C  D002               	goto	i2l6894
 14478                           
 14479                           ;Main.c: 172: EUSART1_Receive_ISR();
 14480  003B1E  EC6C  F020         	call	_EUSART1_Receive_ISR	;wreg free
 14481  003B22                     i2l6894:
 14482                           
 14483                           ;Main.c: 173: }
 14484                           ;Main.c: 174: if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
 14485  003B22  B89D               	btfsc	3997,4,c	;volatile
 14486  003B24  A89E               	btfss	3998,4,c	;volatile
 14487  003B26  D002               	goto	i2l99
 14488                           
 14489                           ;Main.c: 175: EUSART1_Transmit_ISR();
 14490  003B28  EC55  F020         	call	_EUSART1_Transmit_ISR	;wreg free
 14491  003B2C                     i2l99:
 14492  003B2C  C02D  FFF5         	movff	??_tc_high+13,tablat
 14493  003B30  C02C  FFF8         	movff	??_tc_high+12,tblptru
 14494  003B34  C02B  FFF7         	movff	??_tc_high+11,tblptrh
 14495  003B38  C02A  FFF6         	movff	??_tc_high+10,tblptrl
 14496  003B3C  C029  FFF4         	movff	??_tc_high+9,prodh
 14497  003B40  C028  FFF3         	movff	??_tc_high+8,prodl
 14498  003B44  C027  FFDA         	movff	??_tc_high+7,fsr2h
 14499  003B48  C026  FFD9         	movff	??_tc_high+6,fsr2l
 14500  003B4C  C025  FFE2         	movff	??_tc_high+5,fsr1h
 14501  003B50  C024  FFE1         	movff	??_tc_high+4,fsr1l
 14502  003B54  C023  FFEA         	movff	??_tc_high+3,fsr0h
 14503  003B58  C022  FFE9         	movff	??_tc_high+2,fsr0l
 14504  003B5C  C021  FFFB         	movff	??_tc_high+1,pclatu
 14505  003B60  C020  FFFA         	movff	??_tc_high,pclath
 14506  003B64  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14507  003B66  0011               	retfie		f
 14508  003B68                     __end_of_tc_high:
 14509                           	opt stack 0
 14510                           pclatu	equ	0xFFB
 14511                           pclath	equ	0xFFA
 14512                           tblptru	equ	0xFF8
 14513                           tblptrh	equ	0xFF7
 14514                           tblptrl	equ	0xFF6
 14515                           tablat	equ	0xFF5
 14516                           prodh	equ	0xFF4
 14517                           prodl	equ	0xFF3
 14518                           intcon	equ	0xFF2
 14519                           intcon2	equ	0xFF1
 14520                           postinc0	equ	0xFEE
 14521                           fsr0h	equ	0xFEA
 14522                           fsr0l	equ	0xFE9
 14523                           wreg	equ	0xFE8
 14524                           postdec1	equ	0xFE5
 14525                           fsr1h	equ	0xFE2
 14526                           fsr1l	equ	0xFE1
 14527                           bsr	equ	0xFE0
 14528                           indf2	equ	0xFDF
 14529                           postinc2	equ	0xFDE
 14530                           postdec2	equ	0xFDD
 14531                           fsr2h	equ	0xFDA
 14532                           fsr2l	equ	0xFD9
 14533                           status	equ	0xFD8
 14534                           
 14535 ;; *************** function _EUSART1_Transmit_ISR *****************
 14536 ;; Defined at:
 14537 ;;		line 183 in file "../eusart1.c"
 14538 ;; Parameters:    Size  Location     Type
 14539 ;;		None
 14540 ;; Auto vars:     Size  Location     Type
 14541 ;;		None
 14542 ;; Return value:  Size  Location     Type
 14543 ;;                  1    wreg      void 
 14544 ;; Registers used:
 14545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14546 ;; Tracked objects:
 14547 ;;		On entry : 0/0
 14548 ;;		On exit  : 0/0
 14549 ;;		Unchanged: 0/0
 14550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14551 ;;      Params:         0       0       0       0       0       0       0       0       0
 14552 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14553 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14554 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14555 ;;Total ram usage:        0 bytes
 14556 ;; Hardware stack levels used:    1
 14557 ;; This function calls:
 14558 ;;		Nothing
 14559 ;; This function is called by:
 14560 ;;		_tc_high
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           
 14564                           	psect	text41
 14565  0040AA                     __ptext41:
 14566                           	opt stack 0
 14567  0040AA                     _EUSART1_Transmit_ISR:
 14568                           	opt stack 22
 14569                           
 14570                           ;eusart1.c: 186: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
 14571                           
 14572                           ;incstack = 0
 14573  0040AA  0E7E               	movlw	126
 14574  0040AC  601D               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
 14575  0040AE  D012               	goto	i2l528
 14576                           
 14577                           ;eusart1.c: 187: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
 14578  0040B0  501F               	movf	_eusart1TxTail,w,c
 14579  0040B2  0D01               	mullw	1
 14580  0040B4  0E7E               	movlw	low _eusart1TxBuffer
 14581  0040B6  24F3               	addwf	prodl,w,c
 14582  0040B8  6ED9               	movwf	fsr2l,c
 14583  0040BA  0E03               	movlw	high _eusart1TxBuffer
 14584  0040BC  20F4               	addwfc	prodh,w,c
 14585  0040BE  6EDA               	movwf	fsr2h,c
 14586  0040C0  50DF               	movf	indf2,w,c
 14587  0040C2  6EAD               	movwf	4013,c	;volatile
 14588  0040C4  2A1F               	incf	_eusart1TxTail,f,c
 14589                           
 14590                           ;eusart1.c: 188: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
 14591  0040C6  0E7D               	movlw	125
 14592  0040C8  641F               	cpfsgt	_eusart1TxTail,c
 14593  0040CA  D002               	goto	i2l6790
 14594                           
 14595                           ;eusart1.c: 189: eusart1TxTail = 0;
 14596  0040CC  0E00               	movlw	0
 14597  0040CE  6E1F               	movwf	_eusart1TxTail,c
 14598  0040D0                     i2l6790:
 14599                           
 14600                           ;eusart1.c: 190: }
 14601                           ;eusart1.c: 191: eusart1TxBufferRemaining++;
 14602  0040D0  2A1D               	incf	_eusart1TxBufferRemaining,f,c	;volatile
 14603                           
 14604                           ;eusart1.c: 192: } else {
 14605  0040D2  0012               	return	
 14606  0040D4                     i2l528:
 14607                           
 14608                           ;eusart1.c: 193: PIE1bits.TX1IE = 0;
 14609  0040D4  989D               	bcf	3997,4,c	;volatile
 14610  0040D6  0012               	return	
 14611  0040D8                     __end_of_EUSART1_Transmit_ISR:
 14612                           	opt stack 0
 14613                           pclatu	equ	0xFFB
 14614                           pclath	equ	0xFFA
 14615                           tblptru	equ	0xFF8
 14616                           tblptrh	equ	0xFF7
 14617                           tblptrl	equ	0xFF6
 14618                           tablat	equ	0xFF5
 14619                           prodh	equ	0xFF4
 14620                           prodl	equ	0xFF3
 14621                           intcon	equ	0xFF2
 14622                           intcon2	equ	0xFF1
 14623                           postinc0	equ	0xFEE
 14624                           fsr0h	equ	0xFEA
 14625                           fsr0l	equ	0xFE9
 14626                           wreg	equ	0xFE8
 14627                           postdec1	equ	0xFE5
 14628                           fsr1h	equ	0xFE2
 14629                           fsr1l	equ	0xFE1
 14630                           bsr	equ	0xFE0
 14631                           indf2	equ	0xFDF
 14632                           postinc2	equ	0xFDE
 14633                           postdec2	equ	0xFDD
 14634                           fsr2h	equ	0xFDA
 14635                           fsr2l	equ	0xFD9
 14636                           status	equ	0xFD8
 14637                           
 14638 ;; *************** function _EUSART1_Receive_ISR *****************
 14639 ;; Defined at:
 14640 ;;		line 197 in file "../eusart1.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;		None
 14643 ;; Auto vars:     Size  Location     Type
 14644 ;;		None
 14645 ;; Return value:  Size  Location     Type
 14646 ;;                  1    wreg      void 
 14647 ;; Registers used:
 14648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14649 ;; Tracked objects:
 14650 ;;		On entry : 0/0
 14651 ;;		On exit  : 0/0
 14652 ;;		Unchanged: 0/0
 14653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14654 ;;      Params:         0       0       0       0       0       0       0       0       0
 14655 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14656 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14657 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14658 ;;Total ram usage:        0 bytes
 14659 ;; Hardware stack levels used:    1
 14660 ;; This function calls:
 14661 ;;		Nothing
 14662 ;; This function is called by:
 14663 ;;		_tc_high
 14664 ;; This function uses a non-reentrant model
 14665 ;;
 14666                           
 14667                           	psect	text42
 14668  0040D8                     __ptext42:
 14669                           	opt stack 0
 14670  0040D8                     _EUSART1_Receive_ISR:
 14671                           	opt stack 22
 14672                           
 14673                           ;eusart1.c: 198: if (1 == RCSTA1bits.OERR) {
 14674                           
 14675                           ;incstack = 0
 14676  0040D8  A2AB               	btfss	4011,1,c	;volatile
 14677  0040DA  D002               	goto	i2l6770
 14678                           
 14679                           ;eusart1.c: 201: RCSTA1bits.CREN = 0;
 14680  0040DC  98AB               	bcf	4011,4,c	;volatile
 14681                           
 14682                           ;eusart1.c: 202: RCSTA1bits.CREN = 1;
 14683  0040DE  88AB               	bsf	4011,4,c	;volatile
 14684  0040E0                     i2l6770:
 14685                           
 14686                           ;eusart1.c: 203: }
 14687                           ;eusart1.c: 206: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 14688  0040E0  501B               	movf	_eusart1RxHead,w,c
 14689  0040E2  0D01               	mullw	1
 14690  0040E4  0E00               	movlw	low _eusart1RxBuffer
 14691  0040E6  24F3               	addwf	prodl,w,c
 14692  0040E8  6ED9               	movwf	fsr2l,c
 14693  0040EA  0E03               	movlw	high _eusart1RxBuffer
 14694  0040EC  20F4               	addwfc	prodh,w,c
 14695  0040EE  6EDA               	movwf	fsr2h,c
 14696  0040F0  CFAE FFDF          	movff	4014,indf2	;volatile
 14697  0040F4  2A1B               	incf	_eusart1RxHead,f,c
 14698                           
 14699                           ;eusart1.c: 207: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
 14700  0040F6  0E7D               	movlw	125
 14701  0040F8  641B               	cpfsgt	_eusart1RxHead,c
 14702  0040FA  D002               	goto	i2l6778
 14703                           
 14704                           ;eusart1.c: 208: eusart1RxHead = 0;
 14705  0040FC  0E00               	movlw	0
 14706  0040FE  6E1B               	movwf	_eusart1RxHead,c
 14707  004100                     i2l6778:
 14708                           
 14709                           ;eusart1.c: 209: }
 14710                           ;eusart1.c: 210: eusart1RxCount++;
 14711  004100  2A1A               	incf	_eusart1RxCount,f,c	;volatile
 14712  004102  0012               	return		;funcret
 14713  004104                     __end_of_EUSART1_Receive_ISR:
 14714                           	opt stack 0
 14715                           pclatu	equ	0xFFB
 14716                           pclath	equ	0xFFA
 14717                           tblptru	equ	0xFF8
 14718                           tblptrh	equ	0xFF7
 14719                           tblptrl	equ	0xFF6
 14720                           tablat	equ	0xFF5
 14721                           prodh	equ	0xFF4
 14722                           prodl	equ	0xFF3
 14723                           intcon	equ	0xFF2
 14724                           intcon2	equ	0xFF1
 14725                           postinc0	equ	0xFEE
 14726                           fsr0h	equ	0xFEA
 14727                           fsr0l	equ	0xFE9
 14728                           wreg	equ	0xFE8
 14729                           postdec1	equ	0xFE5
 14730                           fsr1h	equ	0xFE2
 14731                           fsr1l	equ	0xFE1
 14732                           bsr	equ	0xFE0
 14733                           indf2	equ	0xFDF
 14734                           postinc2	equ	0xFDE
 14735                           postdec2	equ	0xFDD
 14736                           fsr2h	equ	0xFDA
 14737                           fsr2l	equ	0xFD9
 14738                           status	equ	0xFD8
 14739                           pclatu	equ	0xFFB
 14740                           pclath	equ	0xFFA
 14741                           tblptru	equ	0xFF8
 14742                           tblptrh	equ	0xFF7
 14743                           tblptrl	equ	0xFF6
 14744                           tablat	equ	0xFF5
 14745                           prodh	equ	0xFF4
 14746                           prodl	equ	0xFF3
 14747                           intcon	equ	0xFF2
 14748                           intcon2	equ	0xFF1
 14749                           postinc0	equ	0xFEE
 14750                           fsr0h	equ	0xFEA
 14751                           fsr0l	equ	0xFE9
 14752                           wreg	equ	0xFE8
 14753                           postdec1	equ	0xFE5
 14754                           fsr1h	equ	0xFE2
 14755                           fsr1l	equ	0xFE1
 14756                           bsr	equ	0xFE0
 14757                           indf2	equ	0xFDF
 14758                           postinc2	equ	0xFDE
 14759                           postdec2	equ	0xFDD
 14760                           fsr2h	equ	0xFDA
 14761                           fsr2l	equ	0xFD9
 14762                           status	equ	0xFD8
 14763                           
 14764                           	psect	rparam
 14765  0000                     pclatu	equ	0xFFB
 14766                           pclath	equ	0xFFA
 14767                           tblptru	equ	0xFF8
 14768                           tblptrh	equ	0xFF7
 14769                           tblptrl	equ	0xFF6
 14770                           tablat	equ	0xFF5
 14771                           prodh	equ	0xFF4
 14772                           prodl	equ	0xFF3
 14773                           intcon	equ	0xFF2
 14774                           intcon2	equ	0xFF1
 14775                           postinc0	equ	0xFEE
 14776                           fsr0h	equ	0xFEA
 14777                           fsr0l	equ	0xFE9
 14778                           wreg	equ	0xFE8
 14779                           postdec1	equ	0xFE5
 14780                           fsr1h	equ	0xFE2
 14781                           fsr1l	equ	0xFE1
 14782                           bsr	equ	0xFE0
 14783                           indf2	equ	0xFDF
 14784                           postinc2	equ	0xFDE
 14785                           postdec2	equ	0xFDD
 14786                           fsr2h	equ	0xFDA
 14787                           fsr2l	equ	0xFD9
 14788                           status	equ	0xFD8
 14789                           
 14790                           	psect	temp
 14791  000040                     btemp:
 14792                           	opt stack 0
 14793  000040                     	ds	1
 14794  0000                     int$flags	set	btemp
 14795                           pclatu	equ	0xFFB
 14796                           pclath	equ	0xFFA
 14797                           tblptru	equ	0xFF8
 14798                           tblptrh	equ	0xFF7
 14799                           tblptrl	equ	0xFF6
 14800                           tablat	equ	0xFF5
 14801                           prodh	equ	0xFF4
 14802                           prodl	equ	0xFF3
 14803                           intcon	equ	0xFF2
 14804                           intcon2	equ	0xFF1
 14805                           postinc0	equ	0xFEE
 14806                           fsr0h	equ	0xFEA
 14807                           fsr0l	equ	0xFE9
 14808                           wreg	equ	0xFE8
 14809                           postdec1	equ	0xFE5
 14810                           fsr1h	equ	0xFE2
 14811                           fsr1l	equ	0xFE1
 14812                           bsr	equ	0xFE0
 14813                           indf2	equ	0xFDF
 14814                           postinc2	equ	0xFDE
 14815                           postdec2	equ	0xFDD
 14816                           fsr2h	equ	0xFDA
 14817                           fsr2l	equ	0xFD9
 14818                           status	equ	0xFD8


Data Sizes:
    Strings     45
    Constant    11
    Data        11
    BSS         720
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      63
    BANK0           160     34     133
    BANK1           256      0     174
    BANK2           256      0     174
    BANK3           256      0     252
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), Data(BANK0[10]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_8(CODE[10]), STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[7]), 
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    Pcomm_List2	PTR unsigned int  size(2) Largest target is 32
		 -> NULL(NULL[0]), Comm_List(BANK0[32]), 

    Pcomm_List	PTR unsigned int  size(2) Largest target is 32
		 -> NULL(NULL[0]), Comm_List(BANK0[32]), 

    pLen	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), Data(BANK0[10]), 

    pData	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), Data(BANK0[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _tc_low in COMRAM

    None.

Critical Paths under _tc_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_READxRECEIVEDxMESSAGE
    _Update_StateMchn->_Train_Path
    _Train_Path->_Left_Mountain_From_The_Left
    _Train_Path->_Left_Mountain_From_The_Right
    _Train_Path->_Right_Mountain_From_The_Left
    _Train_Path->_Right_Mountain_From_The_Right
    _Train_Move_Right_Start->_SETxPWM
    _Train_Move_Right_Brake->_SETxPWM
    _Train_Move_Left_Start->_SETxPWM
    _Train_Move_Left_Brake->_SETxPWM
    _Right_Mountain_From_The_Right->_SETxPWM
    _Right_Mountain_From_The_Left->_SETxPWM
    _Left_Mountain_From_The_Right->_SETxPWM
    _Left_Mountain_From_The_Left->_SETxPWM
    _SETxPWM->_SETxAPIxVAL
    _Junction->_SETxAPIxVAL
    _Eeprom_Store->_GETxAPIxVAL
    _Debounce_Inputs->_SETxAPIxVAL
    _SetDCPWM1->_GETxAPIxVAL
    _READxRECEIVEDxMESSAGE->_TranslateMessage
    _TranslateMessage->_printf
    _atoi->___wmul
    _SETxAPIxVALxNoxRET->_GETxAPIxVAL
    _Init_Pwm->_SETxAPIxVAL
    _SETxAPIxVAL->_SENDxMESSAGE
    _DIAGNOSTICxTOxPC->_SendMessage
    _SendMessage->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _tc_low in BANK0

    None.

Critical Paths under _tc_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_low in BANK1

    None.

Critical Paths under _tc_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_low in BANK2

    None.

Critical Paths under _tc_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_low in BANK3

    None.

Critical Paths under _tc_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_low in BANK4

    None.

Critical Paths under _tc_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_low in BANK5

    None.

Critical Paths under _tc_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tc_low in BANK6

    None.

Critical Paths under _tc_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tc_low in BANK7

    None.

Critical Paths under _tc_high in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  181812
                     _APIxInitialize
                   _DIAGNOSTICxTOxPC
                 _EUSART1_Initialize
                           _Init_Pwm
                        _Init_Timers
              _READxRECEIVEDxMESSAGE
                   _Update_StateMchn
 ---------------------------------------------------------------------------------
 (1) _Update_StateMchn                                     2     2      0  164770
                                             20 BANK0      2     2      0
                    _Debounce_Inputs
                       _Eeprom_Store
                        _GETxAPIxVAL
                          _Green_Led
                           _Junction
                            _Red_Led
                        _SETxAPIxVAL
                 _SETxAPIxVALxNoxRET
                            _SETxPWM
                         _Train_Path
 ---------------------------------------------------------------------------------
 (2) _Train_Path                                           2     1      1  130252
                                             18 BANK0      2     1      1
                        _GETxAPIxVAL
                           _Junction
        _Left_Mountain_From_The_Left
       _Left_Mountain_From_The_Right
       _Right_Mountain_From_The_Left
      _Right_Mountain_From_The_Right
                        _SETxAPIxVAL
              _Train_Move_Left_Brake
              _Train_Move_Left_Start
             _Train_Move_Right_Brake
             _Train_Move_Right_Start
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Right_Start                               0     0      0   17822
                        _GETxAPIxVAL
                        _SETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Right_Brake                               0     0      0   17822
                        _GETxAPIxVAL
                        _SETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Left_Start                                0     0      0   17822
                        _GETxAPIxVAL
                        _SETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Train_Move_Left_Brake                                0     0      0   17822
                        _GETxAPIxVAL
                        _SETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Right_Mountain_From_The_Right                        1     1      0   10457
                                             17 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Right_Mountain_From_The_Left                         1     1      0   10457
                                             17 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Left_Mountain_From_The_Right                         1     1      0   10457
                                             17 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (3) _Left_Mountain_From_The_Left                          1     1      0   10457
                                             17 BANK0      1     1      0
                        _GETxAPIxVAL
                            _SETxPWM
 ---------------------------------------------------------------------------------
 (4) _SETxPWM                                              7     4      3   10333
                                             10 BANK0      7     4      3
                        _GETxAPIxVAL (ARG)
                        _SETxAPIxVAL
 ---------------------------------------------------------------------------------
 (3) _Junction                                             2     1      1    8506
                                             10 BANK0      2     1      1
                        _GETxAPIxVAL
                        _SETxAPIxVAL
 ---------------------------------------------------------------------------------
 (2) _Red_Led                                              1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Green_Led                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Eeprom_Store                                         0     0      0      31
                        _GETxAPIxVAL
 ---------------------------------------------------------------------------------
 (2) _Debounce_Inputs                                      2     2      0    7665
                                             10 BANK0      2     2      0
                        _GETxAPIxVAL
                        _SETxAPIxVAL
                          _SetDCPWM1
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM1                                            6     4      2     176
                                              3 BANK0      6     4      2
                        _GETxAPIxVAL (ARG)
 ---------------------------------------------------------------------------------
 (1) _READxRECEIVEDxMESSAGE                                4     4      0    6720
                                             30 BANK0      4     4      0
                       _EUSART1_Read
                   _TranslateMessage
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TranslateMessage                                     4     4      0    4692
                                             26 BANK0      4     4      0
                         _GETxAPIxRW
                        _GETxAPIxVAL
                       _SENDxMESSAGE
                 _SETxAPIxVALxNoxRET
                               _atoi
                             _printf
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1050
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _SETxAPIxVALxNoxRET                                   5     3      2     432
                                              3 BANK0      5     3      2
                        _GETxAPIxVAL (ARG)
 ---------------------------------------------------------------------------------
 (4) _GETxAPIxVAL                                          3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _GETxAPIxRW                                           3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Pwm                                             0     0      0    7458
                        _SETxAPIxVAL
 ---------------------------------------------------------------------------------
 (5) _SETxAPIxVAL                                          5     3      2    7458
                                              5 BANK0      5     3      2
                       _SENDxMESSAGE
 ---------------------------------------------------------------------------------
 (6) _SENDxMESSAGE                                         5     3      2     804
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Initialize                                   2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DIAGNOSTICxTOxPC                                     2     2      0    2669
                                             29 BANK0      2     2      0
                        _SendMessage
 ---------------------------------------------------------------------------------
 (2) _SendMessage                                          3     1      2    2669
                                             26 BANK0      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              23    17      6    1991
                                             12 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _APIxInitialize                                       2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _tc_low                                              17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _tc_high                                             14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APIxInitialize
   _DIAGNOSTICxTOxPC
     _SendMessage
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
   _EUSART1_Initialize
   _Init_Pwm
     _SETxAPIxVAL
       _SENDxMESSAGE
   _Init_Timers
   _READxRECEIVEDxMESSAGE
     _EUSART1_Read
     _TranslateMessage
       _GETxAPIxRW
       _GETxAPIxVAL
       _SENDxMESSAGE
       _SETxAPIxVALxNoxRET
         _GETxAPIxVAL (ARG)
       _atoi
         ___wmul
         _isdigit
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _Update_StateMchn
     _Debounce_Inputs
       _GETxAPIxVAL
       _SETxAPIxVAL
         _SENDxMESSAGE
       _SetDCPWM1
         _GETxAPIxVAL (ARG)
     _Eeprom_Store
       _GETxAPIxVAL
     _GETxAPIxVAL
     _Green_Led
     _Junction
       _GETxAPIxVAL
       _SETxAPIxVAL
         _SENDxMESSAGE
     _Red_Led
     _SETxAPIxVAL
       _SENDxMESSAGE
     _SETxAPIxVALxNoxRET
       _GETxAPIxVAL (ARG)
     _SETxPWM
       _GETxAPIxVAL (ARG)
       _SETxAPIxVAL (ARG)
         _SENDxMESSAGE
     _Train_Path
       _GETxAPIxVAL
       _Junction
         _GETxAPIxVAL
         _SETxAPIxVAL
           _SENDxMESSAGE
       _Left_Mountain_From_The_Left
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _SENDxMESSAGE
       _Left_Mountain_From_The_Right
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _SENDxMESSAGE
       _Right_Mountain_From_The_Left
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _SENDxMESSAGE
       _Right_Mountain_From_The_Right
         _GETxAPIxVAL
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _SENDxMESSAGE
       _SETxAPIxVAL
         _SENDxMESSAGE
       _Train_Move_Left_Brake
         _GETxAPIxVAL
         _SETxAPIxVAL
           _SENDxMESSAGE
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _SENDxMESSAGE
       _Train_Move_Left_Start
         _GETxAPIxVAL
         _SETxAPIxVAL
           _SENDxMESSAGE
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _SENDxMESSAGE
       _Train_Move_Right_Brake
         _GETxAPIxVAL
         _SETxAPIxVAL
           _SENDxMESSAGE
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _SENDxMESSAGE
       _Train_Move_Right_Start
         _GETxAPIxVAL
         _SETxAPIxVAL
           _SENDxMESSAGE
         _SETxPWM
           _GETxAPIxVAL (ARG)
           _SETxAPIxVAL (ARG)
             _SENDxMESSAGE

 _tc_low (ROOT)

 _tc_high (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FC      11       98.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      AE       9       68.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      AE       7       68.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     22      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      3F       1       67.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     31C      20        0.0%
DATA                 0      0     31C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu Nov 23 20:07:58 2017

                  _eusart1TxBufferRemaining 001D                           ?_DIAGNOSTICxTOxPC 0020  
                                        bsr 000FE0                         ___wmul@multiplicand 00BB  
                               __CFG_BORV$3 000000                                 ?_GETxAPIxRW 00B9  
                              __CFG_CP0$OFF 000000                          ??_DIAGNOSTICxTOxPC 00D6  
                              __CFG_CP1$OFF 000000                                __CFG_CP2$OFF 000000  
                              __CFG_CP3$OFF 000000                                         l170 085E  
                                       l326 1336                                         l522 41D4  
                                       l346 1416                                         l357 21FC  
                                       l721 39F4                                         l801 3D22  
                                       l730 3A74                                         l810 3C16  
                                       l724 3A22                                         l733 3A98  
                                       l813 3C4E                                         l727 3A46  
                                       l808 3C12                                         l817 3C86  
                                       l792 3CAE                                         l794 3CB2  
                                       l797 3CEA                                         _API 0100  
                              __CFG_CPB$OFF 000000                                _Stop_Program 0016  
                                       _PR2 000FCB                                __CFG_CPD$OFF 000000  
                              __CFG_BOR$OFF 000000                                         prod 000FF3  
                                       wreg 000FE8                      ?_READxRECEIVEDxMESSAGE 0020  
          Train_Move_Right_Start@Return_Val 00E3                                ?_GETxAPIxVAL 00B9  
                                _Diag_Comm2 0072                             APIxInitialize@i 00B9  
                              __CFG_LVP$OFF 000000         __end_of_Left_Mountain_From_The_Left 37D0  
               _Left_Mountain_From_The_Left 36BE                                __CFG_WDT$OFF 000000  
     __end_of_Right_Mountain_From_The_Right 35AA      __size_of_Right_Mountain_From_The_Right 0114  
             _Right_Mountain_From_The_Right 3496                                        l1423 39C8  
                                      l1673 3EA6                                        l1683 3F08  
                                      l8000 398A                                        l8002 3990  
                                      l7320 26AC                                        l7312 2666  
                                      l7304 2620                                        l8112 16D4  
                                      l8104 16B8                                        l8032 1524  
                                      l8024 14EC                                        l9000 0F14  
                                      l8106 16CA                                        l8026 14FE  
                                      l8018 14E2                                        l9002 0F20  
                                      l9010 0F5C                                        l7420 3E62  
                                      l8212 197C                                        l8204 195A  
                                      l8132 1754                                        l8124 1738  
                                      l8116 16E6                                        l8052 1590  
                                      l8044 1558                                        l8036 1536  
                                      l9100 1116                                        l9020 0F8A  
                                      l7430 3E98                                        l7422 3E68  
                                      l8206 196C                                        l8126 174A  
                                      l8118 1712                                        l8046 156A  
                                      l8038 154E                                        l9110 1136  
                                      l9102 112A                                        l9022 0F8E  
                                      l9030 0FA0                                        l7440 3ED0  
                                      l7344 277E                                        l7336 2738  
                                      l7328 26F2                                        l7408 4124  
                                      l8312 1BCA                                        l8304 1BAE  
                                      l8232 1A06                                        l8224 19E4  
                                      l8216 198E                                        l8152 17DE  
                                      l8144 17BC                                        l8136 1766  
                                      l8072 15FC                                        l8064 15C4  
                                      l8056 15A2                                        l7600 3490  
                                      l7520 32BA                                        l7504 3252  
                                      l8400 21EA                                        l9120 117A  
                                      l9112 113E                                        l9104 112E  
                                      l9040 0FD2                                        l9024 0F92  
                                      l9008 0F2E                                        l7418 3E56  
                                      l7442 3ED6                                        l8306 1BC0  
                                      l8226 19F6                                        l8218 19BA  
                                      l8146 17CE                                        l8138 1792  
                                      l8066 15D6                                        l8058 15BA  
                                      l7610 3152                                        l7530 32F6  
                                      l7514 327C                                        l9210 12C0  
                                      l9106 1132                                        l9018 0F86  
                                      l8316 1BDC                                        l8252 1A86  
                                      l8244 1A6A                                        l8236 1A18  
                                      l8172 1868                                        l8164 1846  
                                      l8156 17F0                                        l8092 1668  
                                      l8084 1630                                        l8076 160E  
                                      l7460 2AAC                                        l7452 2A40  
                                      l7700 3104                                        l7620 317E  
                                      l7540 3348                                        l7524 32E4  
                                      l7508 3270                                        l8500 23BC  
                                      l8420 2254                                        l8412 2220  
                                      l8404 2204                                        l9220 132A  
                                      l9212 12F2                                        l9036 0FCE  
                                      l7446 3EFA                                        l7438 3EC4  
                                      l7286 258C                                        l7358 27CC  
                                      l8246 1A7C                                        l8238 1A44  
                                      l8166 1858                                        l8158 181C  
                                      l8086 1642                                        l8078 1626  
                                      l7462 2ABE                                        l7454 2A48  
                                      l7382 3BC4                                        l7702 311E  
                                      l7630 31BA                                        l7606 3126  
                                      l7534 3326                                        l8414 2232  
                                      l9230 1358                                        l9134 11F0  
                                      l9118 114C                                        l9070 1056  
                                      l9062 101C                                        l9046 0FE0  
                                      l9126 1188                                        l9400 2886  
                                      l7296 25DA                                        l8272 1AF2  
                                      l8264 1AD6                                        l8256 1A98  
                                      l8192 18F2                                        l8184 18D0  
                                      l8176 187A                                        l8096 167A  
                                      l7480 2B7A                                        l7464 2AF0  
                                      l7456 2A7A                                        l7472 2B34  
                                      l7720 3700                                        l7800 3678  
                                      l7560 339E                                        l7552 3376  
                                      l7640 321E                                        l7624 31A8  
                                      l7616 3178                                        l7528 32F0  
                                      l7544 3354                                        l8600 2514  
                                      l8520 240C                                        l8440 22BE  
                                      l8432 228A                                        l8424 226E  
                                      l8408 2212                                        l9224 133E  
                                      l9216 1316                                        l9128 11D6  
                                      l9080 1096                                        l9072 105A  
                                      l9056 100E                                        l9330 2F1E  
                                      l9322 2EC4                                        l8266 1AE8  
                                      l8258 1AB0                                        l8186 18E2  
                                      l8178 18A6                                        l8098 1692  
                                      l8354 3CD6                                        l8370 3D26  
                                      l7474 2B44                                        l7714 36E8  
                                      l7562 33A6                                        l7642 3224  
                                      l7650 324A                                        l7546 336E  
                                      l8530 244A                                        l8522 241E  
                                      l8610 2580                                        l8418 2236  
                                      l9234 1364                                        l9138 11FC  
                                      l9090 10D6                                        l9066 104A  
                                      l8700 2C60                                        l8292 1B5E  
                                      l8284 1B42                                        l8276 1B04  
                                      l8196 1904                                        l8364 3D0E  
                                      l8348 3CB6                                        l8380 3C3A  
                                      l7484 2B8E                                        l7476 2B4C  
                                      l7468 2B22                                        l7492 2BDC  
                                      l7740 3780                                        l7716 36F8  
                                      l7708 36C4                                        l7804 3694  
                                      l7812 36AA                                        l7820 349C  
                                      l7572 340C                                        l7556 3394  
                                      l7644 3228                                        l7636 31F2  
                                      l8604 2524                                        l8532 244E  
                                      l8524 2422                                        l8460 22FC  
                                      l8452 22D0                                        l8444 22C4  
                                      l8428 227C                                        l9244 1380  
                                      l9148 1218                                        l9068 104E  
                                      l8286 1B54                                        l8278 1B1C  
                                      l8198 1930                                        l8358 3CEE  
                                      l8390 3C72                                        l8374 3C1A  
                                      l7494 2BF2                                        l7750 37B0  
                                      l7806 369E                                        l7814 36B8  
                                      l7670 304C                                        l7574 3412  
                                      l8550 249E                                        l8534 2460  
                                      l8526 2434                                        l8542 247A  
                                      l8438 22A0                                        l9254 139C  
                                      l9158 1234                                        l9094 10FA  
                                      l9078 1068                                        l9086 10A4  
                                      l9440 2980                                        l9432 294E  
                                      l9424 291C                                        l9416 28EA  
                                      l9408 28B8                                        l8712 2CC4  
                                      l8704 2C82                                        l9352 2F5E  
                                      l9360 2F8C                                        l9344 2F4C  
                                      l9336 2F32                                        l8296 1B70  
                                      l8384 3C52                                        l7744 378C  
                                      l7752 37B4                                        l7736 374E  
                                      l7912 389A                                        l7920 38C4  
                                      l7904 385E                                        l7808 36A2  
                                      l7832 34D8                                        l7672 3052  
                                      l7664 3026                                        l7656 2FF4  
                                      l7568 33E2                                        l7648 3230  
                                      l8544 2498                                        l8536 2464  
                                      l8528 2438                                        l8480 2366  
                                      l8472 233A                                        l8448 22CA  
                                      l8608 252C                                        l9272 13F6  
                                      l9168 1250                                        l9096 1108  
                                      l9088 10D2                                        l8714 2CD6  
                                      l9338 2F36                                        l8298 1B88  
                                      l7770 35D4                                        l7826 34C0  
                                      l7682 308E                                        l7594 3470  
                                      l7578 3416                                        l8562 24AA  
                                      l8570 24BE                                        l8458 22DE  
                                      l9266 13B8                                        l9178 126C  
                                      l8810 0A38                                        l8802 0984  
                                      l9282 141E                                        l7932 2D70  
                                      l9460 2A32                                        l8724 2D1E  
                                      l8708 2CA4                                        l9356 2F6E  
                                      l9348 2F54                                        l8396 3C8A  
                                      l7748 37A6                                        l7756 37BC  
                                      l7916 38B6                                        l7908 388E  
                                      l7924 38CC                                        l7772 35E4  
                                      l7764 35B0                                        l7860 3580  
                                      l7852 355A                                        l7828 34D0  
                                      l7692 30F2                                        l7676 307C  
                                      l7588 344C                                        l8580 24EC  
                                      l8572 24DC                                        l8556 24A4  
                                      l8476 2350                                        l8468 2324  
                                      l9276 140A                                        l9268 13D2  
                                      l9188 1288                                        l8900 0C8E  
                                      l9284 1434                                        l7942 2DB4  
                                      l9374 2FC0                                        l7758 37CA  
                                      l7918 38C0                                        l7926 38DA  
                                      l7862 358A                                        l7870 35A4  
                                      l7598 3476                                        l9198 12A4  
                                      l8830 0ADA                                        l8814 0A7A  
                                      l8806 09BA                                        l8736 1BFE  
                                      l7952 2DE4                                        l7936 2D84  
                                      l9448 29B2                                        l9392 284C  
                                      l8672 4040                                        l8728 2D40  
                                      l9368 2FBA                                        l9376 2FD8  
                                      l7792 363A                                        l7776 35EC  
                                      l7856 3566                                        l7864 358E  
                                      l7848 3528                                        l7696 30FC  
                                      l7688 30C6                                        l8592 2504  
                                      l8584 24F4                                        l8576 24E4  
                                      l8912 0CD6                                        l8824 0AB6  
                                      l9544 3E2E                                        l8746 1C52  
                                      l7970 2E34                                        l7954 2DEA  
                                      l9458 29E4                                        l8682 406A  
                                      l7882 37F8                                        l8922 0D08  
                                      l8906 0CB2                                        l8842 0B22  
                                      l8818 0A8A                                        l9538 3E1C  
                                      l7972 2E3A                                        l9388 2830  
                                      l7884 3808                                        l7876 37D6  
                                      l7796 366C                                        l7868 3596  
                                      l8596 250C                                        l8588 24FC  
                                      l8916 0CFA                                        l8836 0AFE  
                                      l8780 08A0                                        l7966 2E20  
                                      l7982 38E2                                        l8942 0DCA  
                                      l8918 0CFE                                        l8854 0B6C  
                                      l8846 0B44                                        l8774 0866  
                                      l7976 2E8C                                        l7984 38E8  
                                      l7888 3810                                        l8952 0E1C  
                                      l8872 0BEE                                        l8848 0B48  
                                      l8792 0914                                        l7978 2E98  
                                      l7994 392E                                        l8970 0E88  
                                      l8962 0E5C                                        l8946 0DFA  
                                      l8882 0C22                                        l8858 0B7C  
                                      l8786 08DA                                        l8980 0EAA  
                                      l8956 0E34                                        l8948 0E02  
                                      l8876 0BFE                                        l7998 3940  
                                      l8982 0EB6                                        l8974 0E9E  
                                      l8990 0EF2                                        l8966 0E7A  
                                      l8958 0E38                                        l8894 0C6A  
                                      l8798 094E                                        STR_1 0816  
                                      l8976 0EA2                                        l8888 0C46  
                                      STR_2 081D                                        STR_3 0824  
                                      l8994 0F08                                        l8978 0EA6  
                                      STR_4 082B                                        STR_5 0832  
                                      l8996 0F0C                                        l8988 0EC4  
                                      STR_6 0824                                        STR_7 082B  
                                      l8998 0F10                                        STR_8 080C  
            Right_Mountain_From_The_Left@rc 00CA                                        u6310 3F3A  
                                      u7120 153E                                        u7210 1682  
                                      u7150 15AA                                        u7126 1540  
                                      u7400 190C                                        u7320 17F8  
                                      u7240 16EE                                        u7216 1684  
                                      u7410 190E                                        u7330 17FA  
                                      u7250 16F0                                        u6460 401E  
                                      u7180 1616                                        u7156 15AC  
                                      u7095 3FBC                                        u8240 2C92  
                                      u7520 1AA0                                        u7440 1996  
                                      u7360 1882                                        u7280 176E  
                                      u7610 1BE4                                        u7450 1998  
                                      u7370 1884                                        u7290 1770  
                                      u7186 1618                                        u9300 29C0  
                                      u8420 09E4                                        i2l94 3AEE  
                                      u9230 2862                                        u7550 1B0C  
                                      u7526 1AA2                                        u8430 0A62  
                                      u9240 2894                                        u8280 2D2E  
                                      u7616 1BE6                                        u7480 1A20  
                                      u9250 28C6                                        u7490 1A22  
                                      i2l99 3B2C                                        u9260 28F8  
                                      u7580 1B78                                        u7556 1B0E  
                                      u9270 292A                                        u9280 295C  
                                      u8720 0DF4                                        u9290 298E  
                                      u7586 1B7A                                __CFG_WDTPS$1 000000  
                                      _TXIF 007CF4                                        _Data 00AF  
                              __CFG_PWRT$ON 000000                      __end_of_APIxInitialize 21C8  
            __size_of_Train_Move_Left_Brake 0132               __end_of_Train_Move_Left_Brake 3124  
                                      _pLen 007C                                        _atoi 38E0  
                                      _main 3DC0                               ?_EUSART1_Read 0020  
            __size_of_Train_Move_Left_Start 0122                             __end_of_SETxPWM 3C0C  
                                      fsr0h 000FEA                                        fsr1h 000FE2  
                                      fsr0l 000FE9                                        fsr2h 000FDA  
                                      fsr1l 000FE1                                        indf2 000FDF  
                                      fsr2l 000FD9                                        btemp 0040  
             __end_of_Train_Move_Left_Start 3496                                        pclat 000FFA  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 00A6                             __end_of_DataLen 080C  
                             __CFG_IESO$OFF 000000                 EUSART1_Initialize@baud_rate 00B9  
                        Green_Led@Operation 00B9                               __CFG_MCLRE$ON 000000  
                              ___param_bank 000010                               ??_Init_Timers 003F  
                           __end_of_Red_Led 3CA8                               __CFG_PLLDIV$5 000000  
                            __CFG_CCP2MX$ON 000000                                       ?_atoi 00BF  
                                     ?_main 0020                                       _EEADR 000FA9  
                                     _CMCON 000FB4                            Red_Led@Operation 00B9  
                                     _T0CON 000FD5                  __end_of_SETxAPIxVALxNoxRET 403A  
                                     _T2CON 000FCA                             __end_of___lwdiv 3EB0  
                              SETxPWM@speed 00C3                             __end_of___lwmod 3F12  
                                     i2l528 40D4                                       _TMR0H 000FD7  
                                     _TMR0L 000FD6                                       _SPBRG 000FAF  
                             __CFG_USBDIV$2 000000                                       _TRISA 000F92  
                                     _TRISB 000F93                                       _TRISC 000F94  
                                     _TRISD 000F95                                       _TRISE 000F96  
                             __CFG_WRT0$OFF 000000                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                               __CFG_WRT3$OFF 000000  
                      _EUSART1_Transmit_ISR 40AA                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
                             __CFG_WRTB$OFF 000000                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                                       _pData 0009  
                            __CFG_EBTRB$OFF 000000                             __end_of_dpowers 080B  
                           __end_of_isdigit 412E                             __end_of_tc_high 3B68  
                                     atoi@a 00C4                                       atoi@s 00BF  
                                     _putch 41D0                                       tablat 000FF5  
                           ?_APIxInitialize 0020                              ??_EUSART1_Read 003F  
                                     status 000FD8   Train_Move_Left_Brake@Train_Move_Wait_Time 0062  
                 __size_of_TranslateMessage 016A                         __size_of_GETxAPIxRW 0020  
                            __CFG_ICPRT$OFF 000000                        __end_of_Eeprom_Store 3AA4  
                           __initialization 3D44                                __end_of_atoi 39D2  
                __end_of_EUSART1_Initialize 3FB2                                __end_of_main 3E38  
                             ??_SendMessage 003F                            __end_of_Init_Pwm 4178  
                                    ??_atoi 00C1                                      ??_main 003F  
                       __end_of_Init_Timers 41D0                               __activetblptr 000002  
                          __end_of_Junction 2BF8                                _Led1_Counter 0076  
                                _Pcomm_List 0001                           _Green_Led_Counter 0074  
                     ?_EUSART1_Transmit_ISR 0020                           ?_Update_StateMchn 0020  
                        ??_Update_StateMchn 00CD                                      _ADCON1 000FC1  
                                    _EEDATA 000FA8                                      _CCPR1L 000FBE  
                                 ??_SETxPWM 00C6                                      _EECON2 000FA7  
                                    ?_putch 0020                                      _API_RW 0200  
                        __size_of_Green_Led 009C                                      _INTCON 000FF2  
                                    i2l6770 40E0                                      i2l6790 40D0  
                                    i2l6778 4100                                      i2l6882 3B0A  
                                    i2l6894 3B22                                      i2l6878 3AF0  
                   ?_Train_Move_Right_Brake 0020                                      i2l6888 3B18  
                                    _RCREG1 000FAE                                      _SPBRGH 000FB0  
                        __size_of_SetDCPWM1 0044                     ?_Train_Move_Right_Start 0020  
                                    _TXREG1 000FAD              ?_Right_Mountain_From_The_Right 0020  
                                 ??_Red_Led 003F                              __CFG_XINST$OFF 000000  
           Train_Move_Left_Brake@Return_Val 00E0                                      ___wmul 4074  
                            __CFG_STVREN$ON 000000                                   ??___lwdiv 003F  
                                 ??___lwmod 003F                                      clear_0 3D4A  
                                    clear_1 3D56                                      clear_2 3D62  
                              _DelayCounter 006E                                      clear_3 3D6E  
                                    clear_4 3D7A                                      _tc_low 0018  
                                    _printf 2D62                              _Switch_Moutain 0017  
                                _Train_Path 21C8     Right_Mountain_From_The_Right@Return_Val 00DF  
    Left_Mountain_From_The_Right@Return_Val 00DD                                __pdataCOMRAM 003F  
                            _Switch_Program 0018                                   ??_isdigit 00B9  
                                 ??_tc_high 0020                         __end_of_SendMessage 4154  
                 _Activate_Controls_Counter 006A                                __mediumconst 0000  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                                ?_SETxAPIxVAL 00BE  
                 _Button_Contact_Counter_LB 007E                   _Button_Contact_Counter_LF 007F  
                 _Button_Contact_Counter_RB 0081                   _Button_Contact_Counter_RF 0082  
            __end_of_Train_Move_Right_Brake 3250                             _eusart1RxBuffer 0300  
                      __size_of_GETxAPIxVAL 0020                             _eusart1TxBuffer 037E  
            __end_of_Train_Move_Right_Start 3374                        _Train_Move_Pwm_Count 0005  
                                __accesstop 0060                     __end_of__initialization 3DB2  
                           __CFG_PBADEN$OFF 000000                               ___rparam_used 000001  
                             _Received_Data 000D                              __pcstackCOMRAM 0020  
                              __pidataBANK0 41DE                                 _Init_Timers 41B8  
                             __end_of_putch 41DE                           __end_of_Green_Led 3D44  
                              ??_GETxAPIxRW 003F                     ??_READxRECEIVEDxMESSAGE 00D7  
                      __end_of_EUSART1_Read 4074                           __end_of_SetDCPWM1 3FF6  
                           _Red_Led_Counter 007A                      ??_EUSART1_Transmit_ISR 0020  
Train_Move_Right_Start@Train_Move_Wait_Time 0068                    __size_of_Debounce_Inputs 07A2  
               __end_of_EUSART1_Receive_ISR 4104            Train_Move_Right_Brake@Return_Val 00E2  
                             ?_SENDxMESSAGE 00B9                   __size_of_DIAGNOSTICxTOxPC 0226  
                                   ??_putch 003F                               _eusart1RxHead 001B  
                             _eusart1TxHead 001E                       __size_of_Eeprom_Store 00D2  
               Junction@Junction_Left_Right 00C4                               _eusart1RxTail 001C  
                                __pbssBANK0 0060                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                                  __pbssBANK3 0300  
                             _eusart1TxTail 001F                                   ?_Init_Pwm 0020  
                          _TranslateMessage 2BF8                                 _Pcomm_List2 0003  
                        __end_of_GETxAPIxRW 41B8                            GETxAPIxVAL@index 00BB  
                          SETxAPIxVAL@index 00C2                                   ?_Junction 00C3  
                          SETxAPIxVAL@value 00BE        __size_of_Left_Mountain_From_The_Left 0112  
                                   ?___wmul 00B9                            SendMessage@index 00D5  
                          SendMessage@value 00D3                                     _CCP1CON 000FBD  
                               _SendMessage 412E                                     ?_tc_low 0020  
                                   ?_printf 00C5                                 ?_Train_Path 00CB  
                              _Eeprom_Store 39D2                                     _INTCON2 000FF1  
 Train_Move_Left_Start@Train_Move_Wait_Time 0064                              ??_SENDxMESSAGE 00BB  
                          ??_APIxInitialize 003F                                     _SETxPWM 3B68  
                          SETxPWM@direction 00C5                                     _DataLen 080B  
                        _SETxAPIxVALxNoxRET 3FF6                             __CFG_VREGEN$OFF 000000  
                                ??_Init_Pwm 003F                                     _Red_Led 3C0C  
                     _Train_Move_Left_Brake 2FF2                                  ??_Junction 003F  
                                   __Hparam 0000                         ?_SETxAPIxVALxNoxRET 00BC  
                     _Train_Move_Left_Start 3374                                     __Lparam 0000  
                      _Message_To_Translate 0083                             __size_of___wmul 0036  
                                   ___lwdiv 3E38                                     ___lwmod 3EB0  
                              __psmallconst 0800                                     __pcinit 3D44  
                                   __ramtop 0800                             __size_of_tc_low 008E  
                                   __ptext0 3DC0                                     __ptext1 083A  
                                   __ptext2 21C8                                     __ptext3 3250  
                                   __ptext4 3124                                     __ptext5 3374  
                                   __ptext6 2FF2                                     __ptext7 3496  
                                   __ptext8 35AA                                     __ptext9 37D0  
                      Train_Path@Return_Val 00E4                             __size_of_printf 0154  
                                   _dpowers 0801                                     _isdigit 4104  
                                   _tc_high 0008                        ??_SETxAPIxVALxNoxRET 00BE  
                        _EUSART1_Initialize 3F66                   _Train_Move_Pwm_Fast_Count 0007  
                            __pintcode_body 3AA4                        end_of_initialization 3DB2  
                           _Switch_Junction 008B                           ??_Debounce_Inputs 00C3  
                       ?_EUSART1_Initialize 0020                        __size_of_SETxAPIxVAL 0054  
                             __Lmediumconst 0000                                     int_func 3AA4  
                          SETxPWM@pwm_speed 00C8                   __size_of_Update_StateMchn 0C18  
                       __size_of_Train_Path 03BE                                   _RCSTAbits 000FAB  
                                   printf@c 00D2                                     printf@f 00C5  
                                   postdec1 000FE5                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc2 000FDE  
                     __size_of_EUSART1_Read 003A              Left_Mountain_From_The_Right@rc 00CA  
                      ??_EUSART1_Initialize 003F                                   _PORTAbits 000F80  
                                 _PORTBbits 000F81                                   _PORTCbits 000F82  
                                 _PORTDbits 000F83                                   _PORTEbits 000F84  
                                 _TRISAbits 000F92                                   _TRISBbits 000F93  
                                 _TRISCbits 000F94                                   _TRISDbits 000F95  
                                 _TRISEbits 000F96                            _DIAGNOSTICxTOxPC 2814  
              Junction@Junction_Switch_Time 0060                                   _Diag_Comm 0070  
                    ?_Train_Move_Left_Brake 0020                                _EUSART1_Read 403A  
                                 _TXSTAbits 000FAC                      ?_Train_Move_Left_Start 0020  
                               _Switch_Main 003F                                 _Switch_Init 008A  
                      __end_of_SENDxMESSAGE 2814                                ?_Init_Timers 0020  
                                 _Comm_List 008F                          Junction@Return_Val 00DB  
                            __end_of___wmul 40AA                                 _BAUDCONbits 000FB8  
                             __pidataCOMRAM 41E8                        _Update_State_Machine 008E  
                            __end_of_tc_low 00A6                    __end_of_TranslateMessage 2D62  
               _Button_Contact_Counter_Stop 000C                              __end_of_printf 2EB6  
            __size_of_READxRECEIVEDxMESSAGE 013C                                   _Green_Led 3CA8  
             __end_of_READxRECEIVEDxMESSAGE 2FF2                         start_initialization 3D44  
                             ??_GETxAPIxVAL 003F                                   _SetDCPWM1 3FB2  
                           SetDCPWM1@DCycle 00C0                      _Mountain_Delay_Counter 0078  
              ?_Left_Mountain_From_The_Left 0020                           __size_of_Init_Pwm 0024  
                         __size_of_Junction 01BE                                    ??___wmul 003F  
                               __pdataBANK0 00DB                            __CFG_LPT1OSC$OFF 000000  
                              ?_SendMessage 00D3                                    ??_tc_low 002E  
                                  ??_printf 00CB                              _eusart1RxCount 001A  
                              ??_Train_Path 003F                                  ?_Green_Led 0020  
                               __pbssCOMRAM 0001               __size_of_EUSART1_Transmit_ISR 002E  
                             __pcstackBANK0 00B9                                  ?_SetDCPWM1 00BC  
Train_Move_Right_Brake@Train_Move_Wait_Time 0066                                _isdigit$1885 00BA  
                                  ?_SETxPWM 00C3                __size_of_EUSART1_Receive_ISR 002C  
                       __end_of_GETxAPIxVAL 4198               ??_Left_Mountain_From_The_Left 003F  
                                  ?_Red_Led 0020                            _Update_StateMchn 083A  
                          ___lwdiv@dividend 00B9      Right_Mountain_From_The_Left@Return_Val 00DE  
     Left_Mountain_From_The_Left@Return_Val 00DC                          __end_of_Train_Path 2586  
                                 __pintcode 0008                                    ?___lwdiv 00B9  
      __end_of_Left_Mountain_From_The_Right 38E0       __size_of_Left_Mountain_From_The_Right 0110  
              _Left_Mountain_From_The_Right 37D0                                    ?___lwmod 00C0  
                               __pintcodelo 0018                             GETxAPIxRW@index 00BB  
                           _Debounce_Inputs 1452                                 __smallconst 0800  
                  ??_Train_Move_Right_Brake 003F                                    ?_isdigit 0020  
                                  ?_tc_high 0020             Right_Mountain_From_The_Right@rc 00CA  
                  ??_Train_Move_Right_Start 003F                       TranslateMessage@Index 00D5  
                     Junction@Straight_Bend 00C3                       TranslateMessage@Value 00D3  
              _Button_Contact_Counter_Start 000B                    _Reed_Contact_LMD_Counter 0010  
                          ___lwdiv@quotient 00BE                              __size_of_putch 000E  
                            ___wmul@product 00BD                       __size_of_SENDxMESSAGE 028E  
      __end_of_Right_Mountain_From_The_Left 36BE       __size_of_Right_Mountain_From_The_Left 0114  
              _Right_Mountain_From_The_Left 35AA                                    _PIE1bits 000F9D  
                            _Adjust_Counter 006C               Left_Mountain_From_The_Left@rc 00CA  
                                  _PIR1bits 000F9E                                    _PIR2bits 000FA1  
                                  _RCONbits 000FD0                              Train_Path@From 00CC  
                  __end_of_DIAGNOSTICxTOxPC 2A3A                        __size_of_Init_Timers 0018  
             ?_Left_Mountain_From_The_Right 0020                           ___wmul@multiplier 00B9  
                         SENDxMESSAGE@index 00BD                           SENDxMESSAGE@value 00B9  
                               ??_Green_Led 003F                                  printf@flag 00CE  
                                printf@prec 00CF                 __size_of_SETxAPIxVALxNoxRET 0044  
                               ??_SetDCPWM1 00BE                                 _GETxAPIxVAL 4178  
                             ??_SETxAPIxVAL 00C0                                _SENDxMESSAGE 2586  
                                 copy_data0 3D94                     ??_Train_Move_Left_Brake 003F  
                  _Reed_Contact_LMU_Counter 0011                            __size_of_SETxPWM 00A4  
                   ??_Train_Move_Left_Start 003F                          SetDCPWM1@dutycycle 00BC  
                                  _Init_Pwm 4154                       EUSART1_Read@readValue 00B9  
                                _EECON1bits 000FA6                     __size_of_APIxInitialize 05D4  
                                  __Hrparam 0000                                    _Junction 2A3A  
                          __size_of_Red_Led 009C               ?_Right_Mountain_From_The_Left 0020  
                                  __Lrparam 0000                                    _TrSwitch 008D  
                                  _RxSwitch 0084                    _Reed_Contact_RMD_Counter 0014  
                   __end_of_Debounce_Inputs 1BF4                 __size_of_EUSART1_Initialize 004C  
                          __size_of___lwdiv 0078                            __size_of___lwmod 0062  
                         _Switch_Train_Path 008C                           _Switch_Train_Move 0019  
                          _Switch_Adjust_LB 0086                            _Switch_Adjust_LF 0087  
                          _Switch_Adjust_RB 0088                            _Switch_Adjust_RF 0089  
                      __size_of_SendMessage 0026                           ?_TranslateMessage 0020  
           __size_of_Train_Move_Right_Brake 012C                            __size_of_isdigit 002A  
                          __size_of_tc_high 3B60                          ??_TranslateMessage 003F  
                           ___lwdiv@divisor 00BB             __size_of_Train_Move_Right_Start 0124  
                           ___lwdiv@counter 00BD                                    __ptext10 36BE  
                                  __ptext11 3B68                                    __ptext20 38E0  
                                  __ptext12 2A3A                                    __ptext21 4104  
                                  __ptext13 3C0C                                    __ptext30 2586  
                                  __ptext22 4074                                    __ptext14 3CA8  
                                  __ptext31 3F66                                    __ptext23 3FF6  
                                  __ptext15 39D2                                    __ptext32 2814  
                                  __ptext24 4178                                    __ptext16 1452  
                                  __ptext41 40AA                                    __ptext33 412E  
                                  __ptext25 4198                                    __ptext17 3FB2  
                                  __ptext42 40D8                                    __ptext34 2D62  
                                  __ptext26 403A                                    __ptext18 2EB6  
                                  __ptext35 41D0                                    __ptext27 41B8  
                                  __ptext19 2BF8                                    __ptext36 3EB0  
                                  __ptext28 4154                                    __ptext37 3E38  
                                  __ptext29 3F12                                    __ptext38 1BF4  
                             __size_of_atoi 00F2                               __size_of_main 0078  
                       __end_of_SETxAPIxVAL 3F66                     _Reed_Contact_LB_Counter 000E  
                                  int$flags 0040                     _Reed_Contact_LF_Counter 000F  
                                  atoi@sign 00C3                    _Reed_Contact_RMU_Counter 0015  
                                 printf@val 00D0                         _EUSART1_Receive_ISR 40D8  
                                _GETxAPIxRW 4198                       __CFG_CPUDIV$OSC2_PLL3 000000  
                                 putch@data 00B9                               ?_Eeprom_Store 0020  
                  __end_of_Update_StateMchn 1452                                  _INTCONbits 000FF2  
           ??_Right_Mountain_From_The_Right 003F              ??_Left_Mountain_From_The_Right 003F  
                     _READxRECEIVEDxMESSAGE 2EB6                                    isdigit@c 00BB  
                   _Reed_Contact_RB_Counter 0012                                    intlevel1 0000  
                                  intlevel2 0000                        ?_EUSART1_Receive_ISR 0020  
                          ___lwmod@dividend 00C0                                  _RCSTA1bits 000FAB  
                   _Reed_Contact_RF_Counter 0013                      _Train_Move_Right_Brake 3124  
              __end_of_EUSART1_Transmit_ISR 40D8                      _Train_Move_Right_Start 3250  
           Train_Move_Left_Start@Return_Val 00E1                                Train_Path@To 00CB  
                                  printf@ap 00CC                            ?_Debounce_Inputs 0020  
                  _Switch_Activate_Controls 0085              ??_Right_Mountain_From_The_Left 003F  
                            ??_Eeprom_Store 003F                             ___lwmod@divisor 00C2  
                           ___lwmod@counter 00C4                     SETxAPIxVALxNoxRET@index 00C0  
                               _SETxAPIxVAL 3F12                     SETxAPIxVALxNoxRET@value 00BC  
                        __CFG_FOSC$HSPLL_HS 000000                       ??_EUSART1_Receive_ISR 0020  
                            _APIxInitialize 1BF4               _Button_Contact_Counter_Middle 0080  
